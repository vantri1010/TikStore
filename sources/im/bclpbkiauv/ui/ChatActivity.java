package im.bclpbkiauv.ui;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Outline;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffColorFilter;
import android.graphics.PorterDuffXfermode;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.Typeface;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.media.ThumbnailUtils;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.os.SystemClock;
import android.text.Layout;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.SpannableStringBuilder;
import android.text.TextPaint;
import android.text.TextUtils;
import android.text.style.ForegroundColorSpan;
import android.text.style.URLSpan;
import android.util.Base64;
import android.util.Log;
import android.util.LongSparseArray;
import android.util.Property;
import android.util.SparseArray;
import android.util.SparseBooleanArray;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MotionEvent;
import android.view.TextureView;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewOutlineProvider;
import android.view.accessibility.AccessibilityNodeInfo;
import android.view.animation.LayoutAnimationController;
import android.webkit.URLUtil;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.core.view.inputmethod.InputContentInfoCompat;
import androidx.fragment.app.FragmentActivity;
import androidx.recyclerview.widget.GridLayoutManager;
import androidx.recyclerview.widget.GridLayoutManagerFixed;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.LinearSmoothScrollerMiddle;
import androidx.recyclerview.widget.RecyclerView;
import com.bjz.comm.net.bean.ResponseAccessTokenBean;
import com.bjz.comm.net.bean.ResponseBaiduTranslateBean;
import com.bjz.comm.net.factory.ApiTranslateAudioFactory;
import com.bjz.comm.net.utils.RxHelper;
import com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;
import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
import com.google.android.exoplayer2.util.MimeTypes;
import com.google.gson.Gson;
import im.bclpbkiauv.javaBean.hongbao.RedTransOperation;
import im.bclpbkiauv.javaBean.hongbao.UnifyBean;
import im.bclpbkiauv.messenger.AndroidUtilities;
import im.bclpbkiauv.messenger.ApplicationLoader;
import im.bclpbkiauv.messenger.BuildVars;
import im.bclpbkiauv.messenger.ChatObject;
import im.bclpbkiauv.messenger.ContactsController;
import im.bclpbkiauv.messenger.Emoji;
import im.bclpbkiauv.messenger.FileLoader;
import im.bclpbkiauv.messenger.FileLog;
import im.bclpbkiauv.messenger.ImageLocation;
import im.bclpbkiauv.messenger.ImageReceiver;
import im.bclpbkiauv.messenger.LocaleController;
import im.bclpbkiauv.messenger.MediaController;
import im.bclpbkiauv.messenger.MediaDataController;
import im.bclpbkiauv.messenger.MessageObject;
import im.bclpbkiauv.messenger.MessagesController;
import im.bclpbkiauv.messenger.MessagesStorage;
import im.bclpbkiauv.messenger.NotificationCenter;
import im.bclpbkiauv.messenger.NotificationsController;
import im.bclpbkiauv.messenger.R;
import im.bclpbkiauv.messenger.SendMessagesHelper;
import im.bclpbkiauv.messenger.SharedConfig;
import im.bclpbkiauv.messenger.UserConfig;
import im.bclpbkiauv.messenger.UserObject;
import im.bclpbkiauv.messenger.Utilities;
import im.bclpbkiauv.messenger.VideoEditedInfo;
import im.bclpbkiauv.messenger.browser.Browser;
import im.bclpbkiauv.phoneformat.PhoneFormat;
import im.bclpbkiauv.sqlite.SQLiteException;
import im.bclpbkiauv.sqlite.SQLitePreparedStatement;
import im.bclpbkiauv.tgnet.ConnectionsManager;
import im.bclpbkiauv.tgnet.ParamsUtil;
import im.bclpbkiauv.tgnet.RequestDelegate;
import im.bclpbkiauv.tgnet.SerializedData;
import im.bclpbkiauv.tgnet.TLApiModel;
import im.bclpbkiauv.tgnet.TLJsonResolve;
import im.bclpbkiauv.tgnet.TLObject;
import im.bclpbkiauv.tgnet.TLRPC;
import im.bclpbkiauv.tgnet.TLRPCRedpacket;
import im.bclpbkiauv.tgnet.TLRPCWallet;
import im.bclpbkiauv.ui.ChatActivity;
import im.bclpbkiauv.ui.ContentPreviewViewer;
import im.bclpbkiauv.ui.DialogsActivity;
import im.bclpbkiauv.ui.NewLocationActivity;
import im.bclpbkiauv.ui.PhotoViewer;
import im.bclpbkiauv.ui.actionbar.ActionBar;
import im.bclpbkiauv.ui.actionbar.ActionBarLayout;
import im.bclpbkiauv.ui.actionbar.ActionBarMenu;
import im.bclpbkiauv.ui.actionbar.ActionBarMenuItem;
import im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow;
import im.bclpbkiauv.ui.actionbar.AlertDialog;
import im.bclpbkiauv.ui.actionbar.BaseFragment;
import im.bclpbkiauv.ui.actionbar.ChatActionBarMenuPopupWindow;
import im.bclpbkiauv.ui.actionbar.ChatActionBarMenuSubItem;
import im.bclpbkiauv.ui.actionbar.SimpleTextView;
import im.bclpbkiauv.ui.actionbar.Theme;
import im.bclpbkiauv.ui.actionbar.ThemeDescription;
import im.bclpbkiauv.ui.actionbar.XAlertDialog;
import im.bclpbkiauv.ui.adapters.MentionsAdapter;
import im.bclpbkiauv.ui.adapters.StickersAdapter;
import im.bclpbkiauv.ui.cells.BotHelpCell;
import im.bclpbkiauv.ui.cells.BotSwitchCell;
import im.bclpbkiauv.ui.cells.ChatActionCell;
import im.bclpbkiauv.ui.cells.ChatLoadingCell;
import im.bclpbkiauv.ui.cells.ChatMessageCell;
import im.bclpbkiauv.ui.cells.ChatUnreadCell;
import im.bclpbkiauv.ui.cells.CheckBoxCell;
import im.bclpbkiauv.ui.cells.ContextLinkCell;
import im.bclpbkiauv.ui.cells.MentionCell;
import im.bclpbkiauv.ui.cells.StickerCell;
import im.bclpbkiauv.ui.components.AlertsCreator;
import im.bclpbkiauv.ui.components.AvatarDrawable;
import im.bclpbkiauv.ui.components.BackupImageView;
import im.bclpbkiauv.ui.components.ChatActivityEnterView;
import im.bclpbkiauv.ui.components.ChatAttachAlert;
import im.bclpbkiauv.ui.components.ChatAvatarContainer;
import im.bclpbkiauv.ui.components.ChatBigEmptyView;
import im.bclpbkiauv.ui.components.CombinedDrawable;
import im.bclpbkiauv.ui.components.EditTextCaption;
import im.bclpbkiauv.ui.components.EmbedBottomSheet;
import im.bclpbkiauv.ui.components.EmojiView;
import im.bclpbkiauv.ui.components.ExtendedGridLayoutManager;
import im.bclpbkiauv.ui.components.FragmentContextView;
import im.bclpbkiauv.ui.components.HintView;
import im.bclpbkiauv.ui.components.InstantCameraView;
import im.bclpbkiauv.ui.components.LayoutHelper;
import im.bclpbkiauv.ui.components.NumberTextView;
import im.bclpbkiauv.ui.components.PipRoundVideoView;
import im.bclpbkiauv.ui.components.RLottieDrawable;
import im.bclpbkiauv.ui.components.RadialProgressView;
import im.bclpbkiauv.ui.components.RecyclerListView;
import im.bclpbkiauv.ui.components.Size;
import im.bclpbkiauv.ui.components.SizeNotifierFrameLayout;
import im.bclpbkiauv.ui.components.StickersAlert;
import im.bclpbkiauv.ui.components.TextStyleSpan;
import im.bclpbkiauv.ui.components.TypefaceSpan;
import im.bclpbkiauv.ui.components.URLSpanBotCommand;
import im.bclpbkiauv.ui.components.URLSpanReplacement;
import im.bclpbkiauv.ui.components.URLSpanUserMention;
import im.bclpbkiauv.ui.components.UndoView;
import im.bclpbkiauv.ui.components.toast.ToastUtils;
import im.bclpbkiauv.ui.components.voip.VoIPHelper;
import im.bclpbkiauv.ui.constants.ChatEnterMenuType;
import im.bclpbkiauv.ui.constants.Constants;
import im.bclpbkiauv.ui.hui.CameraViewActivity;
import im.bclpbkiauv.ui.hui.chats.NewProfileActivity;
import im.bclpbkiauv.ui.hui.contacts.AddContactsInfoActivity;
import im.bclpbkiauv.ui.hui.discovery.QrScanResultActivity;
import im.bclpbkiauv.ui.hui.mine.AboutAppActivity;
import im.bclpbkiauv.ui.hui.packet.BillDetailsActivity;
import im.bclpbkiauv.ui.hui.packet.RedpktDetailActivity;
import im.bclpbkiauv.ui.hui.packet.RedpktDetailReceiverActivity;
import im.bclpbkiauv.ui.hui.packet.RedpktGroupDetailActivity;
import im.bclpbkiauv.ui.hui.packet.RedpktGroupSendActivity;
import im.bclpbkiauv.ui.hui.packet.RedpktSendActivity;
import im.bclpbkiauv.ui.hui.packet.bean.RedpacketBean;
import im.bclpbkiauv.ui.hui.packet.bean.RedpacketResponse;
import im.bclpbkiauv.ui.hui.packet.pop.DialogRedpkg;
import im.bclpbkiauv.ui.hui.packet.pop.OnRedPacketDialogClickListener;
import im.bclpbkiauv.ui.hui.packet.pop.RedPacketViewHolder;
import im.bclpbkiauv.ui.hui.transfer.TransferSendActivity;
import im.bclpbkiauv.ui.hui.transfer.TransferStatusActivity;
import im.bclpbkiauv.ui.hui.transfer.bean.TransferResponse;
import im.bclpbkiauv.ui.hui.visualcall.PermissionUtils;
import im.bclpbkiauv.ui.hui.wallet_public.bean.WalletAccountInfo;
import im.bclpbkiauv.ui.hui.wallet_public.bean.WalletConfigBean;
import im.bclpbkiauv.ui.hui.wallet_public.utils.WalletDialogUtil;
import im.bclpbkiauv.ui.hui.wallet_public.utils.WalletErrorUtil;
import im.bclpbkiauv.ui.utils.ChatActionBarHelper;
import im.bclpbkiauv.ui.utils.GpsUtils;
import im.bclpbkiauv.ui.utils.number.MoneyUtil;
import im.bclpbkiauv.ui.utils.number.NumberUtil;
import im.bclpbkiauv.ui.utils.number.StringUtils;
import im.bclpbkiauv.ui.utils.translate.DecodeEngine;
import im.bclpbkiauv.ui.utils.translate.callback.DecodeOperateInterface;
import im.bclpbkiauv.ui.utils.translate.common.AudioEditConstant;
import im.bclpbkiauv.ui.utils.translate.utils.AudioFileUtils;
import im.bclpbkiauv.ui.wallet.WalletActivity;
import im.bclpbkiauv.ui.wallet.WalletPaymentPasswordActivity;
import io.reactivex.Observable;
import io.reactivex.ObservableEmitter;
import io.reactivex.ObservableOnSubscribe;
import io.reactivex.disposables.CompositeDisposable;
import io.reactivex.disposables.Disposable;
import io.reactivex.functions.Consumer;
import io.reactivex.schedulers.Schedulers;
import java.io.File;
import java.math.BigDecimal;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.regex.Matcher;
import okhttp3.MediaType;
import okhttp3.RequestBody;
import org.slf4j.Marker;

public class ChatActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.DialogsActivityDelegate, NewLocationActivity.LocationActivityDelegate {
    private static final String PREFIX_VIDEO = "video/";
    private static final int add_shortcut = 24;
    private static final int attach_audio = 3;
    private static final int attach_contact = 5;
    private static final int attach_document = 4;
    private static final int attach_gallery = 1;
    private static final int attach_group_live = 1012;
    private static final int attach_location = 6;
    private static final int attach_photo = 0;
    private static final int attach_poll = 9;
    private static final int attach_video = 2;
    private static final int attach_video_call = 1011;
    private static final int attach_voice_call = 1010;
    private static final int bot_help = 30;
    private static final int bot_settings = 31;
    private static final int call = 32;
    private static final int chat_enc_timer = 13;
    private static final int chat_menu_attach = 14;
    private static final int clear_history = 15;
    private static final int copy = 10;
    private static final int delete = 12;
    private static final int delete_chat = 16;
    private static final int edit = 23;
    private static final int forward = 11;
    private static final int id_chat_compose_panel = 1000;
    private static final int live = 33;
    private static final int more = 0;
    private static final int mute = 18;
    private static final int report = 21;
    private static final int search = 40;
    private static final int share_contact = 17;
    private static final int star = 22;
    private static final int text_bold = 50;
    private static final int text_italic = 51;
    private static final int text_link = 53;
    private static final int text_mono = 52;
    private static final int text_regular = 54;
    private static final int text_strike = 55;
    private static final int text_underline = 56;
    private String TAG = ChatActivity.class.getSimpleName();
    /* access modifiers changed from: private */
    public ChatActionBarHelper actionBarHelper;
    private ArrayList<View> actionModeViews = new ArrayList<>();
    private ChatActionBarMenuSubItem addContactItem;
    /* access modifiers changed from: private */
    public TextView addToContactsButton;
    private TextView alertNameTextView;
    private TextView alertTextView;
    /* access modifiers changed from: private */
    public FrameLayout alertView;
    /* access modifiers changed from: private */
    public AnimatorSet alertViewAnimator;
    /* access modifiers changed from: private */
    public boolean allowContextBotPanel;
    /* access modifiers changed from: private */
    public boolean allowContextBotPanelSecond = true;
    /* access modifiers changed from: private */
    public boolean allowStickersPanel;
    /* access modifiers changed from: private */
    public HashMap<MessageObject, Boolean> alredyPlayedStickers = new HashMap<>();
    /* access modifiers changed from: private */
    public ArrayList<MessageObject> animatingMessageObjects = new ArrayList<>();
    /* access modifiers changed from: private */
    public Paint aspectPaint;
    /* access modifiers changed from: private */
    public Path aspectPath;
    /* access modifiers changed from: private */
    public AspectRatioFrameLayout aspectRatioFrameLayout;
    /* access modifiers changed from: private */
    public ActionBarMenuItem attachItem;
    private ChatAvatarContainer avatarContainer;
    private ChatBigEmptyView bigEmptyView;
    private MessageObject botButtons;
    private PhotoViewer.PhotoViewerProvider botContextProvider = new PhotoViewer.EmptyPhotoViewerProvider() {
        public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index, boolean needPreview) {
            if (index < 0 || index >= ChatActivity.this.botContextResults.size()) {
                return null;
            }
            int count = ChatActivity.this.mentionListView.getChildCount();
            Object result = ChatActivity.this.botContextResults.get(index);
            for (int a = 0; a < count; a++) {
                ImageReceiver imageReceiver = null;
                View view = ChatActivity.this.mentionListView.getChildAt(a);
                if (view instanceof ContextLinkCell) {
                    ContextLinkCell cell = (ContextLinkCell) view;
                    if (cell.getResult() == result) {
                        imageReceiver = cell.getPhotoImage();
                    }
                }
                if (imageReceiver != null) {
                    int[] coords = new int[2];
                    view.getLocationInWindow(coords);
                    PhotoViewer.PlaceProviderObject object = new PhotoViewer.PlaceProviderObject();
                    int i = 0;
                    object.viewX = coords[0];
                    int i2 = coords[1];
                    if (Build.VERSION.SDK_INT < 21) {
                        i = AndroidUtilities.statusBarHeight;
                    }
                    object.viewY = i2 - i;
                    object.parentView = ChatActivity.this.mentionListView;
                    object.imageReceiver = imageReceiver;
                    object.thumb = imageReceiver.getBitmapSafe();
                    object.radius = imageReceiver.getRoundRadius();
                    return object;
                }
            }
            return null;
        }

        public void sendButtonPressed(int index, VideoEditedInfo videoEditedInfo, boolean notify, int scheduleDate) {
            if (index >= 0 && index < ChatActivity.this.botContextResults.size()) {
                ChatActivity chatActivity = ChatActivity.this;
                chatActivity.lambda$null$20$ChatActivity((TLRPC.BotInlineResult) chatActivity.botContextResults.get(index), notify, scheduleDate);
            }
        }
    };
    /* access modifiers changed from: private */
    public ArrayList<Object> botContextResults;
    /* access modifiers changed from: private */
    public SparseArray<TLRPC.BotInfo> botInfo = new SparseArray<>();
    private MessageObject botReplyButtons;
    private String botUser;
    private int botsCount;
    private FrameLayout bottomMessagesActionContainer;
    /* access modifiers changed from: private */
    public FrameLayout bottomOverlay;
    /* access modifiers changed from: private */
    public AnimatorSet bottomOverlayAnimation;
    /* access modifiers changed from: private */
    public FrameLayout bottomOverlayChat;
    /* access modifiers changed from: private */
    public TextView bottomOverlayChatText;
    /* access modifiers changed from: private */
    public UnreadCounterTextView bottomOverlayChatText2;
    /* access modifiers changed from: private */
    public RadialProgressView bottomOverlayProgress;
    private TextView bottomOverlayText;
    private boolean[] cacheEndReached = new boolean[2];
    private ActionBarMenuItem callItem;
    private int canEditMessagesCount;
    private int canForwardMessagesCount;
    private int cantCopyMessageCount;
    private int cantDeleteMessagesCount;
    private int cantForwardMessagesCount;
    private ChatActionBarMenuPopupWindow chatActionBarMenuPop;
    /* access modifiers changed from: private */
    public ChatActivityDelegate chatActivityDelegate;
    public ChatActivityEnterView chatActivityEnterView;
    /* access modifiers changed from: private */
    public ChatActivityAdapter chatAdapter;
    /* access modifiers changed from: private */
    public ChatAttachAlert chatAttachAlert;
    private long chatEnterTime;
    protected TLRPC.ChatFull chatInfo;
    /* access modifiers changed from: private */
    public GridLayoutManagerFixed chatLayoutManager;
    private long chatLeaveTime;
    /* access modifiers changed from: private */
    public RecyclerListView chatListView;
    /* access modifiers changed from: private */
    public int chatListViewClipTop;
    /* access modifiers changed from: private */
    public ArrayList<ChatMessageCell> chatMessageCellsCache = new ArrayList<>();
    /* access modifiers changed from: private */
    public boolean checkTextureViewPosition;
    /* access modifiers changed from: private */
    public boolean clearingHistory;
    private Dialog closeChatDialog;
    private ImageView closeLivePinned;
    private ImageView closePinned;
    private ImageView closeReportSpam;
    /* access modifiers changed from: private */
    public SizeNotifierFrameLayout contentView;
    /* access modifiers changed from: private */
    public int createUnreadMessageAfterId;
    private boolean createUnreadMessageAfterIdLoading;
    protected TLRPC.Chat currentChat;
    protected TLRPC.EncryptedChat currentEncryptedChat;
    private boolean currentFloatingDateOnScreen;
    /* access modifiers changed from: private */
    public boolean currentFloatingTopIsNotMessage;
    private String currentPicturePath;
    protected TLRPC.User currentUser;
    private AlertDialog dialogEnterRoomLoading;
    /* access modifiers changed from: private */
    public long dialog_id;
    /* access modifiers changed from: private */
    public ChatMessageCell drawLaterRoundProgressCell;
    /* access modifiers changed from: private */
    public AnimatorSet editButtonAnimation;
    /* access modifiers changed from: private */
    public int editTextEnd;
    /* access modifiers changed from: private */
    public ActionBarMenuItem editTextItem;
    /* access modifiers changed from: private */
    public int editTextStart;
    /* access modifiers changed from: private */
    public MessageObject editingMessageObject;
    /* access modifiers changed from: private */
    public int editingMessageObjectReqId;
    /* access modifiers changed from: private */
    public View emojiButtonRed;
    private TextView emptyView;
    /* access modifiers changed from: private */
    public FrameLayout emptyViewContainer;
    /* access modifiers changed from: private */
    public boolean[] endReached = new boolean[2];
    private boolean first = true;
    private boolean firstLoading = true;
    boolean firstOpen = true;
    private boolean firstUnreadSent = false;
    private int first_unread_id;
    /* access modifiers changed from: private */
    public boolean fixPaddingsInLayout;
    /* access modifiers changed from: private */
    public AnimatorSet floatingDateAnimation;
    /* access modifiers changed from: private */
    public ChatActionCell floatingDateView;
    /* access modifiers changed from: private */
    public boolean forceScrollToTop;
    private TextView forwardButton;
    /* access modifiers changed from: private */
    public AnimatorSet forwardButtonAnimation;
    /* access modifiers changed from: private */
    public boolean[] forwardEndReached = {true, true};
    /* access modifiers changed from: private */
    public HintView forwardHintView;
    private MessageObject forwardingMessage;
    private MessageObject.GroupedMessages forwardingMessageGroup;
    /* access modifiers changed from: private */
    public ArrayList<MessageObject> forwardingMessages;
    private ArrayList<CharSequence> foundUrls;
    private TLRPC.WebPage foundWebPage;
    private FragmentContextView fragmentContextView;
    /* access modifiers changed from: private */
    public TextView gifHintTextView;
    /* access modifiers changed from: private */
    public boolean globalIgnoreLayout;
    /* access modifiers changed from: private */
    public LongSparseArray<MessageObject.GroupedMessages> groupedMessagesMap = new LongSparseArray<>();
    /* access modifiers changed from: private */
    public boolean hasAllMentionsLocal;
    private boolean hasBotsCommands;
    /* access modifiers changed from: private */
    public boolean hasUnfavedSelected;
    /* access modifiers changed from: private */
    public ActionBarMenuItem headerItem;
    /* access modifiers changed from: private */
    public Runnable hideAlertViewRunnable;
    private int hideDateDelay = 500;
    /* access modifiers changed from: private */
    public int highlightMessageId = Integer.MAX_VALUE;
    private boolean ignoreAttachOnPause;
    /* access modifiers changed from: private */
    public boolean inScheduleMode;
    /* access modifiers changed from: private */
    public long inlineReturn;
    /* access modifiers changed from: private */
    public InstantCameraView instantCameraView;
    /* access modifiers changed from: private */
    public boolean isAntiShake = false;
    private int lastLoadIndex;
    private int last_message_id = 0;
    private int linkSearchRequestId;
    private boolean loading;
    private boolean loadingForward;
    private boolean loadingFromOldPosition;
    private int loadingPinnedMessage;
    /* access modifiers changed from: private */
    public int loadsCount;
    private boolean locationAlertShown;
    /* access modifiers changed from: private */
    public DialogRedpkg mRedPacketDialog;
    View mRedPacketDialogView;
    /* access modifiers changed from: private */
    public RedPacketViewHolder mRedPacketViewHolder;
    private HashMap<String, CompositeDisposable> mTaskDisposable = new HashMap<>();
    private int[] maxDate = {Integer.MIN_VALUE, Integer.MIN_VALUE};
    private int[] maxMessageId = {Integer.MAX_VALUE, Integer.MAX_VALUE};
    /* access modifiers changed from: private */
    public TextView mediaBanTooltip;
    /* access modifiers changed from: private */
    public FrameLayout mentionContainer;
    /* access modifiers changed from: private */
    public ExtendedGridLayoutManager mentionGridLayoutManager;
    /* access modifiers changed from: private */
    public LinearLayoutManager mentionLayoutManager;
    /* access modifiers changed from: private */
    public AnimatorSet mentionListAnimation;
    /* access modifiers changed from: private */
    public RecyclerListView mentionListView;
    /* access modifiers changed from: private */
    public boolean mentionListViewIgnoreLayout;
    /* access modifiers changed from: private */
    public boolean mentionListViewIsScrolling;
    /* access modifiers changed from: private */
    public int mentionListViewLastViewPosition;
    /* access modifiers changed from: private */
    public int mentionListViewLastViewTop;
    /* access modifiers changed from: private */
    public int mentionListViewScrollOffsetY;
    /* access modifiers changed from: private */
    public FrameLayout mentiondownButton;
    private ObjectAnimator mentiondownButtonAnimation;
    /* access modifiers changed from: private */
    public TextView mentiondownButtonCounter;
    private ImageView mentiondownButtonImage;
    /* access modifiers changed from: private */
    public MentionsAdapter mentionsAdapter;
    private RecyclerListView.OnItemClickListener mentionsOnItemClickListener;
    /* access modifiers changed from: private */
    public long mergeDialogId;
    protected ArrayList<MessageObject> messages = new ArrayList<>();
    private HashMap<String, ArrayList<MessageObject>> messagesByDays = new HashMap<>();
    /* access modifiers changed from: private */
    public SparseArray<MessageObject>[] messagesDict = {new SparseArray<>(), new SparseArray<>()};
    private int[] minDate = new int[2];
    private int[] minMessageId = {Integer.MIN_VALUE, Integer.MIN_VALUE};
    private ChatActionBarMenuSubItem muteItem;
    private MessageObject needAnimateToMessage;
    private boolean needSelectFromMessageId;
    /* access modifiers changed from: private */
    public int newMentionsCount;
    private int newUnreadMessageCount;
    /* access modifiers changed from: private */
    public HintView noSoundHintView;
    RecyclerListView.OnItemClickListenerExtended onItemClickListener = new RecyclerListView.OnItemClickListenerExtended() {
        public void onItemClick(View view, int position, float x, float y) {
            boolean unused = ChatActivity.this.wasManualScroll = true;
            if (ChatActivity.this.actionBar.isActionModeShowed()) {
                boolean outside = false;
                if (view instanceof ChatMessageCell) {
                    outside = true ^ ((ChatMessageCell) view).isInsideBackground(x, y);
                }
                ChatActivity.this.processRowSelect(view, outside, x, y);
                return;
            }
            ChatActivity.this.createMenu(view, true, false, x, y);
        }
    };
    RecyclerListView.OnItemLongClickListenerExtended onItemLongClickListener = new RecyclerListView.OnItemLongClickListenerExtended() {
        public boolean onItemClick(View view, int position, float x, float y) {
            boolean unused = ChatActivity.this.wasManualScroll = true;
            if (!ChatActivity.this.actionBar.isActionModeShowed()) {
                ChatActivity.this.createMenu(view, false, true, x, y);
            } else {
                boolean outside = false;
                if (view instanceof ChatMessageCell) {
                    outside = !((ChatMessageCell) view).isInsideBackground(x, y);
                }
                ChatActivity.this.processRowSelect(view, outside, x, y);
            }
            return true;
        }

        public void onLongClickRelease() {
        }

        public void onMove(float dx, float dy) {
        }
    };
    private boolean openAnimationEnded;
    /* access modifiers changed from: private */
    public boolean openKeyboardOnAttachMenuClose;
    /* access modifiers changed from: private */
    public boolean openSearchKeyboard;
    /* access modifiers changed from: private */
    public View overlayView;
    /* access modifiers changed from: private */
    public FrameLayout pagedownButton;
    private AnimatorSet pagedownButtonAnimation;
    /* access modifiers changed from: private */
    public TextView pagedownButtonCounter;
    private ImageView pagedownButtonImage;
    /* access modifiers changed from: private */
    public boolean pagedownButtonShowedByScroll;
    private boolean paused = true;
    private boolean pausedOnLastMessage;
    private String pendingLinkSearchString;
    private Runnable pendingWebPageTimeoutRunnable;
    /* access modifiers changed from: private */
    public PhotoViewer.PhotoViewerProvider photoViewerProvider = new PhotoViewer.EmptyPhotoViewerProvider() {
        public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index, boolean needPreview) {
            ChatMessageCell cell;
            MessageObject message;
            MessageObject messageObject2 = messageObject;
            TLRPC.FileLocation fileLocation2 = fileLocation;
            int count = ChatActivity.this.chatListView.getChildCount();
            for (int a = 0; a < count; a++) {
                ImageReceiver imageReceiver = null;
                View view = ChatActivity.this.chatListView.getChildAt(a);
                if (view instanceof ChatMessageCell) {
                    if (messageObject2 != null && messageObject2.type == 105) {
                        ChatMessageCell cell2 = (ChatMessageCell) view;
                        int photoImageViewIndex = cell2.getClickSysNotifyPhotoImageViewIndex();
                        if (photoImageViewIndex == 1) {
                            imageReceiver = cell2.photoImage1;
                        } else if (photoImageViewIndex == 2) {
                            imageReceiver = cell2.photoImage2;
                        } else if (photoImageViewIndex == 3) {
                            imageReceiver = cell2.photoImage3;
                        } else if (photoImageViewIndex == 4) {
                            imageReceiver = cell2.photoImage4;
                        } else if (photoImageViewIndex == 5) {
                            imageReceiver = cell2.photoImage5;
                        }
                    } else if (!(messageObject2 == null || (message = cell.getMessageObject()) == null || message.getId() != messageObject.getId())) {
                        imageReceiver = (cell = (ChatMessageCell) view).getPhotoImage();
                    }
                } else if (view instanceof ChatActionCell) {
                    ChatActionCell cell3 = (ChatActionCell) view;
                    MessageObject message2 = cell3.getMessageObject();
                    if (message2 != null) {
                        if (messageObject2 == null) {
                            if (fileLocation2 != null && message2.photoThumbs != null) {
                                int b = 0;
                                while (true) {
                                    if (b >= message2.photoThumbs.size()) {
                                        break;
                                    }
                                    TLRPC.PhotoSize photoSize = message2.photoThumbs.get(b);
                                    MessageObject message3 = message2;
                                    if (photoSize.location.volume_id == fileLocation2.volume_id && photoSize.location.local_id == fileLocation2.local_id) {
                                        imageReceiver = cell3.getPhotoImage();
                                        break;
                                    }
                                    b++;
                                    message2 = message3;
                                }
                            }
                        } else if (message2.getId() == messageObject.getId()) {
                            imageReceiver = cell3.getPhotoImage();
                        }
                    }
                }
                if (imageReceiver != null) {
                    int[] coords = new int[2];
                    view.getLocationInWindow(coords);
                    PhotoViewer.PlaceProviderObject object = new PhotoViewer.PlaceProviderObject();
                    int i = 0;
                    object.viewX = coords[0];
                    int i2 = coords[1];
                    if (Build.VERSION.SDK_INT < 21) {
                        i = AndroidUtilities.statusBarHeight;
                    }
                    object.viewY = i2 - i;
                    object.parentView = ChatActivity.this.chatListView;
                    object.imageReceiver = imageReceiver;
                    if (needPreview) {
                        object.thumb = imageReceiver.getBitmapSafe();
                    }
                    object.radius = imageReceiver.getRoundRadius();
                    if ((view instanceof ChatActionCell) && ChatActivity.this.currentChat != null) {
                        object.dialogId = -ChatActivity.this.currentChat.id;
                    }
                    if ((ChatActivity.this.pinnedMessageView != null && ChatActivity.this.pinnedMessageView.getTag() == null) || (ChatActivity.this.topChatPanelView != null && ChatActivity.this.topChatPanelView.getTag() == null)) {
                        object.clipTopAddition = AndroidUtilities.dp(48.0f);
                    }
                    object.clipTopAddition += ChatActivity.this.chatListViewClipTop;
                    return object;
                }
            }
            return null;
        }
    };
    private int pinnedImageCacheType;
    private TLRPC.PhotoSize pinnedImageLocation;
    private TLObject pinnedImageLocationObject;
    private int pinnedImageSize;
    private TLRPC.PhotoSize pinnedImageThumbLocation;
    private View pinnedLineView;
    /* access modifiers changed from: private */
    public MessageObject pinnedLiveMessage;
    private SimpleTextView pinnedLiveMessageNameTextView;
    private SimpleTextView pinnedLiveMessageTextView;
    /* access modifiers changed from: private */
    public FrameLayout pinnedLiveMessageView;
    /* access modifiers changed from: private */
    public BackupImageView pinnedLiveUserImageView;
    private BackupImageView pinnedMessageImageView;
    private SimpleTextView pinnedMessageNameTextView;
    private MessageObject pinnedMessageObject;
    private SimpleTextView pinnedMessageTextView;
    /* access modifiers changed from: private */
    public FrameLayout pinnedMessageView;
    /* access modifiers changed from: private */
    public AnimatorSet pinnedMessageViewAnimator;
    private LongSparseArray<ArrayList<MessageObject>> polls = new LongSparseArray<>();
    ArrayList<MessageObject> pollsToCheck = new ArrayList<>(10);
    private int prevSetUnreadCount = Integer.MIN_VALUE;
    private RadialProgressView progressBar;
    /* access modifiers changed from: private */
    public FrameLayout progressView;
    private View progressView2;
    private XAlertDialog redTransAlert;
    /* access modifiers changed from: private */
    public TextView replyButton;
    /* access modifiers changed from: private */
    public AnimatorSet replyButtonAnimation;
    private ImageView replyCloseImageView;
    private ImageView replyIconImageView;
    private int replyImageCacheType;
    private TLRPC.PhotoSize replyImageLocation;
    private TLObject replyImageLocationObject;
    private int replyImageSize;
    private TLRPC.PhotoSize replyImageThumbLocation;
    private BackupImageView replyImageView;
    private View replyLineView;
    private SimpleTextView replyNameTextView;
    private SimpleTextView replyObjectTextView;
    /* access modifiers changed from: private */
    public MessageObject replyingMessageObject;
    /* access modifiers changed from: private */
    public TextView reportSpamButton;
    /* access modifiers changed from: private */
    public AnimatorSet reportSpamViewAnimator;
    private int reqId = -1;
    private int returnToLoadIndex;
    private int returnToMessageId;
    /* access modifiers changed from: private */
    public AnimatorSet runningAnimation;
    /* access modifiers changed from: private */
    public int scheduledMessagesCount = -1;
    /* access modifiers changed from: private */
    public AnimatorSet scrimAnimatorSet;
    /* access modifiers changed from: private */
    public Paint scrimPaint;
    /* access modifiers changed from: private */
    public ActionBarPopupWindow scrimPopupWindow;
    /* access modifiers changed from: private */
    public View scrimView;
    private MessageObject scrollToMessage;
    private int scrollToMessagePosition = -10000;
    /* access modifiers changed from: private */
    public int scrollToOffsetOnRecreate = 0;
    /* access modifiers changed from: private */
    public int scrollToPositionOnRecreate = -1;
    private boolean scrollToTopOnResume;
    private boolean scrollToTopUnReadOnResume;
    private boolean scrollToVideo;
    /* access modifiers changed from: private */
    public boolean scrollingChatListView;
    /* access modifiers changed from: private */
    public boolean scrollingFloatingDate;
    /* access modifiers changed from: private */
    public ImageView searchCalendarButton;
    /* access modifiers changed from: private */
    public FrameLayout searchContainer;
    private SimpleTextView searchCountText;
    private ImageView searchDownButton;
    /* access modifiers changed from: private */
    public ActionBarMenuItem searchItem;
    private ImageView searchUpButton;
    /* access modifiers changed from: private */
    public ImageView searchUserButton;
    /* access modifiers changed from: private */
    public boolean searchingForUser;
    /* access modifiers changed from: private */
    public TLRPC.User searchingUserMessages;
    /* access modifiers changed from: private */
    public SparseArray<MessageObject>[] selectedMessagesCanCopyIds = {new SparseArray<>(), new SparseArray<>()};
    /* access modifiers changed from: private */
    public SparseArray<MessageObject>[] selectedMessagesCanStarIds = {new SparseArray<>(), new SparseArray<>()};
    private NumberTextView selectedMessagesCountTextView;
    /* access modifiers changed from: private */
    public SparseArray<MessageObject>[] selectedMessagesIds = {new SparseArray<>(), new SparseArray<>()};
    private MessageObject selectedObject;
    private MessageObject.GroupedMessages selectedObjectGroup;
    private MessageObject selectedObjectToEditCaption;
    private boolean showScrollToMessageError;
    /* access modifiers changed from: private */
    public HintView slowModeHint;
    private int startLoadFromMessageId;
    private int startLoadFromMessageIdSaved;
    private int startLoadFromMessageOffset = Integer.MAX_VALUE;
    private String startVideoEdit;
    /* access modifiers changed from: private */
    public StickersAdapter stickersAdapter;
    /* access modifiers changed from: private */
    public RecyclerListView stickersListView;
    private RecyclerListView.OnItemClickListener stickersOnItemClickListener;
    /* access modifiers changed from: private */
    public FrameLayout stickersPanel;
    private ImageView stickersPanelArrow;
    private View timeItem2;
    /* access modifiers changed from: private */
    public FrameLayout topChatPanelView;
    private int topViewWasVisible;
    /* access modifiers changed from: private */
    public UndoView undoView;
    /* access modifiers changed from: private */
    public MessageObject unreadMessageObject;
    private Runnable unselectRunnable;
    private boolean userBlocked;
    protected TLRPC.UserFull userInfo;
    /* access modifiers changed from: private */
    public FrameLayout videoPlayerContainer;
    /* access modifiers changed from: private */
    public TextureView videoTextureView;
    /* access modifiers changed from: private */
    public AnimatorSet voiceHintAnimation;
    /* access modifiers changed from: private */
    public Runnable voiceHintHideRunnable;
    /* access modifiers changed from: private */
    public TextView voiceHintTextView;
    /* access modifiers changed from: private */
    public Runnable waitingForCharaterEnterRunnable;
    private ArrayList<Integer> waitingForLoad = new ArrayList<>();
    private boolean waitingForReplyMessageLoad;
    /* access modifiers changed from: private */
    public boolean wasManualScroll;
    private boolean wasPaused;

    private interface ChatActivityDelegate {
        void openReplyMessage(int i);
    }

    static /* synthetic */ int access$16110(ChatActivity x0) {
        int i = x0.newMentionsCount;
        x0.newMentionsCount = i - 1;
        return i;
    }

    static /* synthetic */ int access$18008(ChatActivity x0) {
        int i = x0.scheduledMessagesCount;
        x0.scheduledMessagesCount = i + 1;
        return i;
    }

    private class UnreadCounterTextView extends AppCompatTextView {
        private int circleWidth;
        private int currentCounter;
        private String currentCounterString;
        private Paint paint = new Paint(1);
        private RectF rect = new RectF();
        private TextPaint textPaint = new TextPaint(1);
        private int textWidth;

        public UnreadCounterTextView(Context context) {
            super(context);
            this.textPaint.setTextSize((float) AndroidUtilities.dp(13.0f));
            this.textPaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        }

        public void setTextColor(int color) {
            super.setTextColor(color);
            this.textPaint.setColor(Theme.getColor(Theme.key_chat_messagePanelBackground));
            this.paint.setColor(Theme.getColor(Theme.key_chat_goDownButtonCounterBackground));
        }

        public void updateCounter() {
            int newCount;
            if (!ChatObject.isChannel(ChatActivity.this.currentChat) || ChatActivity.this.currentChat.megagroup || ChatActivity.this.chatInfo == null || ChatActivity.this.chatInfo.linked_chat_id == 0) {
                newCount = 0;
            } else {
                TLRPC.Dialog dialog = ChatActivity.this.getMessagesController().dialogs_dict.get((long) (-ChatActivity.this.chatInfo.linked_chat_id));
                if (dialog != null) {
                    newCount = dialog.unread_count;
                } else {
                    newCount = 0;
                }
            }
            if (this.currentCounter != newCount) {
                this.currentCounter = newCount;
                if (newCount == 0) {
                    this.currentCounterString = null;
                    this.circleWidth = 0;
                    setPadding(0, 0, 0, 0);
                } else {
                    String format = String.format("%d", new Object[]{Integer.valueOf(newCount)});
                    this.currentCounterString = format;
                    this.textWidth = (int) Math.ceil((double) this.textPaint.measureText(format));
                    int newWidth = Math.max(AndroidUtilities.dp(20.0f), AndroidUtilities.dp(12.0f) + this.textWidth);
                    if (this.circleWidth != newWidth) {
                        this.circleWidth = newWidth;
                        setPadding(0, 0, (newWidth / 2) + AndroidUtilities.dp(7.0f), 0);
                    }
                }
                invalidate();
            }
        }

        /* access modifiers changed from: protected */
        public void onDraw(Canvas canvas) {
            Layout layout;
            super.onDraw(canvas);
            if (this.currentCounterString != null && (layout = getLayout()) != null && getLineCount() > 0) {
                int x = ((getMeasuredWidth() + (((int) Math.ceil((double) layout.getLineWidth(0))) - this.circleWidth)) / 2) + AndroidUtilities.dp(8.0f);
                this.rect.set((float) x, (float) ((getMeasuredHeight() / 2) - AndroidUtilities.dp(10.0f)), (float) (this.circleWidth + x), (float) ((getMeasuredHeight() / 2) + AndroidUtilities.dp(10.0f)));
                canvas.drawRoundRect(this.rect, (float) AndroidUtilities.dp(10.0f), (float) AndroidUtilities.dp(10.0f), this.paint);
                canvas.drawText(this.currentCounterString, this.rect.centerX() - (((float) this.textWidth) / 2.0f), this.rect.top + ((float) AndroidUtilities.dp(14.5f)), this.textPaint);
            }
        }
    }

    public Boolean isSysNotifyMessage() {
        if (Constants.DialogsFragmentTopMenuConfig.isSystemCode(this.dialog_id)) {
            return true;
        }
        return false;
    }

    public ChatActivity(Bundle args) {
        super(args);
    }

    public boolean onFragmentCreate() {
        boolean z = false;
        int chatId = this.arguments.getInt("chat_id", 0);
        int userId = this.arguments.getInt("user_id", 0);
        int encId = this.arguments.getInt("enc_id", 0);
        this.inScheduleMode = this.arguments.getBoolean("scheduled", false);
        this.inlineReturn = this.arguments.getLong("inline_return", 0);
        String inlineQuery = this.arguments.getString("inline_query");
        this.startLoadFromMessageId = this.arguments.getInt("message_id", 0);
        int migrated_to = this.arguments.getInt("migrated_to", 0);
        this.scrollToTopOnResume = this.arguments.getBoolean("scrollToTopOnResume", false);
        if (chatId != 0) {
            TLRPC.Chat chat = getMessagesController().getChat(Integer.valueOf(chatId));
            this.currentChat = chat;
            if (chat == null) {
                CountDownLatch countDownLatch = new CountDownLatch(1);
                MessagesStorage messagesStorage = getMessagesStorage();
                messagesStorage.getStorageQueue().postRunnable(new Runnable(messagesStorage, chatId, countDownLatch) {
                    private final /* synthetic */ MessagesStorage f$1;
                    private final /* synthetic */ int f$2;
                    private final /* synthetic */ CountDownLatch f$3;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                    }

                    public final void run() {
                        ChatActivity.this.lambda$onFragmentCreate$0$ChatActivity(this.f$1, this.f$2, this.f$3);
                    }
                });
                try {
                    countDownLatch.await();
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
                if (this.currentChat == null) {
                    return false;
                }
                getMessagesController().putChat(this.currentChat, true);
            }
            this.dialog_id = (long) (-chatId);
            if (ChatObject.isChannel(this.currentChat)) {
                getMessagesController().startShortPoll(this.currentChat, false);
            }
        } else if (userId != 0) {
            TLRPC.User user = getMessagesController().getUser(Integer.valueOf(userId));
            this.currentUser = user;
            if (user == null) {
                MessagesStorage messagesStorage2 = getMessagesStorage();
                CountDownLatch countDownLatch2 = new CountDownLatch(1);
                messagesStorage2.getStorageQueue().postRunnable(new Runnable(messagesStorage2, userId, countDownLatch2) {
                    private final /* synthetic */ MessagesStorage f$1;
                    private final /* synthetic */ int f$2;
                    private final /* synthetic */ CountDownLatch f$3;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                    }

                    public final void run() {
                        ChatActivity.this.lambda$onFragmentCreate$1$ChatActivity(this.f$1, this.f$2, this.f$3);
                    }
                });
                try {
                    countDownLatch2.await();
                } catch (Exception e2) {
                    FileLog.e((Throwable) e2);
                }
                if (this.currentUser == null) {
                    return false;
                }
                getMessagesController().putUser(this.currentUser, true);
            }
            this.dialog_id = (long) userId;
            this.botUser = this.arguments.getString("botUser");
            if (inlineQuery != null) {
                getMessagesController().sendBotStart(this.currentUser, inlineQuery);
            }
        } else if (encId == 0) {
            return false;
        } else {
            this.currentEncryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(encId));
            MessagesStorage messagesStorage3 = getMessagesStorage();
            if (this.currentEncryptedChat == null) {
                CountDownLatch countDownLatch3 = new CountDownLatch(1);
                messagesStorage3.getStorageQueue().postRunnable(new Runnable(messagesStorage3, encId, countDownLatch3) {
                    private final /* synthetic */ MessagesStorage f$1;
                    private final /* synthetic */ int f$2;
                    private final /* synthetic */ CountDownLatch f$3;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                    }

                    public final void run() {
                        ChatActivity.this.lambda$onFragmentCreate$2$ChatActivity(this.f$1, this.f$2, this.f$3);
                    }
                });
                try {
                    countDownLatch3.await();
                } catch (Exception e3) {
                    FileLog.e((Throwable) e3);
                }
                if (this.currentEncryptedChat == null) {
                    return false;
                }
                getMessagesController().putEncryptedChat(this.currentEncryptedChat, true);
            }
            TLRPC.User user2 = getMessagesController().getUser(Integer.valueOf(this.currentEncryptedChat.user_id));
            this.currentUser = user2;
            if (user2 == null) {
                CountDownLatch countDownLatch4 = new CountDownLatch(1);
                messagesStorage3.getStorageQueue().postRunnable(new Runnable(messagesStorage3, countDownLatch4) {
                    private final /* synthetic */ MessagesStorage f$1;
                    private final /* synthetic */ CountDownLatch f$2;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                    }

                    public final void run() {
                        ChatActivity.this.lambda$onFragmentCreate$3$ChatActivity(this.f$1, this.f$2);
                    }
                });
                try {
                    countDownLatch4.await();
                } catch (Exception e4) {
                    FileLog.e((Throwable) e4);
                }
                if (this.currentUser == null) {
                    return false;
                }
                getMessagesController().putUser(this.currentUser, true);
            }
            this.dialog_id = ((long) encId) << 32;
            int[] iArr = this.maxMessageId;
            iArr[1] = Integer.MIN_VALUE;
            iArr[0] = Integer.MIN_VALUE;
            int[] iArr2 = this.minMessageId;
            iArr2[1] = Integer.MAX_VALUE;
            iArr2[0] = Integer.MAX_VALUE;
        }
        if (this.currentUser != null) {
            MediaController.getInstance().startMediaObserver();
        }
        if (!this.inScheduleMode) {
            getNotificationCenter().addObserver(this, NotificationCenter.messagesRead);
            getNotificationCenter().addObserver(this, NotificationCenter.screenshotTook);
            getNotificationCenter().addObserver(this, NotificationCenter.encryptedChatUpdated);
            getNotificationCenter().addObserver(this, NotificationCenter.messagesReadEncrypted);
            getNotificationCenter().addObserver(this, NotificationCenter.removeAllMessagesFromDialog);
            getNotificationCenter().addObserver(this, NotificationCenter.messagesReadContent);
            getNotificationCenter().addObserver(this, NotificationCenter.botKeyboardDidLoad);
            getNotificationCenter().addObserver(this, NotificationCenter.chatSearchResultsAvailable);
            getNotificationCenter().addObserver(this, NotificationCenter.chatSearchResultsLoading);
            getNotificationCenter().addObserver(this, NotificationCenter.didUpdatedMessagesViews);
            getNotificationCenter().addObserver(this, NotificationCenter.pinnedMessageDidLoad);
            getNotificationCenter().addObserver(this, NotificationCenter.peerSettingsDidLoad);
            getNotificationCenter().addObserver(this, NotificationCenter.newDraftReceived);
            getNotificationCenter().addObserver(this, NotificationCenter.updateMentionsCount);
            getNotificationCenter().addObserver(this, NotificationCenter.didUpdatePollResults);
            getNotificationCenter().addObserver(this, NotificationCenter.chatOnlineCountDidLoad);
        }
        getNotificationCenter().addObserver(this, NotificationCenter.messagesDidLoad);
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.emojiDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.didUpdateConnectionState);
        getNotificationCenter().addObserver(this, NotificationCenter.updateInterfaces);
        getNotificationCenter().addObserver(this, NotificationCenter.didReceiveNewMessages);
        getNotificationCenter().addObserver(this, NotificationCenter.closeChats);
        getNotificationCenter().addObserver(this, NotificationCenter.messagesDeleted);
        getNotificationCenter().addObserver(this, NotificationCenter.historyCleared);
        getNotificationCenter().addObserver(this, NotificationCenter.messageReceivedByServer);
        getNotificationCenter().addObserver(this, NotificationCenter.messageReceivedByAck);
        getNotificationCenter().addObserver(this, NotificationCenter.messageSendError);
        getNotificationCenter().addObserver(this, NotificationCenter.chatInfoDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.contactsDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingProgressDidChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingDidReset);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingGoingToStop);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingPlayStateChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.blockedUsersDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().addObserver(this, NotificationCenter.didCreatedNewDeleteTask);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingDidStart);
        getNotificationCenter().addObserver(this, NotificationCenter.updateMessageMedia);
        getNotificationCenter().addObserver(this, NotificationCenter.replaceMessagesObjects);
        getNotificationCenter().addObserver(this, NotificationCenter.notificationsSettingsUpdated);
        getNotificationCenter().addObserver(this, NotificationCenter.replyMessagesDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.didReceivedWebpages);
        getNotificationCenter().addObserver(this, NotificationCenter.didReceivedWebpagesInUpdates);
        getNotificationCenter().addObserver(this, NotificationCenter.botInfoDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.chatInfoCantLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.pinnedLiveMessage);
        getNotificationCenter().addObserver(this, NotificationCenter.userInfoDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.userFullInfoDidLoad);
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.didSetNewWallpapper);
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.goingToPreviewTheme);
        getNotificationCenter().addObserver(this, NotificationCenter.channelRightsUpdated);
        getNotificationCenter().addObserver(this, NotificationCenter.audioRecordTooShort);
        getNotificationCenter().addObserver(this, NotificationCenter.didUpdateReactions);
        getNotificationCenter().addObserver(this, NotificationCenter.videoLoadingStateChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.scheduledMessagesUpdated);
        getNotificationCenter().addObserver(this, NotificationCenter.livestatechange);
        getNotificationCenter().addObserver(this, NotificationCenter.contactRelationShip);
        getNotificationCenter().addObserver(this, NotificationCenter.updateChatNewmsgMentionText);
        getNotificationCenter().addObserver(this, NotificationCenter.liverestartnotify);
        super.onFragmentCreate();
        this.loading = true;
        if (!this.inScheduleMode) {
            if (this.currentEncryptedChat == null) {
                getMediaDataController().loadBotKeyboard(this.dialog_id);
            }
            getMessagesController().loadPeerSettings(this.currentUser, this.currentChat);
            getMessagesController().setLastCreatedDialogId(this.dialog_id, this.inScheduleMode, true);
            if (this.startLoadFromMessageId == 0) {
                SharedPreferences sharedPreferences = MessagesController.getNotificationsSettings(this.currentAccount);
                int messageId = sharedPreferences.getInt("diditem" + this.dialog_id, 0);
                if (messageId != 0) {
                    this.wasManualScroll = true;
                    this.loadingFromOldPosition = true;
                    this.startLoadFromMessageOffset = sharedPreferences.getInt("diditemo" + this.dialog_id, 0);
                    this.startLoadFromMessageId = messageId;
                }
            } else {
                this.showScrollToMessageError = true;
                this.needSelectFromMessageId = true;
            }
        }
        this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
        int i = this.startLoadFromMessageId;
        if (i != 0) {
            this.startLoadFromMessageIdSaved = i;
            if (migrated_to != 0) {
                this.mergeDialogId = (long) migrated_to;
                MessagesController messagesController = getMessagesController();
                long j = this.mergeDialogId;
                int i2 = this.loadingFromOldPosition ? 50 : AndroidUtilities.isTablet() ? 30 : 20;
                int i3 = this.startLoadFromMessageId;
                int i4 = this.classGuid;
                boolean isChannel = ChatObject.isChannel(this.currentChat);
                boolean z2 = this.inScheduleMode;
                int i5 = this.lastLoadIndex;
                this.lastLoadIndex = i5 + 1;
                messagesController.loadMessages(j, i2, i3, 0, true, 0, i4, 3, 0, isChannel, z2, i5);
            } else {
                MessagesController messagesController2 = getMessagesController();
                long j2 = this.dialog_id;
                int i6 = this.loadingFromOldPosition ? 50 : AndroidUtilities.isTablet() ? 30 : 20;
                int i7 = this.startLoadFromMessageId;
                int i8 = this.classGuid;
                boolean isChannel2 = ChatObject.isChannel(this.currentChat);
                boolean z3 = this.inScheduleMode;
                int i9 = this.lastLoadIndex;
                this.lastLoadIndex = i9 + 1;
                messagesController2.loadMessages(j2, i6, i7, 0, true, 0, i8, 3, 0, isChannel2, z3, i9);
            }
        } else {
            MessagesController messagesController3 = getMessagesController();
            long j3 = this.dialog_id;
            int i10 = AndroidUtilities.isTablet() ? 30 : 20;
            int i11 = this.classGuid;
            boolean isChannel3 = ChatObject.isChannel(this.currentChat);
            int i12 = this.lastLoadIndex;
            this.lastLoadIndex = i12 + 1;
            messagesController3.loadMessages(j3, i10, 0, 0, true, 0, i11, 2, 0, isChannel3, false, i12);
        }
        if (this.currentChat != null) {
            this.chatInfo = getMessagesController().getChatFull(this.currentChat.id);
            if (this.currentChat.megagroup && !getMessagesController().isChannelAdminsLoaded(this.currentChat.id)) {
                getMessagesController().loadChannelAdmins(this.currentChat.id, true);
            }
            TLRPC.ChatFull info = getMessagesStorage().loadChatInfo(this.currentChat.id, (CountDownLatch) null, true, false);
            if (this.chatInfo == null) {
                this.chatInfo = info;
            }
            if (!this.inScheduleMode && this.chatInfo != null && ChatObject.isChannel(this.currentChat) && this.chatInfo.migrated_from_chat_id != 0) {
                this.mergeDialogId = (long) (-this.chatInfo.migrated_from_chat_id);
                this.maxMessageId[1] = this.chatInfo.migrated_from_max_id;
            }
        } else if (this.currentUser != null) {
            getMessagesController().loadUserInfo(this.currentUser, true, this.classGuid);
        }
        if (!this.inScheduleMode) {
            if (userId != 0 && this.currentUser.bot) {
                getMediaDataController().loadBotInfo(userId, true, this.classGuid);
            } else if (this.chatInfo instanceof TLRPC.TL_chatFull) {
                for (int a = 0; a < this.chatInfo.participants.participants.size(); a++) {
                    TLRPC.User user3 = getMessagesController().getUser(Integer.valueOf(this.chatInfo.participants.participants.get(a).user_id));
                    if (user3 != null && user3.bot) {
                        getMediaDataController().loadBotInfo(user3.id, true, this.classGuid);
                    }
                }
            }
            if (AndroidUtilities.isTablet() != 0) {
                getNotificationCenter().postNotificationName(NotificationCenter.openedChatChanged, Long.valueOf(this.dialog_id), false);
            }
            if (this.currentUser != null) {
                if (getMessagesController().blockedUsers.indexOfKey(this.currentUser.id) >= 0) {
                    z = true;
                }
                this.userBlocked = z;
            }
            TLRPC.EncryptedChat encryptedChat = this.currentEncryptedChat;
            if (!(encryptedChat == null || AndroidUtilities.getMyLayerVersion(encryptedChat.layer) == 101)) {
                getSecretChatHelper().sendNotifyLayerMessage(this.currentEncryptedChat, (TLRPC.Message) null);
            }
        }
        return true;
    }

    public /* synthetic */ void lambda$onFragmentCreate$0$ChatActivity(MessagesStorage messagesStorage, int chatId, CountDownLatch countDownLatch) {
        this.currentChat = messagesStorage.getChat(chatId);
        countDownLatch.countDown();
    }

    public /* synthetic */ void lambda$onFragmentCreate$1$ChatActivity(MessagesStorage messagesStorage, int userId, CountDownLatch countDownLatch) {
        this.currentUser = messagesStorage.getUser(userId);
        countDownLatch.countDown();
    }

    public /* synthetic */ void lambda$onFragmentCreate$2$ChatActivity(MessagesStorage messagesStorage, int encId, CountDownLatch countDownLatch) {
        this.currentEncryptedChat = messagesStorage.getEncryptedChat(encId);
        countDownLatch.countDown();
    }

    public /* synthetic */ void lambda$onFragmentCreate$3$ChatActivity(MessagesStorage messagesStorage, CountDownLatch countDownLatch) {
        this.currentUser = messagesStorage.getUser(this.currentEncryptedChat.user_id);
        countDownLatch.countDown();
    }

    public void onFragmentDestroy() {
        super.onFragmentDestroy();
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.onDestroy();
        }
        MentionsAdapter mentionsAdapter2 = this.mentionsAdapter;
        if (mentionsAdapter2 != null) {
            mentionsAdapter2.onDestroy();
        }
        ChatAttachAlert chatAttachAlert2 = this.chatAttachAlert;
        if (chatAttachAlert2 != null) {
            chatAttachAlert2.dismissInternal();
        }
        UndoView undoView2 = this.undoView;
        if (undoView2 != null) {
            undoView2.hide(true, 0);
        }
        getMessagesController().setLastCreatedDialogId(this.dialog_id, this.inScheduleMode, false);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesDidLoad);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.emojiDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdateConnectionState);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateInterfaces);
        getNotificationCenter().removeObserver(this, NotificationCenter.didReceiveNewMessages);
        getNotificationCenter().removeObserver(this, NotificationCenter.closeChats);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesRead);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesDeleted);
        getNotificationCenter().removeObserver(this, NotificationCenter.historyCleared);
        getNotificationCenter().removeObserver(this, NotificationCenter.messageReceivedByServer);
        getNotificationCenter().removeObserver(this, NotificationCenter.messageReceivedByAck);
        getNotificationCenter().removeObserver(this, NotificationCenter.messageSendError);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatInfoDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.encryptedChatUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesReadEncrypted);
        getNotificationCenter().removeObserver(this, NotificationCenter.removeAllMessagesFromDialog);
        getNotificationCenter().removeObserver(this, NotificationCenter.contactsDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingProgressDidChanged);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingDidReset);
        getNotificationCenter().removeObserver(this, NotificationCenter.screenshotTook);
        getNotificationCenter().removeObserver(this, NotificationCenter.blockedUsersDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().removeObserver(this, NotificationCenter.didCreatedNewDeleteTask);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingDidStart);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingGoingToStop);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateMessageMedia);
        getNotificationCenter().removeObserver(this, NotificationCenter.replaceMessagesObjects);
        getNotificationCenter().removeObserver(this, NotificationCenter.notificationsSettingsUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.replyMessagesDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.didReceivedWebpages);
        getNotificationCenter().removeObserver(this, NotificationCenter.didReceivedWebpagesInUpdates);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesReadContent);
        getNotificationCenter().removeObserver(this, NotificationCenter.botInfoDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.botKeyboardDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatSearchResultsAvailable);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatSearchResultsLoading);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingPlayStateChanged);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdatedMessagesViews);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatInfoCantLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.pinnedLiveMessage);
        getNotificationCenter().removeObserver(this, NotificationCenter.pinnedMessageDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.peerSettingsDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.newDraftReceived);
        getNotificationCenter().removeObserver(this, NotificationCenter.userFullInfoDidLoad);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.didSetNewWallpapper);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.goingToPreviewTheme);
        getNotificationCenter().removeObserver(this, NotificationCenter.channelRightsUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateMentionsCount);
        getNotificationCenter().removeObserver(this, NotificationCenter.audioRecordTooShort);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdatePollResults);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdateReactions);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatOnlineCountDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.videoLoadingStateChanged);
        getNotificationCenter().removeObserver(this, NotificationCenter.scheduledMessagesUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.livestatechange);
        getNotificationCenter().removeObserver(this, NotificationCenter.contactRelationShip);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateChatNewmsgMentionText);
        getNotificationCenter().removeObserver(this, NotificationCenter.liverestartnotify);
        if (!this.inScheduleMode && AndroidUtilities.isTablet()) {
            getNotificationCenter().postNotificationName(NotificationCenter.openedChatChanged, Long.valueOf(this.dialog_id), true);
        }
        if (this.currentUser != null) {
            MediaController.getInstance().stopMediaObserver();
        }
        if (this.currentEncryptedChat != null) {
            try {
                if (Build.VERSION.SDK_INT >= 23 && (SharedConfig.passcodeHash.length() == 0 || SharedConfig.allowScreenCapture)) {
                    MediaController.getInstance().setFlagSecure(this, false);
                }
            } catch (Throwable e) {
                FileLog.e(e);
            }
        }
        if (this.currentUser != null) {
            getMessagesController().cancelLoadFullUser(this.currentUser.id);
        }
        AndroidUtilities.removeAdjustResize(getParentActivity(), this.classGuid);
        StickersAdapter stickersAdapter2 = this.stickersAdapter;
        if (stickersAdapter2 != null) {
            stickersAdapter2.onDestroy();
        }
        ChatAttachAlert chatAttachAlert3 = this.chatAttachAlert;
        if (chatAttachAlert3 != null) {
            chatAttachAlert3.onDestroy();
        }
        AndroidUtilities.unlockOrientation(getParentActivity());
        if (ChatObject.isChannel(this.currentChat)) {
            getMessagesController().startShortPoll(this.currentChat, true);
        }
        translateUnSubscribeAllAudioTask();
    }

    private void animLivePinClose(final View view) {
        AnimatorSet currentAnimation = new AnimatorSet();
        currentAnimation.setDuration(1000);
        currentAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(view, "alpha", new float[]{1.0f, 0.0f}), ObjectAnimator.ofFloat(view, "scaleX", new float[]{1.0f, 0.01f}), ObjectAnimator.ofFloat(view, "scaleY", new float[]{1.0f, 0.01f}), ObjectAnimator.ofFloat(view, "translationX", new float[]{(float) ((AndroidUtilities.getRealScreenSize().y - AndroidUtilities.dp(100.0f)) - view.getLeft())}), ObjectAnimator.ofFloat(view, "translationY", new float[]{(float) (-AndroidUtilities.dp(80.0f))})});
        currentAnimation.addListener(new AnimatorListenerAdapter() {
            public void onAnimationEnd(Animator animator) {
                view.setVisibility(4);
                ChatActivity.this.resetLivePinClose(view);
            }

            public void onAnimationCancel(Animator animator) {
            }
        });
        currentAnimation.start();
    }

    /* access modifiers changed from: private */
    public void resetLivePinClose(View view) {
        AnimatorSet currentAnimation = new AnimatorSet();
        currentAnimation.setDuration(100);
        currentAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(view, "alpha", new float[]{0.0f, 1.0f}), ObjectAnimator.ofFloat(view, "scaleX", new float[]{0.01f, 1.0f}), ObjectAnimator.ofFloat(view, "scaleY", new float[]{0.01f, 1.0f}), ObjectAnimator.ofFloat(view, "translationX", new float[]{0.0f}), ObjectAnimator.ofFloat(view, "translationY", new float[]{0.0f})});
        currentAnimation.start();
    }

    public View createView(Context context) {
        CharSequence oldMessage;
        boolean z;
        TLRPC.Chat chat;
        TLRPC.User user;
        TLRPC.Chat chat2;
        TLRPC.Chat chat3;
        Context context2 = context;
        if (this.chatMessageCellsCache.isEmpty()) {
            for (int a = 0; a < 8; a++) {
                this.chatMessageCellsCache.add(new ChatMessageCell(context2, this));
            }
        }
        for (int a2 = 1; a2 >= 0; a2--) {
            this.selectedMessagesIds[a2].clear();
            this.selectedMessagesCanCopyIds[a2].clear();
            this.selectedMessagesCanStarIds[a2].clear();
        }
        this.cantDeleteMessagesCount = 0;
        this.canEditMessagesCount = 0;
        this.cantForwardMessagesCount = 0;
        this.canForwardMessagesCount = 0;
        this.cantCopyMessageCount = 0;
        this.videoPlayerContainer = null;
        this.voiceHintTextView = null;
        this.hasOwnBackground = true;
        ChatAttachAlert chatAttachAlert2 = this.chatAttachAlert;
        if (chatAttachAlert2 != null) {
            try {
                if (chatAttachAlert2.isShowing()) {
                    this.chatAttachAlert.dismiss();
                }
            } catch (Exception e) {
            }
            this.chatAttachAlert.onDestroy();
            this.chatAttachAlert = null;
        }
        StickersAdapter stickersAdapter2 = this.stickersAdapter;
        if (stickersAdapter2 != null) {
            stickersAdapter2.onDestroy();
            this.stickersAdapter = null;
        }
        Theme.createChatResources(context2, false);
        this.actionBar.setAddToContainer(false);
        if (this.inPreviewMode) {
            this.actionBar.setBackButtonImage(0);
        } else {
            this.actionBar.setBackButtonImage(R.mipmap.ic_back);
        }
        this.actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
            /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v12, resolved type: java.lang.Object} */
            /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v92, resolved type: im.bclpbkiauv.messenger.MessageObject} */
            /* JADX WARNING: Multi-variable type inference failed */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public void onItemClick(int r14) {
                /*
                    r13 = this;
                    r0 = -1
                    r1 = 1
                    if (r14 != r0) goto L_0x004f
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.actionbar.ActionBar r0 = r0.actionBar
                    boolean r0 = r0.isActionModeShowed()
                    if (r0 == 0) goto L_0x0048
                    r0 = 1
                L_0x0011:
                    if (r0 < 0) goto L_0x0037
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r2 = r2.selectedMessagesIds
                    r2 = r2[r0]
                    r2.clear()
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r2 = r2.selectedMessagesCanCopyIds
                    r2 = r2[r0]
                    r2.clear()
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r2 = r2.selectedMessagesCanStarIds
                    r2 = r2[r0]
                    r2.clear()
                    int r0 = r0 + -1
                    goto L_0x0011
                L_0x0037:
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.hideActionMode()
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.updatePinnedMessageView(r1)
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.updateVisibleRows()
                    goto L_0x053d
                L_0x0048:
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.finishFragment()
                    goto L_0x053d
                L_0x004f:
                    if (r14 != 0) goto L_0x0058
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.showOrUpdateActionBarMenuPop()
                    goto L_0x053d
                L_0x0058:
                    r0 = 10
                    r2 = 0
                    if (r14 != r0) goto L_0x014c
                    java.lang.String r0 = ""
                    r3 = 0
                    r4 = 1
                L_0x0061:
                    if (r4 < 0) goto L_0x010b
                    java.util.ArrayList r5 = new java.util.ArrayList
                    r5.<init>()
                    r6 = 0
                L_0x0069:
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r7 = r7.selectedMessagesCanCopyIds
                    r7 = r7[r4]
                    int r7 = r7.size()
                    if (r6 >= r7) goto L_0x008d
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r7 = r7.selectedMessagesCanCopyIds
                    r7 = r7[r4]
                    int r7 = r7.keyAt(r6)
                    java.lang.Integer r7 = java.lang.Integer.valueOf(r7)
                    r5.add(r7)
                    int r6 = r6 + 1
                    goto L_0x0069
                L_0x008d:
                    im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r6 = r6.currentEncryptedChat
                    if (r6 != 0) goto L_0x0097
                    java.util.Collections.sort(r5)
                    goto L_0x009e
                L_0x0097:
                    java.util.Comparator r6 = java.util.Collections.reverseOrder()
                    java.util.Collections.sort(r5, r6)
                L_0x009e:
                    r6 = 0
                L_0x009f:
                    int r7 = r5.size()
                    if (r6 >= r7) goto L_0x0107
                    java.lang.Object r7 = r5.get(r6)
                    java.lang.Integer r7 = (java.lang.Integer) r7
                    im.bclpbkiauv.ui.ChatActivity r8 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r8 = r8.selectedMessagesCanCopyIds
                    r8 = r8[r4]
                    int r9 = r7.intValue()
                    java.lang.Object r8 = r8.get(r9)
                    im.bclpbkiauv.messenger.MessageObject r8 = (im.bclpbkiauv.messenger.MessageObject) r8
                    int r9 = r0.length()
                    if (r9 == 0) goto L_0x00d4
                    java.lang.StringBuilder r9 = new java.lang.StringBuilder
                    r9.<init>()
                    r9.append(r0)
                    java.lang.String r10 = "\n\n"
                    r9.append(r10)
                    java.lang.String r0 = r9.toString()
                L_0x00d4:
                    java.lang.StringBuilder r9 = new java.lang.StringBuilder
                    r9.<init>()
                    r9.append(r0)
                    im.bclpbkiauv.ui.ChatActivity r10 = im.bclpbkiauv.ui.ChatActivity.this
                    int r11 = r5.size()
                    if (r11 == r1) goto L_0x00f4
                    im.bclpbkiauv.ui.ChatActivity r11 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.tgnet.TLRPC$User r11 = r11.currentUser
                    if (r11 == 0) goto L_0x00f2
                    im.bclpbkiauv.ui.ChatActivity r11 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.tgnet.TLRPC$User r11 = r11.currentUser
                    boolean r11 = r11.self
                    if (r11 != 0) goto L_0x00f4
                L_0x00f2:
                    r11 = 1
                    goto L_0x00f5
                L_0x00f4:
                    r11 = 0
                L_0x00f5:
                    java.lang.String r10 = r10.getMessageContent(r8, r3, r11)
                    r9.append(r10)
                    java.lang.String r0 = r9.toString()
                    im.bclpbkiauv.tgnet.TLRPC$Message r9 = r8.messageOwner
                    int r3 = r9.from_id
                    int r6 = r6 + 1
                    goto L_0x009f
                L_0x0107:
                    int r4 = r4 + -1
                    goto L_0x0061
                L_0x010b:
                    int r2 = r0.length()
                    if (r2 == 0) goto L_0x0114
                    im.bclpbkiauv.messenger.AndroidUtilities.addToClipboard(r0)
                L_0x0114:
                    r2 = 1
                L_0x0115:
                    if (r2 < 0) goto L_0x013b
                    im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r4 = r4.selectedMessagesIds
                    r4 = r4[r2]
                    r4.clear()
                    im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r4 = r4.selectedMessagesCanCopyIds
                    r4 = r4[r2]
                    r4.clear()
                    im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r4 = r4.selectedMessagesCanStarIds
                    r4 = r4[r2]
                    r4.clear()
                    int r2 = r2 + -1
                    goto L_0x0115
                L_0x013b:
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    r2.hideActionMode()
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    r2.updatePinnedMessageView(r1)
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    r1.updateVisibleRows()
                    goto L_0x053d
                L_0x014c:
                    r0 = 12
                    r3 = 0
                    if (r14 != r0) goto L_0x0161
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    androidx.fragment.app.FragmentActivity r0 = r0.getParentActivity()
                    if (r0 != 0) goto L_0x015a
                    return
                L_0x015a:
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.createDeleteMessagesAlert(r3, r3)
                    goto L_0x053d
                L_0x0161:
                    r0 = 11
                    if (r14 != r0) goto L_0x016c
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.openForward()
                    goto L_0x053d
                L_0x016c:
                    r0 = 13
                    if (r14 != r0) goto L_0x0190
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    androidx.fragment.app.FragmentActivity r0 = r0.getParentActivity()
                    if (r0 != 0) goto L_0x0179
                    return
                L_0x0179:
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    androidx.fragment.app.FragmentActivity r1 = r0.getParentActivity()
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r2 = r2.currentEncryptedChat
                    im.bclpbkiauv.ui.actionbar.AlertDialog$Builder r1 = im.bclpbkiauv.ui.components.AlertsCreator.createTTLAlert(r1, r2)
                    im.bclpbkiauv.ui.actionbar.AlertDialog r1 = r1.create()
                    r0.showDialog(r1)
                    goto L_0x053d
                L_0x0190:
                    r0 = 32
                    r4 = 15
                    if (r14 == r4) goto L_0x04fd
                    r5 = 16
                    if (r14 != r5) goto L_0x019c
                    goto L_0x04fd
                L_0x019c:
                    r4 = 17
                    if (r14 != r4) goto L_0x01e5
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.tgnet.TLRPC$User r0 = r0.currentUser
                    if (r0 == 0) goto L_0x01e4
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    androidx.fragment.app.FragmentActivity r0 = r0.getParentActivity()
                    if (r0 != 0) goto L_0x01af
                    goto L_0x01e4
                L_0x01af:
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.TextView r0 = r0.addToContactsButton
                    java.lang.Object r0 = r0.getTag()
                    if (r0 == 0) goto L_0x01d0
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.TextView r1 = r0.addToContactsButton
                    java.lang.Object r1 = r1.getTag()
                    java.lang.Integer r1 = (java.lang.Integer) r1
                    int r1 = r1.intValue()
                    r0.shareMyContact(r1, r3)
                    goto L_0x053d
                L_0x01d0:
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.tgnet.TLRPC$User r0 = r0.currentUser
                    if (r0 == 0) goto L_0x053d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.hui.contacts.AddContactsInfoActivity r1 = new im.bclpbkiauv.ui.hui.contacts.AddContactsInfoActivity
                    im.bclpbkiauv.tgnet.TLRPC$User r2 = r0.currentUser
                    r1.<init>(r3, r2)
                    r0.presentFragment(r1)
                    goto L_0x053d
                L_0x01e4:
                    return
                L_0x01e5:
                    r4 = 18
                    if (r14 != r4) goto L_0x01f0
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.toggleMute(r2)
                    goto L_0x053d
                L_0x01f0:
                    r4 = 24
                    if (r14 != r4) goto L_0x020b
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this     // Catch:{ Exception -> 0x0205 }
                    im.bclpbkiauv.messenger.MediaDataController r0 = r0.getMediaDataController()     // Catch:{ Exception -> 0x0205 }
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this     // Catch:{ Exception -> 0x0205 }
                    im.bclpbkiauv.tgnet.TLRPC$User r1 = r1.currentUser     // Catch:{ Exception -> 0x0205 }
                    int r1 = r1.id     // Catch:{ Exception -> 0x0205 }
                    long r1 = (long) r1     // Catch:{ Exception -> 0x0205 }
                    r0.installShortcut(r1)     // Catch:{ Exception -> 0x0205 }
                    goto L_0x0209
                L_0x0205:
                    r0 = move-exception
                    im.bclpbkiauv.messenger.FileLog.e((java.lang.Throwable) r0)
                L_0x0209:
                    goto L_0x053d
                L_0x020b:
                    r4 = 21
                    if (r14 != r4) goto L_0x0222
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    androidx.fragment.app.FragmentActivity r0 = r0.getParentActivity()
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    long r3 = r1.dialog_id
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.AlertsCreator.createReportAlert(r0, r3, r2, r1)
                    goto L_0x053d
                L_0x0222:
                    r4 = 22
                    if (r14 != r4) goto L_0x02a4
                    r0 = 0
                L_0x0227:
                    r2 = 2
                    if (r0 >= r2) goto L_0x026c
                    r2 = 0
                L_0x022b:
                    im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r3 = r3.selectedMessagesCanStarIds
                    r3 = r3[r0]
                    int r3 = r3.size()
                    if (r2 >= r3) goto L_0x0269
                    im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r3 = r3.selectedMessagesCanStarIds
                    r3 = r3[r0]
                    java.lang.Object r3 = r3.valueAt(r2)
                    im.bclpbkiauv.messenger.MessageObject r3 = (im.bclpbkiauv.messenger.MessageObject) r3
                    im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.messenger.MediaDataController r4 = r4.getMediaDataController()
                    r5 = 2
                    im.bclpbkiauv.tgnet.TLRPC$Document r7 = r3.getDocument()
                    long r8 = java.lang.System.currentTimeMillis()
                    r10 = 1000(0x3e8, double:4.94E-321)
                    long r8 = r8 / r10
                    int r8 = (int) r8
                    im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                    boolean r6 = r6.hasUnfavedSelected
                    r9 = r6 ^ 1
                    r6 = r3
                    r4.addRecentSticker(r5, r6, r7, r8, r9)
                    int r2 = r2 + 1
                    goto L_0x022b
                L_0x0269:
                    int r0 = r0 + 1
                    goto L_0x0227
                L_0x026c:
                    r0 = 1
                L_0x026d:
                    if (r0 < 0) goto L_0x0293
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r2 = r2.selectedMessagesIds
                    r2 = r2[r0]
                    r2.clear()
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r2 = r2.selectedMessagesCanCopyIds
                    r2 = r2[r0]
                    r2.clear()
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r2 = r2.selectedMessagesCanStarIds
                    r2 = r2[r0]
                    r2.clear()
                    int r0 = r0 + -1
                    goto L_0x026d
                L_0x0293:
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.hideActionMode()
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.updatePinnedMessageView(r1)
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.updateVisibleRows()
                    goto L_0x053d
                L_0x02a4:
                    r4 = 23
                    if (r14 != r4) goto L_0x0339
                    r0 = 0
                    r3 = 1
                L_0x02aa:
                    if (r3 < 0) goto L_0x0323
                    if (r0 != 0) goto L_0x02ff
                    im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r4 = r4.selectedMessagesIds
                    r4 = r4[r3]
                    int r4 = r4.size()
                    if (r4 != r1) goto L_0x02ff
                    java.util.ArrayList r4 = new java.util.ArrayList
                    r4.<init>()
                    r5 = 0
                L_0x02c2:
                    im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r6 = r6.selectedMessagesIds
                    r6 = r6[r3]
                    int r6 = r6.size()
                    if (r5 >= r6) goto L_0x02e6
                    im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r6 = r6.selectedMessagesIds
                    r6 = r6[r3]
                    int r6 = r6.keyAt(r5)
                    java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
                    r4.add(r6)
                    int r5 = r5 + 1
                    goto L_0x02c2
                L_0x02e6:
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r5 = r5.messagesDict
                    r5 = r5[r3]
                    java.lang.Object r6 = r4.get(r2)
                    java.lang.Integer r6 = (java.lang.Integer) r6
                    int r6 = r6.intValue()
                    java.lang.Object r5 = r5.get(r6)
                    r0 = r5
                    im.bclpbkiauv.messenger.MessageObject r0 = (im.bclpbkiauv.messenger.MessageObject) r0
                L_0x02ff:
                    im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r4 = r4.selectedMessagesIds
                    r4 = r4[r3]
                    r4.clear()
                    im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r4 = r4.selectedMessagesCanCopyIds
                    r4 = r4[r3]
                    r4.clear()
                    im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                    android.util.SparseArray[] r4 = r4.selectedMessagesCanStarIds
                    r4 = r4[r3]
                    r4.clear()
                    int r3 = r3 + -1
                    goto L_0x02aa
                L_0x0323:
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    r2.startEditingMessageObject(r0)
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    r2.hideActionMode()
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    r2.updatePinnedMessageView(r1)
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    r1.updateVisibleRows()
                    goto L_0x053d
                L_0x0339:
                    r1 = 14
                    if (r14 != r1) goto L_0x0355
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatAttachAlert r0 = r0.chatAttachAlert
                    if (r0 == 0) goto L_0x034e
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatAttachAlert r0 = r0.chatAttachAlert
                    r0.setEditingMessageObject(r3)
                L_0x034e:
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.openAttachMenu()
                    goto L_0x053d
                L_0x0355:
                    r1 = 30
                    if (r14 != r1) goto L_0x0374
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.messenger.SendMessagesHelper r1 = r0.getSendMessagesHelper()
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    long r3 = r0.dialog_id
                    r5 = 0
                    r6 = 0
                    r7 = 0
                    r8 = 0
                    r9 = 0
                    r10 = 0
                    r11 = 1
                    r12 = 0
                    java.lang.String r2 = "/help"
                    r1.sendMessage(r2, r3, r5, r6, r7, r8, r9, r10, r11, r12)
                    goto L_0x053d
                L_0x0374:
                    r1 = 31
                    if (r14 != r1) goto L_0x0393
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.messenger.SendMessagesHelper r1 = r0.getSendMessagesHelper()
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    long r3 = r0.dialog_id
                    r5 = 0
                    r6 = 0
                    r7 = 0
                    r8 = 0
                    r9 = 0
                    r10 = 0
                    r11 = 1
                    r12 = 0
                    java.lang.String r2 = "/settings"
                    r1.sendMessage(r2, r3, r5, r6, r7, r8, r9, r10, r11, r12)
                    goto L_0x053d
                L_0x0393:
                    r1 = 40
                    if (r14 != r1) goto L_0x039e
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    r0.openSearchWithText(r3)
                    goto L_0x053d
                L_0x039e:
                    if (r14 != r0) goto L_0x03bd
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.tgnet.TLRPC$User r0 = r0.currentUser
                    if (r0 == 0) goto L_0x053d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.utils.ChatActionBarHelper r0 = r0.actionBarHelper
                    if (r0 == 0) goto L_0x053d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.utils.ChatActionBarHelper r0 = r0.actionBarHelper
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.tgnet.TLRPC$User r1 = r1.currentUser
                    r0.startCall(r1)
                    goto L_0x053d
                L_0x03bd:
                    r0 = 50
                    if (r14 != r0) goto L_0x03eb
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    if (r0 == 0) goto L_0x053d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    int r1 = r1.editTextStart
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    int r2 = r2.editTextEnd
                    r0.setSelectionOverride(r1, r2)
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    r0.makeSelectedBold()
                    goto L_0x053d
                L_0x03eb:
                    r0 = 51
                    if (r14 != r0) goto L_0x0419
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    if (r0 == 0) goto L_0x053d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    int r1 = r1.editTextStart
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    int r2 = r2.editTextEnd
                    r0.setSelectionOverride(r1, r2)
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    r0.makeSelectedItalic()
                    goto L_0x053d
                L_0x0419:
                    r0 = 52
                    if (r14 != r0) goto L_0x0447
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    if (r0 == 0) goto L_0x053d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    int r1 = r1.editTextStart
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    int r2 = r2.editTextEnd
                    r0.setSelectionOverride(r1, r2)
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    r0.makeSelectedMono()
                    goto L_0x053d
                L_0x0447:
                    r0 = 55
                    if (r14 != r0) goto L_0x0475
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    if (r0 == 0) goto L_0x053d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    int r1 = r1.editTextStart
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    int r2 = r2.editTextEnd
                    r0.setSelectionOverride(r1, r2)
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    r0.makeSelectedStrike()
                    goto L_0x053d
                L_0x0475:
                    r0 = 56
                    if (r14 != r0) goto L_0x04a3
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    if (r0 == 0) goto L_0x053d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    int r1 = r1.editTextStart
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    int r2 = r2.editTextEnd
                    r0.setSelectionOverride(r1, r2)
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    r0.makeSelectedUnderline()
                    goto L_0x053d
                L_0x04a3:
                    r0 = 53
                    if (r14 != r0) goto L_0x04d0
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    if (r0 == 0) goto L_0x053d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    int r1 = r1.editTextStart
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    int r2 = r2.editTextEnd
                    r0.setSelectionOverride(r1, r2)
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    r0.makeSelectedUrl()
                    goto L_0x053d
                L_0x04d0:
                    r0 = 54
                    if (r14 != r0) goto L_0x053d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    if (r0 == 0) goto L_0x053d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    int r1 = r1.editTextStart
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    int r2 = r2.editTextEnd
                    r0.setSelectionOverride(r1, r2)
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r0.chatActivityEnterView
                    im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
                    r0.makeSelectedRegular()
                    goto L_0x053d
                L_0x04fd:
                    im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                    androidx.fragment.app.FragmentActivity r3 = r3.getParentActivity()
                    if (r3 != 0) goto L_0x0506
                    return
                L_0x0506:
                    im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                    long r5 = r3.dialog_id
                    int r3 = (int) r5
                    if (r3 >= 0) goto L_0x051b
                    im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                    long r5 = r3.dialog_id
                    long r5 = r5 >> r0
                    int r0 = (int) r5
                    if (r0 == r1) goto L_0x051b
                    r0 = 1
                    goto L_0x051c
                L_0x051b:
                    r0 = 0
                L_0x051c:
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    if (r14 != r4) goto L_0x0522
                    r6 = 1
                    goto L_0x0523
                L_0x0522:
                    r6 = 0
                L_0x0523:
                    im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.tgnet.TLRPC$Chat r7 = r3.currentChat
                    im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.tgnet.TLRPC$User r8 = r3.currentUser
                    im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r3 = r3.currentEncryptedChat
                    if (r3 == 0) goto L_0x0533
                    r9 = 1
                    goto L_0x0534
                L_0x0533:
                    r9 = 0
                L_0x0534:
                    im.bclpbkiauv.ui.-$$Lambda$ChatActivity$6$ayXVPXviBMWXXBcoCkyt7M1PLy4 r10 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$6$ayXVPXviBMWXXBcoCkyt7M1PLy4
                    r10.<init>(r14, r0)
                    im.bclpbkiauv.ui.components.AlertsCreator.createClearOrDeleteDialogAlert(r5, r6, r7, r8, r9, r10)
                L_0x053d:
                    return
                */
                throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.AnonymousClass6.onItemClick(int):void");
            }

            public /* synthetic */ void lambda$onItemClick$2$ChatActivity$6(int id, boolean isChat, boolean param) {
                if (id == 15 && ChatObject.isChannel(ChatActivity.this.currentChat) && (!ChatActivity.this.currentChat.megagroup || !TextUtils.isEmpty(ChatActivity.this.currentChat.username))) {
                    ChatActivity.this.getMessagesController().deleteDialog(ChatActivity.this.dialog_id, 2, param);
                } else if (id != 15) {
                    ChatActivity.this.getNotificationCenter().removeObserver(ChatActivity.this, NotificationCenter.closeChats);
                    ChatActivity.this.getNotificationCenter().postNotificationName(NotificationCenter.closeChats, new Object[0]);
                    ChatActivity.this.finishFragment();
                    ChatActivity.this.getNotificationCenter().postNotificationName(NotificationCenter.needDeleteDialog, Long.valueOf(ChatActivity.this.dialog_id), ChatActivity.this.currentUser, ChatActivity.this.currentChat, Boolean.valueOf(param));
                } else {
                    boolean unused = ChatActivity.this.clearingHistory = true;
                    ChatActivity.this.undoView.setAdditionalTranslationY(0.0f);
                    ChatActivity.this.undoView.showWithAction(ChatActivity.this.dialog_id, id == 15 ? 0 : 1, new Runnable(id, param, isChat) {
                        private final /* synthetic */ int f$1;
                        private final /* synthetic */ boolean f$2;
                        private final /* synthetic */ boolean f$3;

                        {
                            this.f$1 = r2;
                            this.f$2 = r3;
                            this.f$3 = r4;
                        }

                        public final void run() {
                            ChatActivity.AnonymousClass6.this.lambda$null$0$ChatActivity$6(this.f$1, this.f$2, this.f$3);
                        }
                    }, new Runnable() {
                        public final void run() {
                            ChatActivity.AnonymousClass6.this.lambda$null$1$ChatActivity$6();
                        }
                    });
                    ChatActivity.this.chatAdapter.notifyDataSetChanged();
                }
            }

            public /* synthetic */ void lambda$null$0$ChatActivity$6(int id, boolean param, boolean isChat) {
                if (id == 15) {
                    if (ChatActivity.this.chatInfo != null && ChatActivity.this.chatInfo.pinned_msg_id != 0) {
                        SharedPreferences.Editor edit = MessagesController.getNotificationsSettings(ChatActivity.this.currentAccount).edit();
                        edit.putInt("pin_" + ChatActivity.this.dialog_id, ChatActivity.this.chatInfo.pinned_msg_id).commit();
                        ChatActivity.this.updatePinnedMessageView(true);
                    } else if (!(ChatActivity.this.userInfo == null || ChatActivity.this.userInfo.pinned_msg_id == 0)) {
                        SharedPreferences.Editor edit2 = MessagesController.getNotificationsSettings(ChatActivity.this.currentAccount).edit();
                        edit2.putInt("pin_" + ChatActivity.this.dialog_id, ChatActivity.this.userInfo.pinned_msg_id).commit();
                        ChatActivity.this.updatePinnedMessageView(true);
                    }
                    ChatActivity.this.getMessagesController().deleteDialog(ChatActivity.this.dialog_id, 1, param);
                    boolean unused = ChatActivity.this.clearingHistory = false;
                    ChatActivity.this.clearHistory(false);
                    ChatActivity.this.chatAdapter.notifyDataSetChanged();
                    return;
                }
                if (!isChat) {
                    ChatActivity.this.getMessagesController().deleteDialog(ChatActivity.this.dialog_id, 0, param);
                } else if (ChatObject.isNotInChat(ChatActivity.this.currentChat)) {
                    ChatActivity.this.getMessagesController().deleteDialog(ChatActivity.this.dialog_id, 0, param);
                } else {
                    ChatActivity.this.getMessagesController().deleteUserFromChat((int) (-ChatActivity.this.dialog_id), ChatActivity.this.getMessagesController().getUser(Integer.valueOf(ChatActivity.this.getUserConfig().getClientUserId())), (TLRPC.ChatFull) null);
                }
                ChatActivity.this.finishFragment();
            }

            public /* synthetic */ void lambda$null$1$ChatActivity$6() {
                boolean unused = ChatActivity.this.clearingHistory = false;
                ChatActivity.this.chatAdapter.notifyDataSetChanged();
            }
        });
        this.actionBarHelper = new ChatActionBarHelper(this, this.actionBar, this.currentEncryptedChat != null, this.inPreviewMode);
        TLRPC.Chat chat4 = this.currentChat;
        if (chat4 != null && !ChatObject.isChannel(chat4)) {
            int i = this.currentChat.participants_count;
            TLRPC.ChatFull chatFull = this.chatInfo;
            if (chatFull != null) {
                chatFull.participants.participants.size();
            }
        }
        ActionBarMenu menu = this.actionBar.createMenu();
        if (this.currentEncryptedChat == null && !this.inScheduleMode) {
            ActionBarMenuItem actionBarMenuItemSearchListener = menu.addItem(0, (int) R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
                boolean searchWas;

                public void onSearchCollapse() {
                    ChatActivity.this.searchCalendarButton.setVisibility(0);
                    if (ChatActivity.this.searchUserButton != null) {
                        ChatActivity.this.searchUserButton.setVisibility(0);
                    }
                    if (ChatActivity.this.searchingForUser) {
                        ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag((String) null, 0, (ArrayList<MessageObject>) null, false);
                        boolean unused = ChatActivity.this.searchingForUser = false;
                    }
                    ChatActivity.this.mentionLayoutManager.setReverseLayout(false);
                    ChatActivity.this.mentionsAdapter.setSearchingMentions(false);
                    TLRPC.User unused2 = ChatActivity.this.searchingUserMessages = null;
                    ChatActivity.this.searchItem.setSearchFieldHint(LocaleController.getString("Search", R.string.Search));
                    ChatActivity.this.searchItem.setSearchFieldCaption((CharSequence) null);
                    if (ChatActivity.this.editTextItem.getTag() != null) {
                        if (ChatActivity.this.headerItem != null) {
                            ChatActivity.this.headerItem.setVisibility(8);
                        }
                        if (ChatActivity.this.editTextItem != null) {
                            ChatActivity.this.editTextItem.setVisibility(0);
                        }
                        if (ChatActivity.this.attachItem != null) {
                            ChatActivity.this.attachItem.setVisibility(8);
                        }
                    } else if (ChatActivity.this.chatActivityEnterView.hasText()) {
                        if (ChatActivity.this.headerItem != null) {
                            ChatActivity.this.headerItem.setVisibility(8);
                        }
                        if (ChatActivity.this.editTextItem != null) {
                            ChatActivity.this.editTextItem.setVisibility(8);
                        }
                        if (ChatActivity.this.attachItem != null) {
                            ChatActivity.this.attachItem.setVisibility(0);
                        }
                    } else {
                        if (ChatActivity.this.headerItem != null) {
                            ChatActivity.this.headerItem.setVisibility(0);
                        }
                        if (ChatActivity.this.editTextItem != null) {
                            ChatActivity.this.editTextItem.setVisibility(8);
                        }
                        if (ChatActivity.this.attachItem != null) {
                            ChatActivity.this.attachItem.setVisibility(8);
                        }
                    }
                    ChatActivity.this.searchItem.setVisibility(8);
                    ChatActivity.this.removeSelectedMessageHighlight();
                    ChatActivity.this.updateBottomOverlay();
                    ChatActivity.this.updatePinnedMessageView(true);
                    ChatActivity.this.updateVisibleRows();
                }

                public void onSearchExpand() {
                    if (ChatActivity.this.openSearchKeyboard) {
                        AndroidUtilities.runOnUIThread(new Runnable() {
                            public final void run() {
                                ChatActivity.AnonymousClass7.this.lambda$onSearchExpand$0$ChatActivity$7();
                            }
                        }, 300);
                    }
                }

                public /* synthetic */ void lambda$onSearchExpand$0$ChatActivity$7() {
                    this.searchWas = false;
                    ChatActivity.this.searchItem.getSearchField().requestFocus();
                    AndroidUtilities.showKeyboard(ChatActivity.this.searchItem.getSearchField());
                }

                public void onSearchPressed(EditText editText) {
                    this.searchWas = true;
                    ChatActivity.this.updateSearchButtons(0, 0, -1);
                    ChatActivity.this.getMediaDataController().searchMessagesInChat(editText.getText().toString(), ChatActivity.this.dialog_id, ChatActivity.this.mergeDialogId, ChatActivity.this.classGuid, 0, ChatActivity.this.searchingUserMessages);
                }

                public void onTextChanged(EditText editText) {
                    if (ChatActivity.this.searchingForUser) {
                        MentionsAdapter access$5600 = ChatActivity.this.mentionsAdapter;
                        access$5600.searchUsernameOrHashtag("@" + editText.getText().toString(), 0, ChatActivity.this.messages, true);
                    } else if (!ChatActivity.this.searchingForUser && ChatActivity.this.searchingUserMessages == null && ChatActivity.this.searchUserButton != null && TextUtils.equals(editText.getText(), LocaleController.getString("SearchFrom", R.string.SearchFrom))) {
                        ChatActivity.this.searchUserButton.callOnClick();
                    }
                }

                public void onCaptionCleared() {
                    if (ChatActivity.this.searchingUserMessages != null) {
                        ChatActivity.this.searchUserButton.callOnClick();
                        return;
                    }
                    if (ChatActivity.this.searchingForUser) {
                        ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag((String) null, 0, (ArrayList<MessageObject>) null, false);
                        boolean unused = ChatActivity.this.searchingForUser = false;
                        ChatActivity.this.searchItem.setSearchFieldText("", true);
                    }
                    ChatActivity.this.searchItem.setSearchFieldHint(LocaleController.getString("Search", R.string.Search));
                    ChatActivity.this.searchCalendarButton.setVisibility(0);
                    ChatActivity.this.searchUserButton.setVisibility(0);
                    TLRPC.User unused2 = ChatActivity.this.searchingUserMessages = null;
                }

                public boolean forceShowClear() {
                    return ChatActivity.this.searchingForUser;
                }
            });
            this.searchItem = actionBarMenuItemSearchListener;
            actionBarMenuItemSearchListener.setSearchFieldHint(LocaleController.getString("Search", R.string.Search));
            this.searchItem.setVisibility(8);
        }
        if (!this.inScheduleMode) {
            TLRPC.User user2 = this.currentUser;
            if (isSysNotifyMessage().booleanValue()) {
                this.headerItem = menu.addItem(18, (int) R.mipmap.iv_chat_sys_notify_msg_unmute);
            } else {
                ActionBarMenuItem addItem = menu.addItem(0, (int) R.drawable.bar_right_menu);
                this.headerItem = addItem;
                addItem.setContentDescription(LocaleController.getString("AccDescrMoreOptions", R.string.AccDescrMoreOptions));
            }
            createActionBarMenuPop();
            ActionBarMenuItem addItem2 = menu.addItem(0, (int) R.drawable.ic_ab_other);
            this.editTextItem = addItem2;
            addItem2.setTag((Object) null);
            this.editTextItem.setVisibility(8);
            SpannableStringBuilder stringBuilder = new SpannableStringBuilder(LocaleController.getString("Bold", R.string.Bold));
            stringBuilder.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/rmedium.ttf")), 0, stringBuilder.length(), 33);
            this.editTextItem.addSubItem(50, stringBuilder);
            SpannableStringBuilder stringBuilder2 = new SpannableStringBuilder(LocaleController.getString("Italic", R.string.Italic));
            stringBuilder2.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/ritalic.ttf")), 0, stringBuilder2.length(), 33);
            this.editTextItem.addSubItem(51, stringBuilder2);
            SpannableStringBuilder stringBuilder3 = new SpannableStringBuilder(LocaleController.getString("Mono", R.string.Mono));
            stringBuilder3.setSpan(new TypefaceSpan(Typeface.MONOSPACE), 0, stringBuilder3.length(), 33);
            this.editTextItem.addSubItem(52, stringBuilder3);
            TLRPC.EncryptedChat encryptedChat = this.currentEncryptedChat;
            if (encryptedChat == null || (encryptedChat != null && AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 101)) {
                SpannableStringBuilder stringBuilder4 = new SpannableStringBuilder(LocaleController.getString("Strike", R.string.Strike));
                TextStyleSpan.TextStyleRun run = new TextStyleSpan.TextStyleRun();
                run.flags |= 8;
                stringBuilder4.setSpan(new TextStyleSpan(run), 0, stringBuilder4.length(), 33);
                this.editTextItem.addSubItem(55, stringBuilder4);
                SpannableStringBuilder stringBuilder5 = new SpannableStringBuilder(LocaleController.getString("Underline", R.string.Underline));
                TextStyleSpan.TextStyleRun run2 = new TextStyleSpan.TextStyleRun();
                run2.flags |= 16;
                stringBuilder5.setSpan(new TextStyleSpan(run2), 0, stringBuilder5.length(), 33);
                this.editTextItem.addSubItem(56, stringBuilder5);
            }
            this.editTextItem.addSubItem(53, LocaleController.getString("CreateLink", R.string.CreateLink));
            this.editTextItem.addSubItem(54, LocaleController.getString("Regular", R.string.Regular));
            TLRPC.Chat chat5 = this.currentChat;
            if (chat5 != null && !chat5.creator) {
                this.chatActionBarMenuPop.addSubItem(21, R.drawable.msg_report, LocaleController.getString("ReportChat", R.string.ReportChat));
            }
            if (this.currentUser != null) {
                this.addContactItem = this.chatActionBarMenuPop.addSubItem(17, R.drawable.msg_addcontact, "");
            }
            if (this.currentEncryptedChat != null) {
                this.timeItem2 = this.chatActionBarMenuPop.addSubItem(13, R.drawable.msg_timer, LocaleController.getString("SetTimer", R.string.SetTimer));
            }
            if (!ChatObject.isChannel(this.currentChat) || ((chat3 = this.currentChat) != null && chat3.megagroup && TextUtils.isEmpty(this.currentChat.username))) {
                this.chatActionBarMenuPop.addSubItem(15, R.drawable.msg_clear, LocaleController.getString("ClearHistory", R.string.ClearHistory));
            }
            TLRPC.User user3 = this.currentUser;
            if (user3 == null || !user3.self) {
                this.muteItem = this.chatActionBarMenuPop.addSubItem(18, R.drawable.msg_mute, (String) null);
            }
            if (!ChatObject.isChannel(this.currentChat) || this.currentChat.creator) {
                if (!ChatObject.isChannel(this.currentChat)) {
                    if (this.currentChat != null) {
                        this.chatActionBarMenuPop.addSubItem(16, R.drawable.msg_leave, LocaleController.getString("DeleteAndExit", R.string.DeleteAndExit));
                    } else {
                        this.chatActionBarMenuPop.addSubItem(16, R.drawable.msg_delete, LocaleController.getString("DeleteChatUser", R.string.DeleteChatUser));
                    }
                }
            } else if (!ChatObject.isNotInChat(this.currentChat)) {
                if (this.currentChat.megagroup) {
                    this.chatActionBarMenuPop.addSubItem(16, R.drawable.msg_leave, LocaleController.getString("DeleteAndExit", R.string.DeleteAndExit));
                } else {
                    this.chatActionBarMenuPop.addSubItem(16, R.drawable.msg_leave, LocaleController.getString("LeaveChannelMenu", R.string.LeaveChannelMenu));
                }
            }
            TLRPC.User user4 = this.currentUser;
            if (user4 != null && user4.self) {
                this.chatActionBarMenuPop.addSubItem(24, R.drawable.msg_home, LocaleController.getString("AddShortcut", R.string.AddShortcut));
            }
            TLRPC.User user5 = this.currentUser;
            if (user5 != null && this.currentEncryptedChat == null && user5.bot) {
                this.chatActionBarMenuPop.addSubItem(31, R.drawable.menu_settings, LocaleController.getString("BotSettings", R.string.BotSettings));
                this.chatActionBarMenuPop.addSubItem(30, R.drawable.menu_help, LocaleController.getString("BotHelp", R.string.BotHelp));
                updateBotButtons();
            }
        }
        this.actionBarHelper.update();
        updateTitleIcons();
        if (!this.inScheduleMode) {
            ActionBarMenuItem allowCloseAnimation = menu.addItem(14, (int) R.drawable.ic_ab_other).setOverrideMenuClick(true).setAllowCloseAnimation(false);
            this.attachItem = allowCloseAnimation;
            allowCloseAnimation.setVisibility(8);
        }
        this.actionModeViews.clear();
        if (this.inPreviewMode) {
            this.headerItem.setAlpha(0.0f);
            this.attachItem.setAlpha(0.0f);
        }
        ActionBarMenu actionMode = this.actionBar.createActionMode();
        NumberTextView numberTextView = new NumberTextView(actionMode.getContext());
        this.selectedMessagesCountTextView = numberTextView;
        numberTextView.setTextSize(18);
        this.selectedMessagesCountTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.selectedMessagesCountTextView.setTextColor(Theme.getColor(Theme.key_actionBarActionModeDefaultIcon));
        actionMode.addView(this.selectedMessagesCountTextView, LayoutHelper.createLinear(0, -1, 1.0f, 65, 0, 0, 0));
        this.selectedMessagesCountTextView.setOnTouchListener($$Lambda$ChatActivity$vwBkqjLGSPmRcgivGF6WUTCra_I.INSTANCE);
        if (this.currentEncryptedChat != null) {
            this.actionModeViews.add(actionMode.addItemWithWidth(23, R.drawable.msg_edit, AndroidUtilities.dp(54.0f), LocaleController.getString("Edit", R.string.Edit)));
            this.actionModeViews.add(actionMode.addItemWithWidth(22, R.drawable.msg_fave, AndroidUtilities.dp(54.0f), LocaleController.getString("AddToFavorites", R.string.AddToFavorites)));
            this.actionModeViews.add(actionMode.addItemWithWidth(10, R.drawable.msg_copy, AndroidUtilities.dp(54.0f), LocaleController.getString("Copy", R.string.Copy)));
            this.actionModeViews.add(actionMode.addItemWithWidth(12, R.drawable.msg_delete, AndroidUtilities.dp(54.0f), LocaleController.getString("Delete", R.string.Delete)));
        } else if (isSysNotifyMessage().booleanValue()) {
            this.actionModeViews.add(actionMode.addItemWithWidth(23, R.drawable.msg_edit, AndroidUtilities.dp(54.0f), LocaleController.getString("Edit", R.string.Edit)));
            this.actionModeViews.add(actionMode.addItemWithWidth(22, R.drawable.msg_fave, AndroidUtilities.dp(54.0f), LocaleController.getString("AddToFavorites", R.string.AddToFavorites)));
            this.actionModeViews.add(actionMode.addItemWithWidth(10, R.drawable.msg_copy, AndroidUtilities.dp(54.0f), LocaleController.getString("Copy", R.string.Copy)));
            this.actionModeViews.add(actionMode.addItemWithWidth(12, R.drawable.msg_delete, AndroidUtilities.dp(54.0f), LocaleController.getString("Delete", R.string.Delete)));
        } else {
            this.actionModeViews.add(actionMode.addItemWithWidth(23, R.drawable.msg_edit, AndroidUtilities.dp(54.0f), LocaleController.getString("Edit", R.string.Edit)));
            this.actionModeViews.add(actionMode.addItemWithWidth(22, R.drawable.msg_fave, AndroidUtilities.dp(54.0f), LocaleController.getString("AddToFavorites", R.string.AddToFavorites)));
            this.actionModeViews.add(actionMode.addItemWithWidth(10, R.drawable.msg_copy, AndroidUtilities.dp(54.0f), LocaleController.getString("Copy", R.string.Copy)));
            this.actionModeViews.add(actionMode.addItemWithWidth(11, R.drawable.msg_forward, AndroidUtilities.dp(54.0f), LocaleController.getString("Forward", R.string.Forward)));
            this.actionModeViews.add(actionMode.addItemWithWidth(12, R.drawable.msg_delete, AndroidUtilities.dp(54.0f), LocaleController.getString("Delete", R.string.Delete)));
        }
        actionMode.getItem(23).setVisibility((this.canEditMessagesCount == 1 && this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size() == 1) ? 0 : 8);
        actionMode.getItem(10).setVisibility((this.currentEncryptedChat == null || this.selectedMessagesCanCopyIds[0].size() + this.selectedMessagesCanCopyIds[1].size() == 0) ? 8 : 0);
        actionMode.getItem(22).setVisibility(this.selectedMessagesCanStarIds[0].size() + this.selectedMessagesCanStarIds[1].size() != 0 ? 0 : 8);
        actionMode.getItem(12).setVisibility(this.cantDeleteMessagesCount == 0 ? 0 : 8);
        checkActionBarMenu();
        this.scrimPaint = new Paint() {
            public void setAlpha(int a) {
                super.setAlpha(a);
                if (ChatActivity.this.fragmentView != null) {
                    ChatActivity.this.fragmentView.invalidate();
                }
            }
        };
        this.fragmentView = new SizeNotifierFrameLayout(context2) {
            ArrayList<ChatMessageCell> drawCaptionAfter = new ArrayList<>();
            ArrayList<ChatMessageCell> drawNamesAfter = new ArrayList<>();
            ArrayList<ChatMessageCell> drawTimeAfter = new ArrayList<>();
            int inputFieldHeight = 0;

            /* access modifiers changed from: protected */
            public void onAttachedToWindow() {
                super.onAttachedToWindow();
                MessageObject messageObject = MediaController.getInstance().getPlayingMessageObject();
                if (messageObject == null) {
                    return;
                }
                if ((messageObject.isRoundVideo() || messageObject.isVideo()) && messageObject.eventId == 0 && messageObject.getDialogId() == ChatActivity.this.dialog_id) {
                    MediaController.getInstance().setTextureView(ChatActivity.this.createTextureView(false), ChatActivity.this.aspectRatioFrameLayout, ChatActivity.this.videoPlayerContainer, true);
                }
            }

            public boolean dispatchTouchEvent(MotionEvent ev) {
                if (ChatActivity.this.scrimView != null) {
                    return false;
                }
                if (ChatActivity.this.chatActivityEnterView == null || !ChatActivity.this.chatActivityEnterView.isStickersExpanded() || ev.getY() >= ChatActivity.this.chatActivityEnterView.getY()) {
                    return super.dispatchTouchEvent(ev);
                }
                return false;
            }

            /* access modifiers changed from: protected */
            /* JADX WARNING: Removed duplicated region for block: B:21:0x004e  */
            /* JADX WARNING: Removed duplicated region for block: B:34:0x00c7  */
            /* JADX WARNING: Removed duplicated region for block: B:59:0x017c  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public boolean drawChild(android.graphics.Canvas r11, android.view.View r12, long r13) {
                /*
                    r10 = this;
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    android.view.View r0 = r0.scrimView
                    r1 = 0
                    if (r0 == 0) goto L_0x0022
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.FrameLayout r0 = r0.pagedownButton
                    if (r12 == r0) goto L_0x0021
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.FrameLayout r0 = r0.mentiondownButton
                    if (r12 == r0) goto L_0x0021
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.cells.ChatActionCell r0 = r0.floatingDateView
                    if (r12 != r0) goto L_0x0022
                L_0x0021:
                    return r1
                L_0x0022:
                    im.bclpbkiauv.messenger.MediaController r0 = im.bclpbkiauv.messenger.MediaController.getInstance()
                    im.bclpbkiauv.messenger.MessageObject r0 = r0.getPlayingMessageObject()
                    r2 = 0
                    if (r0 == 0) goto L_0x0044
                    long r3 = r0.eventId
                    r5 = 0
                    int r7 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
                    if (r7 != 0) goto L_0x0044
                    boolean r3 = r0.isRoundVideo()
                    r2 = r3
                    if (r3 != 0) goto L_0x0042
                    boolean r3 = r0.isVideo()
                    if (r3 == 0) goto L_0x0044
                L_0x0042:
                    r3 = 1
                    goto L_0x0045
                L_0x0044:
                    r3 = 0
                L_0x0045:
                    im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.FrameLayout r4 = r4.videoPlayerContainer
                    r5 = 5
                    if (r12 != r4) goto L_0x00c7
                    if (r0 == 0) goto L_0x00a5
                    int r4 = r0.type
                    if (r4 != r5) goto L_0x00a5
                    android.graphics.drawable.Drawable r4 = im.bclpbkiauv.ui.actionbar.Theme.chat_roundVideoShadow
                    if (r4 == 0) goto L_0x009f
                    im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                    com.google.android.exoplayer2.ui.AspectRatioFrameLayout r4 = r4.aspectRatioFrameLayout
                    boolean r4 = r4.isDrawingReady()
                    if (r4 == 0) goto L_0x009f
                    float r4 = r12.getX()
                    int r4 = (int) r4
                    r5 = 1077936128(0x40400000, float:3.0)
                    int r5 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r5)
                    int r4 = r4 - r5
                    float r5 = r12.getY()
                    int r5 = (int) r5
                    r6 = 1073741824(0x40000000, float:2.0)
                    int r6 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r6)
                    int r5 = r5 - r6
                    android.graphics.drawable.Drawable r6 = im.bclpbkiauv.ui.actionbar.Theme.chat_roundVideoShadow
                    r7 = 255(0xff, float:3.57E-43)
                    r6.setAlpha(r7)
                    android.graphics.drawable.Drawable r6 = im.bclpbkiauv.ui.actionbar.Theme.chat_roundVideoShadow
                    int r7 = im.bclpbkiauv.messenger.AndroidUtilities.roundMessageSize
                    int r7 = r7 + r4
                    r8 = 1086324736(0x40c00000, float:6.0)
                    int r9 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r8)
                    int r7 = r7 + r9
                    int r9 = im.bclpbkiauv.messenger.AndroidUtilities.roundMessageSize
                    int r9 = r9 + r5
                    int r8 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r8)
                    int r9 = r9 + r8
                    r6.setBounds(r4, r5, r7, r9)
                    android.graphics.drawable.Drawable r6 = im.bclpbkiauv.ui.actionbar.Theme.chat_roundVideoShadow
                    r6.draw(r11)
                L_0x009f:
                    boolean r4 = super.drawChild(r11, r12, r13)
                    goto L_0x015a
                L_0x00a5:
                    java.lang.Object r4 = r12.getTag()
                    if (r4 != 0) goto L_0x00c4
                    float r4 = r12.getTranslationY()
                    r5 = 1148846080(0x447a0000, float:1000.0)
                    int r5 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r5)
                    int r5 = -r5
                    float r5 = (float) r5
                    r12.setTranslationY(r5)
                    boolean r5 = super.drawChild(r11, r12, r13)
                    r12.setTranslationY(r4)
                    r4 = r5
                    goto L_0x015a
                L_0x00c4:
                    r4 = 0
                    goto L_0x015a
                L_0x00c7:
                    boolean r4 = super.drawChild(r11, r12, r13)
                    if (r3 == 0) goto L_0x015a
                    im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.RecyclerListView r6 = r6.chatListView
                    if (r12 != r6) goto L_0x015a
                    int r6 = r0.type
                    if (r6 == r5) goto L_0x015a
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.FrameLayout r5 = r5.videoPlayerContainer
                    if (r5 == 0) goto L_0x015a
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.FrameLayout r5 = r5.videoPlayerContainer
                    java.lang.Object r5 = r5.getTag()
                    if (r5 == 0) goto L_0x015a
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.FrameLayout r5 = r5.videoPlayerContainer
                    super.drawChild(r11, r5, r13)
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.cells.ChatMessageCell r5 = r5.drawLaterRoundProgressCell
                    if (r5 == 0) goto L_0x015a
                    r11.save()
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.cells.ChatMessageCell r5 = r5.drawLaterRoundProgressCell
                    float r5 = r5.getX()
                    im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.cells.ChatMessageCell r6 = r6.drawLaterRoundProgressCell
                    int r6 = r6.getTop()
                    float r6 = (float) r6
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.RecyclerListView r7 = r7.chatListView
                    float r7 = r7.getY()
                    float r6 = r6 + r7
                    r11.translate(r5, r6)
                    if (r2 == 0) goto L_0x0139
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.cells.ChatMessageCell r5 = r5.drawLaterRoundProgressCell
                    r5.drawRoundProgress(r11)
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.cells.ChatMessageCell r5 = r5.drawLaterRoundProgressCell
                    r5.drawOverlays(r11)
                    goto L_0x0157
                L_0x0139:
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.cells.ChatMessageCell r5 = r5.drawLaterRoundProgressCell
                    r5.drawOverlays(r11)
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.cells.ChatMessageCell r5 = r5.drawLaterRoundProgressCell
                    boolean r5 = r5.needDrawTime()
                    if (r5 == 0) goto L_0x0157
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.cells.ChatMessageCell r5 = r5.drawLaterRoundProgressCell
                    r5.drawTime(r11)
                L_0x0157:
                    r11.restore()
                L_0x015a:
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.actionbar.ActionBar r5 = r5.actionBar
                    if (r12 != r5) goto L_0x019a
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.actionbar.ActionBarLayout r5 = r5.parentLayout
                    if (r5 == 0) goto L_0x019a
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.actionbar.ActionBarLayout r5 = r5.parentLayout
                    im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.actionbar.ActionBar r6 = r6.actionBar
                    int r6 = r6.getVisibility()
                    if (r6 != 0) goto L_0x0197
                    im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.actionbar.ActionBar r6 = r6.actionBar
                    int r6 = r6.getMeasuredHeight()
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    boolean r7 = r7.inPreviewMode
                    if (r7 == 0) goto L_0x0196
                    int r7 = android.os.Build.VERSION.SDK_INT
                    r8 = 21
                    if (r7 < r8) goto L_0x0196
                    int r1 = im.bclpbkiauv.messenger.AndroidUtilities.statusBarHeight
                L_0x0196:
                    int r1 = r1 + r6
                L_0x0197:
                    r5.drawHeaderShadow(r11, r1)
                L_0x019a:
                    return r4
                */
                throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.AnonymousClass9.drawChild(android.graphics.Canvas, android.view.View, long):boolean");
            }

            /* access modifiers changed from: protected */
            public boolean isActionBarVisible() {
                return ChatActivity.this.actionBar.getVisibility() == 0;
            }

            private void drawChildElement(Canvas canvas, float listTop, ChatMessageCell cell, int type) {
                canvas.save();
                canvas.clipRect((float) ChatActivity.this.chatListView.getLeft(), listTop, (float) ChatActivity.this.chatListView.getRight(), ChatActivity.this.chatListView.getY() + ((float) ChatActivity.this.chatListView.getMeasuredHeight()));
                canvas.translate((float) (ChatActivity.this.chatListView.getLeft() + cell.getLeft()), ChatActivity.this.chatListView.getY() + ((float) cell.getTop()));
                if (type == 0) {
                    cell.drawTime(canvas);
                } else {
                    boolean z = true;
                    if (type == 1) {
                        cell.drawNamesLayout(canvas);
                    } else {
                        if ((cell.getCurrentPosition().flags & 1) != 0) {
                            z = false;
                        }
                        cell.drawCaptionLayout(canvas, z);
                    }
                }
                canvas.restore();
            }

            /* access modifiers changed from: protected */
            public void dispatchDraw(Canvas canvas) {
                MessageObject.GroupedMessages scrimGroup;
                MessageObject.GroupedMessagePosition position;
                MessageObject.GroupedMessages group;
                ChatMessageCell cell;
                MessageObject.GroupedMessages scrimGroup2;
                int chatListViewBottom;
                int chatListViewTop;
                float viewClipRight;
                float viewClipRight2;
                float viewClipTop;
                float viewClipBottom;
                Canvas canvas2 = canvas;
                super.dispatchDraw(canvas);
                if (ChatActivity.this.scrimView != null) {
                    canvas.drawRect(0.0f, 0.0f, (float) getMeasuredWidth(), (float) getMeasuredHeight(), ChatActivity.this.scrimPaint);
                    int chatListViewTop2 = (int) ChatActivity.this.chatListView.getY();
                    int chatListViewBottom2 = ChatActivity.this.chatListView.getMeasuredHeight() + chatListViewTop2;
                    int listTop = ((ChatActivity.this.chatListView.getTop() + ChatActivity.this.chatListView.getPaddingTop()) - AndroidUtilities.dp(4.0f)) + (ChatActivity.this.chatActivityEnterView.getMeasuredHeight() - AndroidUtilities.dp(51.0f));
                    if (ChatActivity.this.scrimView instanceof ChatMessageCell) {
                        scrimGroup = ((ChatMessageCell) ChatActivity.this.scrimView).getCurrentMessagesGroup();
                    } else {
                        scrimGroup = null;
                    }
                    int count = ChatActivity.this.chatListView.getChildCount();
                    int num = 0;
                    while (num < count) {
                        View child = ChatActivity.this.chatListView.getChildAt(num);
                        if (child instanceof ChatMessageCell) {
                            cell = (ChatMessageCell) child;
                            group = cell.getCurrentMessagesGroup();
                            position = cell.getCurrentPosition();
                        } else {
                            position = null;
                            group = null;
                            cell = null;
                        }
                        if (child != ChatActivity.this.scrimView) {
                            if (scrimGroup == null) {
                                chatListViewTop = chatListViewTop2;
                                chatListViewBottom = chatListViewBottom2;
                                scrimGroup2 = scrimGroup;
                            } else if (scrimGroup != group) {
                                chatListViewTop = chatListViewTop2;
                                chatListViewBottom = chatListViewBottom2;
                                scrimGroup2 = scrimGroup;
                            }
                            num++;
                            chatListViewTop2 = chatListViewTop;
                            chatListViewBottom2 = chatListViewBottom;
                            scrimGroup = scrimGroup2;
                        }
                        int clipLeft = 0;
                        int clipBottom = 0;
                        if (position != null) {
                            if (position.pw != position.spanSize && position.spanSize == 1000 && position.siblingHeights == null && group.hasSibling) {
                                clipLeft = cell.getBackgroundDrawableLeft();
                            } else if (position.siblingHeights != null) {
                                clipBottom = child.getBottom() - AndroidUtilities.dp((float) ((cell.isPinnedBottom() ? 1 : 0) + true));
                            }
                        }
                        if (clipLeft != 0) {
                            float x = ((float) (ChatActivity.this.chatListView.getLeft() + clipLeft)) + child.getTranslationX();
                            chatListViewTop = chatListViewTop2;
                            float viewClipLeft = Math.max((float) ChatActivity.this.chatListView.getLeft(), x);
                            float viewClipTop2 = Math.max((float) listTop, (float) (ChatActivity.this.chatListView.getTop() + child.getTop()));
                            chatListViewBottom = chatListViewBottom2;
                            float viewClipRight3 = Math.min((float) ChatActivity.this.chatListView.getRight(), ((float) child.getMeasuredWidth()) + x);
                            scrimGroup2 = scrimGroup;
                            viewClipTop = Math.min(ChatActivity.this.chatListView.getY() + ((float) ChatActivity.this.chatListView.getMeasuredHeight()), ChatActivity.this.chatListView.getY() + ((float) child.getTop()) + ((float) child.getMeasuredHeight()));
                            viewClipRight2 = viewClipLeft;
                            viewClipBottom = viewClipTop2;
                            viewClipRight = viewClipRight3;
                        } else {
                            chatListViewTop = chatListViewTop2;
                            chatListViewBottom = chatListViewBottom2;
                            scrimGroup2 = scrimGroup;
                            if (clipBottom != 0) {
                                float x2 = ((float) ChatActivity.this.chatListView.getLeft()) + child.getTranslationX();
                                float y = (float) (ChatActivity.this.chatListView.getTop() + child.getTop());
                                viewClipRight2 = Math.max((float) ChatActivity.this.chatListView.getLeft(), x2);
                                float viewClipTop3 = Math.max((float) listTop, y);
                                float f = y;
                                float f2 = x2;
                                float viewClipRight4 = Math.min((float) ChatActivity.this.chatListView.getRight(), ((float) child.getMeasuredWidth()) + x2);
                                viewClipTop = Math.min(ChatActivity.this.chatListView.getY() + ((float) ChatActivity.this.chatListView.getMeasuredHeight()), ChatActivity.this.chatListView.getY() + ((float) clipBottom));
                                viewClipBottom = viewClipTop3;
                                viewClipRight = viewClipRight4;
                            } else {
                                float viewClipLeft2 = Math.max((float) ChatActivity.this.chatListView.getLeft(), ((float) ChatActivity.this.chatListView.getLeft()) + child.getX());
                                float viewClipTop4 = Math.max((float) listTop, ((float) ChatActivity.this.chatListView.getTop()) + child.getY());
                                float viewClipRight5 = Math.min((float) ChatActivity.this.chatListView.getRight(), ((float) ChatActivity.this.chatListView.getLeft()) + child.getX() + ((float) child.getMeasuredWidth()));
                                float viewClipLeft3 = viewClipLeft2;
                                float min = Math.min(ChatActivity.this.chatListView.getY() + ((float) ChatActivity.this.chatListView.getMeasuredHeight()), ChatActivity.this.chatListView.getY() + child.getY() + ((float) child.getMeasuredHeight()));
                                viewClipRight = viewClipRight5;
                                viewClipRight2 = viewClipLeft3;
                                float f3 = viewClipTop4;
                                viewClipTop = min;
                                viewClipBottom = f3;
                            }
                        }
                        if (viewClipBottom < viewClipTop) {
                            canvas.save();
                            canvas2.clipRect(viewClipRight2, viewClipBottom, viewClipRight, viewClipTop);
                            float f4 = viewClipBottom;
                            float f5 = viewClipTop;
                            canvas2.translate((float) (ChatActivity.this.chatListView.getLeft() + child.getLeft()), ChatActivity.this.chatListView.getY() + ((float) child.getTop()));
                            child.draw(canvas2);
                            canvas.restore();
                        } else {
                            float viewClipTop5 = viewClipBottom;
                            float f6 = viewClipTop;
                        }
                        if (position != null) {
                            if (position.last || (position.minX == 0 && position.minY == 0)) {
                                if (position.last) {
                                    this.drawTimeAfter.add(cell);
                                }
                                if (position.minX == 0 && position.minY == 0 && cell.hasNameLayout()) {
                                    this.drawNamesAfter.add(cell);
                                }
                            }
                            if (cell.hasCaptionLayout() && (position.flags & 8) != 0) {
                                this.drawCaptionAfter.add(cell);
                            }
                        }
                        num++;
                        chatListViewTop2 = chatListViewTop;
                        chatListViewBottom2 = chatListViewBottom;
                        scrimGroup = scrimGroup2;
                    }
                    int i = chatListViewBottom2;
                    MessageObject.GroupedMessages groupedMessages = scrimGroup;
                    int size = this.drawTimeAfter.size();
                    if (size > 0) {
                        for (int a = 0; a < size; a++) {
                            drawChildElement(canvas2, (float) listTop, this.drawTimeAfter.get(a), 0);
                        }
                        this.drawTimeAfter.clear();
                    }
                    int size2 = this.drawNamesAfter.size();
                    if (size2 > 0) {
                        for (int a2 = 0; a2 < size2; a2++) {
                            drawChildElement(canvas2, (float) listTop, this.drawNamesAfter.get(a2), 1);
                        }
                        this.drawNamesAfter.clear();
                    }
                    int size3 = this.drawCaptionAfter.size();
                    if (size3 > 0) {
                        for (int a3 = 0; a3 < size3; a3++) {
                            ChatMessageCell cell2 = this.drawCaptionAfter.get(a3);
                            if (cell2.getCurrentPosition() != null) {
                                drawChildElement(canvas2, (float) listTop, cell2, 2);
                            }
                        }
                        this.drawCaptionAfter.clear();
                    }
                    if (!(ChatActivity.this.pagedownButton == null || ChatActivity.this.pagedownButton.getTag() == null)) {
                        super.drawChild(canvas2, ChatActivity.this.pagedownButton, SystemClock.uptimeMillis());
                    }
                    if (!(ChatActivity.this.mentiondownButton == null || ChatActivity.this.mentiondownButton.getTag() == null)) {
                        super.drawChild(canvas2, ChatActivity.this.mentiondownButton, SystemClock.uptimeMillis());
                    }
                    if (ChatActivity.this.floatingDateView != null && ChatActivity.this.floatingDateView.getTag() != null) {
                        super.drawChild(canvas2, ChatActivity.this.floatingDateView, SystemClock.uptimeMillis());
                    }
                }
            }

            /* access modifiers changed from: protected */
            public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                int listViewTopHeight;
                int i;
                View child;
                int height;
                boolean z;
                int maxHeight;
                int height2;
                int widthSize = View.MeasureSpec.getSize(widthMeasureSpec);
                int heightSize = View.MeasureSpec.getSize(heightMeasureSpec);
                int allHeight = heightSize;
                setMeasuredDimension(widthSize, heightSize);
                int heightSize2 = heightSize - getPaddingTop();
                measureChildWithMargins(ChatActivity.this.actionBar, widthMeasureSpec, 0, heightMeasureSpec, 0);
                int actionBarHeight = ChatActivity.this.actionBar.getMeasuredHeight();
                if (ChatActivity.this.actionBar.getVisibility() == 0) {
                    heightSize2 -= actionBarHeight;
                }
                if (getKeyboardHeight() > AndroidUtilities.dp(20.0f)) {
                    boolean unused = ChatActivity.this.globalIgnoreLayout = true;
                    ChatActivity.this.chatActivityEnterView.hideEmojiView();
                    boolean unused2 = ChatActivity.this.globalIgnoreLayout = false;
                } else if (!AndroidUtilities.isInMultiwindow) {
                    heightSize2 -= ChatActivity.this.chatActivityEnterView.getEmojiPadding();
                    allHeight -= ChatActivity.this.chatActivityEnterView.getEmojiPadding();
                }
                int childCount = getChildCount();
                measureChildWithMargins(ChatActivity.this.chatActivityEnterView, widthMeasureSpec, 0, heightMeasureSpec, 0);
                if (ChatActivity.this.isSysNotifyMessage().booleanValue()) {
                    this.inputFieldHeight = ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
                    listViewTopHeight = 0;
                } else if (ChatActivity.this.inPreviewMode) {
                    this.inputFieldHeight = 0;
                    listViewTopHeight = 0;
                } else {
                    this.inputFieldHeight = ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
                    listViewTopHeight = AndroidUtilities.dp(49.0f);
                }
                int i2 = 0;
                while (i2 < childCount) {
                    View child2 = getChildAt(i2);
                    if (child2 == null || child2.getVisibility() == 8 || child2 == ChatActivity.this.chatActivityEnterView) {
                        i = i2;
                    } else if (child2 == ChatActivity.this.actionBar) {
                        i = i2;
                    } else if (child2 == ChatActivity.this.chatListView) {
                        if (ChatActivity.this.chatActivityEnterView.getAlpha() != 1.0f) {
                            ChatActivity.this.chatListView.setTranslationY((float) (this.inputFieldHeight - AndroidUtilities.dp(51.0f)));
                        }
                        ChatActivity chatActivity = ChatActivity.this;
                        int unused3 = chatActivity.chatListViewClipTop = chatActivity.inPreviewMode ? 0 : this.inputFieldHeight - AndroidUtilities.dp(51.0f);
                        child2.measure(View.MeasureSpec.makeMeasureSpec(widthSize, 1073741824), View.MeasureSpec.makeMeasureSpec(Math.max(AndroidUtilities.dp(10.0f), (heightSize2 - listViewTopHeight) - ((!ChatActivity.this.inPreviewMode || Build.VERSION.SDK_INT < 21) ? 0 : AndroidUtilities.statusBarHeight)), 1073741824));
                        i = i2;
                    } else if (child2 == ChatActivity.this.progressView) {
                        child2.measure(View.MeasureSpec.makeMeasureSpec(widthSize, 1073741824), View.MeasureSpec.makeMeasureSpec(Math.max(AndroidUtilities.dp(10.0f), ((heightSize2 - this.inputFieldHeight) - ((!ChatActivity.this.inPreviewMode || Build.VERSION.SDK_INT < 21) ? 0 : AndroidUtilities.statusBarHeight)) + AndroidUtilities.dp((float) ((ChatActivity.this.chatActivityEnterView.isTopViewVisible() ? 48 : 0) + 2))), 1073741824));
                        i = i2;
                    } else {
                        if (child2 == ChatActivity.this.instantCameraView) {
                            child = child2;
                            i = i2;
                        } else if (child2 == ChatActivity.this.overlayView) {
                            child = child2;
                            i = i2;
                        } else if (child2 == ChatActivity.this.emptyViewContainer) {
                            child2.measure(View.MeasureSpec.makeMeasureSpec(widthSize, 1073741824), View.MeasureSpec.makeMeasureSpec(heightSize2, 1073741824));
                            i = i2;
                        } else if (ChatActivity.this.chatActivityEnterView.isPopupView(child2)) {
                            if (!AndroidUtilities.isInMultiwindow) {
                                int i3 = child2.getLayoutParams().height;
                                child2.measure(View.MeasureSpec.makeMeasureSpec(widthSize, 1073741824), View.MeasureSpec.makeMeasureSpec(child2.getLayoutParams().height, 1073741824));
                                i = i2;
                            } else if (AndroidUtilities.isTablet()) {
                                child2.measure(View.MeasureSpec.makeMeasureSpec(widthSize, 1073741824), View.MeasureSpec.makeMeasureSpec(Math.min(AndroidUtilities.dp(320.0f), (((heightSize2 - this.inputFieldHeight) + actionBarHeight) - AndroidUtilities.statusBarHeight) + getPaddingTop()), 1073741824));
                                i = i2;
                            } else {
                                child2.measure(View.MeasureSpec.makeMeasureSpec(widthSize, 1073741824), View.MeasureSpec.makeMeasureSpec((((heightSize2 - this.inputFieldHeight) + actionBarHeight) - AndroidUtilities.statusBarHeight) + getPaddingTop(), 1073741824));
                                i = i2;
                            }
                        } else if (child2 == ChatActivity.this.mentionContainer) {
                            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) ChatActivity.this.mentionContainer.getLayoutParams();
                            if (ChatActivity.this.mentionsAdapter.isBannedInline()) {
                                child2.measure(View.MeasureSpec.makeMeasureSpec(widthSize, 1073741824), View.MeasureSpec.makeMeasureSpec(heightSize2, Integer.MIN_VALUE));
                            } else {
                                boolean unused4 = ChatActivity.this.mentionListViewIgnoreLayout = true;
                                if (!ChatActivity.this.mentionsAdapter.isBotContext() || !ChatActivity.this.mentionsAdapter.isMediaLayout()) {
                                    int size = ChatActivity.this.mentionsAdapter.getItemCount();
                                    int maxHeight2 = 0;
                                    if (ChatActivity.this.mentionsAdapter.isBotContext()) {
                                        if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                                            maxHeight2 = 0 + 36;
                                            size--;
                                        }
                                        maxHeight = maxHeight2 + (size * 68);
                                    } else {
                                        maxHeight = 0 + (size * 36);
                                    }
                                    height = (maxHeight != 0 ? AndroidUtilities.dp(2.0f) : 0) + (heightSize2 - ChatActivity.this.chatActivityEnterView.getMeasuredHeight());
                                    int padding = Math.max(0, height - AndroidUtilities.dp(Math.min((float) maxHeight, 122.399994f)));
                                    if (ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                                        int i4 = size;
                                        z = false;
                                        ChatActivity.this.mentionListView.setPadding(0, 0, 0, padding);
                                    } else {
                                        z = false;
                                        ChatActivity.this.mentionListView.setPadding(0, padding, 0, 0);
                                    }
                                } else {
                                    int maxHeight3 = ChatActivity.this.mentionGridLayoutManager.getRowsCount(widthSize) * 102;
                                    if (ChatActivity.this.mentionsAdapter.isBotContext() && ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                                        maxHeight3 += 34;
                                    }
                                    int height3 = (heightSize2 - ChatActivity.this.chatActivityEnterView.getMeasuredHeight()) + (maxHeight3 != 0 ? AndroidUtilities.dp(2.0f) : 0);
                                    int padding2 = Math.max(0, height3 - AndroidUtilities.dp(Math.min((float) maxHeight3, 122.399994f)));
                                    if (ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                                        height2 = height3;
                                        ChatActivity.this.mentionListView.setPadding(0, 0, 0, padding2);
                                    } else {
                                        height2 = height3;
                                        ChatActivity.this.mentionListView.setPadding(0, padding2, 0, 0);
                                    }
                                    height = height2;
                                    z = false;
                                }
                                layoutParams.height = height;
                                layoutParams.topMargin = z ? 1 : 0;
                                boolean unused5 = ChatActivity.this.mentionListViewIgnoreLayout = z;
                                child2.measure(View.MeasureSpec.makeMeasureSpec(widthSize, 1073741824), View.MeasureSpec.makeMeasureSpec(layoutParams.height, 1073741824));
                            }
                            i = i2;
                        } else {
                            View view = child2;
                            i = i2;
                            measureChildWithMargins(child2, widthMeasureSpec, 0, heightMeasureSpec, 0);
                        }
                        child.measure(View.MeasureSpec.makeMeasureSpec(widthSize, 1073741824), View.MeasureSpec.makeMeasureSpec((allHeight - this.inputFieldHeight) + AndroidUtilities.dp(3.0f), 1073741824));
                    }
                    i2 = i + 1;
                }
                int i5 = i2;
                if (ChatActivity.this.fixPaddingsInLayout) {
                    boolean unused6 = ChatActivity.this.globalIgnoreLayout = true;
                    ChatActivity.this.checkListViewPaddingsInternal();
                    boolean unused7 = ChatActivity.this.fixPaddingsInLayout = false;
                    ChatActivity.this.chatListView.measure(View.MeasureSpec.makeMeasureSpec(ChatActivity.this.chatListView.getMeasuredWidth(), 1073741824), View.MeasureSpec.makeMeasureSpec(ChatActivity.this.chatListView.getMeasuredHeight(), 1073741824));
                    boolean unused8 = ChatActivity.this.globalIgnoreLayout = false;
                }
                if (ChatActivity.this.scrollToPositionOnRecreate != -1) {
                    AndroidUtilities.runOnUIThread(new Runnable(ChatActivity.this.scrollToPositionOnRecreate) {
                        private final /* synthetic */ int f$1;

                        {
                            this.f$1 = r2;
                        }

                        public final void run() {
                            ChatActivity.AnonymousClass9.this.lambda$onMeasure$0$ChatActivity$9(this.f$1);
                        }
                    });
                    int unused9 = ChatActivity.this.scrollToPositionOnRecreate = -1;
                }
            }

            public /* synthetic */ void lambda$onMeasure$0$ChatActivity$9(int scrollTo) {
                ChatActivity.this.chatLayoutManager.scrollToPositionWithOffset(scrollTo, ChatActivity.this.scrollToOffsetOnRecreate);
            }

            public void requestLayout() {
                if (!ChatActivity.this.globalIgnoreLayout) {
                    super.requestLayout();
                }
            }

            /* access modifiers changed from: protected */
            public void onLayout(boolean changed, int l, int t, int r, int b) {
                int childLeft;
                int childTop;
                int count = getChildCount();
                int paddingBottom = (getKeyboardHeight() > AndroidUtilities.dp(20.0f) || AndroidUtilities.isInMultiwindow) ? 0 : ChatActivity.this.chatActivityEnterView.getEmojiPadding();
                setBottomClip(paddingBottom);
                for (int i = 0; i < count; i++) {
                    View child = getChildAt(i);
                    if (!(child == null || child.getVisibility() == 8)) {
                        FrameLayout.LayoutParams lp = (FrameLayout.LayoutParams) child.getLayoutParams();
                        int width = child.getMeasuredWidth();
                        int height = child.getMeasuredHeight();
                        int gravity = lp.gravity;
                        if (gravity == -1) {
                            gravity = 51;
                        }
                        int verticalGravity = gravity & 112;
                        int i2 = gravity & 7 & 7;
                        if (i2 == 1) {
                            childLeft = ((((r - l) - width) / 2) + lp.leftMargin) - lp.rightMargin;
                        } else if (i2 != 5) {
                            childLeft = lp.leftMargin;
                        } else {
                            childLeft = (r - width) - lp.rightMargin;
                        }
                        if (verticalGravity == 16) {
                            childTop = (((((b - paddingBottom) - t) - height) / 2) + lp.topMargin) - lp.bottomMargin;
                        } else if (verticalGravity != 48) {
                            childTop = verticalGravity != 80 ? lp.topMargin : (((b - paddingBottom) - t) - height) - lp.bottomMargin;
                        } else {
                            childTop = lp.topMargin + getPaddingTop();
                            if (child != ChatActivity.this.actionBar && ChatActivity.this.actionBar.getVisibility() == 0) {
                                childTop += ChatActivity.this.actionBar.getMeasuredHeight();
                                if (ChatActivity.this.inPreviewMode && Build.VERSION.SDK_INT >= 21) {
                                    childTop += AndroidUtilities.statusBarHeight;
                                }
                            }
                        }
                        if (child == ChatActivity.this.mentionContainer) {
                            childTop -= ChatActivity.this.chatActivityEnterView.getMeasuredHeight() - AndroidUtilities.dp(2.0f);
                        } else if (child == ChatActivity.this.pagedownButton) {
                            if (!ChatActivity.this.inPreviewMode) {
                                childTop -= ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
                            }
                        } else if (child == ChatActivity.this.mentiondownButton) {
                            if (!ChatActivity.this.inPreviewMode) {
                                childTop -= ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
                            }
                        } else if (child == ChatActivity.this.emptyViewContainer) {
                            childTop -= (this.inputFieldHeight / 2) - (ChatActivity.this.actionBar.getVisibility() == 0 ? ChatActivity.this.actionBar.getMeasuredHeight() / 2 : 0);
                        } else if (ChatActivity.this.chatActivityEnterView.isPopupView(child)) {
                            if (AndroidUtilities.isInMultiwindow) {
                                childTop = (ChatActivity.this.chatActivityEnterView.getTop() - child.getMeasuredHeight()) + AndroidUtilities.dp(1.0f);
                            } else {
                                childTop = ChatActivity.this.chatActivityEnterView.getBottom();
                            }
                        } else if (child == ChatActivity.this.gifHintTextView || child == ChatActivity.this.voiceHintTextView || child == ChatActivity.this.mediaBanTooltip) {
                            childTop -= this.inputFieldHeight;
                        } else if (child == ChatActivity.this.chatListView) {
                            if (!ChatActivity.this.inPreviewMode) {
                                childTop -= this.inputFieldHeight - AndroidUtilities.dp(51.0f);
                            }
                        } else if (child == ChatActivity.this.progressView) {
                            if (ChatActivity.this.chatActivityEnterView.isTopViewVisible()) {
                                childTop -= AndroidUtilities.dp(48.0f);
                            }
                        } else if (child == ChatActivity.this.actionBar) {
                            if (ChatActivity.this.inPreviewMode && Build.VERSION.SDK_INT >= 21) {
                                childTop += AndroidUtilities.statusBarHeight;
                            }
                            childTop -= getPaddingTop();
                        } else if (child == ChatActivity.this.videoPlayerContainer) {
                            childTop = ChatActivity.this.actionBar.getMeasuredHeight();
                        } else if (child == ChatActivity.this.instantCameraView || child == ChatActivity.this.overlayView) {
                            childTop = 0;
                        }
                        child.layout(childLeft, childTop, childLeft + width, childTop + height);
                    }
                }
                ChatActivity.this.updateMessagesVisiblePart(true);
                ChatActivity.this.updateTextureViewPosition(false);
                if (!ChatActivity.this.scrollingChatListView) {
                    ChatActivity.this.checkAutoDownloadMessages(false);
                }
                notifyHeightChanged();
            }
        };
        SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) this.fragmentView;
        this.contentView = sizeNotifierFrameLayout;
        sizeNotifierFrameLayout.setBackgroundImage(Theme.getCachedWallpaper(), Theme.isWallpaperMotion());
        FrameLayout frameLayout = new FrameLayout(context2);
        this.emptyViewContainer = frameLayout;
        frameLayout.setVisibility(4);
        this.contentView.addView(this.emptyViewContainer, LayoutHelper.createFrame(-1, -2, 17));
        this.emptyViewContainer.setOnTouchListener($$Lambda$ChatActivity$RADIap1_yAoYNWf3Xbx6vV54aFo.INSTANCE);
        if (this.currentEncryptedChat != null) {
            this.bigEmptyView = new ChatBigEmptyView(context2, 0);
            if (this.currentEncryptedChat.admin_id == getUserConfig().getClientUserId()) {
                this.bigEmptyView.setStatusText(LocaleController.formatString("EncryptedPlaceholderTitleOutgoing", R.string.EncryptedPlaceholderTitleOutgoing, UserObject.getFirstName(this.currentUser)));
            } else {
                this.bigEmptyView.setStatusText(LocaleController.formatString("EncryptedPlaceholderTitleIncoming", R.string.EncryptedPlaceholderTitleIncoming, UserObject.getFirstName(this.currentUser)));
            }
            this.emptyViewContainer.addView(this.bigEmptyView, new FrameLayout.LayoutParams(-2, -2, 17));
        } else if (this.inScheduleMode || (((user = this.currentUser) == null || !user.self) && ((chat2 = this.currentChat) == null || !chat2.creator))) {
            TextView textView = new TextView(context2);
            this.emptyView = textView;
            if (this.inScheduleMode) {
                textView.setText(LocaleController.getString("NoScheduledMessages", R.string.NoScheduledMessages));
            } else {
                TLRPC.User user6 = this.currentUser;
                if (user6 == null || user6.id == 777000 || this.currentUser.id == 429000 || this.currentUser.id == 4244000 || !MessagesController.isSupportUser(this.currentUser)) {
                    this.emptyView.setText(LocaleController.getString("NoMessages", R.string.NoMessages));
                } else {
                    this.emptyView.setText(LocaleController.getString("GotAQuestion", R.string.GotAQuestion));
                }
            }
            this.emptyView.setTextSize(1, 14.0f);
            this.emptyView.setGravity(17);
            this.emptyView.setTextColor(Theme.getColor(Theme.key_chat_serviceText));
            this.emptyView.setBackgroundResource(R.drawable.system);
            this.emptyView.getBackground().setColorFilter(Theme.colorFilter);
            this.emptyView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            this.emptyView.setPadding(AndroidUtilities.dp(10.0f), AndroidUtilities.dp(2.0f), AndroidUtilities.dp(10.0f), AndroidUtilities.dp(3.0f));
            this.emptyViewContainer.addView(this.emptyView, new FrameLayout.LayoutParams(-2, -2, 17));
        } else {
            ChatBigEmptyView chatBigEmptyView = new ChatBigEmptyView(context2, this.currentChat != null ? 1 : 2);
            this.bigEmptyView = chatBigEmptyView;
            this.emptyViewContainer.addView(chatBigEmptyView, new FrameLayout.LayoutParams(-2, -2, 17));
            if (this.currentChat != null) {
                this.bigEmptyView.setStatusText(AndroidUtilities.replaceTags(LocaleController.getString("GroupEmptyTitle1", R.string.GroupEmptyTitle1)));
            }
        }
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.onDestroy();
            if (!this.chatActivityEnterView.isEditingMessage()) {
                oldMessage = this.chatActivityEnterView.getFieldText();
            } else {
                oldMessage = null;
            }
        } else {
            oldMessage = null;
        }
        MentionsAdapter mentionsAdapter2 = this.mentionsAdapter;
        if (mentionsAdapter2 != null) {
            mentionsAdapter2.onDestroy();
        }
        this.chatListView = new RecyclerListView(context2) {
            ArrayList<ChatMessageCell> drawCaptionAfter = new ArrayList<>();
            ArrayList<ChatMessageCell> drawNamesAfter = new ArrayList<>();
            ArrayList<ChatMessageCell> drawTimeAfter = new ArrayList<>();
            private float endedTrackingX;
            private long lastReplyButtonAnimationTime;
            private long lastTrackingAnimationTime;
            private int lastWidth;
            private boolean maybeStartTracking;
            private float replyButtonProgress;
            private boolean slideAnimationInProgress;
            private ChatMessageCell slidingView;
            private boolean startedTracking;
            private int startedTrackingPointerId;
            private int startedTrackingX;
            private int startedTrackingY;
            private float trackAnimationProgress;
            private boolean wasTrackingVibrate;

            /* access modifiers changed from: protected */
            public void onLayout(boolean changed, int l, int t, int r, int b) {
                super.onLayout(changed, l, t, r, b);
                if (this.lastWidth != r - l) {
                    this.lastWidth = r - l;
                    if (ChatActivity.this.noSoundHintView != null) {
                        ChatActivity.this.noSoundHintView.hide();
                    }
                    if (ChatActivity.this.forwardHintView != null) {
                        ChatActivity.this.forwardHintView.hide();
                    }
                    if (ChatActivity.this.slowModeHint != null) {
                        ChatActivity.this.slowModeHint.hide();
                    }
                }
                boolean unused = ChatActivity.this.forceScrollToTop = false;
                if (ChatActivity.this.chatAdapter.isBot) {
                    int childCount = getChildCount();
                    for (int a = 0; a < childCount; a++) {
                        View child = getChildAt(a);
                        if (child instanceof BotHelpCell) {
                            int top = ((b - t) / 2) - (child.getMeasuredHeight() / 2);
                            if (child.getTop() > top) {
                                child.layout(0, top, r - l, child.getMeasuredHeight() + top);
                                return;
                            }
                            return;
                        }
                    }
                }
            }

            private void setGroupTranslationX(ChatMessageCell view, float dx) {
                MessageObject.GroupedMessages group = view.getCurrentMessagesGroup();
                if (group != null) {
                    int count = getChildCount();
                    for (int a = 0; a < count; a++) {
                        View child = getChildAt(a);
                        if (child != this && (child instanceof ChatMessageCell)) {
                            ChatMessageCell cell = (ChatMessageCell) child;
                            if (cell.getCurrentMessagesGroup() == group) {
                                cell.setTranslationX(dx);
                                cell.invalidate();
                            }
                        }
                    }
                    invalidate();
                }
            }

            public boolean requestChildRectangleOnScreen(View child, Rect rect, boolean immediate) {
                if (ChatActivity.this.scrimPopupWindow != null) {
                    return false;
                }
                return super.requestChildRectangleOnScreen(child, rect, immediate);
            }

            public boolean onInterceptTouchEvent(MotionEvent e) {
                boolean result = super.onInterceptTouchEvent(e);
                if (ChatActivity.this.actionBar.isActionModeShowed()) {
                    return result;
                }
                processTouchEvent(e);
                return result;
            }

            private void drawReplyButton(Canvas canvas) {
                float scale;
                int alpha;
                Canvas canvas2 = canvas;
                ChatMessageCell chatMessageCell = this.slidingView;
                if (chatMessageCell != null) {
                    float translationX = chatMessageCell.getTranslationX();
                    long newTime = System.currentTimeMillis();
                    long dt = Math.min(17, newTime - this.lastReplyButtonAnimationTime);
                    this.lastReplyButtonAnimationTime = newTime;
                    boolean z = translationX <= ((float) (-AndroidUtilities.dp(50.0f)));
                    boolean showing = z;
                    if (z) {
                        float f = this.replyButtonProgress;
                        if (f < 1.0f) {
                            float f2 = f + (((float) dt) / 180.0f);
                            this.replyButtonProgress = f2;
                            if (f2 > 1.0f) {
                                this.replyButtonProgress = 1.0f;
                            } else {
                                invalidate();
                            }
                        }
                    } else {
                        float f3 = this.replyButtonProgress;
                        if (f3 > 0.0f) {
                            float f4 = f3 - (((float) dt) / 180.0f);
                            this.replyButtonProgress = f4;
                            if (f4 < 0.0f) {
                                this.replyButtonProgress = 0.0f;
                            } else {
                                invalidate();
                            }
                        }
                    }
                    if (showing) {
                        float scale2 = this.replyButtonProgress;
                        if (scale2 <= 0.8f) {
                            scale = (scale2 / 0.8f) * 1.2f;
                        } else {
                            scale = 1.2f - (((scale2 - 0.8f) / 0.2f) * 0.2f);
                        }
                        alpha = (int) Math.min(255.0f, (this.replyButtonProgress / 0.8f) * 255.0f);
                    } else {
                        scale = this.replyButtonProgress;
                        alpha = (int) Math.min(255.0f, this.replyButtonProgress * 255.0f);
                    }
                    Theme.chat_shareDrawable.setAlpha(alpha);
                    Theme.chat_replyIconDrawable.setAlpha(alpha);
                    float x = ((float) getMeasuredWidth()) + (this.slidingView.getTranslationX() / 2.0f);
                    float y = (float) (this.slidingView.getTop() + (this.slidingView.getMeasuredHeight() / 2));
                    if (!Theme.isCustomTheme() || Theme.hasThemeKey(Theme.key_chat_shareBackground)) {
                        Theme.chat_shareDrawable.setColorFilter(Theme.getShareColorFilter(Theme.getColor(Theme.key_chat_shareBackground), false));
                    } else {
                        Theme.chat_shareDrawable.setColorFilter(Theme.colorFilter2);
                    }
                    Theme.chat_shareDrawable.setBounds((int) (x - (((float) AndroidUtilities.dp(14.0f)) * scale)), (int) (y - (((float) AndroidUtilities.dp(14.0f)) * scale)), (int) ((((float) AndroidUtilities.dp(14.0f)) * scale) + x), (int) ((((float) AndroidUtilities.dp(14.0f)) * scale) + y));
                    Theme.chat_shareDrawable.draw(canvas2);
                    Theme.chat_replyIconDrawable.setBounds((int) (x - (((float) AndroidUtilities.dp(7.0f)) * scale)), (int) (y - (((float) AndroidUtilities.dp(6.0f)) * scale)), (int) ((((float) AndroidUtilities.dp(7.0f)) * scale) + x), (int) ((((float) AndroidUtilities.dp(5.0f)) * scale) + y));
                    Theme.chat_replyIconDrawable.draw(canvas2);
                    Theme.chat_shareDrawable.setAlpha(255);
                    Theme.chat_replyIconDrawable.setAlpha(255);
                }
            }

            private void processTouchEvent(MotionEvent e) {
                MotionEvent motionEvent = e;
                boolean unused = ChatActivity.this.wasManualScroll = true;
                if (e.getAction() == 0 && !this.startedTracking && !this.maybeStartTracking) {
                    View view = getPressedChildView();
                    if (view instanceof ChatMessageCell) {
                        ChatMessageCell chatMessageCell = (ChatMessageCell) view;
                        this.slidingView = chatMessageCell;
                        MessageObject message = chatMessageCell.getMessageObject();
                        if (ChatActivity.this.inScheduleMode || ((ChatActivity.this.currentEncryptedChat != null && AndroidUtilities.getPeerLayerVersion(ChatActivity.this.currentEncryptedChat.layer) < 46) || ((ChatActivity.this.getMessageType(message) == 1 && (message.getDialogId() == ChatActivity.this.mergeDialogId || message.needDrawBluredPreview())) || ((ChatActivity.this.currentEncryptedChat == null && message.getId() < 0) || message.type == 101 || message.type == 102 || message.type == 105 || ((ChatActivity.this.bottomOverlayChat != null && ChatActivity.this.bottomOverlayChat.getVisibility() == 0) || (ChatActivity.this.currentChat != null && (ChatObject.isNotInChat(ChatActivity.this.currentChat) || ((ChatObject.isChannel(ChatActivity.this.currentChat) && !ChatObject.canPost(ChatActivity.this.currentChat) && !ChatActivity.this.currentChat.megagroup) || !ChatObject.canSendMessages(ChatActivity.this.currentChat))))))))) {
                            this.slidingView = null;
                            return;
                        }
                        this.startedTrackingPointerId = motionEvent.getPointerId(0);
                        this.maybeStartTracking = true;
                        this.startedTrackingX = (int) e.getX();
                        this.startedTrackingY = (int) e.getY();
                    }
                } else if (this.slidingView != null && e.getAction() == 2 && motionEvent.getPointerId(0) == this.startedTrackingPointerId) {
                    int dx = Math.max(AndroidUtilities.dp(-80.0f), Math.min(0, (int) (e.getX() - ((float) this.startedTrackingX))));
                    int dy = Math.abs(((int) e.getY()) - this.startedTrackingY);
                    if (getScrollState() == 0 && this.maybeStartTracking && !this.startedTracking && ((float) dx) <= (-AndroidUtilities.getPixelsInCM(0.4f, true)) && Math.abs(dx) / 3 > dy) {
                        MotionEvent event = MotionEvent.obtain(0, 0, 3, 0.0f, 0.0f, 0);
                        this.slidingView.onTouchEvent(event);
                        super.onInterceptTouchEvent(event);
                        event.recycle();
                        ChatActivity.this.chatLayoutManager.setCanScrollVertically(false);
                        this.maybeStartTracking = false;
                        this.startedTracking = true;
                        this.startedTrackingX = (int) e.getX();
                        if (getParent() != null) {
                            getParent().requestDisallowInterceptTouchEvent(true);
                        }
                    } else if (this.startedTracking) {
                        if (Math.abs(dx) < AndroidUtilities.dp(50.0f)) {
                            this.wasTrackingVibrate = false;
                        } else if (!this.wasTrackingVibrate) {
                            try {
                                performHapticFeedback(3, 2);
                            } catch (Exception e2) {
                            }
                            this.wasTrackingVibrate = true;
                        }
                        this.slidingView.setTranslationX((float) dx);
                        MessageObject messageObject = this.slidingView.getMessageObject();
                        if (messageObject.isRoundVideo() || messageObject.isVideo()) {
                            ChatActivity.this.updateTextureViewPosition(false);
                        }
                        setGroupTranslationX(this.slidingView, (float) dx);
                        invalidate();
                    }
                } else if (this.slidingView != null && motionEvent.getPointerId(0) == this.startedTrackingPointerId) {
                    if (e.getAction() == 3 || e.getAction() == 1 || e.getAction() == 6) {
                        if (Math.abs(this.slidingView.getTranslationX()) >= ((float) AndroidUtilities.dp(50.0f))) {
                            ChatActivity.this.showFieldPanelForReply(this.slidingView.getMessageObject());
                        }
                        this.endedTrackingX = this.slidingView.getTranslationX();
                        this.lastTrackingAnimationTime = System.currentTimeMillis();
                        this.trackAnimationProgress = 0.0f;
                        invalidate();
                        this.maybeStartTracking = false;
                        this.startedTracking = false;
                        ChatActivity.this.chatLayoutManager.setCanScrollVertically(true);
                    }
                }
            }

            public boolean onTouchEvent(MotionEvent e) {
                boolean result = super.onTouchEvent(e);
                if (ChatActivity.this.actionBar.isActionModeShowed()) {
                    return result;
                }
                processTouchEvent(e);
                return this.startedTracking || result;
            }

            public void requestDisallowInterceptTouchEvent(boolean disallowIntercept) {
                super.requestDisallowInterceptTouchEvent(disallowIntercept);
                ChatMessageCell chatMessageCell = this.slidingView;
                if (chatMessageCell != null) {
                    this.endedTrackingX = chatMessageCell.getTranslationX();
                    this.lastTrackingAnimationTime = System.currentTimeMillis();
                    this.trackAnimationProgress = 0.0f;
                    invalidate();
                    this.maybeStartTracking = false;
                    this.startedTracking = false;
                    ChatActivity.this.chatLayoutManager.setCanScrollVertically(true);
                }
            }

            /* access modifiers changed from: protected */
            public void onChildPressed(View child, boolean pressed) {
                MessageObject.GroupedMessages groupedMessages;
                super.onChildPressed(child, pressed);
                if ((child instanceof ChatMessageCell) && (groupedMessages = ((ChatMessageCell) child).getCurrentMessagesGroup()) != null) {
                    int count = getChildCount();
                    for (int a = 0; a < count; a++) {
                        View item = getChildAt(a);
                        if (item != child && (item instanceof ChatMessageCell)) {
                            ChatMessageCell cell = (ChatMessageCell) item;
                            if (((ChatMessageCell) item).getCurrentMessagesGroup() == groupedMessages) {
                                cell.setPressed(pressed);
                            }
                        }
                    }
                }
            }

            public void onDraw(Canvas c) {
                super.onDraw(c);
                ChatMessageCell chatMessageCell = this.slidingView;
                if (chatMessageCell != null) {
                    float translationX = chatMessageCell.getTranslationX();
                    if (!this.maybeStartTracking && !this.startedTracking && this.endedTrackingX != 0.0f && translationX != 0.0f) {
                        long newTime = System.currentTimeMillis();
                        float f = this.trackAnimationProgress + (((float) (newTime - this.lastTrackingAnimationTime)) / 180.0f);
                        this.trackAnimationProgress = f;
                        if (f > 1.0f) {
                            this.trackAnimationProgress = 1.0f;
                        }
                        this.lastTrackingAnimationTime = newTime;
                        float translationX2 = this.endedTrackingX * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(this.trackAnimationProgress));
                        if (translationX2 == 0.0f) {
                            this.endedTrackingX = 0.0f;
                        }
                        setGroupTranslationX(this.slidingView, translationX2);
                        this.slidingView.setTranslationX(translationX2);
                        MessageObject messageObject = this.slidingView.getMessageObject();
                        if (messageObject.isRoundVideo() || messageObject.isVideo()) {
                            ChatActivity.this.updateTextureViewPosition(false);
                        }
                        invalidate();
                    }
                    drawReplyButton(c);
                }
            }

            /* access modifiers changed from: protected */
            public void dispatchDraw(Canvas canvas) {
                ChatMessageCell unused = ChatActivity.this.drawLaterRoundProgressCell = null;
                int count = getChildCount();
                for (int a = 0; a < count; a++) {
                    View child = getChildAt(a);
                    if (child instanceof ChatMessageCell) {
                        ChatMessageCell cell = (ChatMessageCell) child;
                        MessageObject.GroupedMessagePosition position = cell.getCurrentPosition();
                        if (cell.isDrawingSelectionBackground() && (position == null || (position.flags & 2) != 0)) {
                            int alpha = Color.alpha(Theme.getColor(Theme.key_chat_selectedBackground));
                            Theme.chat_replyLinePaint.setColor(Theme.getColor(Theme.key_chat_selectedBackground));
                            Theme.chat_replyLinePaint.setAlpha((int) (((float) alpha) * cell.getHightlightAlpha()));
                            canvas.drawRect(0.0f, (float) cell.getTop(), (float) getMeasuredWidth(), (float) cell.getBottom(), Theme.chat_replyLinePaint);
                        }
                    }
                }
                super.dispatchDraw(canvas);
            }

            /* JADX WARNING: type inference failed for: r6v10, types: [android.view.View] */
            /* JADX WARNING: Multi-variable type inference failed */
            /* JADX WARNING: Removed duplicated region for block: B:146:0x02cf  */
            /* JADX WARNING: Removed duplicated region for block: B:191:0x03fe  */
            /* JADX WARNING: Removed duplicated region for block: B:194:0x0409  */
            /* JADX WARNING: Removed duplicated region for block: B:197:0x0424  */
            /* JADX WARNING: Removed duplicated region for block: B:198:0x0428  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public boolean drawChild(android.graphics.Canvas r31, android.view.View r32, long r33) {
                /*
                    r30 = this;
                    r0 = r30
                    r1 = r31
                    r2 = r32
                    r3 = 0
                    r4 = 0
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    android.view.View r5 = r5.scrimView
                    r7 = 1
                    if (r2 != r5) goto L_0x0013
                    r5 = 1
                    goto L_0x0014
                L_0x0013:
                    r5 = 0
                L_0x0014:
                    boolean r8 = r2 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
                    if (r8 == 0) goto L_0x007f
                    r8 = r2
                    im.bclpbkiauv.ui.cells.ChatMessageCell r8 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r8
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition r9 = r8.getCurrentPosition()
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessages r10 = r8.getCurrentMessagesGroup()
                    if (r9 == 0) goto L_0x0052
                    int r11 = r9.pw
                    int r12 = r9.spanSize
                    if (r11 == r12) goto L_0x003e
                    int r11 = r9.spanSize
                    r12 = 1000(0x3e8, float:1.401E-42)
                    if (r11 != r12) goto L_0x003e
                    float[] r11 = r9.siblingHeights
                    if (r11 != 0) goto L_0x003e
                    boolean r11 = r10.hasSibling
                    if (r11 == 0) goto L_0x003e
                    int r3 = r8.getBackgroundDrawableLeft()
                    goto L_0x0052
                L_0x003e:
                    float[] r11 = r9.siblingHeights
                    if (r11 == 0) goto L_0x0052
                    int r11 = r32.getBottom()
                    boolean r12 = r8.isPinnedBottom()
                    int r12 = r12 + r7
                    float r12 = (float) r12
                    int r12 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r12)
                    int r11 = r11 - r12
                    r4 = r11
                L_0x0052:
                    boolean r11 = r8.needDelayRoundProgressDraw()
                    if (r11 == 0) goto L_0x005d
                    im.bclpbkiauv.ui.ChatActivity r11 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.cells.ChatMessageCell unused = r11.drawLaterRoundProgressCell = r8
                L_0x005d:
                    if (r5 != 0) goto L_0x007e
                    im.bclpbkiauv.ui.ChatActivity r11 = im.bclpbkiauv.ui.ChatActivity.this
                    android.view.View r11 = r11.scrimView
                    boolean r11 = r11 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
                    if (r11 == 0) goto L_0x007e
                    im.bclpbkiauv.ui.ChatActivity r11 = im.bclpbkiauv.ui.ChatActivity.this
                    android.view.View r11 = r11.scrimView
                    im.bclpbkiauv.ui.cells.ChatMessageCell r11 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r11
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessages r12 = r11.getCurrentMessagesGroup()
                    if (r12 == 0) goto L_0x007e
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessages r12 = r11.getCurrentMessagesGroup()
                    if (r12 != r10) goto L_0x007e
                    r5 = 1
                L_0x007e:
                    goto L_0x0080
                L_0x007f:
                    r8 = 0
                L_0x0080:
                    if (r3 == 0) goto L_0x0086
                    r31.save()
                    goto L_0x008b
                L_0x0086:
                    if (r4 == 0) goto L_0x008b
                    r31.save()
                L_0x008b:
                    if (r5 != 0) goto L_0x0092
                    boolean r9 = super.drawChild(r31, r32, r33)
                    goto L_0x0093
                L_0x0092:
                    r9 = 0
                L_0x0093:
                    if (r3 != 0) goto L_0x0097
                    if (r4 == 0) goto L_0x009a
                L_0x0097:
                    r31.restore()
                L_0x009a:
                    if (r8 == 0) goto L_0x009f
                    r8.drawCheckBox(r1)
                L_0x009f:
                    r10 = 0
                    int r11 = r30.getChildCount()
                    r12 = 0
                L_0x00a5:
                    if (r12 >= r11) goto L_0x00b2
                    android.view.View r13 = r0.getChildAt(r12)
                    if (r13 != r2) goto L_0x00af
                    r10 = r12
                    goto L_0x00b2
                L_0x00af:
                    int r12 = r12 + 1
                    goto L_0x00a5
                L_0x00b2:
                    int r12 = r11 + -1
                    if (r10 != r12) goto L_0x016e
                    java.util.ArrayList<im.bclpbkiauv.ui.cells.ChatMessageCell> r12 = r0.drawTimeAfter
                    int r12 = r12.size()
                    if (r12 <= 0) goto L_0x00ed
                    r13 = 0
                L_0x00bf:
                    if (r13 >= r12) goto L_0x00e8
                    java.util.ArrayList<im.bclpbkiauv.ui.cells.ChatMessageCell> r14 = r0.drawTimeAfter
                    java.lang.Object r14 = r14.get(r13)
                    r8 = r14
                    im.bclpbkiauv.ui.cells.ChatMessageCell r8 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r8
                    r31.save()
                    int r14 = r8.getLeft()
                    float r14 = (float) r14
                    float r15 = r8.getTranslationX()
                    float r14 = r14 + r15
                    int r15 = r8.getTop()
                    float r15 = (float) r15
                    r1.translate(r14, r15)
                    r8.drawTime(r1)
                    r31.restore()
                    int r13 = r13 + 1
                    goto L_0x00bf
                L_0x00e8:
                    java.util.ArrayList<im.bclpbkiauv.ui.cells.ChatMessageCell> r13 = r0.drawTimeAfter
                    r13.clear()
                L_0x00ed:
                    java.util.ArrayList<im.bclpbkiauv.ui.cells.ChatMessageCell> r13 = r0.drawNamesAfter
                    int r12 = r13.size()
                    if (r12 <= 0) goto L_0x0124
                    r13 = 0
                L_0x00f6:
                    if (r13 >= r12) goto L_0x011f
                    java.util.ArrayList<im.bclpbkiauv.ui.cells.ChatMessageCell> r14 = r0.drawNamesAfter
                    java.lang.Object r14 = r14.get(r13)
                    r8 = r14
                    im.bclpbkiauv.ui.cells.ChatMessageCell r8 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r8
                    r31.save()
                    int r14 = r8.getLeft()
                    float r14 = (float) r14
                    float r15 = r8.getTranslationX()
                    float r14 = r14 + r15
                    int r15 = r8.getTop()
                    float r15 = (float) r15
                    r1.translate(r14, r15)
                    r8.drawNamesLayout(r1)
                    r31.restore()
                    int r13 = r13 + 1
                    goto L_0x00f6
                L_0x011f:
                    java.util.ArrayList<im.bclpbkiauv.ui.cells.ChatMessageCell> r13 = r0.drawNamesAfter
                    r13.clear()
                L_0x0124:
                    java.util.ArrayList<im.bclpbkiauv.ui.cells.ChatMessageCell> r13 = r0.drawCaptionAfter
                    int r12 = r13.size()
                    if (r12 <= 0) goto L_0x016e
                    r13 = 0
                L_0x012d:
                    if (r13 >= r12) goto L_0x0169
                    java.util.ArrayList<im.bclpbkiauv.ui.cells.ChatMessageCell> r14 = r0.drawCaptionAfter
                    java.lang.Object r14 = r14.get(r13)
                    r8 = r14
                    im.bclpbkiauv.ui.cells.ChatMessageCell r8 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r8
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition r14 = r8.getCurrentPosition()
                    if (r14 != 0) goto L_0x013f
                    goto L_0x0166
                L_0x013f:
                    r31.save()
                    int r14 = r8.getLeft()
                    float r14 = (float) r14
                    float r15 = r8.getTranslationX()
                    float r14 = r14 + r15
                    int r15 = r8.getTop()
                    float r15 = (float) r15
                    r1.translate(r14, r15)
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition r14 = r8.getCurrentPosition()
                    int r14 = r14.flags
                    r14 = r14 & r7
                    if (r14 != 0) goto L_0x015f
                    r14 = 1
                    goto L_0x0160
                L_0x015f:
                    r14 = 0
                L_0x0160:
                    r8.drawCaptionLayout(r1, r14)
                    r31.restore()
                L_0x0166:
                    int r13 = r13 + 1
                    goto L_0x012d
                L_0x0169:
                    java.util.ArrayList<im.bclpbkiauv.ui.cells.ChatMessageCell> r13 = r0.drawCaptionAfter
                    r13.clear()
                L_0x016e:
                    boolean r12 = r2 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
                    if (r12 == 0) goto L_0x042d
                    r12 = r2
                    im.bclpbkiauv.ui.cells.ChatMessageCell r12 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r12
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition r13 = r12.getCurrentPosition()
                    if (r13 == 0) goto L_0x0217
                    boolean r14 = r13.last
                    if (r14 != 0) goto L_0x0187
                    byte r14 = r13.minX
                    if (r14 != 0) goto L_0x01d2
                    byte r14 = r13.minY
                    if (r14 != 0) goto L_0x01d2
                L_0x0187:
                    int r14 = r11 + -1
                    if (r10 != r14) goto L_0x01b6
                    r31.save()
                    int r14 = r12.getLeft()
                    float r14 = (float) r14
                    float r15 = r12.getTranslationX()
                    float r14 = r14 + r15
                    int r15 = r12.getTop()
                    float r15 = (float) r15
                    r1.translate(r14, r15)
                    boolean r14 = r13.last
                    if (r14 == 0) goto L_0x01a7
                    r12.drawTime(r1)
                L_0x01a7:
                    byte r14 = r13.minX
                    if (r14 != 0) goto L_0x01b2
                    byte r14 = r13.minY
                    if (r14 != 0) goto L_0x01b2
                    r12.drawNamesLayout(r1)
                L_0x01b2:
                    r31.restore()
                    goto L_0x01d2
                L_0x01b6:
                    boolean r14 = r13.last
                    if (r14 == 0) goto L_0x01bf
                    java.util.ArrayList<im.bclpbkiauv.ui.cells.ChatMessageCell> r14 = r0.drawTimeAfter
                    r14.add(r12)
                L_0x01bf:
                    byte r14 = r13.minX
                    if (r14 != 0) goto L_0x01d2
                    byte r14 = r13.minY
                    if (r14 != 0) goto L_0x01d2
                    boolean r14 = r12.hasNameLayout()
                    if (r14 == 0) goto L_0x01d2
                    java.util.ArrayList<im.bclpbkiauv.ui.cells.ChatMessageCell> r14 = r0.drawNamesAfter
                    r14.add(r12)
                L_0x01d2:
                    int r14 = r11 + -1
                    if (r10 != r14) goto L_0x0206
                    r31.save()
                    int r14 = r12.getLeft()
                    float r14 = (float) r14
                    float r15 = r12.getTranslationX()
                    float r14 = r14 + r15
                    int r15 = r12.getTop()
                    float r15 = (float) r15
                    r1.translate(r14, r15)
                    boolean r14 = r12.hasCaptionLayout()
                    if (r14 == 0) goto L_0x0202
                    int r14 = r13.flags
                    r14 = r14 & 8
                    if (r14 == 0) goto L_0x0202
                    int r14 = r13.flags
                    r14 = r14 & r7
                    if (r14 != 0) goto L_0x01fe
                    r14 = 1
                    goto L_0x01ff
                L_0x01fe:
                    r14 = 0
                L_0x01ff:
                    r12.drawCaptionLayout(r1, r14)
                L_0x0202:
                    r31.restore()
                    goto L_0x0217
                L_0x0206:
                    boolean r14 = r12.hasCaptionLayout()
                    if (r14 == 0) goto L_0x0217
                    int r14 = r13.flags
                    r14 = r14 & 8
                    if (r14 == 0) goto L_0x0217
                    java.util.ArrayList<im.bclpbkiauv.ui.cells.ChatMessageCell> r14 = r0.drawCaptionAfter
                    r14.add(r12)
                L_0x0217:
                    im.bclpbkiauv.messenger.MessageObject r14 = r12.getMessageObject()
                    im.bclpbkiauv.ui.ChatActivity r15 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.FrameLayout r15 = r15.videoPlayerContainer
                    if (r15 == 0) goto L_0x02c7
                    boolean r15 = r14.isRoundVideo()
                    if (r15 != 0) goto L_0x0234
                    boolean r15 = r14.isVideo()
                    if (r15 == 0) goto L_0x0230
                    goto L_0x0234
                L_0x0230:
                    r18 = r3
                    goto L_0x02c9
                L_0x0234:
                    im.bclpbkiauv.messenger.MediaController r15 = im.bclpbkiauv.messenger.MediaController.getInstance()
                    boolean r15 = r15.isPlayingMessage(r14)
                    if (r15 == 0) goto L_0x02c7
                    im.bclpbkiauv.messenger.ImageReceiver r15 = r12.getPhotoImage()
                    int r6 = r15.getImageX()
                    float r6 = (float) r6
                    float r17 = r12.getX()
                    float r6 = r6 + r17
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    android.view.View r7 = r7.fragmentView
                    int r7 = r7.getPaddingTop()
                    int r18 = r12.getTop()
                    int r7 = r7 + r18
                    int r18 = r15.getImageY()
                    int r7 = r7 + r18
                    r18 = r3
                    im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                    int r3 = r3.chatListViewClipTop
                    int r7 = r7 - r3
                    float r3 = (float) r7
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.RecyclerListView r7 = r7.chatListView
                    float r7 = r7.getTranslationY()
                    float r3 = r3 + r7
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    boolean r7 = r7.inPreviewMode
                    if (r7 == 0) goto L_0x0283
                    int r7 = im.bclpbkiauv.messenger.AndroidUtilities.statusBarHeight
                    goto L_0x0284
                L_0x0283:
                    r7 = 0
                L_0x0284:
                    float r7 = (float) r7
                    float r3 = r3 + r7
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.FrameLayout r7 = r7.videoPlayerContainer
                    float r7 = r7.getTranslationX()
                    int r7 = (r7 > r6 ? 1 : (r7 == r6 ? 0 : -1))
                    if (r7 != 0) goto L_0x02a2
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.FrameLayout r7 = r7.videoPlayerContainer
                    float r7 = r7.getTranslationY()
                    int r7 = (r7 > r3 ? 1 : (r7 == r3 ? 0 : -1))
                    if (r7 == 0) goto L_0x02c9
                L_0x02a2:
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.FrameLayout r7 = r7.videoPlayerContainer
                    r7.setTranslationX(r6)
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.FrameLayout r7 = r7.videoPlayerContainer
                    r7.setTranslationY(r3)
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    android.view.View r7 = r7.fragmentView
                    r7.invalidate()
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    android.widget.FrameLayout r7 = r7.videoPlayerContainer
                    r7.invalidate()
                    goto L_0x02c9
                L_0x02c7:
                    r18 = r3
                L_0x02c9:
                    im.bclpbkiauv.messenger.ImageReceiver r3 = r12.getAvatarImage()
                    if (r3 == 0) goto L_0x0428
                    im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessages r6 = r6.getValidGroupedMessage(r14)
                    int r7 = r32.getTop()
                    float r15 = r12.getTranslationX()
                    int r16 = r32.getTop()
                    int r19 = r12.getLayoutHeight()
                    r20 = r4
                    int r4 = r16 + r19
                    r16 = r5
                    im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.RecyclerListView r5 = r5.chatListView
                    int r5 = r5.getMeasuredHeight()
                    r19 = r7
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.RecyclerListView r7 = r7.chatListView
                    int r7 = r7.getPaddingBottom()
                    int r5 = r5 - r7
                    if (r4 <= r5) goto L_0x0305
                    r4 = r5
                L_0x0305:
                    boolean r7 = r12.isPinnedTop()
                    r21 = 1111490560(0x42400000, float:48.0)
                    if (r7 == 0) goto L_0x03f0
                    im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.RecyclerListView r7 = r7.chatListView
                    androidx.recyclerview.widget.RecyclerView$ViewHolder r7 = r7.getChildViewHolder(r2)
                    if (r7 == 0) goto L_0x03eb
                    r22 = 0
                    r2 = r22
                L_0x031d:
                    r22 = r5
                    r5 = 20
                    if (r2 < r5) goto L_0x0329
                    r28 = r6
                    r27 = r8
                    goto L_0x03e6
                L_0x0329:
                    int r2 = r2 + 1
                    int r5 = r7.getAdapterPosition()
                    if (r6 == 0) goto L_0x038d
                    if (r13 == 0) goto L_0x038d
                    r23 = r2
                    java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r2 = r6.posArray
                    int r2 = r2.indexOf(r13)
                    if (r2 >= 0) goto L_0x0343
                    r28 = r6
                    r27 = r8
                    goto L_0x03e6
                L_0x0343:
                    r24 = r7
                    java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r7 = r6.posArray
                    int r7 = r7.size()
                    r25 = r7
                    int r7 = r13.flags
                    r7 = r7 & 4
                    if (r7 == 0) goto L_0x035e
                    int r7 = r5 + r2
                    r17 = 1
                    int r7 = r7 + 1
                    r28 = r6
                    r27 = r8
                    goto L_0x038c
                L_0x035e:
                    r17 = 1
                    int r7 = r5 + 1
                    int r26 = r2 + -1
                    r29 = r26
                    r26 = r2
                    r2 = r29
                L_0x036a:
                    if (r2 < 0) goto L_0x0388
                    r27 = r8
                    java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r8 = r6.posArray
                    java.lang.Object r8 = r8.get(r2)
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition r8 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessagePosition) r8
                    byte r8 = r8.maxY
                    r28 = r6
                    byte r6 = r13.minY
                    if (r8 >= r6) goto L_0x037f
                    goto L_0x038c
                L_0x037f:
                    int r7 = r7 + 1
                    int r2 = r2 + -1
                    r8 = r27
                    r6 = r28
                    goto L_0x036a
                L_0x0388:
                    r28 = r6
                    r27 = r8
                L_0x038c:
                    goto L_0x0399
                L_0x038d:
                    r23 = r2
                    r28 = r6
                    r24 = r7
                    r27 = r8
                    r17 = 1
                    int r7 = r5 + 1
                L_0x0399:
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.components.RecyclerListView r2 = r2.chatListView
                    androidx.recyclerview.widget.RecyclerView$ViewHolder r2 = r2.findViewHolderForAdapterPosition(r7)
                    if (r2 == 0) goto L_0x03e6
                    android.view.View r6 = r2.itemView
                    int r19 = r6.getTop()
                    int r6 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r21)
                    int r6 = r4 - r6
                    android.view.View r8 = r2.itemView
                    int r8 = r8.getBottom()
                    if (r6 >= r8) goto L_0x03c4
                    android.view.View r6 = r2.itemView
                    float r6 = r6.getTranslationX()
                    float r6 = java.lang.Math.min(r6, r15)
                    r15 = r6
                L_0x03c4:
                    android.view.View r6 = r2.itemView
                    boolean r6 = r6 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
                    if (r6 == 0) goto L_0x03e1
                    android.view.View r6 = r2.itemView
                    r8 = r6
                    im.bclpbkiauv.ui.cells.ChatMessageCell r8 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r8
                    boolean r6 = r8.isPinnedTop()
                    if (r6 != 0) goto L_0x03d8
                    r7 = r19
                    goto L_0x03f6
                L_0x03d8:
                    r7 = r2
                    r5 = r22
                    r2 = r23
                    r6 = r28
                    goto L_0x031d
                L_0x03e1:
                    r7 = r19
                    r8 = r27
                    goto L_0x03f6
                L_0x03e6:
                    r7 = r19
                    r8 = r27
                    goto L_0x03f6
                L_0x03eb:
                    r22 = r5
                    r28 = r6
                    goto L_0x03f4
                L_0x03f0:
                    r22 = r5
                    r28 = r6
                L_0x03f4:
                    r7 = r19
                L_0x03f6:
                    int r2 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r21)
                    int r2 = r4 - r2
                    if (r2 >= r7) goto L_0x0404
                    int r2 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r21)
                    int r4 = r7 + r2
                L_0x0404:
                    r2 = 0
                    int r5 = (r15 > r2 ? 1 : (r15 == r2 ? 0 : -1))
                    if (r5 == 0) goto L_0x040f
                    r31.save()
                    r1.translate(r15, r2)
                L_0x040f:
                    int r5 = r32.getTop()
                    r6 = 1088421888(0x40e00000, float:7.0)
                    int r6 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r6)
                    int r5 = r5 + r6
                    r3.setImageY(r5)
                    r3.draw(r1)
                    int r2 = (r15 > r2 ? 1 : (r15 == r2 ? 0 : -1))
                    if (r2 == 0) goto L_0x0433
                    r31.restore()
                    goto L_0x0433
                L_0x0428:
                    r20 = r4
                    r16 = r5
                    goto L_0x0433
                L_0x042d:
                    r18 = r3
                    r20 = r4
                    r16 = r5
                L_0x0433:
                    return r9
                */
                throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.AnonymousClass10.drawChild(android.graphics.Canvas, android.view.View, long):boolean");
            }

            public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info) {
                AccessibilityNodeInfo.CollectionInfo collection;
                if (ChatActivity.this.currentEncryptedChat == null) {
                    super.onInitializeAccessibilityNodeInfo(info);
                    if (Build.VERSION.SDK_INT >= 19 && (collection = info.getCollectionInfo()) != null) {
                        info.setCollectionInfo(AccessibilityNodeInfo.CollectionInfo.obtain(collection.getRowCount(), 1, false));
                    }
                }
            }

            public AccessibilityNodeInfo createAccessibilityNodeInfo() {
                if (ChatActivity.this.currentEncryptedChat != null) {
                    return null;
                }
                return super.createAccessibilityNodeInfo();
            }
        };
        if (this.currentEncryptedChat != null && Build.VERSION.SDK_INT >= 19) {
            this.chatListView.setImportantForAccessibility(4);
        }
        this.chatListView.setInstantClick(true);
        this.chatListView.setDisableHighlightState(true);
        this.chatListView.setTag(1);
        this.chatListView.setVerticalScrollBarEnabled(true);
        RecyclerListView recyclerListView = this.chatListView;
        ChatActivityAdapter chatActivityAdapter = new ChatActivityAdapter(context2);
        this.chatAdapter = chatActivityAdapter;
        recyclerListView.setAdapter(chatActivityAdapter);
        this.chatListView.setClipToPadding(false);
        this.chatListView.setPadding(0, AndroidUtilities.dp(4.0f), 0, AndroidUtilities.dp(3.0f));
        this.chatListView.setItemAnimator((RecyclerView.ItemAnimator) null);
        this.chatListView.setLayoutAnimation((LayoutAnimationController) null);
        ActionBarMenu actionBarMenu = actionMode;
        CharSequence oldMessage2 = oldMessage;
        AnonymousClass11 r1 = new GridLayoutManagerFixed(context, 1000, 1, true) {
            public boolean supportsPredictiveItemAnimations() {
                return false;
            }

            public void smoothScrollToPosition(RecyclerView recyclerView, RecyclerView.State state, int position) {
                LinearSmoothScrollerMiddle linearSmoothScroller = new LinearSmoothScrollerMiddle(recyclerView.getContext());
                linearSmoothScroller.setTargetPosition(position);
                startSmoothScroll(linearSmoothScroller);
            }

            public boolean shouldLayoutChildFromOpositeSide(View child) {
                if (child instanceof ChatMessageCell) {
                    return !((ChatMessageCell) child).getMessageObject().isOutOwner();
                }
                return false;
            }

            /* access modifiers changed from: protected */
            /* JADX WARNING: Code restructure failed: missing block: B:8:0x0031, code lost:
                r2 = r10.this$0.messages.get(r0);
             */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public boolean hasSiblingChild(int r11) {
                /*
                    r10 = this;
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r0 = r0.chatAdapter
                    int r0 = r0.messagesStartRow
                    r1 = 0
                    if (r11 < r0) goto L_0x0082
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r0 = r0.chatAdapter
                    int r0 = r0.messagesEndRow
                    if (r11 >= r0) goto L_0x0082
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r0 = r0.chatAdapter
                    int r0 = r0.messagesStartRow
                    int r0 = r11 - r0
                    if (r0 < 0) goto L_0x0082
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r2.messages
                    int r2 = r2.size()
                    if (r0 >= r2) goto L_0x0082
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r2.messages
                    java.lang.Object r2 = r2.get(r0)
                    im.bclpbkiauv.messenger.MessageObject r2 = (im.bclpbkiauv.messenger.MessageObject) r2
                    im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessages r3 = r3.getValidGroupedMessage(r2)
                    if (r3 == 0) goto L_0x0082
                    java.util.HashMap<im.bclpbkiauv.messenger.MessageObject, im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r4 = r3.positions
                    java.lang.Object r4 = r4.get(r2)
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition r4 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessagePosition) r4
                    byte r5 = r4.minX
                    byte r6 = r4.maxX
                    if (r5 == r6) goto L_0x0081
                    byte r5 = r4.minY
                    byte r6 = r4.maxY
                    if (r5 != r6) goto L_0x0081
                    byte r5 = r4.minY
                    if (r5 != 0) goto L_0x005c
                    goto L_0x0081
                L_0x005c:
                    java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r5 = r3.posArray
                    int r5 = r5.size()
                    r6 = 0
                L_0x0063:
                    if (r6 >= r5) goto L_0x0082
                    java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r7 = r3.posArray
                    java.lang.Object r7 = r7.get(r6)
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition r7 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessagePosition) r7
                    if (r7 != r4) goto L_0x0070
                    goto L_0x007e
                L_0x0070:
                    byte r8 = r7.minY
                    byte r9 = r4.minY
                    if (r8 > r9) goto L_0x007e
                    byte r8 = r7.maxY
                    byte r9 = r4.minY
                    if (r8 < r9) goto L_0x007e
                    r1 = 1
                    return r1
                L_0x007e:
                    int r6 = r6 + 1
                    goto L_0x0063
                L_0x0081:
                    return r1
                L_0x0082:
                    return r1
                */
                throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.AnonymousClass11.hasSiblingChild(int):boolean");
            }
        };
        this.chatLayoutManager = r1;
        r1.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {
            /* JADX WARNING: Code restructure failed: missing block: B:8:0x0030, code lost:
                r1 = r4.this$0.messages.get(r0);
             */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public int getSpanSize(int r5) {
                /*
                    r4 = this;
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r0 = r0.chatAdapter
                    int r0 = r0.messagesStartRow
                    if (r5 < r0) goto L_0x004d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r0 = r0.chatAdapter
                    int r0 = r0.messagesEndRow
                    if (r5 >= r0) goto L_0x004d
                    im.bclpbkiauv.ui.ChatActivity r0 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r0 = r0.chatAdapter
                    int r0 = r0.messagesStartRow
                    int r0 = r5 - r0
                    if (r0 < 0) goto L_0x004d
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r1.messages
                    int r1 = r1.size()
                    if (r0 >= r1) goto L_0x004d
                    im.bclpbkiauv.ui.ChatActivity r1 = im.bclpbkiauv.ui.ChatActivity.this
                    java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r1.messages
                    java.lang.Object r1 = r1.get(r0)
                    im.bclpbkiauv.messenger.MessageObject r1 = (im.bclpbkiauv.messenger.MessageObject) r1
                    im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessages r2 = r2.getValidGroupedMessage(r1)
                    if (r2 == 0) goto L_0x004d
                    java.util.HashMap<im.bclpbkiauv.messenger.MessageObject, im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r3 = r2.positions
                    java.lang.Object r3 = r3.get(r1)
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition r3 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessagePosition) r3
                    int r3 = r3.spanSize
                    return r3
                L_0x004d:
                    r0 = 1000(0x3e8, float:1.401E-42)
                    return r0
                */
                throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.AnonymousClass12.getSpanSize(int):int");
            }
        });
        this.chatListView.setLayoutManager(this.chatLayoutManager);
        this.chatListView.addItemDecoration(new RecyclerView.ItemDecoration() {
            /* JADX WARNING: Code restructure failed: missing block: B:2:0x0007, code lost:
                r0 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r12;
             */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public void getItemOffsets(android.graphics.Rect r11, android.view.View r12, androidx.recyclerview.widget.RecyclerView r13, androidx.recyclerview.widget.RecyclerView.State r14) {
                /*
                    r10 = this;
                    r0 = 0
                    r11.bottom = r0
                    boolean r0 = r12 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
                    if (r0 == 0) goto L_0x00a6
                    r0 = r12
                    im.bclpbkiauv.ui.cells.ChatMessageCell r0 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r0
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = r0.getCurrentMessagesGroup()
                    if (r1 == 0) goto L_0x00a6
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition r2 = r0.getCurrentPosition()
                    if (r2 == 0) goto L_0x00a6
                    float[] r3 = r2.siblingHeights
                    if (r3 == 0) goto L_0x00a6
                    android.graphics.Point r3 = im.bclpbkiauv.messenger.AndroidUtilities.displaySize
                    int r3 = r3.x
                    android.graphics.Point r4 = im.bclpbkiauv.messenger.AndroidUtilities.displaySize
                    int r4 = r4.y
                    int r3 = java.lang.Math.max(r3, r4)
                    float r3 = (float) r3
                    r4 = 1056964608(0x3f000000, float:0.5)
                    float r3 = r3 * r4
                    int r4 = r0.getCaptionHeight()
                    r5 = 0
                L_0x0030:
                    float[] r6 = r2.siblingHeights
                    int r6 = r6.length
                    if (r5 >= r6) goto L_0x0045
                    float[] r6 = r2.siblingHeights
                    r6 = r6[r5]
                    float r6 = r6 * r3
                    double r6 = (double) r6
                    double r6 = java.lang.Math.ceil(r6)
                    int r6 = (int) r6
                    int r4 = r4 + r6
                    int r5 = r5 + 1
                    goto L_0x0030
                L_0x0045:
                    byte r5 = r2.maxY
                    byte r6 = r2.minY
                    int r5 = r5 - r6
                    r6 = 1088421888(0x40e00000, float:7.0)
                    float r7 = im.bclpbkiauv.messenger.AndroidUtilities.density
                    float r7 = r7 * r6
                    int r6 = java.lang.Math.round(r7)
                    int r5 = r5 * r6
                    int r4 = r4 + r5
                    java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r5 = r1.posArray
                    int r5 = r5.size()
                    r6 = 0
                L_0x005e:
                    if (r6 >= r5) goto L_0x00a3
                    java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r7 = r1.posArray
                    java.lang.Object r7 = r7.get(r6)
                    im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition r7 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessagePosition) r7
                    byte r8 = r7.minY
                    byte r9 = r2.minY
                    if (r8 != r9) goto L_0x00a0
                    byte r8 = r7.minX
                    byte r9 = r2.minX
                    if (r8 != r9) goto L_0x0087
                    byte r8 = r7.maxX
                    byte r9 = r2.maxX
                    if (r8 != r9) goto L_0x0087
                    byte r8 = r7.minY
                    byte r9 = r2.minY
                    if (r8 != r9) goto L_0x0087
                    byte r8 = r7.maxY
                    byte r9 = r2.maxY
                    if (r8 != r9) goto L_0x0087
                    goto L_0x00a0
                L_0x0087:
                    byte r8 = r7.minY
                    byte r9 = r2.minY
                    if (r8 != r9) goto L_0x00a0
                    float r8 = r7.ph
                    float r8 = r8 * r3
                    double r8 = (double) r8
                    double r8 = java.lang.Math.ceil(r8)
                    int r8 = (int) r8
                    r9 = 1082130432(0x40800000, float:4.0)
                    int r9 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r9)
                    int r8 = r8 - r9
                    int r4 = r4 - r8
                    goto L_0x00a3
                L_0x00a0:
                    int r6 = r6 + 1
                    goto L_0x005e
                L_0x00a3:
                    int r6 = -r4
                    r11.bottom = r6
                L_0x00a6:
                    return
                */
                throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.AnonymousClass13.getItemOffsets(android.graphics.Rect, android.view.View, androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$State):void");
            }
        });
        this.contentView.addView(this.chatListView, LayoutHelper.createFrame(-1, -1.0f));
        this.chatListView.setOnItemLongClickListener(this.onItemLongClickListener);
        this.chatListView.setOnItemClickListener(this.onItemClickListener);
        this.chatListView.setOnScrollListener(new RecyclerView.OnScrollListener() {
            private boolean scrollUp;
            private final int scrollValue = AndroidUtilities.dp(100.0f);
            private float totalDy = 0.0f;

            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
                if (newState == 0) {
                    boolean unused = ChatActivity.this.scrollingFloatingDate = false;
                    boolean unused2 = ChatActivity.this.scrollingChatListView = false;
                    boolean unused3 = ChatActivity.this.checkTextureViewPosition = false;
                    ChatActivity.this.hideFloatingDateView(true);
                    ChatActivity.this.checkAutoDownloadMessages(this.scrollUp);
                    if (SharedConfig.getDevicePerfomanceClass() == 0) {
                        NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.startAllHeavyOperations, 512);
                        return;
                    }
                    return;
                }
                if (newState == 2) {
                    boolean unused4 = ChatActivity.this.wasManualScroll = true;
                    boolean unused5 = ChatActivity.this.scrollingChatListView = true;
                } else if (newState == 1) {
                    boolean unused6 = ChatActivity.this.wasManualScroll = true;
                    boolean unused7 = ChatActivity.this.scrollingFloatingDate = true;
                    boolean unused8 = ChatActivity.this.checkTextureViewPosition = true;
                    boolean unused9 = ChatActivity.this.scrollingChatListView = true;
                }
                if (SharedConfig.getDevicePerfomanceClass() == 0) {
                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.stopAllHeavyOperations, 512);
                }
            }

            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                ChatActivity.this.chatListView.invalidate();
                this.scrollUp = dy < 0;
                if (!ChatActivity.this.wasManualScroll && dy != 0) {
                    boolean unused = ChatActivity.this.wasManualScroll = true;
                }
                if (dy != 0) {
                    if (ChatActivity.this.noSoundHintView != null) {
                        ChatActivity.this.noSoundHintView.hide();
                    }
                    if (ChatActivity.this.forwardHintView != null) {
                        ChatActivity.this.forwardHintView.hide();
                    }
                }
                if (dy != 0 && ChatActivity.this.scrollingFloatingDate && !ChatActivity.this.currentFloatingTopIsNotMessage) {
                    if (ChatActivity.this.highlightMessageId != Integer.MAX_VALUE) {
                        ChatActivity.this.removeSelectedMessageHighlight();
                        ChatActivity.this.updateVisibleRows();
                    }
                    ChatActivity.this.showFloatingDateView(true);
                }
                ChatActivity.this.checkScrollForLoad(true);
                int firstVisibleItem = ChatActivity.this.chatLayoutManager.findFirstVisibleItemPosition();
                if (firstVisibleItem != -1) {
                    int itemCount = ChatActivity.this.chatAdapter.getItemCount();
                    if (firstVisibleItem == 0 && ChatActivity.this.forwardEndReached[0]) {
                        ChatActivity.this.showPagedownButton(false, true);
                    } else if (dy > 0) {
                        if (ChatActivity.this.pagedownButton.getTag() == null) {
                            float f = this.totalDy + ((float) dy);
                            this.totalDy = f;
                            if (f > ((float) this.scrollValue)) {
                                this.totalDy = 0.0f;
                                ChatActivity.this.showPagedownButton(true, true);
                                boolean unused2 = ChatActivity.this.pagedownButtonShowedByScroll = true;
                            }
                        }
                    } else if (ChatActivity.this.pagedownButtonShowedByScroll && ChatActivity.this.pagedownButton.getTag() != null) {
                        float f2 = this.totalDy + ((float) dy);
                        this.totalDy = f2;
                        if (f2 < ((float) (-this.scrollValue))) {
                            ChatActivity.this.showPagedownButton(false, true);
                            this.totalDy = 0.0f;
                        }
                    }
                }
                ChatActivity.this.updateMessagesVisiblePart(true);
            }
        });
        FrameLayout frameLayout2 = new FrameLayout(context2);
        this.progressView = frameLayout2;
        frameLayout2.setVisibility(4);
        this.contentView.addView(this.progressView, LayoutHelper.createFrame(-1, -1, 51));
        View view = new View(context2);
        this.progressView2 = view;
        view.setBackgroundResource(R.drawable.system_loader);
        this.progressView2.getBackground().setColorFilter(Theme.colorFilter);
        this.progressView.addView(this.progressView2, LayoutHelper.createFrame(36, 36, 17));
        RadialProgressView radialProgressView = new RadialProgressView(context2);
        this.progressBar = radialProgressView;
        radialProgressView.setSize(AndroidUtilities.dp(28.0f));
        this.progressBar.setProgressColor(Theme.getColor(Theme.key_chat_serviceText));
        this.progressView.addView(this.progressBar, LayoutHelper.createFrame(32, 32, 17));
        AnonymousClass15 r0 = new ChatActionCell(context2) {
            public boolean onInterceptTouchEvent(MotionEvent ev) {
                if (getAlpha() == 0.0f || ChatActivity.this.actionBar.isActionModeShowed()) {
                    return false;
                }
                return super.onInterceptTouchEvent(ev);
            }

            public boolean onTouchEvent(MotionEvent event) {
                if (getAlpha() == 0.0f || ChatActivity.this.actionBar.isActionModeShowed()) {
                    return false;
                }
                return super.onTouchEvent(event);
            }
        };
        this.floatingDateView = r0;
        r0.setAlpha(0.0f);
        this.contentView.addView(this.floatingDateView, LayoutHelper.createFrame(-2.0f, -2.0f, 49, 0.0f, 4.0f, 0.0f, 0.0f));
        this.floatingDateView.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$6$ChatActivity(view);
            }
        });
        if (this.currentEncryptedChat == null) {
            FrameLayout frameLayout3 = new FrameLayout(context2);
            this.pinnedMessageView = frameLayout3;
            frameLayout3.setTag(1);
            this.pinnedMessageView.setTranslationY((float) (-AndroidUtilities.dp(50.0f)));
            this.pinnedMessageView.setVisibility(8);
            this.pinnedMessageView.setBackgroundResource(R.drawable.blockpanel);
            this.pinnedMessageView.getBackground().setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_topPanelBackground), PorterDuff.Mode.MULTIPLY));
            this.contentView.addView(this.pinnedMessageView, LayoutHelper.createFrame(-1, 50, 51));
            this.pinnedMessageView.setOnClickListener(new View.OnClickListener() {
                public final void onClick(View view) {
                    ChatActivity.this.lambda$createView$7$ChatActivity(view);
                }
            });
            FrameLayout frameLayout4 = new FrameLayout(context2);
            this.pinnedLiveMessageView = frameLayout4;
            frameLayout4.setTag(2);
            this.pinnedLiveMessageView.setTranslationY((float) (-AndroidUtilities.dp(50.0f)));
            this.pinnedLiveMessageView.setVisibility(8);
            this.pinnedLiveMessageView.setBackgroundResource(R.drawable.blockpanel);
            TextView tvLine = new TextView(context2);
            tvLine.setBackgroundColor(Color.parseColor("#CFD0D1"));
            this.pinnedLiveMessageView.addView(tvLine, LayoutHelper.createFrame(-1.0f, 0.5f, 51));
            this.pinnedLiveMessageView.getBackground().setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_topPanelBackground), PorterDuff.Mode.MULTIPLY));
            this.contentView.addView(this.pinnedLiveMessageView, LayoutHelper.createFrame(-1, 50, 51));
            this.pinnedLiveMessageView.setOnClickListener($$Lambda$ChatActivity$v122KnPRZi05WtvSqQcCtAGW4Mo.INSTANCE);
            View view2 = new View(context2);
            this.pinnedLineView = view2;
            view2.setBackgroundColor(Theme.getColor(Theme.key_chat_topPanelLine));
            this.pinnedMessageView.addView(this.pinnedLineView, LayoutHelper.createFrame(2.0f, 32.0f, 51, 8.0f, 8.0f, 0.0f, 0.0f));
            BackupImageView backupImageView = new BackupImageView(context2);
            this.pinnedMessageImageView = backupImageView;
            this.pinnedMessageView.addView(backupImageView, LayoutHelper.createFrame(32.0f, 32.0f, 51, 17.0f, 8.0f, 0.0f, 0.0f));
            SimpleTextView simpleTextView = new SimpleTextView(context2);
            this.pinnedMessageNameTextView = simpleTextView;
            simpleTextView.setTextSize(14);
            this.pinnedMessageNameTextView.setTextColor(Theme.getColor(Theme.key_chat_topPanelTitle));
            this.pinnedMessageNameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            this.pinnedMessageView.addView(this.pinnedMessageNameTextView, LayoutHelper.createFrame(-1.0f, (float) AndroidUtilities.dp(18.0f), 51, 18.0f, 7.3f, 40.0f, 0.0f));
            SimpleTextView simpleTextView2 = new SimpleTextView(context2);
            this.pinnedLiveMessageNameTextView = simpleTextView2;
            simpleTextView2.setTextSize(14);
            this.pinnedLiveMessageNameTextView.setTextColor(Theme.getColor(Theme.key_chat_topPanelTitle));
            this.pinnedLiveMessageNameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            this.pinnedLiveMessageView.addView(this.pinnedLiveMessageNameTextView, LayoutHelper.createFrame(-1.0f, (float) AndroidUtilities.dp(18.0f), 51, 18.0f, 7.3f, 40.0f, 0.0f));
            SimpleTextView simpleTextView3 = new SimpleTextView(context2);
            this.pinnedMessageTextView = simpleTextView3;
            simpleTextView3.setTextSize(14);
            this.pinnedMessageTextView.setTextColor(Theme.getColor(Theme.key_chat_topPanelMessage));
            this.pinnedMessageView.addView(this.pinnedMessageTextView, LayoutHelper.createFrame(-1.0f, (float) AndroidUtilities.dp(18.0f), 51, 18.0f, 25.3f, 40.0f, 0.0f));
            SimpleTextView simpleTextView4 = new SimpleTextView(context2);
            this.pinnedLiveMessageTextView = simpleTextView4;
            simpleTextView4.setTextSize(14);
            this.pinnedLiveMessageTextView.setTextColor(Theme.getColor(Theme.key_chat_topPanelMessage));
            this.pinnedLiveMessageView.addView(this.pinnedLiveMessageTextView, LayoutHelper.createFrame(-1.0f, (float) AndroidUtilities.dp(18.0f), 51, 18.0f, 25.3f, 40.0f, 0.0f));
            ImageView imageView = new ImageView(context2);
            this.closePinned = imageView;
            imageView.setImageResource(R.drawable.miniplayer_close);
            this.closePinned.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_topPanelClose), PorterDuff.Mode.MULTIPLY));
            this.closePinned.setScaleType(ImageView.ScaleType.CENTER);
            this.closePinned.setContentDescription(LocaleController.getString("Close", R.string.Close));
            this.pinnedMessageView.addView(this.closePinned, LayoutHelper.createFrame(36, 48, 53));
            this.closePinned.setOnClickListener(new View.OnClickListener() {
                public final void onClick(View view) {
                    ChatActivity.this.lambda$createView$10$ChatActivity(view);
                }
            });
            ImageView imageView2 = new ImageView(context2);
            this.closeLivePinned = imageView2;
            imageView2.setImageResource(R.drawable.miniplayer_close);
            this.closeLivePinned.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_topPanelClose), PorterDuff.Mode.MULTIPLY));
            this.closeLivePinned.setScaleType(ImageView.ScaleType.CENTER);
            this.closeLivePinned.setContentDescription(LocaleController.getString("Close", R.string.Close));
            this.pinnedLiveMessageView.addView(this.closeLivePinned, LayoutHelper.createFrame(36, 48, 53));
            this.closeLivePinned.setOnClickListener(new View.OnClickListener() {
                public final void onClick(View view) {
                    ChatActivity.this.lambda$createView$11$ChatActivity(view);
                }
            });
        }
        AnonymousClass16 r02 = new FrameLayout(context2) {
            private boolean ignoreLayout;

            /* access modifiers changed from: protected */
            public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                int width = View.MeasureSpec.getSize(widthMeasureSpec);
                if (ChatActivity.this.addToContactsButton != null && ChatActivity.this.addToContactsButton.getVisibility() == 0 && ChatActivity.this.reportSpamButton != null && ChatActivity.this.reportSpamButton.getVisibility() == 0) {
                    width = (width - AndroidUtilities.dp(31.0f)) / 2;
                }
                this.ignoreLayout = true;
                if (ChatActivity.this.reportSpamButton != null && ChatActivity.this.reportSpamButton.getVisibility() == 0) {
                    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) ChatActivity.this.reportSpamButton.getLayoutParams();
                    layoutParams.width = width;
                    if (ChatActivity.this.addToContactsButton == null || ChatActivity.this.addToContactsButton.getVisibility() != 0) {
                        ChatActivity.this.reportSpamButton.setPadding(AndroidUtilities.dp(48.0f), 0, AndroidUtilities.dp(48.0f), 0);
                        layoutParams.leftMargin = 0;
                    } else {
                        ChatActivity.this.reportSpamButton.setPadding(AndroidUtilities.dp(4.0f), 0, AndroidUtilities.dp(19.0f), 0);
                        layoutParams.leftMargin = width;
                    }
                }
                if (ChatActivity.this.addToContactsButton != null && ChatActivity.this.addToContactsButton.getVisibility() == 0) {
                    FrameLayout.LayoutParams layoutParams2 = (FrameLayout.LayoutParams) ChatActivity.this.addToContactsButton.getLayoutParams();
                    layoutParams2.width = width;
                    if (ChatActivity.this.reportSpamButton == null || ChatActivity.this.reportSpamButton.getVisibility() != 0) {
                        ChatActivity.this.addToContactsButton.setPadding(AndroidUtilities.dp(48.0f), 0, AndroidUtilities.dp(48.0f), 0);
                        layoutParams2.leftMargin = 0;
                    } else {
                        ChatActivity.this.addToContactsButton.setPadding(AndroidUtilities.dp(11.0f), 0, AndroidUtilities.dp(4.0f), 0);
                    }
                }
                this.ignoreLayout = false;
                super.onMeasure(widthMeasureSpec, heightMeasureSpec);
            }

            public void requestLayout() {
                if (!this.ignoreLayout) {
                    super.requestLayout();
                }
            }
        };
        this.topChatPanelView = r02;
        r02.setTag(1);
        this.topChatPanelView.setTranslationY((float) (-AndroidUtilities.dp(50.0f)));
        this.topChatPanelView.setVisibility(8);
        this.topChatPanelView.setBackgroundResource(R.drawable.blockpanel);
        this.topChatPanelView.getBackground().setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_topPanelBackground), PorterDuff.Mode.MULTIPLY));
        this.contentView.addView(this.topChatPanelView, LayoutHelper.createFrame(-1, 50, 51));
        TextView textView2 = new TextView(context2);
        this.reportSpamButton = textView2;
        textView2.setTextColor(Theme.getColor(Theme.key_chat_reportSpam));
        this.reportSpamButton.setTag(Theme.key_chat_reportSpam);
        this.reportSpamButton.setTextSize(1, 14.0f);
        this.reportSpamButton.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.reportSpamButton.setSingleLine(true);
        this.reportSpamButton.setMaxLines(1);
        this.reportSpamButton.setGravity(17);
        this.topChatPanelView.addView(this.reportSpamButton, LayoutHelper.createFrame(-1.0f, -1.0f, 51, 0.0f, 0.0f, 0.0f, (float) AndroidUtilities.dp(1.0f)));
        this.reportSpamButton.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$13$ChatActivity(view);
            }
        });
        TextView textView3 = new TextView(context2);
        this.addToContactsButton = textView3;
        textView3.setTextColor(Theme.getColor(Theme.key_chat_addContact));
        this.addToContactsButton.setVisibility(8);
        this.addToContactsButton.setTextSize(1, 14.0f);
        this.addToContactsButton.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.addToContactsButton.setSingleLine(true);
        this.addToContactsButton.setMaxLines(1);
        this.addToContactsButton.setPadding(AndroidUtilities.dp(4.0f), 0, AndroidUtilities.dp(4.0f), 0);
        this.addToContactsButton.setGravity(17);
        this.topChatPanelView.addView(this.addToContactsButton, LayoutHelper.createFrame(-1.0f, -1.0f, 51, 0.0f, 0.0f, 0.0f, (float) AndroidUtilities.dp(1.0f)));
        this.addToContactsButton.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$14$ChatActivity(view);
            }
        });
        ImageView imageView3 = new ImageView(context2);
        this.closeReportSpam = imageView3;
        imageView3.setImageResource(R.drawable.miniplayer_close);
        this.closeReportSpam.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_topPanelClose), PorterDuff.Mode.MULTIPLY));
        this.closeReportSpam.setScaleType(ImageView.ScaleType.CENTER);
        this.topChatPanelView.addView(this.closeReportSpam, LayoutHelper.createFrame(48, 48, 53));
        this.closeReportSpam.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$15$ChatActivity(view);
            }
        });
        FrameLayout frameLayout5 = new FrameLayout(context2);
        this.alertView = frameLayout5;
        frameLayout5.setTag(1);
        this.alertView.setTranslationY((float) (-AndroidUtilities.dp(50.0f)));
        this.alertView.setVisibility(8);
        this.alertView.setBackgroundResource(R.drawable.blockpanel);
        this.alertView.getBackground().setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_topPanelBackground), PorterDuff.Mode.MULTIPLY));
        this.contentView.addView(this.alertView, LayoutHelper.createFrame(-1, 50, 51));
        TextView textView4 = new TextView(context2);
        this.alertNameTextView = textView4;
        textView4.setTextSize(1, 14.0f);
        this.alertNameTextView.setTextColor(Theme.getColor(Theme.key_chat_topPanelTitle));
        this.alertNameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.alertNameTextView.setSingleLine(true);
        this.alertNameTextView.setEllipsize(TextUtils.TruncateAt.END);
        this.alertNameTextView.setMaxLines(1);
        this.alertView.addView(this.alertNameTextView, LayoutHelper.createFrame(-2.0f, -2.0f, 51, 8.0f, 5.0f, 8.0f, 0.0f));
        TextView textView5 = new TextView(context2);
        this.alertTextView = textView5;
        textView5.setTextSize(1, 14.0f);
        this.alertTextView.setTextColor(Theme.getColor(Theme.key_chat_topPanelMessage));
        this.alertTextView.setSingleLine(true);
        this.alertTextView.setEllipsize(TextUtils.TruncateAt.END);
        this.alertTextView.setMaxLines(1);
        this.alertView.addView(this.alertTextView, LayoutHelper.createFrame(-2.0f, -2.0f, 51, 8.0f, 23.0f, 8.0f, 0.0f));
        FrameLayout frameLayout6 = new FrameLayout(context2);
        this.pagedownButton = frameLayout6;
        frameLayout6.setVisibility(4);
        this.contentView.addView(this.pagedownButton, LayoutHelper.createFrame(66.0f, 59.0f, 85, 0.0f, 0.0f, -3.0f, 5.0f));
        this.pagedownButton.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$16$ChatActivity(view);
            }
        });
        FrameLayout frameLayout7 = new FrameLayout(context2);
        this.mentiondownButton = frameLayout7;
        frameLayout7.setVisibility(4);
        this.contentView.addView(this.mentiondownButton, LayoutHelper.createFrame(46.0f, 59.0f, 85, 0.0f, 0.0f, 7.0f, 5.0f));
        this.mentiondownButton.setOnClickListener(new View.OnClickListener() {
            private void loadLastUnreadMention() {
                boolean unused = ChatActivity.this.wasManualScroll = true;
                if (ChatActivity.this.hasAllMentionsLocal) {
                    ChatActivity.this.getMessagesStorage().getUnreadMention(ChatActivity.this.dialog_id, new MessagesStorage.IntCallback() {
                        public final void run(int i) {
                            ChatActivity.AnonymousClass17.this.lambda$loadLastUnreadMention$0$ChatActivity$17(i);
                        }
                    });
                    return;
                }
                MessagesStorage messagesStorage = ChatActivity.this.getMessagesStorage();
                TLRPC.TL_messages_getUnreadMentions req = new TLRPC.TL_messages_getUnreadMentions();
                req.peer = ChatActivity.this.getMessagesController().getInputPeer((int) ChatActivity.this.dialog_id);
                req.limit = 1;
                req.add_offset = ChatActivity.this.newMentionsCount - 1;
                ChatActivity.this.getConnectionsManager().sendRequest(req, new RequestDelegate(messagesStorage) {
                    private final /* synthetic */ MessagesStorage f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                        ChatActivity.AnonymousClass17.this.lambda$loadLastUnreadMention$2$ChatActivity$17(this.f$1, tLObject, tL_error);
                    }
                });
            }

            public /* synthetic */ void lambda$loadLastUnreadMention$0$ChatActivity$17(int param) {
                if (param == 0) {
                    boolean unused = ChatActivity.this.hasAllMentionsLocal = false;
                    loadLastUnreadMention();
                    return;
                }
                ChatActivity.this.scrollToMessageId(param, 0, false, 0, false);
            }

            public /* synthetic */ void lambda$loadLastUnreadMention$2$ChatActivity$17(MessagesStorage messagesStorage, TLObject response, TLRPC.TL_error error) {
                AndroidUtilities.runOnUIThread(new Runnable(response, error, messagesStorage) {
                    private final /* synthetic */ TLObject f$1;
                    private final /* synthetic */ TLRPC.TL_error f$2;
                    private final /* synthetic */ MessagesStorage f$3;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                    }

                    public final void run() {
                        ChatActivity.AnonymousClass17.this.lambda$null$1$ChatActivity$17(this.f$1, this.f$2, this.f$3);
                    }
                });
            }

            public /* synthetic */ void lambda$null$1$ChatActivity$17(TLObject response, TLRPC.TL_error error, MessagesStorage messagesStorage) {
                long mid;
                TLRPC.messages_Messages res = (TLRPC.messages_Messages) response;
                if (error != null || res.messages.isEmpty()) {
                    if (res != null) {
                        int unused = ChatActivity.this.newMentionsCount = res.count;
                    } else {
                        int unused2 = ChatActivity.this.newMentionsCount = 0;
                    }
                    messagesStorage.resetMentionsCount(ChatActivity.this.dialog_id, ChatActivity.this.newMentionsCount);
                    if (ChatActivity.this.newMentionsCount == 0) {
                        boolean unused3 = ChatActivity.this.hasAllMentionsLocal = true;
                        ChatActivity.this.showMentionDownButton(false, true);
                        return;
                    }
                    ChatActivity.this.mentiondownButtonCounter.setText(String.format("%d", new Object[]{Integer.valueOf(ChatActivity.this.newMentionsCount)}));
                    loadLastUnreadMention();
                    return;
                }
                int id = res.messages.get(0).id;
                long mid2 = (long) id;
                if (ChatObject.isChannel(ChatActivity.this.currentChat)) {
                    mid = mid2 | (((long) ChatActivity.this.currentChat.id) << 32);
                } else {
                    mid = mid2;
                }
                MessageObject object = (MessageObject) ChatActivity.this.messagesDict[0].get(id);
                messagesStorage.markMessageAsMention(mid);
                if (object != null) {
                    object.messageOwner.media_unread = true;
                    object.messageOwner.mentioned = true;
                }
                ChatActivity.this.scrollToMessageId(id, 0, false, 0, false);
            }

            public void onClick(View view) {
                loadLastUnreadMention();
            }
        });
        this.mentiondownButton.setOnLongClickListener(new View.OnLongClickListener() {
            public final boolean onLongClick(View view) {
                return ChatActivity.this.lambda$createView$17$ChatActivity(view);
            }
        });
        AnonymousClass18 r03 = new FrameLayout(context2) {
            public void onDraw(Canvas canvas) {
                int top;
                if (ChatActivity.this.mentionListView.getChildCount() > 0) {
                    if (ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                        int top2 = ChatActivity.this.mentionListViewScrollOffsetY + AndroidUtilities.dp(2.0f);
                        Theme.chat_composeShadowDrawable.setBounds(0, Theme.chat_composeShadowDrawable.getIntrinsicHeight() + top2, getMeasuredWidth(), top2);
                        Theme.chat_composeShadowDrawable.draw(canvas);
                        canvas.drawRect(0.0f, 0.0f, (float) getMeasuredWidth(), (float) top2, Theme.chat_composeBackgroundPaint);
                        return;
                    }
                    if (!ChatActivity.this.mentionsAdapter.isBotContext() || !ChatActivity.this.mentionsAdapter.isMediaLayout() || ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                        top = ChatActivity.this.mentionListViewScrollOffsetY - AndroidUtilities.dp(2.0f);
                    } else {
                        top = ChatActivity.this.mentionListViewScrollOffsetY - AndroidUtilities.dp(4.0f);
                    }
                    int bottom = Theme.chat_composeShadowDrawable.getIntrinsicHeight() + top;
                    Theme.chat_composeShadowDrawable.setBounds(0, top, getMeasuredWidth(), bottom);
                    Theme.chat_composeShadowDrawable.draw(canvas);
                    canvas.drawRect(0.0f, (float) bottom, (float) getMeasuredWidth(), (float) getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
                }
            }

            public void requestLayout() {
                if (!ChatActivity.this.mentionListViewIgnoreLayout) {
                    super.requestLayout();
                }
            }
        };
        this.mentionContainer = r03;
        r03.setVisibility(8);
        updateMessageListAccessibilityVisibility();
        this.mentionContainer.setWillNotDraw(false);
        this.contentView.addView(this.mentionContainer, LayoutHelper.createFrame(-1, 110, 83));
        AnonymousClass19 r04 = new RecyclerListView(context2) {
            private int lastHeight;
            private int lastWidth;

            public boolean onInterceptTouchEvent(MotionEvent event) {
                if (ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                    if (!ChatActivity.this.mentionListViewIsScrolling && ChatActivity.this.mentionListViewScrollOffsetY != 0 && event.getY() > ((float) ChatActivity.this.mentionListViewScrollOffsetY)) {
                        return false;
                    }
                } else if (!ChatActivity.this.mentionListViewIsScrolling && ChatActivity.this.mentionListViewScrollOffsetY != 0 && event.getY() < ((float) ChatActivity.this.mentionListViewScrollOffsetY)) {
                    return false;
                }
                boolean result = ContentPreviewViewer.getInstance().onInterceptTouchEvent(event, ChatActivity.this.mentionListView, 0, (ContentPreviewViewer.ContentPreviewViewerDelegate) null);
                if (super.onInterceptTouchEvent(event) || result) {
                    return true;
                }
                return false;
            }

            public boolean onTouchEvent(MotionEvent event) {
                if (ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                    if (!ChatActivity.this.mentionListViewIsScrolling && ChatActivity.this.mentionListViewScrollOffsetY != 0 && event.getY() > ((float) ChatActivity.this.mentionListViewScrollOffsetY)) {
                        return false;
                    }
                } else if (!ChatActivity.this.mentionListViewIsScrolling && ChatActivity.this.mentionListViewScrollOffsetY != 0 && event.getY() < ((float) ChatActivity.this.mentionListViewScrollOffsetY)) {
                    return false;
                }
                return super.onTouchEvent(event);
            }

            public void requestLayout() {
                if (!ChatActivity.this.mentionListViewIgnoreLayout) {
                    super.requestLayout();
                }
            }

            /* access modifiers changed from: protected */
            public void onLayout(boolean changed, int l, int t, int r, int b) {
                int newTop;
                int newPosition;
                int width = r - l;
                int height = b - t;
                if (ChatActivity.this.mentionLayoutManager.getReverseLayout() || ChatActivity.this.mentionListView == null || ChatActivity.this.mentionListViewLastViewPosition < 0 || width != this.lastWidth || height - this.lastHeight == 0) {
                    newPosition = -1;
                    newTop = 0;
                } else {
                    newPosition = ChatActivity.this.mentionListViewLastViewPosition;
                    newTop = ((ChatActivity.this.mentionListViewLastViewTop + height) - this.lastHeight) - getPaddingTop();
                }
                super.onLayout(changed, l, t, r, b);
                if (newPosition != -1) {
                    boolean unused = ChatActivity.this.mentionListViewIgnoreLayout = true;
                    if (!ChatActivity.this.mentionsAdapter.isBotContext() || !ChatActivity.this.mentionsAdapter.isMediaLayout()) {
                        ChatActivity.this.mentionLayoutManager.scrollToPositionWithOffset(newPosition, newTop);
                    } else {
                        ChatActivity.this.mentionGridLayoutManager.scrollToPositionWithOffset(newPosition, newTop);
                    }
                    super.onLayout(false, l, t, r, b);
                    boolean unused2 = ChatActivity.this.mentionListViewIgnoreLayout = false;
                }
                this.lastHeight = height;
                this.lastWidth = width;
                ChatActivity.this.mentionListViewUpdateLayout();
            }
        };
        this.mentionListView = r04;
        r04.setOnTouchListener(new View.OnTouchListener() {
            public final boolean onTouch(View view, MotionEvent motionEvent) {
                return ChatActivity.this.lambda$createView$18$ChatActivity(view, motionEvent);
            }
        });
        this.mentionListView.setTag(2);
        AnonymousClass20 r05 = new LinearLayoutManager(context2) {
            public boolean supportsPredictiveItemAnimations() {
                return false;
            }
        };
        this.mentionLayoutManager = r05;
        r05.setOrientation(1);
        AnonymousClass21 r06 = new ExtendedGridLayoutManager(context2, 100) {
            private Size size = new Size();

            /* access modifiers changed from: protected */
            public Size getSizeForItem(int i) {
                TLRPC.PhotoSize photoSize;
                TLRPC.DocumentAttribute attribute;
                TLRPC.DocumentAttribute attribute2;
                if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                    i++;
                }
                this.size.width = 0.0f;
                this.size.height = 0.0f;
                Object object = ChatActivity.this.mentionsAdapter.getItem(i);
                if (object instanceof TLRPC.BotInlineResult) {
                    TLRPC.BotInlineResult inlineResult = (TLRPC.BotInlineResult) object;
                    if (inlineResult.document != null) {
                        TLRPC.PhotoSize thumb = FileLoader.getClosestPhotoSizeWithSize(inlineResult.document.thumbs, 90);
                        float f = 100.0f;
                        this.size.width = thumb != null ? (float) thumb.w : 100.0f;
                        Size size2 = this.size;
                        if (thumb != null) {
                            f = (float) thumb.h;
                        }
                        size2.height = f;
                        int b = 0;
                        while (true) {
                            if (b >= inlineResult.document.attributes.size()) {
                                break;
                            }
                            attribute2 = inlineResult.document.attributes.get(b);
                            if ((attribute2 instanceof TLRPC.TL_documentAttributeImageSize) || (attribute2 instanceof TLRPC.TL_documentAttributeVideo)) {
                                this.size.width = (float) attribute2.w;
                                this.size.height = (float) attribute2.h;
                            } else {
                                b++;
                            }
                        }
                        this.size.width = (float) attribute2.w;
                        this.size.height = (float) attribute2.h;
                    } else if (inlineResult.content != null) {
                        int b2 = 0;
                        while (true) {
                            if (b2 >= inlineResult.content.attributes.size()) {
                                break;
                            }
                            attribute = inlineResult.content.attributes.get(b2);
                            if ((attribute instanceof TLRPC.TL_documentAttributeImageSize) || (attribute instanceof TLRPC.TL_documentAttributeVideo)) {
                                this.size.width = (float) attribute.w;
                                this.size.height = (float) attribute.h;
                            } else {
                                b2++;
                            }
                        }
                        this.size.width = (float) attribute.w;
                        this.size.height = (float) attribute.h;
                    } else if (inlineResult.thumb != null) {
                        int b3 = 0;
                        while (true) {
                            if (b3 >= inlineResult.thumb.attributes.size()) {
                                break;
                            }
                            TLRPC.DocumentAttribute attribute3 = inlineResult.thumb.attributes.get(b3);
                            if ((attribute3 instanceof TLRPC.TL_documentAttributeImageSize) || (attribute3 instanceof TLRPC.TL_documentAttributeVideo)) {
                                this.size.width = (float) attribute3.w;
                                this.size.height = (float) attribute3.h;
                            } else {
                                b3++;
                            }
                        }
                    } else if (inlineResult.photo != null && (photoSize = FileLoader.getClosestPhotoSizeWithSize(inlineResult.photo.sizes, AndroidUtilities.photoSize.intValue())) != null) {
                        this.size.width = (float) photoSize.w;
                        this.size.height = (float) photoSize.h;
                    }
                }
                return this.size;
            }

            /* access modifiers changed from: protected */
            public int getFlowItemCount() {
                if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                    return getItemCount() - 1;
                }
                return super.getFlowItemCount();
            }
        };
        this.mentionGridLayoutManager = r06;
        r06.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {
            public int getSpanSize(int position) {
                if (ChatActivity.this.mentionsAdapter.getItem(position) instanceof TLRPC.TL_inlineBotSwitchPM) {
                    return 100;
                }
                if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                    position--;
                }
                return ChatActivity.this.mentionGridLayoutManager.getSpanSizeForItem(position);
            }
        });
        this.mentionListView.addItemDecoration(new RecyclerView.ItemDecoration() {
            public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {
                int i = 0;
                outRect.left = 0;
                outRect.right = 0;
                outRect.top = 0;
                outRect.bottom = 0;
                if (parent.getLayoutManager() == ChatActivity.this.mentionGridLayoutManager) {
                    int position = parent.getChildAdapterPosition(view);
                    if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() == null) {
                        outRect.top = AndroidUtilities.dp(2.0f);
                    } else if (position != 0) {
                        position--;
                        if (!ChatActivity.this.mentionGridLayoutManager.isFirstRow(position)) {
                            outRect.top = AndroidUtilities.dp(2.0f);
                        }
                    } else {
                        return;
                    }
                    if (!ChatActivity.this.mentionGridLayoutManager.isLastInRow(position)) {
                        i = AndroidUtilities.dp(2.0f);
                    }
                    outRect.right = i;
                }
            }
        });
        this.mentionListView.setItemAnimator((RecyclerView.ItemAnimator) null);
        this.mentionListView.setLayoutAnimation((LayoutAnimationController) null);
        this.mentionListView.setClipToPadding(false);
        this.mentionListView.setLayoutManager(this.mentionLayoutManager);
        this.mentionListView.setOverScrollMode(2);
        this.mentionContainer.addView(this.mentionListView, LayoutHelper.createFrame(-1, -1.0f));
        RecyclerListView recyclerListView2 = this.mentionListView;
        MentionsAdapter mentionsAdapter3 = r1;
        MentionsAdapter mentionsAdapter4 = new MentionsAdapter(context, false, this.dialog_id, new MentionsAdapter.MentionsAdapterDelegate() {
            public void needChangePanelVisibility(boolean show) {
                if (!ChatActivity.this.mentionsAdapter.isBotContext() || !ChatActivity.this.mentionsAdapter.isMediaLayout()) {
                    ChatActivity.this.mentionListView.setLayoutManager(ChatActivity.this.mentionLayoutManager);
                } else {
                    ChatActivity.this.mentionListView.setLayoutManager(ChatActivity.this.mentionGridLayoutManager);
                }
                if (show && ChatActivity.this.bottomOverlay.getVisibility() == 0) {
                    show = false;
                }
                if (show) {
                    if (ChatActivity.this.mentionListAnimation != null) {
                        ChatActivity.this.mentionListAnimation.cancel();
                        AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                    }
                    if (ChatActivity.this.mentionContainer.getVisibility() == 0) {
                        ChatActivity.this.mentionContainer.setAlpha(1.0f);
                        return;
                    }
                    int i = 10000;
                    if (ChatActivity.this.mentionsAdapter.isBotContext() && ChatActivity.this.mentionsAdapter.isMediaLayout()) {
                        ChatActivity.this.mentionGridLayoutManager.scrollToPositionWithOffset(0, 10000);
                    } else if (!ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                        LinearLayoutManager access$5700 = ChatActivity.this.mentionLayoutManager;
                        if (ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                            i = -10000;
                        }
                        access$5700.scrollToPositionWithOffset(0, i);
                    }
                    if (!ChatActivity.this.allowStickersPanel || (ChatActivity.this.mentionsAdapter.isBotContext() && !ChatActivity.this.allowContextBotPanel && !ChatActivity.this.allowContextBotPanelSecond)) {
                        ChatActivity.this.mentionContainer.setAlpha(1.0f);
                        ChatActivity.this.mentionContainer.setVisibility(4);
                        ChatActivity.this.updateMessageListAccessibilityVisibility();
                        return;
                    }
                    if (ChatActivity.this.currentEncryptedChat != null && ChatActivity.this.mentionsAdapter.isBotContext()) {
                        SharedPreferences preferences = MessagesController.getGlobalMainSettings();
                        if (!preferences.getBoolean("secretbot", false)) {
                            AlertDialog.Builder builder = new AlertDialog.Builder((Context) ChatActivity.this.getParentActivity());
                            builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                            builder.setMessage(LocaleController.getString("SecretChatContextBotAlert", R.string.SecretChatContextBotAlert));
                            builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), (DialogInterface.OnClickListener) null);
                            ChatActivity.this.showDialog(builder.create());
                            preferences.edit().putBoolean("secretbot", true).commit();
                        }
                    }
                    ChatActivity.this.mentionContainer.setVisibility(0);
                    ChatActivity.this.updateMessageListAccessibilityVisibility();
                    ChatActivity.this.mentionContainer.setTag((Object) null);
                    AnimatorSet unused2 = ChatActivity.this.mentionListAnimation = new AnimatorSet();
                    ChatActivity.this.mentionListAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(ChatActivity.this.mentionContainer, View.ALPHA, new float[]{0.0f, 1.0f})});
                    ChatActivity.this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animation) {
                            if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animation)) {
                                AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                            }
                        }

                        public void onAnimationCancel(Animator animation) {
                            if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animation)) {
                                AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                            }
                        }
                    });
                    ChatActivity.this.mentionListAnimation.setDuration(200);
                    ChatActivity.this.mentionListAnimation.start();
                    return;
                }
                if (ChatActivity.this.mentionListAnimation != null) {
                    ChatActivity.this.mentionListAnimation.cancel();
                    AnimatorSet unused3 = ChatActivity.this.mentionListAnimation = null;
                }
                if (ChatActivity.this.mentionContainer.getVisibility() != 8) {
                    if (ChatActivity.this.allowStickersPanel) {
                        AnimatorSet unused4 = ChatActivity.this.mentionListAnimation = new AnimatorSet();
                        ChatActivity.this.mentionListAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(ChatActivity.this.mentionContainer, View.ALPHA, new float[]{0.0f})});
                        ChatActivity.this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animation) {
                                if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animation)) {
                                    ChatActivity.this.mentionContainer.setVisibility(8);
                                    ChatActivity.this.mentionContainer.setTag((Object) null);
                                    ChatActivity.this.updateMessageListAccessibilityVisibility();
                                    AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                                }
                            }

                            public void onAnimationCancel(Animator animation) {
                                if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animation)) {
                                    AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                                }
                            }
                        });
                        ChatActivity.this.mentionListAnimation.setDuration(200);
                        ChatActivity.this.mentionListAnimation.start();
                        return;
                    }
                    ChatActivity.this.mentionContainer.setTag((Object) null);
                    ChatActivity.this.mentionContainer.setVisibility(8);
                    ChatActivity.this.updateMessageListAccessibilityVisibility();
                }
            }

            public void onContextSearch(boolean searching) {
                if (ChatActivity.this.chatActivityEnterView != null) {
                    ChatActivity.this.chatActivityEnterView.setCaption(ChatActivity.this.mentionsAdapter.getBotCaption());
                    ChatActivity.this.chatActivityEnterView.showContextProgress(searching);
                }
            }

            public void onContextClick(TLRPC.BotInlineResult result) {
                if (ChatActivity.this.getParentActivity() != null && result.content != null) {
                    if (result.type.equals(MimeTypes.BASE_TYPE_VIDEO) || result.type.equals("web_player_video")) {
                        int[] size = MessageObject.getInlineResultWidthAndHeight(result);
                        EmbedBottomSheet.show(ChatActivity.this.getParentActivity(), result.title != null ? result.title : "", result.description, result.content.url, result.content.url, size[0], size[1]);
                        return;
                    }
                    Browser.openUrl((Context) ChatActivity.this.getParentActivity(), result.content.url);
                }
            }
        });
        this.mentionsAdapter = mentionsAdapter3;
        recyclerListView2.setAdapter(mentionsAdapter3);
        if (!ChatObject.isChannel(this.currentChat) || ((chat = this.currentChat) != null && chat.megagroup)) {
            this.mentionsAdapter.setBotInfo(this.botInfo);
        }
        this.mentionsAdapter.setParentFragment(this);
        this.mentionsAdapter.setChatInfo(this.chatInfo);
        this.mentionsAdapter.setNeedUsernames(this.currentChat != null);
        MentionsAdapter mentionsAdapter5 = this.mentionsAdapter;
        TLRPC.EncryptedChat encryptedChat2 = this.currentEncryptedChat;
        mentionsAdapter5.setNeedBotContext(encryptedChat2 == null || AndroidUtilities.getPeerLayerVersion(encryptedChat2.layer) >= 46);
        this.mentionsAdapter.setBotsCount(this.currentChat != null ? this.botsCount : 1);
        RecyclerListView recyclerListView3 = this.mentionListView;
        $$Lambda$ChatActivity$Yq6EriVJaTWpnnQzkBnKZ4lrOzE r12 = new RecyclerListView.OnItemClickListener() {
            public final void onItemClick(View view, int i) {
                ChatActivity.this.lambda$createView$21$ChatActivity(view, i);
            }
        };
        this.mentionsOnItemClickListener = r12;
        recyclerListView3.setOnItemClickListener((RecyclerListView.OnItemClickListener) r12);
        this.mentionListView.setOnItemLongClickListener((RecyclerListView.OnItemLongClickListener) new RecyclerListView.OnItemLongClickListener() {
            public final boolean onItemClick(View view, int i) {
                return ChatActivity.this.lambda$createView$23$ChatActivity(view, i);
            }
        });
        this.mentionListView.setOnScrollListener(new RecyclerView.OnScrollListener() {
            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
                ChatActivity chatActivity = ChatActivity.this;
                boolean z = true;
                if (newState != 1) {
                    z = false;
                }
                boolean unused = chatActivity.mentionListViewIsScrolling = z;
            }

            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                int lastVisibleItem;
                if (!ChatActivity.this.mentionsAdapter.isBotContext() || !ChatActivity.this.mentionsAdapter.isMediaLayout()) {
                    lastVisibleItem = ChatActivity.this.mentionLayoutManager.findLastVisibleItemPosition();
                } else {
                    lastVisibleItem = ChatActivity.this.mentionGridLayoutManager.findLastVisibleItemPosition();
                }
                if ((lastVisibleItem == -1 ? 0 : lastVisibleItem) > 0 && lastVisibleItem > ChatActivity.this.mentionsAdapter.getItemCount() - 5) {
                    ChatActivity.this.mentionsAdapter.searchForContextBotForNextOffset();
                }
                ChatActivity.this.mentionListViewUpdateLayout();
            }
        });
        ImageView imageView4 = new ImageView(context2);
        this.pagedownButtonImage = imageView4;
        imageView4.setImageResource(R.drawable.pagedown);
        this.pagedownButtonImage.setScaleType(ImageView.ScaleType.CENTER);
        this.pagedownButtonImage.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_goDownButtonIcon), PorterDuff.Mode.MULTIPLY));
        this.pagedownButtonImage.setPadding(0, AndroidUtilities.dp(2.0f), 0, 0);
        Drawable drawable = Theme.createCircleDrawable(AndroidUtilities.dp(42.0f), Theme.getColor(Theme.key_chat_goDownButton));
        Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.pagedown_shadow).mutate();
        shadowDrawable.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_goDownButtonShadow), PorterDuff.Mode.MULTIPLY));
        CombinedDrawable combinedDrawable = new CombinedDrawable(shadowDrawable, drawable, 0, 0);
        combinedDrawable.setIconSize(AndroidUtilities.dp(42.0f), AndroidUtilities.dp(42.0f));
        this.pagedownButtonImage.setBackgroundDrawable(combinedDrawable);
        this.pagedownButton.addView(this.pagedownButtonImage, LayoutHelper.createFrame(46, 46, 81));
        this.pagedownButton.setContentDescription(LocaleController.getString("AccDescrPageDown", R.string.AccDescrPageDown));
        TextView textView6 = new TextView(context2);
        this.pagedownButtonCounter = textView6;
        textView6.setVisibility(4);
        this.pagedownButtonCounter.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.pagedownButtonCounter.setTextSize(1, 13.0f);
        this.pagedownButtonCounter.setTextColor(Theme.getColor(Theme.key_chat_goDownButtonCounter));
        this.pagedownButtonCounter.setGravity(17);
        this.pagedownButtonCounter.setBackgroundDrawable(Theme.createRoundRectDrawable((float) AndroidUtilities.dp(11.5f), Theme.getColor(Theme.key_chat_goDownButtonCounterBackground)));
        this.pagedownButtonCounter.setMinWidth(AndroidUtilities.dp(23.0f));
        this.pagedownButtonCounter.setPadding(AndroidUtilities.dp(8.0f), 0, AndroidUtilities.dp(8.0f), AndroidUtilities.dp(1.0f));
        this.pagedownButton.addView(this.pagedownButtonCounter, LayoutHelper.createFrame(-2, 23, 49));
        ImageView imageView5 = new ImageView(context2);
        this.mentiondownButtonImage = imageView5;
        imageView5.setImageResource(R.drawable.mentionbutton);
        this.mentiondownButtonImage.setScaleType(ImageView.ScaleType.CENTER);
        this.mentiondownButtonImage.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_goDownButtonIcon), PorterDuff.Mode.MULTIPLY));
        this.mentiondownButtonImage.setPadding(0, AndroidUtilities.dp(2.0f), 0, 0);
        Drawable drawable2 = Theme.createCircleDrawable(AndroidUtilities.dp(42.0f), Theme.getColor(Theme.key_chat_goDownButton));
        Drawable shadowDrawable2 = context.getResources().getDrawable(R.drawable.pagedown_shadow).mutate();
        shadowDrawable2.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_goDownButtonShadow), PorterDuff.Mode.MULTIPLY));
        CombinedDrawable combinedDrawable2 = new CombinedDrawable(shadowDrawable2, drawable2, 0, 0);
        combinedDrawable2.setIconSize(AndroidUtilities.dp(42.0f), AndroidUtilities.dp(42.0f));
        CombinedDrawable combinedDrawable3 = combinedDrawable2;
        this.mentiondownButtonImage.setBackgroundDrawable(combinedDrawable3);
        this.mentiondownButton.addView(this.mentiondownButtonImage, LayoutHelper.createFrame(46, 46, 83));
        TextView textView7 = new TextView(context2);
        this.mentiondownButtonCounter = textView7;
        textView7.setVisibility(4);
        this.mentiondownButtonCounter.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.mentiondownButtonCounter.setTextSize(1, 13.0f);
        this.mentiondownButtonCounter.setTextColor(Theme.getColor(Theme.key_chat_goDownButtonCounter));
        this.mentiondownButtonCounter.setGravity(17);
        this.mentiondownButtonCounter.setBackgroundDrawable(Theme.createRoundRectDrawable((float) AndroidUtilities.dp(11.5f), Theme.getColor(Theme.key_chat_goDownButtonCounterBackground)));
        this.mentiondownButtonCounter.setMinWidth(AndroidUtilities.dp(23.0f));
        this.mentiondownButtonCounter.setPadding(AndroidUtilities.dp(8.0f), 0, AndroidUtilities.dp(8.0f), AndroidUtilities.dp(1.0f));
        this.mentiondownButton.addView(this.mentiondownButtonCounter, LayoutHelper.createFrame(-2, 23, 49));
        this.mentiondownButton.setContentDescription(LocaleController.getString("AccDescrMentionDown", R.string.AccDescrMentionDown));
        if (!AndroidUtilities.isTablet() || AndroidUtilities.isSmallTablet()) {
            FragmentContextView fragmentLocationContextView = new FragmentContextView(context2, this, true);
            this.contentView.addView(fragmentLocationContextView, LayoutHelper.createFrame(-1.0f, 39.0f, 51, 0.0f, -36.0f, 0.0f, 0.0f));
            SizeNotifierFrameLayout sizeNotifierFrameLayout2 = this.contentView;
            FragmentContextView fragmentContextView2 = new FragmentContextView(context2, this, false);
            this.fragmentContextView = fragmentContextView2;
            sizeNotifierFrameLayout2.addView(fragmentContextView2, LayoutHelper.createFrame(-1.0f, 39.0f, 51, 0.0f, -36.0f, 0.0f, 0.0f));
            this.fragmentContextView.setAdditionalContextView(fragmentLocationContextView);
            fragmentLocationContextView.setAdditionalContextView(this.fragmentContextView);
        }
        this.contentView.addView(this.actionBar);
        this.pinnedLiveUserImageView = new BackupImageView(context2);
        TLRPC.User user7 = getUserConfig().getCurrentUser();
        AvatarDrawable avatarDrawable = new AvatarDrawable();
        avatarDrawable.setInfo(user7);
        this.pinnedLiveUserImageView.setVisibility(8);
        this.pinnedLiveUserImageView.setRoundRadius(AndroidUtilities.dp(5.0f));
        this.pinnedLiveUserImageView.setImage(ImageLocation.getForUser(user7, false), "50_50", (Drawable) avatarDrawable, (Object) user7);
        this.contentView.addView(this.pinnedLiveUserImageView, LayoutHelper.createFrame(32.0f, 32.0f, 51, 17.0f, 8.0f, 0.0f, 0.0f));
        View view3 = new View(context2);
        this.overlayView = view3;
        view3.setOnTouchListener(new View.OnTouchListener() {
            public final boolean onTouch(View view, MotionEvent motionEvent) {
                return ChatActivity.this.lambda$createView$24$ChatActivity(view, motionEvent);
            }
        });
        this.contentView.addView(this.overlayView, LayoutHelper.createFrame(-1, -1, 51));
        this.overlayView.setVisibility(8);
        InstantCameraView instantCameraView2 = new InstantCameraView(context2, this);
        this.instantCameraView = instantCameraView2;
        this.contentView.addView(instantCameraView2, LayoutHelper.createFrame(-1, -1, 51));
        AnonymousClass26 r07 = new FrameLayout(context2) {
            public void onDraw(Canvas canvas) {
                int bottom = Theme.chat_composeShadowDrawable.getIntrinsicHeight();
                Theme.chat_composeShadowDrawable.setBounds(0, 0, getMeasuredWidth(), bottom);
                Theme.chat_composeShadowDrawable.draw(canvas);
                canvas.drawRect(0.0f, (float) bottom, (float) getMeasuredWidth(), (float) getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
            }
        };
        this.bottomMessagesActionContainer = r07;
        r07.setVisibility(4);
        this.bottomMessagesActionContainer.setWillNotDraw(false);
        this.bottomMessagesActionContainer.setPadding(0, AndroidUtilities.dp(2.0f), 0, 0);
        this.contentView.addView(this.bottomMessagesActionContainer, LayoutHelper.createFrame(-1, 51, 80));
        this.bottomMessagesActionContainer.setOnTouchListener($$Lambda$ChatActivity$tnltFJTtM6PYJNovcj4PUpsYugk.INSTANCE);
        AvatarDrawable avatarDrawable2 = avatarDrawable;
        TLRPC.User user8 = user7;
        CombinedDrawable combinedDrawable4 = combinedDrawable3;
        CombinedDrawable combinedDrawable5 = combinedDrawable2;
        AnonymousClass27 r13 = new ChatActivityEnterView(getParentActivity(), this.contentView, this, true) {
            public boolean onInterceptTouchEvent(MotionEvent ev) {
                if (getAlpha() != 1.0f) {
                    return false;
                }
                return super.onInterceptTouchEvent(ev);
            }

            public boolean onTouchEvent(MotionEvent event) {
                if (getAlpha() != 1.0f) {
                    return false;
                }
                return super.onTouchEvent(event);
            }

            public boolean dispatchTouchEvent(MotionEvent ev) {
                if (getAlpha() != 1.0f) {
                    return false;
                }
                return super.dispatchTouchEvent(ev);
            }
        };
        this.chatActivityEnterView = r13;
        r13.setDelegate(new ChatActivityEnterView.ChatActivityEnterViewDelegate() {
            public void onMessageSend(CharSequence message, boolean notify, int scheduleDate) {
                Bundle bundle = new Bundle();
                int chatId = ChatActivity.this.arguments.getInt("chat_id", 0);
                bundle.putInt("user_id", ChatActivity.this.arguments.getInt("user_id", 0));
                bundle.putInt("chat_id", chatId);
                if (ChatActivity.this.getMessagesController().checkCanOpenChat2(bundle, ChatActivity.this)) {
                    if (!ChatActivity.this.inScheduleMode) {
                        ChatActivity.this.moveScrollToLastMessage();
                    }
                    if (ChatActivity.this.mentionsAdapter != null) {
                        ChatActivity.this.mentionsAdapter.addHashtagsFromMessage(message);
                    }
                    if (scheduleDate != 0) {
                        if (ChatActivity.this.scheduledMessagesCount == -1) {
                            int unused = ChatActivity.this.scheduledMessagesCount = 0;
                        }
                        if (message != null) {
                            ChatActivity.access$18008(ChatActivity.this);
                        }
                        if (ChatActivity.this.forwardingMessages != null && !ChatActivity.this.forwardingMessages.isEmpty()) {
                            ChatActivity chatActivity = ChatActivity.this;
                            int unused2 = chatActivity.scheduledMessagesCount = chatActivity.scheduledMessagesCount + ChatActivity.this.forwardingMessages.size();
                        }
                        ChatActivity.this.updateScheduledInterface(false);
                    }
                    ChatActivity.this.hideFieldPanel(notify, scheduleDate, false);
                }
            }

            public void onSwitchRecordMode(boolean video) {
                ChatActivity.this.showVoiceHint(false, video);
            }

            public void onPreAudioVideoRecord() {
                ChatActivity.this.showVoiceHint(true, false);
            }

            public void onUpdateSlowModeButton(View button, boolean show, CharSequence time) {
                ChatActivity.this.showSlowModeHint(button, show, time);
            }

            public void onTextSelectionChanged(int start, int end) {
                if (ChatActivity.this.editTextItem != null) {
                    if (end - start > 0) {
                        if (ChatActivity.this.editTextItem.getTag() == null) {
                            ChatActivity.this.editTextItem.setTag(1);
                            ChatActivity.this.editTextItem.setVisibility(0);
                            ChatActivity.this.headerItem.setVisibility(8);
                            ChatActivity.this.attachItem.setVisibility(8);
                        }
                        int unused = ChatActivity.this.editTextStart = start;
                        int unused2 = ChatActivity.this.editTextEnd = end;
                    } else if (ChatActivity.this.editTextItem.getTag() != null) {
                        ChatActivity.this.editTextItem.setTag((Object) null);
                        ChatActivity.this.editTextItem.setVisibility(8);
                        if (ChatActivity.this.chatActivityEnterView.hasText()) {
                            ChatActivity.this.headerItem.setVisibility(8);
                            ChatActivity.this.attachItem.setVisibility(0);
                            return;
                        }
                        ChatActivity.this.headerItem.setVisibility(0);
                        ChatActivity.this.attachItem.setVisibility(8);
                    }
                }
            }

            public void onTextChanged(final CharSequence text, boolean bigChange) {
                MediaController.getInstance().setInputFieldHasText(!TextUtils.isEmpty(text) || ChatActivity.this.chatActivityEnterView.isEditingMessage());
                if (ChatActivity.this.stickersAdapter != null && ChatActivity.this.chatActivityEnterView != null && ChatActivity.this.chatActivityEnterView.getVisibility() == 0 && (ChatActivity.this.bottomOverlay == null || ChatActivity.this.bottomOverlay.getVisibility() != 0)) {
                    ChatActivity.this.stickersAdapter.loadStikersForEmoji(text, (ChatActivity.this.currentChat != null && !ChatObject.canSendStickers(ChatActivity.this.currentChat)) || ChatActivity.this.chatActivityEnterView.isEditingMessage());
                }
                if (ChatActivity.this.mentionsAdapter != null) {
                    ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag(text.toString(), ChatActivity.this.chatActivityEnterView.getCursorPosition(), ChatActivity.this.messages, false);
                }
                if (ChatActivity.this.waitingForCharaterEnterRunnable != null) {
                    AndroidUtilities.cancelRunOnUIThread(ChatActivity.this.waitingForCharaterEnterRunnable);
                    Runnable unused = ChatActivity.this.waitingForCharaterEnterRunnable = null;
                }
                if ((ChatActivity.this.currentChat != null && !ChatObject.canSendEmbed(ChatActivity.this.currentChat)) || !ChatActivity.this.chatActivityEnterView.isMessageWebPageSearchEnabled()) {
                    return;
                }
                if (ChatActivity.this.chatActivityEnterView.isEditingMessage() && ChatActivity.this.chatActivityEnterView.isEditingCaption()) {
                    return;
                }
                if (bigChange) {
                    ChatActivity.this.searchLinks(text, true);
                    return;
                }
                Runnable unused2 = ChatActivity.this.waitingForCharaterEnterRunnable = new Runnable() {
                    public void run() {
                        if (this == ChatActivity.this.waitingForCharaterEnterRunnable) {
                            ChatActivity.this.searchLinks(text, false);
                            Runnable unused = ChatActivity.this.waitingForCharaterEnterRunnable = null;
                        }
                    }
                };
                AndroidUtilities.runOnUIThread(ChatActivity.this.waitingForCharaterEnterRunnable, AndroidUtilities.WEB_URL == null ? 3000 : 1000);
            }

            public void onTextSpansChanged(CharSequence text) {
                ChatActivity.this.searchLinks(text, true);
            }

            public void needSendTyping() {
                ChatActivity.this.getMessagesController().sendTyping(ChatActivity.this.dialog_id, 0, ChatActivity.this.classGuid);
            }

            public void onAttachButtonHidden() {
                if (!ChatActivity.this.actionBar.isSearchFieldVisible()) {
                    if (ChatActivity.this.headerItem != null) {
                        ChatActivity.this.headerItem.setVisibility(8);
                    }
                    if (ChatActivity.this.editTextItem != null) {
                        ChatActivity.this.editTextItem.setVisibility(8);
                    }
                    if (ChatActivity.this.attachItem != null) {
                        ChatActivity.this.attachItem.setVisibility(0);
                    }
                }
            }

            public void onAttachButtonShow() {
                if (!ChatActivity.this.actionBar.isSearchFieldVisible()) {
                    if (ChatActivity.this.headerItem != null) {
                        ChatActivity.this.headerItem.setVisibility(0);
                    }
                    if (ChatActivity.this.editTextItem != null) {
                        ChatActivity.this.editTextItem.setVisibility(8);
                    }
                    if (ChatActivity.this.attachItem != null) {
                        ChatActivity.this.attachItem.setVisibility(8);
                    }
                }
            }

            public void onMessageEditEnd(boolean loading) {
                if (!loading) {
                    ChatActivity.this.mentionsAdapter.setNeedBotContext(ChatActivity.this.currentEncryptedChat == null || AndroidUtilities.getPeerLayerVersion(ChatActivity.this.currentEncryptedChat.layer) >= 46);
                    if (ChatActivity.this.editingMessageObject != null) {
                        ChatActivity.this.hideFieldPanel(false);
                    }
                    ChatActivity.this.chatActivityEnterView.setAllowStickersAndGifs(ChatActivity.this.currentEncryptedChat == null || AndroidUtilities.getPeerLayerVersion(ChatActivity.this.currentEncryptedChat.layer) >= 23, ChatActivity.this.currentEncryptedChat == null || AndroidUtilities.getPeerLayerVersion(ChatActivity.this.currentEncryptedChat.layer) >= 46);
                    if (ChatActivity.this.editingMessageObjectReqId != 0) {
                        ChatActivity.this.getConnectionsManager().cancelRequest(ChatActivity.this.editingMessageObjectReqId, true);
                        int unused = ChatActivity.this.editingMessageObjectReqId = 0;
                    }
                    ChatActivity.this.updatePinnedMessageView(true);
                    ChatActivity.this.updateBottomOverlay();
                    ChatActivity.this.updateVisibleRows();
                }
            }

            public void onWindowSizeChanged(int size) {
                if (size < AndroidUtilities.dp(72.0f) + ActionBar.getCurrentActionBarHeight()) {
                    boolean unused = ChatActivity.this.allowStickersPanel = false;
                    if (ChatActivity.this.stickersPanel.getVisibility() == 0) {
                        ChatActivity.this.stickersPanel.setVisibility(4);
                    }
                    if (ChatActivity.this.mentionContainer != null && ChatActivity.this.mentionContainer.getVisibility() == 0) {
                        ChatActivity.this.mentionContainer.setVisibility(4);
                        ChatActivity.this.updateMessageListAccessibilityVisibility();
                    }
                } else {
                    boolean unused2 = ChatActivity.this.allowStickersPanel = true;
                    if (ChatActivity.this.stickersPanel.getVisibility() == 4) {
                        ChatActivity.this.stickersPanel.setVisibility(0);
                    }
                    if (ChatActivity.this.mentionContainer != null && ChatActivity.this.mentionContainer.getVisibility() == 4 && (!ChatActivity.this.mentionsAdapter.isBotContext() || ChatActivity.this.allowContextBotPanel || ChatActivity.this.allowContextBotPanelSecond)) {
                        ChatActivity.this.mentionContainer.setVisibility(0);
                        ChatActivity.this.mentionContainer.setTag((Object) null);
                        ChatActivity.this.updateMessageListAccessibilityVisibility();
                    }
                }
                ChatActivity chatActivity = ChatActivity.this;
                boolean unused3 = chatActivity.allowContextBotPanel = true ^ chatActivity.chatActivityEnterView.isPopupShowing();
                ChatActivity.this.checkContextBotPanel();
            }

            public void onStickersTab(boolean opened) {
                if (ChatActivity.this.emojiButtonRed != null) {
                    ChatActivity.this.emojiButtonRed.setVisibility(8);
                }
                boolean unused = ChatActivity.this.allowContextBotPanelSecond = !opened;
                ChatActivity.this.checkContextBotPanel();
            }

            public void didPressedAttachButton(int positon, ChatEnterMenuType menuType) {
                if (positon != 100) {
                    int button = 0;
                    if (ChatActivity.this.currentUser != null) {
                        if (menuType == ChatEnterMenuType.ALBUM) {
                            button = 1;
                        } else if (menuType == ChatEnterMenuType.CAMERA) {
                            if (SharedConfig.inappCamera) {
                                ChatActivity.this.openCameraView();
                                return;
                            }
                        } else if (menuType == ChatEnterMenuType.DOCUMENT) {
                            button = 4;
                        } else if (menuType == ChatEnterMenuType.LOCATION) {
                            button = 6;
                        } else if (menuType == ChatEnterMenuType.CONTACTS) {
                            button = 5;
                        } else if (menuType == ChatEnterMenuType.MUSIC) {
                            button = 3;
                        } else if (menuType == ChatEnterMenuType.TRANSFER) {
                            ChatActivity.this.getAccountInfo(false);
                            return;
                        } else if (menuType == ChatEnterMenuType.REDPACKET) {
                            ChatActivity.this.getAccountInfo(true);
                            return;
                        } else if (menuType == ChatEnterMenuType.FAVORITE) {
                            ToastUtils.show((CharSequence) "devoping....");
                            return;
                        } else if (positon == 7) {
                            button = 3;
                        } else if (menuType == ChatEnterMenuType.VOICECALL) {
                            button = 1010;
                        } else if (menuType == ChatEnterMenuType.VIDEOCALL) {
                            button = 1011;
                        } else if (menuType == ChatEnterMenuType.GROUP_LIVE) {
                            button = 1012;
                        }
                    } else if (menuType == ChatEnterMenuType.ALBUM) {
                        button = 1;
                    } else if (menuType != ChatEnterMenuType.CAMERA) {
                        if (menuType == ChatEnterMenuType.DOCUMENT) {
                            button = 4;
                        } else if (menuType == ChatEnterMenuType.LOCATION) {
                            button = 6;
                        } else if (menuType == ChatEnterMenuType.CONTACTS) {
                            button = 5;
                        } else if (menuType == ChatEnterMenuType.POLL) {
                            button = 9;
                        } else if (menuType == ChatEnterMenuType.MUSIC) {
                            button = 3;
                        } else if (menuType == ChatEnterMenuType.REDPACKET) {
                            ChatActivity.this.getAccountInfo(true);
                            return;
                        } else if (menuType == ChatEnterMenuType.FAVORITE) {
                            ToastUtils.show((CharSequence) "devoping....");
                            return;
                        } else if (menuType == ChatEnterMenuType.VOICECALL) {
                            button = 1010;
                        } else if (menuType == ChatEnterMenuType.VIDEOCALL) {
                            button = 1011;
                        } else if (menuType == ChatEnterMenuType.GROUP_LIVE) {
                            button = 1012;
                        }
                    }
                    ChatActivity.this.processSelectedAttach(button);
                }
            }

            public void needStartRecordVideo(int state, boolean notify, int scheduleDate) {
                if (ChatActivity.this.instantCameraView == null) {
                    return;
                }
                if (state == 0) {
                    ChatActivity.this.instantCameraView.showCamera();
                } else if (state == 1 || state == 3 || state == 4) {
                    ChatActivity.this.instantCameraView.send(state, notify, scheduleDate);
                } else if (state == 2) {
                    ChatActivity.this.instantCameraView.cancel();
                }
            }

            public void needChangeVideoPreviewState(int state, float seekProgress) {
                if (ChatActivity.this.instantCameraView != null) {
                    ChatActivity.this.instantCameraView.changeVideoPreviewState(state, seekProgress);
                }
            }

            public void needStartRecordAudio(int state) {
                int visibility = state == 0 ? 8 : 0;
                if (ChatActivity.this.overlayView.getVisibility() != visibility) {
                    ChatActivity.this.overlayView.setVisibility(visibility);
                }
            }

            public void needShowMediaBanHint() {
                ChatActivity.this.showMediaBannedHint();
            }

            public void onStickersExpandedChange() {
                ChatActivity.this.checkRaiseSensors();
            }

            public void scrollToSendingMessage() {
                int id = ChatActivity.this.getSendMessagesHelper().getSendingMessageId(ChatActivity.this.dialog_id);
                if (id != 0) {
                    ChatActivity.this.scrollToMessageId(id, 0, true, 0, false);
                }
            }

            public boolean hasScheduledMessages() {
                return ChatActivity.this.scheduledMessagesCount > 0 && !ChatActivity.this.inScheduleMode;
            }

            public void openScheduledMessages() {
                ChatActivity.this.openScheduledMessages();
            }
        });
        this.chatActivityEnterView.setDialogId(this.dialog_id, this.currentAccount);
        TLRPC.ChatFull chatFull2 = this.chatInfo;
        if (chatFull2 != null) {
            this.chatActivityEnterView.setChatInfo(chatFull2);
        }
        this.chatActivityEnterView.setId(1000);
        this.chatActivityEnterView.setBotsCount(this.botsCount, this.hasBotsCommands);
        this.chatActivityEnterView.setMinimumHeight(AndroidUtilities.dp(51.0f));
        ChatActivityEnterView chatActivityEnterView3 = this.chatActivityEnterView;
        TLRPC.EncryptedChat encryptedChat3 = this.currentEncryptedChat;
        boolean z2 = encryptedChat3 == null || AndroidUtilities.getPeerLayerVersion(encryptedChat3.layer) >= 23;
        TLRPC.EncryptedChat encryptedChat4 = this.currentEncryptedChat;
        chatActivityEnterView3.setAllowStickersAndGifs(z2, encryptedChat4 == null || AndroidUtilities.getPeerLayerVersion(encryptedChat4.layer) >= 46);
        if (this.inPreviewMode) {
            this.chatActivityEnterView.setVisibility(4);
        }
        SizeNotifierFrameLayout sizeNotifierFrameLayout3 = this.contentView;
        sizeNotifierFrameLayout3.addView(this.chatActivityEnterView, sizeNotifierFrameLayout3.getChildCount() - 1, LayoutHelper.createFrame(-1, -2, 83));
        AnonymousClass29 r6 = new FrameLayout(context2) {
            public void setTranslationY(float translationY) {
                super.setTranslationY(translationY);
                if (ChatActivity.this.chatActivityEnterView != null) {
                    ChatActivity.this.chatActivityEnterView.invalidate();
                }
                if (getVisibility() != 8) {
                    if (ChatActivity.this.chatListView != null) {
                        ChatActivity.this.chatListView.setTranslationY(translationY);
                    }
                    if (ChatActivity.this.progressView != null) {
                        ChatActivity.this.progressView.setTranslationY(translationY);
                    }
                    if (ChatActivity.this.mentionContainer != null) {
                        ChatActivity.this.mentionContainer.setTranslationY(translationY);
                    }
                    if (ChatActivity.this.pagedownButton != null) {
                        ChatActivity.this.pagedownButton.setTranslationY(translationY);
                    }
                    if (ChatActivity.this.mentiondownButton != null) {
                        ChatActivity.this.mentiondownButton.setTranslationY(ChatActivity.this.pagedownButton.getVisibility() != 0 ? translationY : translationY - ((float) AndroidUtilities.dp(72.0f)));
                    }
                    ChatActivity.this.updateMessagesVisiblePart(false);
                    if (ChatActivity.this.fragmentView != null) {
                        ChatActivity.this.fragmentView.invalidate();
                    }
                }
            }

            public boolean hasOverlappingRendering() {
                return false;
            }

            public void setVisibility(int visibility) {
                super.setVisibility(visibility);
                if (visibility == 8) {
                    float f = 0.0f;
                    if (ChatActivity.this.chatListView != null) {
                        ChatActivity.this.chatListView.setTranslationY(0.0f);
                    }
                    if (ChatActivity.this.progressView != null) {
                        ChatActivity.this.progressView.setTranslationY(0.0f);
                    }
                    if (ChatActivity.this.mentionContainer != null) {
                        ChatActivity.this.mentionContainer.setTranslationY(0.0f);
                    }
                    if (ChatActivity.this.pagedownButton != null) {
                        FrameLayout access$7600 = ChatActivity.this.pagedownButton;
                        if (ChatActivity.this.pagedownButton.getTag() == null) {
                            f = (float) AndroidUtilities.dp(100.0f);
                        }
                        access$7600.setTranslationY(f);
                    }
                    if (ChatActivity.this.mentiondownButton != null) {
                        ChatActivity.this.mentiondownButton.setTranslationY((float) (ChatActivity.this.mentiondownButton.getTag() == null ? AndroidUtilities.dp(100.0f) : ChatActivity.this.pagedownButton.getVisibility() == 0 ? -AndroidUtilities.dp(72.0f) : 0));
                    }
                }
            }
        };
        View view4 = new View(context2);
        this.replyLineView = view4;
        view4.setBackgroundColor(Theme.getColor(Theme.key_chat_replyPanelLine));
        this.chatActivityEnterView.addTopView(r6, this.replyLineView, 48);
        r6.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$26$ChatActivity(view);
            }
        });
        ImageView imageView6 = new ImageView(context2);
        this.replyIconImageView = imageView6;
        imageView6.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_replyPanelIcons), PorterDuff.Mode.MULTIPLY));
        this.replyIconImageView.setScaleType(ImageView.ScaleType.CENTER);
        r6.addView(this.replyIconImageView, LayoutHelper.createFrame(52, 46, 51));
        ImageView imageView7 = new ImageView(context2);
        this.replyCloseImageView = imageView7;
        imageView7.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_replyPanelClose), PorterDuff.Mode.MULTIPLY));
        this.replyCloseImageView.setImageResource(R.drawable.input_clear);
        this.replyCloseImageView.setScaleType(ImageView.ScaleType.CENTER);
        r6.addView(this.replyCloseImageView, LayoutHelper.createFrame(52.0f, 46.0f, 53, 0.0f, 0.5f, 0.0f, 0.0f));
        this.replyCloseImageView.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$27$ChatActivity(view);
            }
        });
        SimpleTextView simpleTextView5 = new SimpleTextView(context2);
        this.replyNameTextView = simpleTextView5;
        simpleTextView5.setTextSize(14);
        this.replyNameTextView.setTextColor(Theme.getColor(Theme.key_chat_replyPanelName));
        this.replyNameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        r6.addView(this.replyNameTextView, LayoutHelper.createFrame(-1.0f, 18.0f, 51, 52.0f, 6.0f, 52.0f, 0.0f));
        SimpleTextView simpleTextView6 = new SimpleTextView(context2);
        this.replyObjectTextView = simpleTextView6;
        simpleTextView6.setTextSize(14);
        this.replyObjectTextView.setTextColor(Theme.getColor(Theme.key_chat_replyPanelMessage));
        r6.addView(this.replyObjectTextView, LayoutHelper.createFrame(-1.0f, 18.0f, 51, 52.0f, 24.0f, 52.0f, 0.0f));
        BackupImageView backupImageView2 = new BackupImageView(context2);
        this.replyImageView = backupImageView2;
        r6.addView(backupImageView2, LayoutHelper.createFrame(34.0f, 34.0f, 51, 52.0f, 6.0f, 0.0f, 0.0f));
        FrameLayout frameLayout8 = new FrameLayout(context2);
        this.stickersPanel = frameLayout8;
        frameLayout8.setVisibility(8);
        this.contentView.addView(this.stickersPanel, LayoutHelper.createFrame(-2.0f, 81.5f, 83, 0.0f, 0.0f, 0.0f, 38.0f));
        final ContentPreviewViewer.ContentPreviewViewerDelegate contentPreviewViewerDelegate = new ContentPreviewViewer.ContentPreviewViewerDelegate() {
            public /* synthetic */ void gifAddedOrDeleted() {
                ContentPreviewViewer.ContentPreviewViewerDelegate.CC.$default$gifAddedOrDeleted(this);
            }

            public /* synthetic */ boolean needOpen() {
                return ContentPreviewViewer.ContentPreviewViewerDelegate.CC.$default$needOpen(this);
            }

            public /* synthetic */ void sendGif(Object obj, boolean z, int i) {
                ContentPreviewViewer.ContentPreviewViewerDelegate.CC.$default$sendGif(this, obj, z, i);
            }

            public void sendSticker(TLRPC.Document sticker, Object parent, boolean notify, int scheduleDate) {
                ChatActivity.this.chatActivityEnterView.lambda$onStickerSelected$28$ChatActivityEnterView(sticker, parent, true, notify, scheduleDate);
            }

            public boolean needSend() {
                return false;
            }

            public boolean canSchedule() {
                return ChatActivity.this.canScheduleMessage();
            }

            public boolean isInScheduleMode() {
                return ChatActivity.this.inScheduleMode;
            }

            public void openSet(TLRPC.InputStickerSet set, boolean clearsInputField) {
                if (set != null && ChatActivity.this.getParentActivity() != null) {
                    TLRPC.TL_inputStickerSetID inputStickerSet = new TLRPC.TL_inputStickerSetID();
                    inputStickerSet.access_hash = set.access_hash;
                    inputStickerSet.id = set.id;
                    FragmentActivity parentActivity = ChatActivity.this.getParentActivity();
                    ChatActivity chatActivity = ChatActivity.this;
                    StickersAlert alert = new StickersAlert(parentActivity, chatActivity, inputStickerSet, (TLRPC.TL_messages_stickerSet) null, chatActivity.chatActivityEnterView);
                    alert.setClearsInputField(clearsInputField);
                    ChatActivity.this.showDialog(alert);
                }
            }
        };
        AnonymousClass31 r08 = new RecyclerListView(context2) {
            public boolean onInterceptTouchEvent(MotionEvent event) {
                boolean result = ContentPreviewViewer.getInstance().onInterceptTouchEvent(event, ChatActivity.this.stickersListView, 0, contentPreviewViewerDelegate);
                if (super.onInterceptTouchEvent(event) || result) {
                    return true;
                }
                return false;
            }
        };
        this.stickersListView = r08;
        r08.setTag(3);
        this.stickersListView.setOnTouchListener(new View.OnTouchListener(contentPreviewViewerDelegate) {
            private final /* synthetic */ ContentPreviewViewer.ContentPreviewViewerDelegate f$1;

            {
                this.f$1 = r2;
            }

            public final boolean onTouch(View view, MotionEvent motionEvent) {
                return ChatActivity.this.lambda$createView$28$ChatActivity(this.f$1, view, motionEvent);
            }
        });
        this.stickersListView.setDisallowInterceptTouchEvents(true);
        LinearLayoutManager layoutManager = new LinearLayoutManager(context2);
        layoutManager.setOrientation(0);
        this.stickersListView.setLayoutManager(layoutManager);
        this.stickersListView.setClipToPadding(false);
        this.stickersListView.setOverScrollMode(2);
        this.stickersPanel.addView(this.stickersListView, LayoutHelper.createFrame(-1, 78.0f));
        initStickers();
        ImageView imageView8 = new ImageView(context2);
        this.stickersPanelArrow = imageView8;
        imageView8.setImageResource(R.drawable.stickers_back_arrow);
        this.stickersPanelArrow.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_stickersHintPanel), PorterDuff.Mode.MULTIPLY));
        this.stickersPanel.addView(this.stickersPanelArrow, LayoutHelper.createFrame(-2.0f, -2.0f, 83, 53.0f, 0.0f, 53.0f, 0.0f));
        AnonymousClass32 r09 = new FrameLayout(context2) {
            public void onDraw(Canvas canvas) {
                int bottom = Theme.chat_composeShadowDrawable.getIntrinsicHeight();
                Theme.chat_composeShadowDrawable.setBounds(0, 0, getMeasuredWidth(), bottom);
                Theme.chat_composeShadowDrawable.draw(canvas);
                canvas.drawRect(0.0f, (float) bottom, (float) getMeasuredWidth(), (float) getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
            }
        };
        this.searchContainer = r09;
        r09.setOnTouchListener($$Lambda$ChatActivity$WhNmdTBclF7YV9fi5byo0W3qiI.INSTANCE);
        this.searchContainer.setWillNotDraw(false);
        this.searchContainer.setVisibility(4);
        this.searchContainer.setFocusable(true);
        this.searchContainer.setFocusableInTouchMode(true);
        this.searchContainer.setClickable(true);
        this.searchContainer.setPadding(0, AndroidUtilities.dp(3.0f), 0, 0);
        ImageView imageView9 = new ImageView(context2);
        this.searchUpButton = imageView9;
        imageView9.setScaleType(ImageView.ScaleType.CENTER);
        this.searchUpButton.setImageResource(R.drawable.msg_go_up);
        this.searchUpButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_searchPanelIcons), PorterDuff.Mode.MULTIPLY));
        this.searchUpButton.setBackgroundDrawable(Theme.createSelectorDrawable(Theme.getColor(Theme.key_actionBarActionModeDefaultSelector), 1));
        this.searchContainer.addView(this.searchUpButton, LayoutHelper.createFrame(48.0f, 48.0f, 53, 0.0f, 0.0f, 48.0f, 0.0f));
        this.searchUpButton.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$30$ChatActivity(view);
            }
        });
        this.searchUpButton.setContentDescription(LocaleController.getString("AccDescrSearchNext", R.string.AccDescrSearchNext));
        ImageView imageView10 = new ImageView(context2);
        this.searchDownButton = imageView10;
        imageView10.setScaleType(ImageView.ScaleType.CENTER);
        this.searchDownButton.setImageResource(R.drawable.msg_go_down);
        this.searchDownButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_searchPanelIcons), PorterDuff.Mode.MULTIPLY));
        this.searchDownButton.setBackgroundDrawable(Theme.createSelectorDrawable(Theme.getColor(Theme.key_actionBarActionModeDefaultSelector), 1));
        this.searchContainer.addView(this.searchDownButton, LayoutHelper.createFrame(48.0f, 48.0f, 53, 0.0f, 0.0f, 0.0f, 0.0f));
        this.searchDownButton.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$31$ChatActivity(view);
            }
        });
        this.searchDownButton.setContentDescription(LocaleController.getString("AccDescrSearchPrev", R.string.AccDescrSearchPrev));
        TLRPC.Chat chat6 = this.currentChat;
        if (chat6 != null && (!ChatObject.isChannel(chat6) || this.currentChat.megagroup)) {
            ImageView imageView11 = new ImageView(context2);
            this.searchUserButton = imageView11;
            imageView11.setScaleType(ImageView.ScaleType.CENTER);
            this.searchUserButton.setImageResource(R.drawable.msg_usersearch);
            this.searchUserButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_searchPanelIcons), PorterDuff.Mode.MULTIPLY));
            this.searchUserButton.setBackgroundDrawable(Theme.createSelectorDrawable(Theme.getColor(Theme.key_actionBarActionModeDefaultSelector), 1));
            this.searchContainer.addView(this.searchUserButton, LayoutHelper.createFrame(48.0f, 48.0f, 51, 48.0f, 0.0f, 0.0f, 0.0f));
            this.searchUserButton.setOnClickListener(new View.OnClickListener() {
                public final void onClick(View view) {
                    ChatActivity.this.lambda$createView$32$ChatActivity(view);
                }
            });
            this.searchUserButton.setContentDescription(LocaleController.getString("AccDescrSearchByUser", R.string.AccDescrSearchByUser));
        }
        ImageView imageView12 = new ImageView(context2);
        this.searchCalendarButton = imageView12;
        imageView12.setScaleType(ImageView.ScaleType.CENTER);
        this.searchCalendarButton.setImageResource(R.drawable.msg_calendar);
        this.searchCalendarButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_searchPanelIcons), PorterDuff.Mode.MULTIPLY));
        this.searchCalendarButton.setBackgroundDrawable(Theme.createSelectorDrawable(Theme.getColor(Theme.key_actionBarActionModeDefaultSelector), 1));
        this.searchContainer.addView(this.searchCalendarButton, LayoutHelper.createFrame(48, 48, 51));
        this.searchCalendarButton.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$36$ChatActivity(view);
            }
        });
        this.searchCalendarButton.setContentDescription(LocaleController.getString("JumpToDate", R.string.JumpToDate));
        SimpleTextView simpleTextView7 = new SimpleTextView(context2);
        this.searchCountText = simpleTextView7;
        simpleTextView7.setTextColor(Theme.getColor(Theme.key_chat_searchPanelText));
        this.searchCountText.setTextSize(15);
        this.searchCountText.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.searchCountText.setGravity(5);
        this.searchContainer.addView(this.searchCountText, LayoutHelper.createFrame(-2.0f, -2.0f, 21, 0.0f, 0.0f, 108.0f, 0.0f));
        AnonymousClass33 r010 = new FrameLayout(context2) {
            public void onDraw(Canvas canvas) {
                int bottom = Theme.chat_composeShadowDrawable.getIntrinsicHeight();
                Theme.chat_composeShadowDrawable.setBounds(0, 0, getMeasuredWidth(), bottom);
                Theme.chat_composeShadowDrawable.draw(canvas);
                canvas.drawRect(0.0f, (float) bottom, (float) getMeasuredWidth(), (float) getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
            }
        };
        this.bottomOverlay = r010;
        r010.setWillNotDraw(false);
        this.bottomOverlay.setVisibility(4);
        this.bottomOverlay.setFocusable(true);
        this.bottomOverlay.setFocusableInTouchMode(true);
        this.bottomOverlay.setClickable(true);
        this.bottomOverlay.setPadding(0, AndroidUtilities.dp(2.0f), 0, 0);
        this.contentView.addView(this.bottomOverlay, LayoutHelper.createFrame(-1, 51, 80));
        TextView textView8 = new TextView(context2);
        this.bottomOverlayText = textView8;
        textView8.setTextSize(1, 14.0f);
        this.bottomOverlayText.setGravity(17);
        this.bottomOverlayText.setMaxLines(2);
        this.bottomOverlayText.setEllipsize(TextUtils.TruncateAt.END);
        this.bottomOverlayText.setLineSpacing((float) AndroidUtilities.dp(2.0f), 1.0f);
        this.bottomOverlayText.setTextColor(Theme.getColor(Theme.key_chat_secretChatStatusText));
        this.bottomOverlay.addView(this.bottomOverlayText, LayoutHelper.createFrame(-2.0f, -2.0f, 17, 14.0f, 0.0f, 14.0f, 0.0f));
        AnonymousClass34 r011 = new FrameLayout(context2) {
            /* access modifiers changed from: protected */
            public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                int allWidth = View.MeasureSpec.getSize(widthMeasureSpec);
                if (ChatActivity.this.bottomOverlayChatText.getVisibility() == 0 && ChatActivity.this.bottomOverlayChatText2.getVisibility() == 0) {
                    ((FrameLayout.LayoutParams) ChatActivity.this.bottomOverlayChatText.getLayoutParams()).width = allWidth / 2;
                    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) ChatActivity.this.bottomOverlayChatText2.getLayoutParams();
                    layoutParams.width = allWidth / 2;
                    layoutParams.leftMargin = allWidth / 2;
                } else {
                    ((FrameLayout.LayoutParams) ChatActivity.this.bottomOverlayChatText.getLayoutParams()).width = allWidth;
                }
                super.onMeasure(widthMeasureSpec, heightMeasureSpec);
            }

            public void onDraw(Canvas canvas) {
                int bottom = Theme.chat_composeShadowDrawable.getIntrinsicHeight();
                Theme.chat_composeShadowDrawable.setBounds(0, 0, getMeasuredWidth(), bottom);
                Theme.chat_composeShadowDrawable.draw(canvas);
                canvas.drawRect(0.0f, (float) bottom, (float) getMeasuredWidth(), (float) getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
            }
        };
        this.bottomOverlayChat = r011;
        r011.setWillNotDraw(false);
        this.bottomOverlayChat.setPadding(0, AndroidUtilities.dp(3.0f), 0, 0);
        this.bottomOverlayChat.setVisibility(4);
        this.contentView.addView(this.bottomOverlayChat, LayoutHelper.createFrame(-1, 51, 80));
        TextView textView9 = new TextView(context2);
        this.bottomOverlayChatText = textView9;
        textView9.setTextSize(1, 15.0f);
        this.bottomOverlayChatText.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.bottomOverlayChatText.setTextColor(Theme.getColor(Theme.key_chat_fieldOverlayText));
        this.bottomOverlayChatText.setGravity(17);
        this.bottomOverlayChat.addView(this.bottomOverlayChatText, LayoutHelper.createFrame(-1, -1.0f));
        this.bottomOverlayChatText.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$39$ChatActivity(view);
            }
        });
        UnreadCounterTextView unreadCounterTextView = new UnreadCounterTextView(context2);
        this.bottomOverlayChatText2 = unreadCounterTextView;
        unreadCounterTextView.setTextSize(1, 15.0f);
        this.bottomOverlayChatText2.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.bottomOverlayChatText2.setTextColor(Theme.getColor(Theme.key_chat_fieldOverlayText));
        this.bottomOverlayChatText2.setGravity(17);
        this.bottomOverlayChatText2.setVisibility(8);
        this.bottomOverlayChat.addView(this.bottomOverlayChatText2, LayoutHelper.createFrame(-1, -1.0f));
        this.bottomOverlayChatText2.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$40$ChatActivity(view);
            }
        });
        RadialProgressView radialProgressView2 = new RadialProgressView(context2);
        this.bottomOverlayProgress = radialProgressView2;
        radialProgressView2.setSize(AndroidUtilities.dp(22.0f));
        this.bottomOverlayProgress.setProgressColor(Theme.getColor(Theme.key_chat_fieldOverlayText));
        this.bottomOverlayProgress.setVisibility(4);
        this.bottomOverlayProgress.setScaleX(0.1f);
        this.bottomOverlayProgress.setScaleY(0.1f);
        this.bottomOverlayProgress.setAlpha(1.0f);
        this.bottomOverlayChat.addView(this.bottomOverlayProgress, LayoutHelper.createFrame(30, 30, 17));
        TextView textView10 = new TextView(context2);
        this.replyButton = textView10;
        textView10.setText(LocaleController.getString("Reply", R.string.Reply));
        this.replyButton.setGravity(16);
        this.replyButton.setTextSize(1, 15.0f);
        this.replyButton.setPadding(AndroidUtilities.dp(14.0f), 0, AndroidUtilities.dp(21.0f), 0);
        this.replyButton.setBackgroundDrawable(Theme.createSelectorDrawable(Theme.getColor(Theme.key_actionBarActionModeDefaultSelector), 3));
        this.replyButton.setTextColor(Theme.getColor(Theme.key_actionBarActionModeDefaultIcon));
        this.replyButton.setCompoundDrawablePadding(AndroidUtilities.dp(7.0f));
        this.replyButton.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        Drawable image = context.getResources().getDrawable(R.drawable.input_reply).mutate();
        image.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_actionBarActionModeDefaultIcon), PorterDuff.Mode.MULTIPLY));
        this.replyButton.setCompoundDrawablesWithIntrinsicBounds(image, (Drawable) null, (Drawable) null, (Drawable) null);
        this.replyButton.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$41$ChatActivity(view);
            }
        });
        Drawable drawable3 = image;
        this.bottomMessagesActionContainer.addView(this.replyButton, LayoutHelper.createFrame(-2, -1, 51));
        TextView textView11 = new TextView(context2);
        this.forwardButton = textView11;
        textView11.setText(LocaleController.getString("Forward", R.string.Forward));
        this.forwardButton.setGravity(16);
        this.forwardButton.setTextSize(1, 15.0f);
        this.forwardButton.setPadding(AndroidUtilities.dp(21.0f), 0, AndroidUtilities.dp(21.0f), 0);
        this.forwardButton.setCompoundDrawablePadding(AndroidUtilities.dp(6.0f));
        this.forwardButton.setBackgroundDrawable(Theme.createSelectorDrawable(Theme.getColor(Theme.key_actionBarActionModeDefaultSelector), 3));
        this.forwardButton.setTextColor(Theme.getColor(Theme.key_actionBarActionModeDefaultIcon));
        this.forwardButton.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        Drawable image2 = context.getResources().getDrawable(R.drawable.input_forward).mutate();
        image2.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_actionBarActionModeDefaultIcon), PorterDuff.Mode.MULTIPLY));
        this.forwardButton.setCompoundDrawablesWithIntrinsicBounds(image2, (Drawable) null, (Drawable) null, (Drawable) null);
        this.forwardButton.setOnClickListener(new View.OnClickListener() {
            public final void onClick(View view) {
                ChatActivity.this.lambda$createView$42$ChatActivity(view);
            }
        });
        this.bottomMessagesActionContainer.addView(this.forwardButton, LayoutHelper.createFrame(-2, -1, 53));
        this.contentView.addView(this.searchContainer, LayoutHelper.createFrame(-1, 51, 80));
        UndoView undoView2 = new UndoView(context2);
        this.undoView = undoView2;
        this.contentView.addView(undoView2, LayoutHelper.createFrame(-1.0f, -2.0f, 83, 8.0f, 0.0f, 8.0f, 8.0f));
        if (this.currentChat != null) {
            HintView hintView = new HintView(getParentActivity(), 2);
            this.slowModeHint = hintView;
            hintView.setAlpha(0.0f);
            this.slowModeHint.setVisibility(4);
            this.contentView.addView(this.slowModeHint, LayoutHelper.createFrame(-2.0f, -2.0f, 51, 19.0f, 0.0f, 19.0f, 0.0f));
        }
        this.chatAdapter.updateRows();
        if (!this.loading || !this.messages.isEmpty()) {
            z = false;
            listViewShowEmptyView(false, false);
        } else {
            listViewShowEmptyView(true, this.chatAdapter.botInfoRow == -1);
            z = false;
        }
        checkBotKeyboard();
        updateBottomOverlay();
        updateSecretStatus();
        updateTopPanel(z);
        updatePinnedMessageView(true);
        try {
            if (this.currentEncryptedChat != null && Build.VERSION.SDK_INT >= 23 && (SharedConfig.passcodeHash.length() == 0 || SharedConfig.allowScreenCapture)) {
                MediaController.getInstance().setFlagSecure(this, true);
            }
        } catch (Throwable e2) {
            FileLog.e(e2);
        }
        CharSequence oldMessage3 = oldMessage2;
        if (oldMessage3 != null) {
            this.chatActivityEnterView.setFieldText(oldMessage3);
        }
        fixLayoutInternal();
        if (isSysNotifyMessage().booleanValue()) {
            int i2 = this.createUnreadMessageAfterId;
            if (i2 != 0) {
                LinearLayoutManager linearLayoutManager = layoutManager;
                AnonymousClass29 r18 = r6;
                scrollToMessageId(i2, 0, false, this.returnToLoadIndex, false);
            } else {
                AnonymousClass29 r182 = r6;
                int i3 = this.returnToMessageId;
                if (i3 > 0) {
                    scrollToMessageId(i3, 0, true, this.returnToLoadIndex, false);
                } else {
                    scrollToLastMessage(true);
                }
            }
        } else {
            AnonymousClass29 r183 = r6;
        }
        return this.fragmentView;
    }

    static /* synthetic */ boolean lambda$createView$4(View v, MotionEvent event) {
        return true;
    }

    static /* synthetic */ boolean lambda$createView$5(View v, MotionEvent event) {
        return true;
    }

    public /* synthetic */ void lambda$createView$6$ChatActivity(View view) {
        if (this.floatingDateView.getAlpha() != 0.0f && !this.actionBar.isActionModeShowed()) {
            Calendar calendar = Calendar.getInstance();
            calendar.setTimeInMillis(((long) this.floatingDateView.getCustomDate()) * 1000);
            int year = calendar.get(1);
            int monthOfYear = calendar.get(2);
            int dayOfMonth = calendar.get(5);
            calendar.clear();
            calendar.set(year, monthOfYear, dayOfMonth);
            jumpToDate((int) (calendar.getTime().getTime() / 1000));
        }
    }

    public /* synthetic */ void lambda$createView$7$ChatActivity(View v) {
        this.wasManualScroll = true;
        TLRPC.ChatFull chatFull = this.chatInfo;
        if (chatFull != null) {
            scrollToMessageId(chatFull.pinned_msg_id, 0, true, 0, false);
            return;
        }
        TLRPC.UserFull userFull = this.userInfo;
        if (userFull != null) {
            scrollToMessageId(userFull.pinned_msg_id, 0, true, 0, false);
        }
    }

    static /* synthetic */ void lambda$createView$8(View v) {
    }

    public /* synthetic */ void lambda$createView$10$ChatActivity(View v) {
        boolean allowPin;
        if (getParentActivity() != null) {
            TLRPC.Chat chat = this.currentChat;
            if (chat != null) {
                allowPin = ChatObject.canPinMessages(chat);
                if (this.pinnedMessageObject.type == 207) {
                    allowPin = false;
                }
            } else if (this.currentEncryptedChat == null) {
                TLRPC.UserFull userFull = this.userInfo;
                if (userFull != null) {
                    allowPin = userFull.can_pin_message;
                } else {
                    allowPin = false;
                }
            } else {
                allowPin = false;
            }
            if (allowPin) {
                AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
                builder.setTitle(LocaleController.getString("UnpinMessageAlertTitle", R.string.UnpinMessageAlertTitle));
                builder.setMessage(LocaleController.getString("UnpinMessageAlert", R.string.UnpinMessageAlert));
                builder.setPositiveButton(LocaleController.getString("UnpinMessage", R.string.UnpinMessage), new DialogInterface.OnClickListener() {
                    public final void onClick(DialogInterface dialogInterface, int i) {
                        ChatActivity.this.lambda$null$9$ChatActivity(dialogInterface, i);
                    }
                });
                builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), (DialogInterface.OnClickListener) null);
                showDialog(builder.create());
                return;
            }
            SharedPreferences preferences = MessagesController.getNotificationsSettings(this.currentAccount);
            if (this.chatInfo != null) {
                SharedPreferences.Editor edit2 = preferences.edit();
                edit2.putInt("pin_" + this.dialog_id, this.chatInfo.pinned_msg_id).commit();
            } else if (this.userInfo != null) {
                SharedPreferences.Editor edit3 = preferences.edit();
                edit3.putInt("pin_" + this.dialog_id, this.userInfo.pinned_msg_id).commit();
            }
            updatePinnedMessageView(true);
        }
    }

    public /* synthetic */ void lambda$null$9$ChatActivity(DialogInterface dialogInterface, int i) {
        getMessagesController().pinMessage(this.currentChat, this.currentUser, 0, false);
    }

    public /* synthetic */ void lambda$createView$11$ChatActivity(View v) {
        if (getParentActivity() != null) {
            updatePinnedLiveMessageView(false, 0, false);
            animLivePinClose(this.pinnedLiveUserImageView);
        }
    }

    public /* synthetic */ void lambda$createView$13$ChatActivity(View v2) {
        AlertsCreator.showBlockReportSpamAlert(this, this.dialog_id, this.currentUser, this.currentChat, this.currentEncryptedChat, this.reportSpamButton.getTag(R.id.object_tag) != null, this.chatInfo, new MessagesStorage.IntCallback() {
            public final void run(int i) {
                ChatActivity.this.lambda$null$12$ChatActivity(i);
            }
        });
    }

    public /* synthetic */ void lambda$null$12$ChatActivity(int param) {
        if (param == 0) {
            updateTopPanel(true);
        } else {
            finishFragment();
        }
    }

    public /* synthetic */ void lambda$createView$14$ChatActivity(View v) {
        if (this.addToContactsButton.getTag() != null) {
            shareMyContact(1, (MessageObject) null);
            return;
        }
        TLRPC.User user = this.currentUser;
        if (user != null) {
            presentFragment(new AddContactsInfoActivity((Bundle) null, user));
        }
    }

    public /* synthetic */ void lambda$createView$15$ChatActivity(View v) {
        getMessagesController().hidePeerSettingsBar(this.dialog_id, this.currentUser, this.currentChat);
        updateTopPanel(true);
    }

    public /* synthetic */ void lambda$createView$16$ChatActivity(View view) {
        this.wasManualScroll = true;
        this.checkTextureViewPosition = true;
        int i = this.createUnreadMessageAfterId;
        if (i != 0) {
            scrollToMessageId(i, 0, false, this.returnToLoadIndex, false);
            return;
        }
        int i2 = this.returnToMessageId;
        if (i2 > 0) {
            scrollToMessageId(i2, 0, true, this.returnToLoadIndex, false);
            return;
        }
        scrollToLastMessage(true);
    }

    public /* synthetic */ boolean lambda$createView$17$ChatActivity(View view) {
        for (int a = 0; a < this.messages.size(); a++) {
            MessageObject messageObject = this.messages.get(a);
            if (messageObject.messageOwner.mentioned && !messageObject.isContentUnread()) {
                messageObject.setContentIsRead();
            }
        }
        this.newMentionsCount = 0;
        getMessagesController().markMentionsAsRead(this.dialog_id);
        this.hasAllMentionsLocal = true;
        showMentionDownButton(false, true);
        return true;
    }

    public /* synthetic */ boolean lambda$createView$18$ChatActivity(View v, MotionEvent event) {
        return ContentPreviewViewer.getInstance().onTouch(event, this.mentionListView, 0, this.mentionsOnItemClickListener, (ContentPreviewViewer.ContentPreviewViewerDelegate) null);
    }

    public /* synthetic */ void lambda$createView$21$ChatActivity(View view, int position) {
        int i = position;
        if (!this.mentionsAdapter.isBannedInline()) {
            Object object = this.mentionsAdapter.getItem(i);
            int start = this.mentionsAdapter.getResultStartPosition();
            int len = this.mentionsAdapter.getResultLength();
            if (object instanceof TLRPC.User) {
                if (!this.searchingForUser || this.searchContainer.getVisibility() != 0) {
                    TLRPC.User user = (TLRPC.User) object;
                    if (user != null) {
                        String name = UserObject.getName(user) + " ";
                        if (!"all".equals(name.trim()) || user.id != -1) {
                            Spannable spannable = new SpannableString("@" + name);
                            spannable.setSpan(new URLSpanUserMention("" + user.id, 1), 0, spannable.length(), 33);
                            spannable.setSpan(new ForegroundColorSpan(Theme.getColor(Theme.key_chat_messagePanelMetionText)), 0, spannable.length(), 33);
                            this.chatActivityEnterView.addMentionText1(start, len, spannable, false);
                            return;
                        }
                        Spannable spannable2 = new SpannableString("@" + name);
                        spannable2.setSpan(new URLSpanUserMention("-1", 1), 0, spannable2.length(), 33);
                        spannable2.setSpan(new ForegroundColorSpan(Theme.getColor(Theme.key_chat_messagePanelMetionText)), 0, spannable2.length(), 33);
                        this.chatActivityEnterView.addMentionText1(start, len, spannable2, false);
                        return;
                    }
                    return;
                }
                TLRPC.User user2 = (TLRPC.User) object;
                this.searchingUserMessages = user2;
                if (user2 != null) {
                    String name2 = user2.first_name;
                    if (TextUtils.isEmpty(name2)) {
                        name2 = this.searchingUserMessages.last_name;
                    }
                    this.searchingForUser = false;
                    String from = LocaleController.getString("SearchFrom", R.string.SearchFrom);
                    Spannable spannable3 = new SpannableString(from + " " + name2);
                    spannable3.setSpan(new ForegroundColorSpan(Theme.getColor(Theme.key_chat_messagePanelMetionText)), from.length() + 1, spannable3.length(), 33);
                    this.searchItem.setSearchFieldCaption(spannable3);
                    this.mentionsAdapter.searchUsernameOrHashtag((String) null, 0, (ArrayList<MessageObject>) null, false);
                    this.searchItem.setSearchFieldHint((CharSequence) null);
                    this.searchItem.clearSearchText();
                    getMediaDataController().searchMessagesInChat("", this.dialog_id, this.mergeDialogId, this.classGuid, 0, this.searchingUserMessages);
                }
            } else if (object instanceof String) {
                if (!this.mentionsAdapter.isBotCommands()) {
                    this.chatActivityEnterView.replaceWithText(start, len, object + " ", false);
                } else if (this.inScheduleMode) {
                    AlertsCreator.createScheduleDatePickerDialog(getParentActivity(), UserObject.isUserSelf(this.currentUser), new AlertsCreator.ScheduleDatePickerDelegate(object) {
                        private final /* synthetic */ Object f$1;

                        {
                            this.f$1 = r2;
                        }

                        public final void didSelectDate(boolean z, int i) {
                            ChatActivity.this.lambda$null$19$ChatActivity(this.f$1, z, i);
                        }
                    });
                } else if (!checkSlowMode(view)) {
                    getSendMessagesHelper().sendMessage((String) object, this.dialog_id, this.replyingMessageObject, (TLRPC.WebPage) null, false, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                    this.chatActivityEnterView.setFieldText("");
                    hideFieldPanel(false);
                }
            } else if (object instanceof TLRPC.BotInlineResult) {
                if (this.chatActivityEnterView.getFieldText() == null) {
                    return;
                }
                if (this.inScheduleMode || !checkSlowMode(view)) {
                    TLRPC.BotInlineResult result = (TLRPC.BotInlineResult) object;
                    if ((result.type.equals("photo") && (result.photo != null || result.content != null)) || ((result.type.equals("gif") && (result.document != null || result.content != null)) || (result.type.equals(MimeTypes.BASE_TYPE_VIDEO) && result.document != null))) {
                        ArrayList<Object> arrayList = new ArrayList<>(this.mentionsAdapter.getSearchResultBotContext());
                        this.botContextResults = arrayList;
                        PhotoViewer.getInstance().setParentActivity(getParentActivity());
                        PhotoViewer.getInstance().openPhotoForSelect(arrayList, this.mentionsAdapter.getItemPosition(i), 3, this.botContextProvider, this);
                    } else if (this.inScheduleMode) {
                        AlertsCreator.createScheduleDatePickerDialog(getParentActivity(), UserObject.isUserSelf(this.currentUser), new AlertsCreator.ScheduleDatePickerDelegate(result) {
                            private final /* synthetic */ TLRPC.BotInlineResult f$1;

                            {
                                this.f$1 = r2;
                            }

                            public final void didSelectDate(boolean z, int i) {
                                ChatActivity.this.lambda$null$20$ChatActivity(this.f$1, z, i);
                            }
                        });
                    } else {
                        lambda$null$20$ChatActivity(result, true, 0);
                    }
                }
            } else if (object instanceof TLRPC.TL_inlineBotSwitchPM) {
                processInlineBotContextPM((TLRPC.TL_inlineBotSwitchPM) object);
            } else if (object instanceof MediaDataController.KeywordResult) {
                String code = ((MediaDataController.KeywordResult) object).emoji;
                this.chatActivityEnterView.addEmojiToRecent(code);
                this.chatActivityEnterView.replaceWithText(start, len, code, true);
            }
        }
    }

    public /* synthetic */ void lambda$null$19$ChatActivity(Object object, boolean notify, int scheduleDate) {
        getSendMessagesHelper().sendMessage((String) object, this.dialog_id, this.replyingMessageObject, (TLRPC.WebPage) null, false, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, notify, scheduleDate);
        this.chatActivityEnterView.setFieldText("");
        hideFieldPanel(false);
    }

    public /* synthetic */ boolean lambda$createView$23$ChatActivity(View view, int position) {
        boolean z = false;
        if (getParentActivity() == null || !this.mentionsAdapter.isLongClickEnabled()) {
            return false;
        }
        Object object = this.mentionsAdapter.getItem(position);
        if (!(object instanceof String)) {
            return false;
        }
        if (!this.mentionsAdapter.isBotCommands()) {
            AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
            builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
            builder.setMessage(LocaleController.getString("ClearSearch", R.string.ClearSearch));
            builder.setPositiveButton(LocaleController.getString("ClearButton", R.string.ClearButton).toUpperCase(), new DialogInterface.OnClickListener() {
                public final void onClick(DialogInterface dialogInterface, int i) {
                    ChatActivity.this.lambda$null$22$ChatActivity(dialogInterface, i);
                }
            });
            builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), (DialogInterface.OnClickListener) null);
            showDialog(builder.create());
            return true;
        } else if (!URLSpanBotCommand.enabled) {
            return false;
        } else {
            this.chatActivityEnterView.setFieldText("");
            ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
            String str = (String) object;
            TLRPC.Chat chat = this.currentChat;
            if (chat != null && chat.megagroup) {
                z = true;
            }
            chatActivityEnterView2.setCommand((MessageObject) null, str, true, z);
            return true;
        }
    }

    public /* synthetic */ void lambda$null$22$ChatActivity(DialogInterface dialogInterface, int i) {
        this.mentionsAdapter.clearRecentHashtags();
    }

    public /* synthetic */ boolean lambda$createView$24$ChatActivity(View v, MotionEvent event) {
        if (event.getAction() == 0) {
            checkRecordLocked();
        }
        this.overlayView.getParent().requestDisallowInterceptTouchEvent(true);
        return true;
    }

    static /* synthetic */ boolean lambda$createView$25(View v, MotionEvent event) {
        return true;
    }

    public /* synthetic */ void lambda$createView$26$ChatActivity(View v) {
        ArrayList<MessageObject> arrayList = this.forwardingMessages;
        if (arrayList == null || arrayList.isEmpty()) {
            MessageObject messageObject = this.replyingMessageObject;
            if (messageObject != null) {
                scrollToMessageId(messageObject.getId(), 0, true, 0, false);
                return;
            }
            MessageObject messageObject2 = this.editingMessageObject;
            if (messageObject2 != null && messageObject2.canEditMedia() && this.editingMessageObjectReqId == 0) {
                if (this.chatAttachAlert == null) {
                    createChatAttachView();
                }
                this.chatAttachAlert.setEditingMessageObject(this.editingMessageObject);
                openAttachMenu();
                return;
            }
            return;
        }
        int N = this.forwardingMessages.size();
        for (int a = 0; a < N; a++) {
            MessageObject messageObject3 = this.forwardingMessages.get(a);
            this.selectedMessagesIds[0].put(messageObject3.getId(), messageObject3);
        }
        Bundle args = new Bundle();
        args.putBoolean("onlySelect", true);
        args.putInt("dialogsType", 3);
        args.putInt("messagesCount", this.forwardingMessages.size());
        DialogsActivity fragment = new DialogsActivity(args);
        fragment.setDelegate(this);
        presentFragment(fragment);
    }

    public /* synthetic */ void lambda$createView$27$ChatActivity(View v) {
        ArrayList<MessageObject> arrayList = this.forwardingMessages;
        if (arrayList != null) {
            arrayList.clear();
        }
        showFieldPanel(false, (MessageObject) null, (MessageObject) null, (ArrayList<MessageObject>) null, this.foundWebPage, true, 0, true, true);
    }

    public /* synthetic */ boolean lambda$createView$28$ChatActivity(ContentPreviewViewer.ContentPreviewViewerDelegate contentPreviewViewerDelegate, View v, MotionEvent event) {
        return ContentPreviewViewer.getInstance().onTouch(event, this.stickersListView, 0, this.stickersOnItemClickListener, contentPreviewViewerDelegate);
    }

    static /* synthetic */ boolean lambda$createView$29(View v, MotionEvent event) {
        return true;
    }

    public /* synthetic */ void lambda$createView$30$ChatActivity(View view) {
        getMediaDataController().searchMessagesInChat((String) null, this.dialog_id, this.mergeDialogId, this.classGuid, 1, this.searchingUserMessages);
    }

    public /* synthetic */ void lambda$createView$31$ChatActivity(View view) {
        getMediaDataController().searchMessagesInChat((String) null, this.dialog_id, this.mergeDialogId, this.classGuid, 2, this.searchingUserMessages);
    }

    public /* synthetic */ void lambda$createView$32$ChatActivity(View view) {
        this.mentionLayoutManager.setReverseLayout(true);
        this.mentionsAdapter.setSearchingMentions(true);
        this.searchCalendarButton.setVisibility(8);
        this.searchUserButton.setVisibility(8);
        this.searchingForUser = true;
        this.searchingUserMessages = null;
        this.searchItem.setSearchFieldHint(LocaleController.getString("SearchMembers", R.string.SearchMembers));
        this.searchItem.setSearchFieldCaption(LocaleController.getString("SearchFrom", R.string.SearchFrom));
        AndroidUtilities.showKeyboard(this.searchItem.getSearchField());
        this.searchItem.clearSearchText();
    }

    public /* synthetic */ void lambda$createView$36$ChatActivity(View view) {
        if (getParentActivity() != null) {
            AndroidUtilities.hideKeyboard(this.searchItem.getSearchField());
            Calendar calendar = Calendar.getInstance();
            try {
                DatePickerDialog dialog = new DatePickerDialog(getParentActivity(), new DatePickerDialog.OnDateSetListener() {
                    public final void onDateSet(DatePicker datePicker, int i, int i2, int i3) {
                        ChatActivity.this.lambda$null$33$ChatActivity(datePicker, i, i2, i3);
                    }
                }, calendar.get(1), calendar.get(2), calendar.get(5));
                DatePicker datePicker = dialog.getDatePicker();
                datePicker.setMinDate(1375315200000L);
                datePicker.setMaxDate(System.currentTimeMillis());
                dialog.setButton(-1, LocaleController.getString("JumpToDate", R.string.JumpToDate), dialog);
                dialog.setButton(-2, LocaleController.getString("Cancel", R.string.Cancel), $$Lambda$ChatActivity$_hUbj9aS4AUisWRCRGVZayfdcSo.INSTANCE);
                if (Build.VERSION.SDK_INT >= 21) {
                    dialog.setOnShowListener(new DialogInterface.OnShowListener(datePicker) {
                        private final /* synthetic */ DatePicker f$0;

                        {
                            this.f$0 = r1;
                        }

                        public final void onShow(DialogInterface dialogInterface) {
                            ChatActivity.lambda$null$35(this.f$0, dialogInterface);
                        }
                    });
                }
                showDialog(dialog);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }
    }

    public /* synthetic */ void lambda$null$33$ChatActivity(DatePicker view1, int year1, int month, int dayOfMonth1) {
        Calendar calendar1 = Calendar.getInstance();
        calendar1.clear();
        calendar1.set(year1, month, dayOfMonth1);
        int date = (int) (calendar1.getTime().getTime() / 1000);
        clearChatData();
        this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
        MessagesController messagesController = getMessagesController();
        long j = this.dialog_id;
        int i = this.classGuid;
        boolean isChannel = ChatObject.isChannel(this.currentChat);
        boolean z = this.inScheduleMode;
        int i2 = this.lastLoadIndex;
        this.lastLoadIndex = i2 + 1;
        messagesController.loadMessages(j, 30, 0, date, true, 0, i, 4, 0, isChannel, z, i2);
    }

    static /* synthetic */ void lambda$null$34(DialogInterface dialog1, int which) {
    }

    static /* synthetic */ void lambda$null$35(DatePicker datePicker, DialogInterface dialog12) {
        int count = datePicker.getChildCount();
        for (int a = 0; a < count; a++) {
            View child = datePicker.getChildAt(a);
            ViewGroup.LayoutParams layoutParams = child.getLayoutParams();
            layoutParams.width = -1;
            child.setLayoutParams(layoutParams);
        }
    }

    public /* synthetic */ void lambda$createView$39$ChatActivity(View view) {
        String str;
        if (getParentActivity() != null) {
            TLRPC.User user = this.currentUser;
            if (user == null || !this.userBlocked) {
                TLRPC.User user2 = this.currentUser;
                if (user2 == null || !user2.bot || (str = this.botUser) == null) {
                    if (ChatObject.isChannel(this.currentChat)) {
                        TLRPC.Chat chat = this.currentChat;
                        if (!(chat instanceof TLRPC.TL_channelForbidden)) {
                            if (ChatObject.isNotInChat(chat)) {
                                showBottomOverlayProgress(true, true);
                                getMessagesController().addUserToChat(this.currentChat.id, getUserConfig().getCurrentUser(), (TLRPC.ChatFull) null, 0, (String) null, this, (Runnable) null);
                                NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.closeSearchByActiveAction, new Object[0]);
                                if (hasReportSpam() && this.reportSpamButton.getTag(R.id.object_tag) != null) {
                                    SharedPreferences.Editor edit2 = MessagesController.getNotificationsSettings(this.currentAccount).edit();
                                    edit2.putInt("dialog_bar_vis3" + this.dialog_id, 3).commit();
                                    getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad, Long.valueOf(this.dialog_id));
                                    return;
                                }
                                return;
                            }
                            toggleMute(true);
                            return;
                        }
                    }
                    AlertsCreator.createClearOrDeleteDialogAlert(this, false, this.currentChat, this.currentUser, this.currentEncryptedChat != null, new MessagesStorage.BooleanCallback() {
                        public final void run(boolean z) {
                            ChatActivity.this.lambda$null$38$ChatActivity(z);
                        }
                    });
                    return;
                }
                if (str.length() != 0) {
                    getMessagesController().sendBotStart(this.currentUser, this.botUser);
                } else {
                    getSendMessagesHelper().sendMessage("/start", this.dialog_id, (MessageObject) null, (TLRPC.WebPage) null, false, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                }
                this.botUser = null;
                updateBottomOverlay();
            } else if (user.bot) {
                String botUserLast = this.botUser;
                this.botUser = null;
                getMessagesController().unblockUser(this.currentUser.id);
                if (botUserLast == null || botUserLast.length() == 0) {
                    getSendMessagesHelper().sendMessage("/start", this.dialog_id, (MessageObject) null, (TLRPC.WebPage) null, false, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                } else {
                    getMessagesController().sendBotStart(this.currentUser, botUserLast);
                }
            } else {
                AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
                builder.setMessage(LocaleController.getString("AreYouSureUnblockContact", R.string.AreYouSureUnblockContact));
                builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
                    public final void onClick(DialogInterface dialogInterface, int i) {
                        ChatActivity.this.lambda$null$37$ChatActivity(dialogInterface, i);
                    }
                });
                builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), (DialogInterface.OnClickListener) null);
                showDialog(builder.create());
            }
        }
    }

    public /* synthetic */ void lambda$null$37$ChatActivity(DialogInterface dialogInterface, int i) {
        getMessagesController().unblockUser(this.currentUser.id);
    }

    public /* synthetic */ void lambda$null$38$ChatActivity(boolean param) {
        getNotificationCenter().removeObserver(this, NotificationCenter.closeChats);
        getNotificationCenter().postNotificationName(NotificationCenter.closeChats, new Object[0]);
        finishFragment();
        getNotificationCenter().postNotificationName(NotificationCenter.needDeleteDialog, Long.valueOf(this.dialog_id), this.currentUser, this.currentChat, Boolean.valueOf(param));
    }

    public /* synthetic */ void lambda$createView$40$ChatActivity(View v) {
        if (this.chatInfo != null) {
            Bundle args = new Bundle();
            args.putInt("chat_id", this.chatInfo.linked_chat_id);
            if (getMessagesController().checkCanOpenChat(args, this)) {
                presentFragment(new ChatActivity(args));
            }
        }
    }

    public /* synthetic */ void lambda$createView$41$ChatActivity(View v) {
        MessageObject messageObject = null;
        for (int a = 1; a >= 0; a--) {
            if (messageObject == null && this.selectedMessagesIds[a].size() != 0) {
                messageObject = this.messagesDict[a].get(this.selectedMessagesIds[a].keyAt(0));
            }
            this.selectedMessagesIds[a].clear();
            this.selectedMessagesCanCopyIds[a].clear();
            this.selectedMessagesCanStarIds[a].clear();
        }
        hideActionMode();
        if (messageObject != null && (messageObject.messageOwner.id > 0 || (messageObject.messageOwner.id < 0 && this.currentEncryptedChat != null))) {
            showFieldPanelForReply(messageObject);
        }
        updatePinnedMessageView(true);
        updateVisibleRows();
    }

    public /* synthetic */ void lambda$createView$42$ChatActivity(View v) {
        openForward();
    }

    private void createActionBarMenuPop() {
        ChatActionBarMenuPopupWindow chatActionBarMenuPopupWindow = new ChatActionBarMenuPopupWindow(getParentActivity());
        this.chatActionBarMenuPop = chatActionBarMenuPopupWindow;
        chatActionBarMenuPopupWindow.setBackgroundDrawable(new ColorDrawable());
        this.chatActionBarMenuPop.setOutsideTouchable(true);
        this.chatActionBarMenuPop.setFocusable(true);
        this.chatActionBarMenuPop.setInputMethodMode(1);
        this.chatActionBarMenuPop.setSoftInputMode(48);
        this.chatActionBarMenuPop.setOnSubItemClickListener(new ChatActionBarMenuPopupWindow.OnSubItemClickListener() {
            public final void onClick(int i) {
                ChatActivity.this.lambda$createActionBarMenuPop$46$ChatActivity(i);
            }
        });
    }

    public /* synthetic */ void lambda$createActionBarMenuPop$46$ChatActivity(int id) {
        if (id == 40) {
            openSearchWithText((String) null);
        } else if (id == 21) {
            AlertsCreator.createReportAlert(getParentActivity(), this.dialog_id, 0, this);
        } else if (id == 17) {
            if (this.currentUser != null && getParentActivity() != null) {
                if (this.addToContactsButton.getTag() != null) {
                    shareMyContact(((Integer) this.addToContactsButton.getTag()).intValue(), (MessageObject) null);
                } else {
                    TLRPC.User user = this.currentUser;
                    if (user != null) {
                        presentFragment(new AddContactsInfoActivity((Bundle) null, user));
                    }
                }
            } else {
                return;
            }
        } else if (id == 18) {
            toggleMute(false);
        } else if (id == 13) {
            if (getParentActivity() != null) {
                showDialog(AlertsCreator.createTTLAlert(getParentActivity(), this.currentEncryptedChat).create());
            } else {
                return;
            }
        } else if (id == 15 || id == 16) {
            if (getParentActivity() != null) {
                long j = this.dialog_id;
                AlertsCreator.createClearOrDeleteDialogAlert(this, id == 15, this.currentChat, this.currentUser, this.currentEncryptedChat != null, new MessagesStorage.BooleanCallback(id, ((int) j) < 0 && ((int) (j >> 32)) != 1) {
                    private final /* synthetic */ int f$1;
                    private final /* synthetic */ boolean f$2;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                    }

                    public final void run(boolean z) {
                        ChatActivity.this.lambda$null$45$ChatActivity(this.f$1, this.f$2, z);
                    }
                });
            } else {
                return;
            }
        } else if (id == 30) {
            getSendMessagesHelper().sendMessage("/help", this.dialog_id, (MessageObject) null, (TLRPC.WebPage) null, false, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
        } else if (id == 31) {
            getSendMessagesHelper().sendMessage("/settings", this.dialog_id, (MessageObject) null, (TLRPC.WebPage) null, false, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
        } else if (id == 24) {
            try {
                getMediaDataController().installShortcut((long) this.currentUser.id);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }
        this.chatActionBarMenuPop.dismiss();
    }

    public /* synthetic */ void lambda$null$45$ChatActivity(int id, boolean isChat, boolean param) {
        if (id == 15 && ChatObject.isChannel(this.currentChat) && (!this.currentChat.megagroup || !TextUtils.isEmpty(this.currentChat.username))) {
            getMessagesController().deleteDialog(this.dialog_id, 2, param);
        } else if (id != 15) {
            getNotificationCenter().removeObserver(this, NotificationCenter.closeChats);
            getNotificationCenter().postNotificationName(NotificationCenter.closeChats, new Object[0]);
            finishFragment();
            getNotificationCenter().postNotificationName(NotificationCenter.needDeleteDialog, Long.valueOf(this.dialog_id), this.currentUser, this.currentChat, Boolean.valueOf(param));
        } else {
            this.clearingHistory = true;
            this.undoView.setAdditionalTranslationY(0.0f);
            this.undoView.showWithAction(this.dialog_id, id == 15 ? 0 : 1, new Runnable(id, param, isChat) {
                private final /* synthetic */ int f$1;
                private final /* synthetic */ boolean f$2;
                private final /* synthetic */ boolean f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    ChatActivity.this.lambda$null$43$ChatActivity(this.f$1, this.f$2, this.f$3);
                }
            }, new Runnable() {
                public final void run() {
                    ChatActivity.this.lambda$null$44$ChatActivity();
                }
            });
            this.chatAdapter.notifyDataSetChanged();
        }
    }

    public /* synthetic */ void lambda$null$43$ChatActivity(int id, boolean param, boolean isChat) {
        if (id == 15) {
            TLRPC.ChatFull chatFull = this.chatInfo;
            if (chatFull == null || chatFull.pinned_msg_id == 0) {
                TLRPC.UserFull userFull = this.userInfo;
                if (!(userFull == null || userFull.pinned_msg_id == 0)) {
                    SharedPreferences.Editor edit2 = MessagesController.getNotificationsSettings(this.currentAccount).edit();
                    edit2.putInt("pin_" + this.dialog_id, this.userInfo.pinned_msg_id).commit();
                    updatePinnedMessageView(true);
                }
            } else {
                SharedPreferences.Editor edit3 = MessagesController.getNotificationsSettings(this.currentAccount).edit();
                edit3.putInt("pin_" + this.dialog_id, this.chatInfo.pinned_msg_id).commit();
                updatePinnedMessageView(true);
            }
            getMessagesController().deleteDialog(this.dialog_id, 1, param);
            this.clearingHistory = false;
            clearHistory(false);
            this.chatAdapter.notifyDataSetChanged();
            return;
        }
        if (!isChat) {
            getMessagesController().deleteDialog(this.dialog_id, 0, param);
        } else if (ChatObject.isNotInChat(this.currentChat)) {
            getMessagesController().deleteDialog(this.dialog_id, 0, param);
        } else {
            getMessagesController().deleteUserFromChat((int) (-this.dialog_id), getMessagesController().getUser(Integer.valueOf(getUserConfig().getClientUserId())), (TLRPC.ChatFull) null);
        }
        finishFragment();
    }

    public /* synthetic */ void lambda$null$44$ChatActivity() {
        this.clearingHistory = false;
        this.chatAdapter.notifyDataSetChanged();
    }

    /* access modifiers changed from: private */
    public void showOrUpdateActionBarMenuPop() {
        ChatActionBarMenuPopupWindow chatActionBarMenuPopupWindow = this.chatActionBarMenuPop;
        if (chatActionBarMenuPopupWindow == null) {
            return;
        }
        if (!chatActionBarMenuPopupWindow.isShowing()) {
            this.chatActionBarMenuPop.showAsDropDown(this.actionBar);
        } else {
            this.chatActionBarMenuPop.update();
        }
    }

    /* access modifiers changed from: private */
    public TextureView createTextureView(boolean add) {
        if (this.parentLayout == null) {
            return null;
        }
        if (this.videoPlayerContainer == null) {
            if (Build.VERSION.SDK_INT >= 21) {
                AnonymousClass35 r0 = new FrameLayout(getParentActivity()) {
                    public void setTranslationY(float translationY) {
                        super.setTranslationY(translationY);
                        ChatActivity.this.contentView.invalidate();
                    }
                };
                this.videoPlayerContainer = r0;
                r0.setOutlineProvider(new ViewOutlineProvider() {
                    public void getOutline(View view, Outline outline) {
                        if (view.getTag(R.id.parent_tag) != null) {
                            outline.setRoundRect(0, 0, view.getMeasuredWidth(), view.getMeasuredHeight(), (float) AndroidUtilities.dp(4.0f));
                            return;
                        }
                        outline.setOval(0, 0, AndroidUtilities.roundMessageSize, AndroidUtilities.roundMessageSize);
                    }
                });
                this.videoPlayerContainer.setClipToOutline(true);
            } else {
                this.videoPlayerContainer = new FrameLayout(getParentActivity()) {
                    RectF rect = new RectF();

                    /* access modifiers changed from: protected */
                    public void onSizeChanged(int w, int h, int oldw, int oldh) {
                        super.onSizeChanged(w, h, oldw, oldh);
                        ChatActivity.this.aspectPath.reset();
                        if (getTag(R.id.parent_tag) != null) {
                            this.rect.set(0.0f, 0.0f, (float) w, (float) h);
                            ChatActivity.this.aspectPath.addRoundRect(this.rect, (float) AndroidUtilities.dp(4.0f), (float) AndroidUtilities.dp(4.0f), Path.Direction.CW);
                        } else {
                            ChatActivity.this.aspectPath.addCircle((float) (w / 2), (float) (h / 2), (float) (w / 2), Path.Direction.CW);
                        }
                        ChatActivity.this.aspectPath.toggleInverseFillType();
                    }

                    public void setTranslationY(float translationY) {
                        super.setTranslationY(translationY);
                        ChatActivity.this.contentView.invalidate();
                    }

                    public void setVisibility(int visibility) {
                        super.setVisibility(visibility);
                        if (visibility == 0) {
                            setLayerType(2, (Paint) null);
                        }
                    }

                    /* access modifiers changed from: protected */
                    public void dispatchDraw(Canvas canvas) {
                        super.dispatchDraw(canvas);
                        if (getTag() == null) {
                            canvas.drawPath(ChatActivity.this.aspectPath, ChatActivity.this.aspectPaint);
                        }
                    }
                };
                this.aspectPath = new Path();
                Paint paint = new Paint(1);
                this.aspectPaint = paint;
                paint.setColor(-16777216);
                this.aspectPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));
            }
            this.videoPlayerContainer.setWillNotDraw(false);
            AspectRatioFrameLayout aspectRatioFrameLayout2 = new AspectRatioFrameLayout(getParentActivity());
            this.aspectRatioFrameLayout = aspectRatioFrameLayout2;
            aspectRatioFrameLayout2.setBackgroundColor(0);
            if (add) {
                this.videoPlayerContainer.addView(this.aspectRatioFrameLayout, LayoutHelper.createFrame(-1, -1, 17));
            }
            TextureView textureView = new TextureView(getParentActivity());
            this.videoTextureView = textureView;
            textureView.setOpaque(false);
            this.aspectRatioFrameLayout.addView(this.videoTextureView, LayoutHelper.createFrame(-1, -1.0f));
        }
        ViewGroup parent = (ViewGroup) this.videoPlayerContainer.getParent();
        if (!(parent == null || parent == this.contentView)) {
            parent.removeView(this.videoPlayerContainer);
            parent = null;
        }
        if (parent == null) {
            this.contentView.addView(this.videoPlayerContainer, 1, new FrameLayout.LayoutParams(AndroidUtilities.roundMessageSize, AndroidUtilities.roundMessageSize));
        }
        this.videoPlayerContainer.setTag((Object) null);
        this.aspectRatioFrameLayout.setDrawingReady(false);
        return this.videoTextureView;
    }

    private void destroyTextureView() {
        FrameLayout frameLayout = this.videoPlayerContainer;
        if (frameLayout != null && frameLayout.getParent() != null) {
            this.contentView.removeView(this.videoPlayerContainer);
            this.aspectRatioFrameLayout.setDrawingReady(false);
            this.videoPlayerContainer.setTag((Object) null);
            if (Build.VERSION.SDK_INT < 21) {
                this.videoPlayerContainer.setLayerType(0, (Paint) null);
            }
        }
    }

    /* access modifiers changed from: private */
    public void openForward() {
        Bundle args = new Bundle();
        int dialogType = 3;
        args.putBoolean("onlySelect", true);
        for (SparseArray<MessageObject> selectedMessagesId : this.selectedMessagesIds) {
            int i = 0;
            while (true) {
                if (i < selectedMessagesId.size()) {
                    MessageObject mess = selectedMessagesId.valueAt(i);
                    if (mess != null && (mess.messageOwner.media instanceof TLRPC.TL_messageMediaShareContact)) {
                        dialogType = 7;
                        break;
                    }
                    i++;
                } else {
                    break;
                }
            }
            if (dialogType == 7) {
                break;
            }
        }
        args.putInt("dialogsType", dialogType);
        args.putInt("messagesCount", this.canForwardMessagesCount);
        DialogsActivity fragment = new DialogsActivity(args);
        fragment.setDelegate(this);
        presentFragment(fragment);
    }

    private void showBottomOverlayProgress(boolean show, boolean animated) {
        final boolean z = show;
        if (z && this.bottomOverlayProgress.getTag() != null) {
            return;
        }
        if (z || this.bottomOverlayProgress.getTag() != null) {
            AnimatorSet animatorSet = this.bottomOverlayAnimation;
            int i = null;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.bottomOverlayAnimation = null;
            }
            RadialProgressView radialProgressView = this.bottomOverlayProgress;
            if (z) {
                i = 1;
            }
            radialProgressView.setTag(i);
            int i2 = 4;
            float f = 0.0f;
            float f2 = 0.1f;
            if (animated) {
                this.bottomOverlayAnimation = new AnimatorSet();
                if (z) {
                    this.bottomOverlayProgress.setVisibility(0);
                    this.bottomOverlayAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_X, new float[]{0.1f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_Y, new float[]{0.1f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.ALPHA, new float[]{0.0f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.SCALE_X, new float[]{0.1f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.SCALE_Y, new float[]{0.1f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.ALPHA, new float[]{0.0f}), ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_X, new float[]{1.0f}), ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_Y, new float[]{1.0f}), ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.ALPHA, new float[]{1.0f})});
                } else {
                    this.bottomOverlayChatText.setVisibility(0);
                    this.bottomOverlayAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_X, new float[]{0.1f}), ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_Y, new float[]{0.1f}), ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.ALPHA, new float[]{0.0f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_X, new float[]{1.0f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_Y, new float[]{1.0f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.ALPHA, new float[]{1.0f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.SCALE_X, new float[]{1.0f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.SCALE_Y, new float[]{1.0f}), ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.ALPHA, new float[]{1.0f})});
                }
                this.bottomOverlayAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        if (ChatActivity.this.bottomOverlayAnimation != null && ChatActivity.this.bottomOverlayAnimation.equals(animation)) {
                            if (!z) {
                                ChatActivity.this.bottomOverlayProgress.setVisibility(4);
                            } else {
                                ChatActivity.this.bottomOverlayChatText.setVisibility(4);
                            }
                        }
                    }

                    public void onAnimationCancel(Animator animation) {
                        if (ChatActivity.this.bottomOverlayAnimation != null && ChatActivity.this.bottomOverlayAnimation.equals(animation)) {
                            AnimatorSet unused = ChatActivity.this.bottomOverlayAnimation = null;
                        }
                    }
                });
                this.bottomOverlayAnimation.setDuration(150);
                this.bottomOverlayAnimation.start();
                return;
            }
            this.bottomOverlayProgress.setVisibility(z ? 0 : 4);
            this.bottomOverlayProgress.setScaleX(z ? 1.0f : 0.1f);
            this.bottomOverlayProgress.setScaleY(z ? 1.0f : 0.1f);
            this.bottomOverlayProgress.setAlpha(1.0f);
            TextView textView = this.bottomOverlayChatText;
            if (!z) {
                i2 = 0;
            }
            textView.setVisibility(i2);
            this.bottomOverlayChatText.setScaleX(z ? 0.1f : 1.0f);
            this.bottomOverlayChatText.setScaleY(z ? 0.1f : 1.0f);
            this.bottomOverlayChatText.setAlpha(z ? 0.0f : 1.0f);
            this.bottomOverlayChatText2.setScaleX(z ? 0.1f : 1.0f);
            UnreadCounterTextView unreadCounterTextView = this.bottomOverlayChatText2;
            if (!z) {
                f2 = 1.0f;
            }
            unreadCounterTextView.setScaleY(f2);
            UnreadCounterTextView unreadCounterTextView2 = this.bottomOverlayChatText2;
            if (!z) {
                f = 1.0f;
            }
            unreadCounterTextView2.setAlpha(f);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: sendBotInlineResult */
    public void lambda$null$20$ChatActivity(TLRPC.BotInlineResult result, boolean notify, int scheduleDate) {
        int uid = this.mentionsAdapter.getContextBotId();
        HashMap<String, String> params = new HashMap<>();
        params.put(TtmlNode.ATTR_ID, result.id);
        params.put("query_id", "" + result.query_id);
        params.put("bot", "" + uid);
        params.put("bot_name", this.mentionsAdapter.getContextBotName());
        SendMessagesHelper.prepareSendingBotContextResult(getAccountInstance(), result, params, this.dialog_id, this.replyingMessageObject, notify, scheduleDate);
        this.chatActivityEnterView.setFieldText("");
        hideFieldPanel(false);
        getMediaDataController().increaseInlineRaiting(uid);
    }

    /* access modifiers changed from: private */
    public void mentionListViewUpdateLayout() {
        if (this.mentionListView.getChildCount() <= 0) {
            this.mentionListViewScrollOffsetY = 0;
            this.mentionListViewLastViewPosition = -1;
            return;
        }
        RecyclerListView recyclerListView = this.mentionListView;
        View child = recyclerListView.getChildAt(recyclerListView.getChildCount() - 1);
        RecyclerListView.Holder holder = (RecyclerListView.Holder) this.mentionListView.findContainingViewHolder(child);
        if (this.mentionLayoutManager.getReverseLayout()) {
            if (holder != null) {
                this.mentionListViewLastViewPosition = holder.getAdapterPosition();
                this.mentionListViewLastViewTop = child.getBottom();
            } else {
                this.mentionListViewLastViewPosition = -1;
            }
            View child2 = this.mentionListView.getChildAt(0);
            RecyclerListView.Holder holder2 = (RecyclerListView.Holder) this.mentionListView.findContainingViewHolder(child2);
            int newOffset = (child2.getBottom() >= this.mentionListView.getMeasuredHeight() || holder2 == null || holder2.getAdapterPosition() != 0) ? this.mentionListView.getMeasuredHeight() : child2.getBottom();
            if (this.mentionListViewScrollOffsetY != newOffset) {
                RecyclerListView recyclerListView2 = this.mentionListView;
                this.mentionListViewScrollOffsetY = newOffset;
                recyclerListView2.setBottomGlowOffset(newOffset);
                this.mentionListView.setTopGlowOffset(0);
                this.mentionListView.invalidate();
                this.mentionContainer.invalidate();
                return;
            }
            return;
        }
        if (holder != null) {
            this.mentionListViewLastViewPosition = holder.getAdapterPosition();
            this.mentionListViewLastViewTop = child.getTop();
        } else {
            this.mentionListViewLastViewPosition = -1;
        }
        View child3 = this.mentionListView.getChildAt(0);
        RecyclerListView.Holder holder3 = (RecyclerListView.Holder) this.mentionListView.findContainingViewHolder(child3);
        int newOffset2 = (child3.getTop() <= 0 || holder3 == null || holder3.getAdapterPosition() != 0) ? 0 : child3.getTop();
        if (this.mentionListViewScrollOffsetY != newOffset2) {
            RecyclerListView recyclerListView3 = this.mentionListView;
            this.mentionListViewScrollOffsetY = newOffset2;
            recyclerListView3.setTopGlowOffset(newOffset2);
            this.mentionListView.setBottomGlowOffset(0);
            this.mentionListView.invalidate();
            this.mentionContainer.invalidate();
        }
    }

    private void checkBotCommands() {
        TLRPC.Chat chat;
        boolean z = false;
        URLSpanBotCommand.enabled = false;
        TLRPC.User user = this.currentUser;
        if (user == null || !user.bot) {
            TLRPC.ChatFull chatFull = this.chatInfo;
            if (chatFull instanceof TLRPC.TL_chatFull) {
                int a = 0;
                while (a < this.chatInfo.participants.participants.size()) {
                    TLRPC.User user2 = getMessagesController().getUser(Integer.valueOf(this.chatInfo.participants.participants.get(a).user_id));
                    if (user2 == null || !user2.bot) {
                        a++;
                    } else {
                        URLSpanBotCommand.enabled = true;
                        return;
                    }
                }
            } else if (chatFull instanceof TLRPC.TL_channelFull) {
                if (!chatFull.bot_info.isEmpty() && (chat = this.currentChat) != null && chat.megagroup) {
                    z = true;
                }
                URLSpanBotCommand.enabled = z;
            }
        } else {
            URLSpanBotCommand.enabled = true;
        }
    }

    /* access modifiers changed from: private */
    public MessageObject.GroupedMessages getValidGroupedMessage(MessageObject message) {
        if (message.getGroupId() == 0) {
            return null;
        }
        MessageObject.GroupedMessages groupedMessages = this.groupedMessagesMap.get(message.getGroupId());
        if (groupedMessages == null) {
            return groupedMessages;
        }
        if (groupedMessages.messages.size() <= 1 || groupedMessages.positions.get(message) == null) {
            return null;
        }
        return groupedMessages;
    }

    private void jumpToDate(int date) {
        int i = date;
        if (!this.messages.isEmpty()) {
            MessageObject firstMessage = this.messages.get(0);
            ArrayList<MessageObject> arrayList = this.messages;
            MessageObject lastMessage = arrayList.get(arrayList.size() - 1);
            if (firstMessage.messageOwner.date >= i && lastMessage.messageOwner.date <= i) {
                int a = this.messages.size() - 1;
                while (true) {
                    if (a < 0) {
                        break;
                    }
                    MessageObject message = this.messages.get(a);
                    if (message.messageOwner.date < i || message.getId() == 0) {
                        a--;
                    } else {
                        scrollToMessageId(message.getId(), 0, false, message.getDialogId() == this.mergeDialogId ? 1 : 0, false);
                    }
                }
                MessageObject messageObject = lastMessage;
                MessageObject messageObject2 = firstMessage;
            } else if (((int) this.dialog_id) != 0) {
                clearChatData();
                this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                MessagesController messagesController = getMessagesController();
                long j = this.dialog_id;
                int i2 = this.classGuid;
                boolean isChannel = ChatObject.isChannel(this.currentChat);
                boolean z = this.inScheduleMode;
                int i3 = this.lastLoadIndex;
                this.lastLoadIndex = i3 + 1;
                MessageObject messageObject3 = lastMessage;
                MessageObject messageObject4 = firstMessage;
                messagesController.loadMessages(j, 30, 0, date, true, 0, i2, 4, 0, isChannel, z, i3);
                this.floatingDateView.setAlpha(0.0f);
                this.floatingDateView.setTag((Object) null);
            } else {
                MessageObject messageObject5 = firstMessage;
            }
        }
    }

    public void processInlineBotContextPM(TLRPC.TL_inlineBotSwitchPM object) {
        TLRPC.User user;
        if (object != null && (user = this.mentionsAdapter.getContextBotUser()) != null) {
            this.chatActivityEnterView.setFieldText("");
            if (this.dialog_id == ((long) user.id)) {
                this.inlineReturn = this.dialog_id;
                getMessagesController().sendBotStart(this.currentUser, object.start_param);
                return;
            }
            Bundle args = new Bundle();
            args.putInt("user_id", user.id);
            args.putString("inline_query", object.start_param);
            args.putLong("inline_return", this.dialog_id);
            if (getMessagesController().checkCanOpenChat(args, this)) {
                presentFragment(new ChatActivity(args));
            }
        }
    }

    private void createChatAttachView() {
        if (getParentActivity() != null && this.chatAttachAlert == null) {
            AnonymousClass39 r0 = new ChatAttachAlert(getParentActivity(), this) {
                public void dismissInternal() {
                    if (ChatActivity.this.chatAttachAlert.isShowing()) {
                        AndroidUtilities.requestAdjustResize(ChatActivity.this.getParentActivity(), ChatActivity.this.classGuid);
                        if (ChatActivity.this.chatActivityEnterView.getVisibility() == 0 && ChatActivity.this.fragmentView != null) {
                            ChatActivity.this.fragmentView.requestLayout();
                        }
                    }
                    super.dismissInternal();
                    if (ChatActivity.this.openKeyboardOnAttachMenuClose) {
                        AndroidUtilities.runOnUIThread(new Runnable() {
                            public final void run() {
                                ChatActivity.AnonymousClass39.this.lambda$dismissInternal$0$ChatActivity$39();
                            }
                        }, 50);
                        boolean unused = ChatActivity.this.openKeyboardOnAttachMenuClose = false;
                    }
                }

                public /* synthetic */ void lambda$dismissInternal$0$ChatActivity$39() {
                    ChatActivity.this.chatActivityEnterView.openKeyboard();
                }
            };
            this.chatAttachAlert = r0;
            r0.setDelegate(new ChatAttachAlert.ChatAttachViewDelegate() {
                public void didPressedButton(int button, boolean arg, boolean notify, int scheduleDate) {
                    int i = button;
                    if (ChatActivity.this.getParentActivity() != null && ChatActivity.this.chatAttachAlert != null) {
                        if (ChatActivity.this.chatAttachAlert != null) {
                            ChatActivity chatActivity = ChatActivity.this;
                            MessageObject unused = chatActivity.editingMessageObject = chatActivity.chatAttachAlert.getEditingMessageObject();
                        } else {
                            MessageObject unused2 = ChatActivity.this.editingMessageObject = null;
                        }
                        if (i == 8 || i == 7 || (i == 4 && !ChatActivity.this.chatAttachAlert.getSelectedPhotos().isEmpty())) {
                            if (i != 8) {
                                ChatActivity.this.chatAttachAlert.dismiss();
                            }
                            HashMap<Object, Object> selectedPhotos = ChatActivity.this.chatAttachAlert.getSelectedPhotos();
                            ArrayList<Object> selectedPhotosOrder = ChatActivity.this.chatAttachAlert.getSelectedPhotosOrder();
                            if (!selectedPhotos.isEmpty()) {
                                ArrayList<SendMessagesHelper.SendingMediaInfo> photos = new ArrayList<>();
                                for (int a = 0; a < selectedPhotosOrder.size(); a++) {
                                    MediaController.PhotoEntry photoEntry = (MediaController.PhotoEntry) selectedPhotos.get(selectedPhotosOrder.get(a));
                                    SendMessagesHelper.SendingMediaInfo info = new SendMessagesHelper.SendingMediaInfo();
                                    if (photoEntry.imagePath != null) {
                                        info.path = photoEntry.imagePath;
                                    } else if (photoEntry.path != null) {
                                        info.path = photoEntry.path;
                                    }
                                    info.isVideo = photoEntry.isVideo;
                                    info.caption = photoEntry.caption != null ? photoEntry.caption.toString() : null;
                                    info.entities = photoEntry.entities;
                                    info.masks = !photoEntry.stickers.isEmpty() ? new ArrayList<>(photoEntry.stickers) : null;
                                    info.ttl = photoEntry.ttl;
                                    info.videoEditedInfo = photoEntry.editedInfo;
                                    info.canDeleteAfter = photoEntry.canDeleteAfter;
                                    photos.add(info);
                                    photoEntry.reset();
                                }
                                ChatActivity.this.fillEditingMediaWithCaption(photos.get(0).caption, photos.get(0).entities);
                                SendMessagesHelper.prepareSendingMedia(ChatActivity.this.getAccountInstance(), photos, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject, (InputContentInfoCompat) null, i == 4, arg, ChatActivity.this.editingMessageObject, notify, scheduleDate, false);
                                ChatActivity.this.afterMessageSend();
                            }
                            if (scheduleDate != 0) {
                                if (ChatActivity.this.scheduledMessagesCount == -1) {
                                    int unused3 = ChatActivity.this.scheduledMessagesCount = 0;
                                }
                                ChatActivity chatActivity2 = ChatActivity.this;
                                int unused4 = chatActivity2.scheduledMessagesCount = chatActivity2.scheduledMessagesCount + selectedPhotos.size();
                                ChatActivity.this.updateScheduledInterface(true);
                                return;
                            }
                            return;
                        }
                        if (ChatActivity.this.chatAttachAlert != null) {
                            ChatActivity.this.chatAttachAlert.dismissWithButtonClick(i);
                        }
                        ChatActivity.this.processSelectedAttach(i);
                    }
                }

                public View getRevealView() {
                    return ChatActivity.this.chatActivityEnterView.getAttachButton();
                }

                public void didSelectBot(TLRPC.User user) {
                    if (ChatActivity.this.chatActivityEnterView != null && !TextUtils.isEmpty(user.username)) {
                        ChatActivityEnterView chatActivityEnterView = ChatActivity.this.chatActivityEnterView;
                        chatActivityEnterView.setFieldText("@" + user.username + " ");
                        ChatActivity.this.chatActivityEnterView.openKeyboard();
                    }
                }

                public void onCameraOpened() {
                    ChatActivity.this.chatActivityEnterView.closeKeyboard();
                }

                public void needEnterComment() {
                    if (ChatActivity.this.chatActivityEnterView.isKeyboardVisible()) {
                        ChatActivity.this.chatActivityEnterView.showEmojiView();
                        boolean unused = ChatActivity.this.openKeyboardOnAttachMenuClose = true;
                    }
                    AndroidUtilities.setAdjustResizeToNothing(ChatActivity.this.getParentActivity(), ChatActivity.this.classGuid);
                    ChatActivity.this.fragmentView.requestLayout();
                }
            });
        }
    }

    public long getDialogId() {
        return this.dialog_id;
    }

    public boolean hasReportSpam() {
        FrameLayout frameLayout = this.topChatPanelView;
        return (frameLayout == null || frameLayout.getTag() != null || this.reportSpamButton.getVisibility() == 8) ? false : true;
    }

    public void setBotUser(String value) {
        if (this.inlineReturn != 0) {
            getMessagesController().sendBotStart(this.currentUser, value);
            return;
        }
        this.botUser = value;
        updateBottomOverlay();
    }

    /* access modifiers changed from: private */
    public void afterMessageSend() {
        hideFieldPanel(false);
        if (!this.inScheduleMode) {
            getMediaDataController().cleanDraft(this.dialog_id, true);
        }
    }

    public boolean playFirstUnreadVoiceMessage() {
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null && chatActivityEnterView2.isRecordingAudioVideo()) {
            return true;
        }
        for (int a = this.messages.size() - 1; a >= 0; a--) {
            MessageObject messageObject = this.messages.get(a);
            if ((messageObject.isVoice() || messageObject.isRoundVideo()) && messageObject.isContentUnread() && !messageObject.isOut()) {
                MediaController.getInstance().setVoiceMessagesPlaylist(MediaController.getInstance().playMessage(messageObject) ? createVoiceMessagesPlaylist(messageObject, true) : null, true);
                return true;
            }
        }
        if (Build.VERSION.SDK_INT < 23 || getParentActivity() == null || getParentActivity().checkSelfPermission("android.permission.RECORD_AUDIO") == 0) {
            return false;
        }
        getParentActivity().requestPermissions(new String[]{"android.permission.RECORD_AUDIO"}, 3);
        return true;
    }

    /* access modifiers changed from: private */
    public void openScheduledMessages() {
        if (this.parentLayout != null && this.parentLayout.getLastFragment() == this) {
            Bundle bundle = new Bundle();
            TLRPC.EncryptedChat encryptedChat = this.currentEncryptedChat;
            if (encryptedChat != null) {
                bundle.putInt("enc_id", encryptedChat.id);
            } else {
                TLRPC.Chat chat = this.currentChat;
                if (chat != null) {
                    bundle.putInt("chat_id", chat.id);
                } else {
                    bundle.putInt("user_id", this.currentUser.id);
                }
            }
            bundle.putBoolean("scheduled", true);
            ChatActivity fragment = new ChatActivity(bundle);
            fragment.chatActivityDelegate = new ChatActivityDelegate() {
                public final void openReplyMessage(int i) {
                    ChatActivity.this.lambda$openScheduledMessages$47$ChatActivity(i);
                }
            };
            presentFragment(fragment, false);
        }
    }

    public /* synthetic */ void lambda$openScheduledMessages$47$ChatActivity(int mid) {
        scrollToMessageId(mid, 0, true, 0, false);
    }

    private void initStickers() {
        if (this.chatActivityEnterView != null && getParentActivity() != null && this.stickersAdapter == null) {
            TLRPC.EncryptedChat encryptedChat = this.currentEncryptedChat;
            if (encryptedChat == null || AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 23) {
                this.stickersListView.setPadding(AndroidUtilities.dp(18.0f), 0, AndroidUtilities.dp(18.0f), 0);
                RecyclerListView recyclerListView = this.stickersListView;
                StickersAdapter stickersAdapter2 = new StickersAdapter(getParentActivity(), new StickersAdapter.StickersAdapterDelegate() {
                    public final void needChangePanelVisibility(boolean z) {
                        ChatActivity.this.lambda$initStickers$48$ChatActivity(z);
                    }
                });
                this.stickersAdapter = stickersAdapter2;
                recyclerListView.setAdapter(stickersAdapter2);
                RecyclerListView recyclerListView2 = this.stickersListView;
                $$Lambda$ChatActivity$eY8UzzYJMPCUCpl3mdBSOKMFZP0 r1 = new RecyclerListView.OnItemClickListener() {
                    public final void onItemClick(View view, int i) {
                        ChatActivity.this.lambda$initStickers$50$ChatActivity(view, i);
                    }
                };
                this.stickersOnItemClickListener = r1;
                recyclerListView2.setOnItemClickListener((RecyclerListView.OnItemClickListener) r1);
            }
        }
    }

    public /* synthetic */ void lambda$initStickers$48$ChatActivity(final boolean show) {
        if (show) {
            int newPadding = this.stickersAdapter.isShowingKeywords() ? AndroidUtilities.dp(24.0f) : 0;
            if (newPadding != this.stickersListView.getPaddingTop() || this.stickersPanel.getTag() == null) {
                this.stickersListView.setPadding(AndroidUtilities.dp(18.0f), newPadding, AndroidUtilities.dp(18.0f), 0);
                this.stickersListView.scrollToPosition(0);
                ((FrameLayout.LayoutParams) this.stickersPanelArrow.getLayoutParams()).gravity = (this.chatActivityEnterView.isRtlText() ? 5 : 3) | 80;
                this.stickersPanelArrow.requestLayout();
            }
        }
        if (show && this.stickersPanel.getTag() != null) {
            return;
        }
        if (show || this.stickersPanel.getTag() != null) {
            if (show) {
                this.stickersPanel.setVisibility(this.allowStickersPanel ? 0 : 4);
                this.stickersPanel.setTag(1);
            } else {
                this.stickersPanel.setTag((Object) null);
            }
            AnimatorSet animatorSet = this.runningAnimation;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.runningAnimation = null;
            }
            if (this.stickersPanel.getVisibility() != 4) {
                AnimatorSet animatorSet2 = new AnimatorSet();
                this.runningAnimation = animatorSet2;
                Animator[] animatorArr = new Animator[1];
                FrameLayout frameLayout = this.stickersPanel;
                Property property = View.ALPHA;
                float[] fArr = new float[2];
                float f = 0.0f;
                fArr[0] = show ? 0.0f : 1.0f;
                if (show) {
                    f = 1.0f;
                }
                fArr[1] = f;
                animatorArr[0] = ObjectAnimator.ofFloat(frameLayout, property, fArr);
                animatorSet2.playTogether(animatorArr);
                this.runningAnimation.setDuration(150);
                this.runningAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        if (ChatActivity.this.runningAnimation != null && ChatActivity.this.runningAnimation.equals(animation)) {
                            if (!show) {
                                ChatActivity.this.stickersAdapter.clearStickers();
                                ChatActivity.this.stickersPanel.setVisibility(8);
                                if (ContentPreviewViewer.getInstance().isVisible()) {
                                    ContentPreviewViewer.getInstance().close();
                                }
                                ContentPreviewViewer.getInstance().reset();
                            }
                            AnimatorSet unused = ChatActivity.this.runningAnimation = null;
                        }
                    }

                    public void onAnimationCancel(Animator animation) {
                        if (ChatActivity.this.runningAnimation != null && ChatActivity.this.runningAnimation.equals(animation)) {
                            AnimatorSet unused = ChatActivity.this.runningAnimation = null;
                        }
                    }
                });
                this.runningAnimation.start();
            } else if (!show) {
                this.stickersPanel.setVisibility(8);
            }
        }
    }

    public /* synthetic */ void lambda$initStickers$50$ChatActivity(View view, int position) {
        Object item = this.stickersAdapter.getItem(position);
        Object parent = this.stickersAdapter.getItemParent(position);
        if (item instanceof TLRPC.TL_document) {
            if (this.inScheduleMode || !checkSlowMode(view)) {
                TLRPC.TL_document document = (TLRPC.TL_document) item;
                if (this.inScheduleMode) {
                    AlertsCreator.createScheduleDatePickerDialog(getParentActivity(), UserObject.isUserSelf(this.currentUser), new AlertsCreator.ScheduleDatePickerDelegate(document, parent) {
                        private final /* synthetic */ TLRPC.TL_document f$1;
                        private final /* synthetic */ Object f$2;

                        {
                            this.f$1 = r2;
                            this.f$2 = r3;
                        }

                        public final void didSelectDate(boolean z, int i) {
                            ChatActivity.this.lambda$null$49$ChatActivity(this.f$1, this.f$2, z, i);
                        }
                    });
                } else {
                    getSendMessagesHelper().sendSticker(document, this.dialog_id, this.replyingMessageObject, parent, true, 0);
                }
                hideFieldPanel(false);
                this.chatActivityEnterView.addStickerToRecent(document);
                this.chatActivityEnterView.setFieldText("");
            }
        } else if (item instanceof String) {
            SpannableString string = new SpannableString((String) item);
            Emoji.replaceEmoji(string, this.chatActivityEnterView.getEditField().getPaint().getFontMetricsInt(), AndroidUtilities.dp(20.0f), false);
            this.chatActivityEnterView.setFieldText(string, false);
        }
    }

    public /* synthetic */ void lambda$null$49$ChatActivity(TLRPC.TL_document document, Object parent, boolean notify, int scheduleDate) {
        SendMessagesHelper.getInstance(this.currentAccount).sendSticker(document, this.dialog_id, this.replyingMessageObject, parent, notify, scheduleDate);
    }

    public void shareMyContact(int type, MessageObject messageObject) {
        AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
        builder.setTitle(LocaleController.getString("ShareYouPhoneNumberTitle", R.string.ShareYouPhoneNumberTitle));
        TLRPC.User user = this.currentUser;
        if (user == null) {
            builder.setMessage(LocaleController.getString("AreYouSureShareMyContactInfo", R.string.AreYouSureShareMyContactInfo));
        } else if (user.bot) {
            builder.setMessage(LocaleController.getString("AreYouSureShareMyContactInfoBot", R.string.AreYouSureShareMyContactInfoBot));
        } else {
            PhoneFormat instance = PhoneFormat.getInstance();
            builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString("AreYouSureShareMyContactInfoUser", R.string.AreYouSureShareMyContactInfoUser, instance.format(Marker.ANY_NON_NULL_MARKER + getUserConfig().getCurrentUser().phone), ContactsController.formatName(this.currentUser.first_name, this.currentUser.last_name))));
        }
        builder.setPositiveButton(LocaleController.getString("ShareContact", R.string.ShareContact), new DialogInterface.OnClickListener(type, messageObject) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ MessageObject f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void onClick(DialogInterface dialogInterface, int i) {
                ChatActivity.this.lambda$shareMyContact$52$ChatActivity(this.f$1, this.f$2, dialogInterface, i);
            }
        });
        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), (DialogInterface.OnClickListener) null);
        showDialog(builder.create());
    }

    public /* synthetic */ void lambda$shareMyContact$52$ChatActivity(int type, MessageObject messageObject, DialogInterface dialogInterface, int i) {
        if (type == 1) {
            TLRPC.TL_contacts_acceptContact req = new TLRPC.TL_contacts_acceptContact();
            req.id = getMessagesController().getInputUser(this.currentUser);
            getConnectionsManager().sendRequest(req, new RequestDelegate() {
                public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                    ChatActivity.this.lambda$null$51$ChatActivity(tLObject, tL_error);
                }
            });
            return;
        }
        SendMessagesHelper.getInstance(this.currentAccount).sendMessage(getUserConfig().getCurrentUser(), this.dialog_id, messageObject, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
        if (!this.inScheduleMode) {
            moveScrollToLastMessage();
        }
        hideFieldPanel(false);
    }

    public /* synthetic */ void lambda$null$51$ChatActivity(TLObject response, TLRPC.TL_error error) {
        if (error == null) {
            getMessagesController().processUpdates((TLRPC.Updates) response, false);
        }
    }

    /* access modifiers changed from: private */
    public void hideVoiceHint() {
        if (this.voiceHintTextView != null) {
            AnimatorSet animatorSet = new AnimatorSet();
            this.voiceHintAnimation = animatorSet;
            animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.voiceHintTextView, View.ALPHA, new float[]{0.0f})});
            this.voiceHintAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animation) {
                    if (animation.equals(ChatActivity.this.voiceHintAnimation)) {
                        AnimatorSet unused = ChatActivity.this.voiceHintAnimation = null;
                        Runnable unused2 = ChatActivity.this.voiceHintHideRunnable = null;
                        if (ChatActivity.this.voiceHintTextView != null) {
                            ChatActivity.this.voiceHintTextView.setVisibility(8);
                        }
                    }
                }

                public void onAnimationCancel(Animator animation) {
                    if (animation.equals(ChatActivity.this.voiceHintAnimation)) {
                        AnimatorSet unused = ChatActivity.this.voiceHintAnimation = null;
                        Runnable unused2 = ChatActivity.this.voiceHintHideRunnable = null;
                    }
                }
            });
            this.voiceHintAnimation.setDuration(300);
            this.voiceHintAnimation.start();
        }
    }

    /* access modifiers changed from: private */
    public void showVoiceHint(boolean hide, boolean video) {
        String str;
        int i;
        if (getParentActivity() != null && this.fragmentView != null) {
            if ((!hide || this.voiceHintTextView != null) && !this.inScheduleMode) {
                if (this.voiceHintTextView == null) {
                    SizeNotifierFrameLayout frameLayout = (SizeNotifierFrameLayout) this.fragmentView;
                    int index = frameLayout.indexOfChild(this.chatActivityEnterView);
                    if (index != -1) {
                        TextView textView = new TextView(getParentActivity());
                        this.voiceHintTextView = textView;
                        textView.setBackgroundDrawable(Theme.createRoundRectDrawable((float) AndroidUtilities.dp(3.0f), Theme.getColor(Theme.key_chat_gifSaveHintBackground)));
                        this.voiceHintTextView.setTextColor(Theme.getColor(Theme.key_chat_gifSaveHintText));
                        this.voiceHintTextView.setTextSize(1, 14.0f);
                        this.voiceHintTextView.setPadding(AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f));
                        this.voiceHintTextView.setGravity(16);
                        this.voiceHintTextView.setAlpha(0.0f);
                        frameLayout.addView(this.voiceHintTextView, index + 1, LayoutHelper.createFrame(-2.0f, -2.0f, 85, 5.0f, 0.0f, 5.0f, 3.0f));
                    } else {
                        return;
                    }
                }
                if (hide) {
                    AnimatorSet animatorSet = this.voiceHintAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.voiceHintAnimation = null;
                    }
                    AndroidUtilities.cancelRunOnUIThread(this.voiceHintHideRunnable);
                    this.voiceHintHideRunnable = null;
                    if (this.voiceHintTextView.getVisibility() == 0) {
                        hideVoiceHint();
                        return;
                    }
                    return;
                }
                TextView textView2 = this.voiceHintTextView;
                if (video) {
                    i = R.string.HoldToVideo;
                    str = "HoldToVideo";
                } else {
                    i = R.string.HoldToAudio;
                    str = "HoldToAudio";
                }
                textView2.setText(LocaleController.getString(str, i));
                Runnable runnable = this.voiceHintHideRunnable;
                if (runnable != null) {
                    AnimatorSet animatorSet2 = this.voiceHintAnimation;
                    if (animatorSet2 != null) {
                        animatorSet2.cancel();
                        this.voiceHintAnimation = null;
                    } else {
                        AndroidUtilities.cancelRunOnUIThread(runnable);
                        $$Lambda$ChatActivity$cNY0g4Gk1pGojViZXWcHGiI0wQ0 r0 = new Runnable() {
                            public final void run() {
                                ChatActivity.this.hideVoiceHint();
                            }
                        };
                        this.voiceHintHideRunnable = r0;
                        AndroidUtilities.runOnUIThread(r0, AdaptiveTrackSelection.DEFAULT_MIN_TIME_BETWEEN_BUFFER_REEVALUTATION_MS);
                        return;
                    }
                } else if (this.voiceHintAnimation != null) {
                    return;
                }
                this.voiceHintTextView.setVisibility(0);
                AnimatorSet animatorSet3 = new AnimatorSet();
                this.voiceHintAnimation = animatorSet3;
                animatorSet3.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.voiceHintTextView, View.ALPHA, new float[]{1.0f})});
                this.voiceHintAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        if (animation.equals(ChatActivity.this.voiceHintAnimation)) {
                            AnimatorSet unused = ChatActivity.this.voiceHintAnimation = null;
                            AndroidUtilities.runOnUIThread(ChatActivity.this.voiceHintHideRunnable = new Runnable() {
                                public final void run() {
                                    ChatActivity.AnonymousClass43.this.lambda$onAnimationEnd$0$ChatActivity$43();
                                }
                            }, AdaptiveTrackSelection.DEFAULT_MIN_TIME_BETWEEN_BUFFER_REEVALUTATION_MS);
                        }
                    }

                    public /* synthetic */ void lambda$onAnimationEnd$0$ChatActivity$43() {
                        ChatActivity.this.hideVoiceHint();
                    }

                    public void onAnimationCancel(Animator animation) {
                        if (animation.equals(ChatActivity.this.voiceHintAnimation)) {
                            AnimatorSet unused = ChatActivity.this.voiceHintAnimation = null;
                        }
                    }
                });
                this.voiceHintAnimation.setDuration(300);
                this.voiceHintAnimation.start();
            }
        }
    }

    private boolean checkSlowMode(View view) {
        CharSequence time = this.chatActivityEnterView.getSlowModeTimer();
        if (time == null) {
            return false;
        }
        showSlowModeHint(view, true, time);
        return true;
    }

    /* access modifiers changed from: private */
    public void showSlowModeHint(View view, boolean show, CharSequence time) {
        HintView hintView;
        if (getParentActivity() != null && this.fragmentView != null) {
            if (show || ((hintView = this.slowModeHint) != null && hintView.getVisibility() == 0)) {
                this.slowModeHint.setText(AndroidUtilities.replaceTags(LocaleController.formatString("SlowModeHint", R.string.SlowModeHint, time)));
                if (show) {
                    this.slowModeHint.showForView(view, true);
                }
            }
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:10:0x001a, code lost:
        r0 = (im.bclpbkiauv.ui.components.SizeNotifierFrameLayout) r12.fragmentView;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void showMediaBannedHint() {
        /*
            r12 = this;
            androidx.fragment.app.FragmentActivity r0 = r12.getParentActivity()
            if (r0 == 0) goto L_0x0123
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r12.currentChat
            if (r0 == 0) goto L_0x0123
            android.view.View r0 = r12.fragmentView
            if (r0 == 0) goto L_0x0123
            android.widget.TextView r0 = r12.mediaBanTooltip
            if (r0 == 0) goto L_0x001a
            int r0 = r0.getVisibility()
            if (r0 != 0) goto L_0x001a
            goto L_0x0123
        L_0x001a:
            android.view.View r0 = r12.fragmentView
            im.bclpbkiauv.ui.components.SizeNotifierFrameLayout r0 = (im.bclpbkiauv.ui.components.SizeNotifierFrameLayout) r0
            im.bclpbkiauv.ui.components.ChatActivityEnterView r1 = r12.chatActivityEnterView
            int r1 = r0.indexOfChild(r1)
            r2 = -1
            if (r1 != r2) goto L_0x0028
            return
        L_0x0028:
            android.widget.TextView r2 = r12.mediaBanTooltip
            r3 = 1
            if (r2 != 0) goto L_0x009d
            im.bclpbkiauv.ui.components.CorrectlyMeasuringTextView r2 = new im.bclpbkiauv.ui.components.CorrectlyMeasuringTextView
            androidx.fragment.app.FragmentActivity r4 = r12.getParentActivity()
            r2.<init>(r4)
            r12.mediaBanTooltip = r2
            r4 = 1077936128(0x40400000, float:3.0)
            int r4 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r4)
            float r4 = (float) r4
            java.lang.String r5 = "chat_gifSaveHintBackground"
            int r5 = im.bclpbkiauv.ui.actionbar.Theme.getColor(r5)
            android.graphics.drawable.Drawable r4 = im.bclpbkiauv.ui.actionbar.Theme.createRoundRectDrawable(r4, r5)
            r2.setBackgroundDrawable(r4)
            android.widget.TextView r2 = r12.mediaBanTooltip
            java.lang.String r4 = "chat_gifSaveHintText"
            int r4 = im.bclpbkiauv.ui.actionbar.Theme.getColor(r4)
            r2.setTextColor(r4)
            android.widget.TextView r2 = r12.mediaBanTooltip
            r4 = 1090519040(0x41000000, float:8.0)
            int r5 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r4)
            r6 = 1088421888(0x40e00000, float:7.0)
            int r7 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r6)
            int r4 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r4)
            int r6 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r6)
            r2.setPadding(r5, r7, r4, r6)
            android.widget.TextView r2 = r12.mediaBanTooltip
            r4 = 16
            r2.setGravity(r4)
            android.widget.TextView r2 = r12.mediaBanTooltip
            r4 = 1096810496(0x41600000, float:14.0)
            r2.setTextSize(r3, r4)
            android.widget.TextView r2 = r12.mediaBanTooltip
            r4 = 8
            r2.setVisibility(r4)
            android.widget.TextView r2 = r12.mediaBanTooltip
            int r4 = r1 + 1
            r5 = -1073741824(0xffffffffc0000000, float:-2.0)
            r6 = -1073741824(0xffffffffc0000000, float:-2.0)
            r7 = 85
            r8 = 1106247680(0x41f00000, float:30.0)
            r9 = 0
            r10 = 1084227584(0x40a00000, float:5.0)
            r11 = 1077936128(0x40400000, float:3.0)
            android.widget.FrameLayout$LayoutParams r5 = im.bclpbkiauv.ui.components.LayoutHelper.createFrame(r5, r6, r7, r8, r9, r10, r11)
            r0.addView(r2, r4, r5)
        L_0x009d:
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r12.currentChat
            r4 = 7
            boolean r2 = im.bclpbkiauv.messenger.ChatObject.isActionBannedByDefault(r2, r4)
            r4 = 0
            if (r2 == 0) goto L_0x00b6
            android.widget.TextView r2 = r12.mediaBanTooltip
            r5 = 2131691480(0x7f0f07d8, float:1.9012033E38)
            java.lang.String r6 = "GlobalAttachMediaRestricted"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.getString(r6, r5)
            r2.setText(r5)
            goto L_0x00f3
        L_0x00b6:
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r12.currentChat
            im.bclpbkiauv.tgnet.TLRPC$TL_chatBannedRights r2 = r2.banned_rights
            if (r2 != 0) goto L_0x00bd
            return
        L_0x00bd:
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r12.currentChat
            im.bclpbkiauv.tgnet.TLRPC$TL_chatBannedRights r2 = r2.banned_rights
            boolean r2 = im.bclpbkiauv.messenger.AndroidUtilities.isBannedForever(r2)
            if (r2 == 0) goto L_0x00d6
            android.widget.TextView r2 = r12.mediaBanTooltip
            r5 = 2131689955(0x7f0f01e3, float:1.900894E38)
            java.lang.String r6 = "AttachMediaRestrictedForever"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.getString(r6, r5)
            r2.setText(r5)
            goto L_0x00f3
        L_0x00d6:
            android.widget.TextView r2 = r12.mediaBanTooltip
            r5 = 2131689954(0x7f0f01e2, float:1.9008938E38)
            java.lang.Object[] r6 = new java.lang.Object[r3]
            im.bclpbkiauv.tgnet.TLRPC$Chat r7 = r12.currentChat
            im.bclpbkiauv.tgnet.TLRPC$TL_chatBannedRights r7 = r7.banned_rights
            int r7 = r7.until_date
            long r7 = (long) r7
            java.lang.String r7 = im.bclpbkiauv.messenger.LocaleController.formatDateForBan(r7)
            r6[r4] = r7
            java.lang.String r7 = "AttachMediaRestricted"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatString(r7, r5, r6)
            r2.setText(r5)
        L_0x00f3:
            android.widget.TextView r2 = r12.mediaBanTooltip
            r2.setVisibility(r4)
            android.animation.AnimatorSet r2 = new android.animation.AnimatorSet
            r2.<init>()
            android.animation.Animator[] r3 = new android.animation.Animator[r3]
            android.widget.TextView r5 = r12.mediaBanTooltip
            android.util.Property r6 = android.view.View.ALPHA
            r7 = 2
            float[] r7 = new float[r7]
            r7 = {0, 1065353216} // fill-array
            android.animation.ObjectAnimator r5 = android.animation.ObjectAnimator.ofFloat(r5, r6, r7)
            r3[r4] = r5
            r2.playTogether(r3)
            im.bclpbkiauv.ui.ChatActivity$44 r3 = new im.bclpbkiauv.ui.ChatActivity$44
            r3.<init>()
            r2.addListener(r3)
            r3 = 300(0x12c, double:1.48E-321)
            r2.setDuration(r3)
            r2.start()
            return
        L_0x0123:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.showMediaBannedHint():void");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:24:0x0075, code lost:
        r3 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r2;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void showNoSoundHint() {
        /*
            r11 = this;
            boolean r0 = r11.scrollingChatListView
            if (r0 != 0) goto L_0x00a9
            boolean r0 = im.bclpbkiauv.messenger.SharedConfig.noSoundHintShowed
            if (r0 != 0) goto L_0x00a9
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r11.chatListView
            if (r0 == 0) goto L_0x00a9
            androidx.fragment.app.FragmentActivity r0 = r11.getParentActivity()
            if (r0 == 0) goto L_0x00a9
            android.view.View r0 = r11.fragmentView
            if (r0 == 0) goto L_0x00a9
            im.bclpbkiauv.ui.components.HintView r0 = r11.noSoundHintView
            if (r0 == 0) goto L_0x0022
            java.lang.Object r0 = r0.getTag()
            if (r0 == 0) goto L_0x0022
            goto L_0x00a9
        L_0x0022:
            im.bclpbkiauv.ui.components.HintView r0 = r11.noSoundHintView
            if (r0 != 0) goto L_0x0061
            android.view.View r0 = r11.fragmentView
            im.bclpbkiauv.ui.components.SizeNotifierFrameLayout r0 = (im.bclpbkiauv.ui.components.SizeNotifierFrameLayout) r0
            im.bclpbkiauv.ui.components.ChatActivityEnterView r1 = r11.chatActivityEnterView
            int r1 = r0.indexOfChild(r1)
            r2 = -1
            if (r1 != r2) goto L_0x0034
            return
        L_0x0034:
            im.bclpbkiauv.ui.components.HintView r2 = new im.bclpbkiauv.ui.components.HintView
            androidx.fragment.app.FragmentActivity r3 = r11.getParentActivity()
            r4 = 0
            r2.<init>(r3, r4)
            r11.noSoundHintView = r2
            int r3 = r1 + 1
            r4 = -1073741824(0xffffffffc0000000, float:-2.0)
            r5 = -1073741824(0xffffffffc0000000, float:-2.0)
            r6 = 51
            r7 = 1100480512(0x41980000, float:19.0)
            r8 = 0
            r9 = 1100480512(0x41980000, float:19.0)
            r10 = 0
            android.widget.FrameLayout$LayoutParams r4 = im.bclpbkiauv.ui.components.LayoutHelper.createFrame(r4, r5, r6, r7, r8, r9, r10)
            r0.addView(r2, r3, r4)
            im.bclpbkiauv.ui.components.HintView r2 = r11.noSoundHintView
            r3 = 0
            r2.setAlpha(r3)
            im.bclpbkiauv.ui.components.HintView r2 = r11.noSoundHintView
            r3 = 4
            r2.setVisibility(r3)
        L_0x0061:
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r11.chatListView
            int r0 = r0.getChildCount()
            r1 = 0
        L_0x0068:
            if (r1 >= r0) goto L_0x00a8
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r11.chatListView
            android.view.View r2 = r2.getChildAt(r1)
            boolean r3 = r2 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r3 != 0) goto L_0x0075
            goto L_0x00a5
        L_0x0075:
            r3 = r2
            im.bclpbkiauv.ui.cells.ChatMessageCell r3 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r3
            im.bclpbkiauv.messenger.MessageObject r4 = r3.getMessageObject()
            if (r4 == 0) goto L_0x00a5
            boolean r5 = r4.isVideo()
            if (r5 != 0) goto L_0x0085
            goto L_0x00a5
        L_0x0085:
            im.bclpbkiauv.messenger.ImageReceiver r5 = r3.getPhotoImage()
            im.bclpbkiauv.ui.components.AnimatedFileDrawable r6 = r5.getAnimation()
            if (r6 == 0) goto L_0x00a5
            int r7 = r6.getCurrentProgressMs()
            r8 = 3000(0xbb8, float:4.204E-42)
            if (r7 >= r8) goto L_0x0098
            goto L_0x00a5
        L_0x0098:
            im.bclpbkiauv.ui.components.HintView r7 = r11.noSoundHintView
            r8 = 1
            boolean r7 = r7.showForMessageCell(r3, r8)
            if (r7 == 0) goto L_0x00a5
            im.bclpbkiauv.messenger.SharedConfig.setNoSoundHintShowed(r8)
            goto L_0x00a8
        L_0x00a5:
            int r1 = r1 + 1
            goto L_0x0068
        L_0x00a8:
            return
        L_0x00a9:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.showNoSoundHint():void");
    }

    /* access modifiers changed from: private */
    public void showForwardHint(ChatMessageCell cell) {
        if (!this.scrollingChatListView && this.chatListView != null && getParentActivity() != null && this.fragmentView != null) {
            if (this.forwardHintView == null) {
                SizeNotifierFrameLayout frameLayout = (SizeNotifierFrameLayout) this.fragmentView;
                int index = frameLayout.indexOfChild(this.chatActivityEnterView);
                if (index != -1) {
                    HintView hintView = new HintView(getParentActivity(), 1);
                    this.forwardHintView = hintView;
                    frameLayout.addView(hintView, index + 1, LayoutHelper.createFrame(-2.0f, -2.0f, 51, 19.0f, 0.0f, 19.0f, 0.0f));
                    this.forwardHintView.setAlpha(0.0f);
                    this.forwardHintView.setVisibility(4);
                } else {
                    return;
                }
            }
            this.forwardHintView.showForMessageCell(cell, true);
        }
    }

    private void showGifHint() {
        SharedPreferences preferences = MessagesController.getGlobalMainSettings();
        if (!preferences.getBoolean("gifhint", false)) {
            preferences.edit().putBoolean("gifhint", true).commit();
            if (getParentActivity() != null && this.fragmentView != null && this.gifHintTextView == null) {
                if (!this.allowContextBotPanelSecond) {
                    ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
                    if (chatActivityEnterView2 != null) {
                        chatActivityEnterView2.setOpenGifsTabFirst();
                        return;
                    }
                    return;
                }
                SizeNotifierFrameLayout frameLayout = (SizeNotifierFrameLayout) this.fragmentView;
                int index = frameLayout.indexOfChild(this.chatActivityEnterView);
                if (index != -1) {
                    this.chatActivityEnterView.setOpenGifsTabFirst();
                    View view = new View(getParentActivity());
                    this.emojiButtonRed = view;
                    view.setBackgroundResource(R.drawable.redcircle);
                    frameLayout.addView(this.emojiButtonRed, index + 1, LayoutHelper.createFrame(10.0f, 10.0f, 83, 30.0f, 0.0f, 0.0f, 27.0f));
                    TextView textView = new TextView(getParentActivity());
                    this.gifHintTextView = textView;
                    textView.setBackgroundDrawable(Theme.createRoundRectDrawable((float) AndroidUtilities.dp(3.0f), Theme.getColor(Theme.key_chat_gifSaveHintBackground)));
                    this.gifHintTextView.setTextColor(Theme.getColor(Theme.key_chat_gifSaveHintText));
                    this.gifHintTextView.setTextSize(1, 14.0f);
                    this.gifHintTextView.setPadding(AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f));
                    this.gifHintTextView.setText(LocaleController.getString("TapHereGifs", R.string.TapHereGifs));
                    this.gifHintTextView.setGravity(16);
                    frameLayout.addView(this.gifHintTextView, index + 1, LayoutHelper.createFrame(-2.0f, -2.0f, 83, 5.0f, 0.0f, 5.0f, 3.0f));
                    AnimatorSet AnimatorSet = new AnimatorSet();
                    AnimatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.gifHintTextView, View.ALPHA, new float[]{0.0f, 1.0f}), ObjectAnimator.ofFloat(this.emojiButtonRed, View.ALPHA, new float[]{0.0f, 1.0f})});
                    AnimatorSet.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animation) {
                            AndroidUtilities.runOnUIThread(new Runnable() {
                                public final void run() {
                                    ChatActivity.AnonymousClass45.this.lambda$onAnimationEnd$0$ChatActivity$45();
                                }
                            }, AdaptiveTrackSelection.DEFAULT_MIN_TIME_BETWEEN_BUFFER_REEVALUTATION_MS);
                        }

                        public /* synthetic */ void lambda$onAnimationEnd$0$ChatActivity$45() {
                            if (ChatActivity.this.gifHintTextView != null) {
                                AnimatorSet AnimatorSet = new AnimatorSet();
                                AnimatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(ChatActivity.this.gifHintTextView, View.ALPHA, new float[]{0.0f})});
                                AnimatorSet.addListener(new AnimatorListenerAdapter() {
                                    public void onAnimationEnd(Animator animation) {
                                        if (ChatActivity.this.gifHintTextView != null) {
                                            ChatActivity.this.gifHintTextView.setVisibility(8);
                                        }
                                    }
                                });
                                AnimatorSet.setDuration(300);
                                AnimatorSet.start();
                            }
                        }
                    });
                    AnimatorSet.setDuration(300);
                    AnimatorSet.start();
                }
            }
        }
    }

    /* access modifiers changed from: private */
    public void openAttachMenu() {
        if (getParentActivity() != null) {
            createChatAttachView();
            this.chatAttachAlert.loadGalleryPhotos();
            if (Build.VERSION.SDK_INT == 21 || Build.VERSION.SDK_INT == 22) {
                this.chatActivityEnterView.closeKeyboard();
            }
            TLRPC.Chat chat = this.currentChat;
            if (chat == null || ChatObject.hasAdminRights(chat) || !this.currentChat.slowmode_enabled) {
                this.chatAttachAlert.setMaxSelectedPhotos(-1, true);
            } else {
                this.chatAttachAlert.setMaxSelectedPhotos(10, true);
            }
            this.chatAttachAlert.init();
            showDialog(this.chatAttachAlert);
        }
    }

    /* access modifiers changed from: private */
    public void openCameraView() {
        if (getParentActivity() != null) {
            final CameraViewActivity cameraViewActivity = new CameraViewActivity(getParentActivity(), this);
            cameraViewActivity.setDelegate(new CameraViewActivity.ChatAttachViewDelegate() {
                public void didPressedButton(int button, boolean arg, boolean notify, int scheduleDate) {
                    HashMap<Object, Object> selectedPhotos = cameraViewActivity.getSelectedPhotos();
                    ArrayList<Object> selectedPhotosOrder = cameraViewActivity.getSelectedPhotosOrder();
                    if (!selectedPhotos.isEmpty()) {
                        ArrayList<SendMessagesHelper.SendingMediaInfo> photos = new ArrayList<>();
                        for (int a = 0; a < selectedPhotosOrder.size(); a++) {
                            MediaController.PhotoEntry photoEntry = (MediaController.PhotoEntry) selectedPhotos.get(selectedPhotosOrder.get(a));
                            SendMessagesHelper.SendingMediaInfo info = new SendMessagesHelper.SendingMediaInfo();
                            if (photoEntry.imagePath != null) {
                                info.path = photoEntry.imagePath;
                            } else if (photoEntry.path != null) {
                                info.path = photoEntry.path;
                            }
                            info.isVideo = photoEntry.isVideo;
                            ArrayList<TLRPC.InputDocument> arrayList = null;
                            info.caption = photoEntry.caption != null ? photoEntry.caption.toString() : null;
                            info.entities = photoEntry.entities;
                            if (!photoEntry.stickers.isEmpty()) {
                                arrayList = new ArrayList<>(photoEntry.stickers);
                            }
                            info.masks = arrayList;
                            info.ttl = photoEntry.ttl;
                            info.videoEditedInfo = photoEntry.editedInfo;
                            info.canDeleteAfter = photoEntry.canDeleteAfter;
                            photos.add(info);
                            photoEntry.reset();
                        }
                        ChatActivity.this.fillEditingMediaWithCaption(photos.get(0).caption, photos.get(0).entities);
                        SendMessagesHelper.prepareSendingMedia(ChatActivity.this.getAccountInstance(), photos, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject, (InputContentInfoCompat) null, button == 4, arg, ChatActivity.this.editingMessageObject, notify, scheduleDate, false);
                        ChatActivity.this.afterMessageSend();
                    }
                    if (scheduleDate != 0) {
                        if (ChatActivity.this.scheduledMessagesCount == -1) {
                            int unused = ChatActivity.this.scheduledMessagesCount = 0;
                        }
                        ChatActivity chatActivity = ChatActivity.this;
                        int unused2 = chatActivity.scheduledMessagesCount = chatActivity.scheduledMessagesCount + selectedPhotos.size();
                        ChatActivity.this.updateScheduledInterface(true);
                    }
                }

                public View getRevealView() {
                    return null;
                }

                public void didSelectBot(TLRPC.User user) {
                }

                public void onCameraOpened() {
                    ChatActivity.this.chatActivityEnterView.hidePopup(true);
                }

                public void needEnterComment() {
                }
            });
            showDialog(cameraViewActivity);
        }
    }

    /* access modifiers changed from: private */
    public void checkContextBotPanel() {
        MentionsAdapter mentionsAdapter2;
        if (this.allowStickersPanel && (mentionsAdapter2 = this.mentionsAdapter) != null && mentionsAdapter2.isBotContext()) {
            if (this.allowContextBotPanel || this.allowContextBotPanelSecond) {
                if (this.mentionContainer.getVisibility() == 4 || this.mentionContainer.getTag() != null) {
                    AnimatorSet animatorSet = this.mentionListAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                    }
                    this.mentionContainer.setTag((Object) null);
                    this.mentionContainer.setVisibility(0);
                    updateMessageListAccessibilityVisibility();
                    AnimatorSet animatorSet2 = new AnimatorSet();
                    this.mentionListAnimation = animatorSet2;
                    animatorSet2.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.mentionContainer, View.ALPHA, new float[]{0.0f, 1.0f})});
                    this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animation) {
                            if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animation)) {
                                AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                            }
                        }

                        public void onAnimationCancel(Animator animation) {
                            if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animation)) {
                                AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                            }
                        }
                    });
                    this.mentionListAnimation.setDuration(200);
                    this.mentionListAnimation.start();
                }
            } else if (this.mentionContainer.getVisibility() == 0 && this.mentionContainer.getTag() == null) {
                AnimatorSet animatorSet3 = this.mentionListAnimation;
                if (animatorSet3 != null) {
                    animatorSet3.cancel();
                }
                this.mentionContainer.setTag(1);
                AnimatorSet animatorSet4 = new AnimatorSet();
                this.mentionListAnimation = animatorSet4;
                animatorSet4.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.mentionContainer, View.ALPHA, new float[]{0.0f})});
                this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animation)) {
                            ChatActivity.this.mentionContainer.setVisibility(4);
                            AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                            ChatActivity.this.updateMessageListAccessibilityVisibility();
                        }
                    }

                    public void onAnimationCancel(Animator animation) {
                        if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animation)) {
                            AnimatorSet unused = ChatActivity.this.mentionListAnimation = null;
                        }
                    }
                });
                this.mentionListAnimation.setDuration(200);
                this.mentionListAnimation.start();
            }
        }
    }

    /* access modifiers changed from: private */
    public void checkAutoDownloadMessages(boolean scrollUp) {
        int lastPosition;
        int firstMessagePosition;
        TLRPC.Document document;
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            int count = recyclerListView.getChildCount();
            int firstMessagePosition2 = -1;
            int lastMessagePosition = -1;
            for (int a = 0; a < count; a++) {
                View child = this.chatListView.getChildAt(a);
                if (child instanceof ChatMessageCell) {
                    RecyclerView.ViewHolder holder = this.chatListView.findContainingViewHolder(child);
                    if (holder != null) {
                        int p = holder.getAdapterPosition();
                        if (firstMessagePosition2 == -1) {
                            firstMessagePosition2 = p;
                        }
                        lastMessagePosition = p;
                    }
                    ChatMessageCell cell = (ChatMessageCell) child;
                    MessageObject object = cell.getMessageObject();
                    if (object != null && !object.mediaExists && object.isSent() && (document = object.getDocument()) != null && !MessageObject.isStickerDocument(document) && !MessageObject.isAnimatedStickerDocument(document) && !MessageObject.isGifDocument(document) && !MessageObject.isRoundVideoDocument(document)) {
                        int canDownloadMedia = getDownloadController().canDownloadMedia(object.messageOwner);
                        int canDownload = canDownloadMedia;
                        if (canDownloadMedia != 0) {
                            int i = 2;
                            if (canDownload != 2) {
                                FileLoader fileLoader = getFileLoader();
                                if (!MessageObject.isVideoDocument(document) || !object.shouldEncryptPhotoOrVideo()) {
                                    i = 0;
                                }
                                fileLoader.loadFile(document, object, 0, i);
                                cell.updateButtonState(false, true, false);
                            } else if (this.currentEncryptedChat == null && !object.shouldEncryptPhotoOrVideo() && object.canStreamVideo()) {
                                getFileLoader().loadFile(document, object, 0, 10);
                            }
                        }
                    }
                }
            }
            if (firstMessagePosition2 != -1) {
                if (scrollUp) {
                    int lastPosition2 = lastMessagePosition;
                    int firstMessagePosition3 = lastMessagePosition;
                    if (firstMessagePosition3 + 10 >= this.chatAdapter.messagesEndRow) {
                        firstMessagePosition = this.chatAdapter.messagesEndRow;
                    } else {
                        firstMessagePosition = firstMessagePosition3 + 10;
                    }
                    int N = this.messages.size();
                    for (int a2 = lastPosition2; a2 < firstMessagePosition; a2++) {
                        int n = a2 - this.chatAdapter.messagesStartRow;
                        if (n >= 0 && n < N) {
                            checkAutoDownloadMessage(this.messages.get(n));
                        }
                    }
                } else {
                    if (firstMessagePosition2 - 20 <= this.chatAdapter.messagesStartRow) {
                        lastPosition = this.chatAdapter.messagesStartRow;
                    } else {
                        lastPosition = firstMessagePosition2 - 20;
                    }
                    int N2 = this.messages.size();
                    for (int a3 = firstMessagePosition2 - 1; a3 >= lastPosition; a3--) {
                        int n2 = a3 - this.chatAdapter.messagesStartRow;
                        if (n2 >= 0 && n2 < N2) {
                            checkAutoDownloadMessage(this.messages.get(n2));
                        }
                    }
                }
            }
            showNoSoundHint();
        }
    }

    private void checkAutoDownloadMessage(MessageObject object) {
        int canDownload;
        if (!object.mediaExists && (canDownload = getDownloadController().canDownloadMedia(object.messageOwner)) != 0) {
            TLRPC.Document document = object.getDocument();
            TLRPC.PhotoSize photo = document == null ? FileLoader.getClosestPhotoSizeWithSize(object.photoThumbs, AndroidUtilities.getPhotoSize()) : null;
            if (document != null || photo != null) {
                int i = 2;
                if (canDownload == 2 || (canDownload == 1 && object.isVideo())) {
                    if (document != null && this.currentEncryptedChat == null && !object.shouldEncryptPhotoOrVideo() && object.canStreamVideo()) {
                        getFileLoader().loadFile(document, object, 0, 10);
                    }
                } else if (document != null) {
                    FileLoader fileLoader = getFileLoader();
                    if (!MessageObject.isVideoDocument(document) || !object.shouldEncryptPhotoOrVideo()) {
                        i = 0;
                    }
                    fileLoader.loadFile(document, object, 0, i);
                } else {
                    getFileLoader().loadFile(ImageLocation.getForObject(photo, object.photoThumbsObject), object, (String) null, 0, object.shouldEncryptPhotoOrVideo() ? 2 : 0);
                }
            }
        }
    }

    /* access modifiers changed from: private */
    public void showFloatingDateView(boolean scroll) {
        if (this.floatingDateView.getTag() == null) {
            AnimatorSet animatorSet = this.floatingDateAnimation;
            if (animatorSet != null) {
                animatorSet.cancel();
            }
            this.floatingDateView.setTag(1);
            AnimatorSet animatorSet2 = new AnimatorSet();
            this.floatingDateAnimation = animatorSet2;
            animatorSet2.setDuration(150);
            this.floatingDateAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.floatingDateView, View.ALPHA, new float[]{1.0f})});
            this.floatingDateAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animation) {
                    if (animation.equals(ChatActivity.this.floatingDateAnimation)) {
                        AnimatorSet unused = ChatActivity.this.floatingDateAnimation = null;
                    }
                }
            });
            this.floatingDateAnimation.start();
        }
        if (!scroll) {
            updateMessagesVisiblePart(false);
            this.hideDateDelay = 1000;
        }
    }

    /* access modifiers changed from: private */
    public void hideFloatingDateView(boolean animated) {
        if (this.floatingDateView.getTag() != null && !this.currentFloatingDateOnScreen) {
            if (!this.scrollingFloatingDate || this.currentFloatingTopIsNotMessage) {
                this.floatingDateView.setTag((Object) null);
                if (animated) {
                    AnimatorSet animatorSet = new AnimatorSet();
                    this.floatingDateAnimation = animatorSet;
                    animatorSet.setDuration(150);
                    this.floatingDateAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.floatingDateView, View.ALPHA, new float[]{0.0f})});
                    this.floatingDateAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animation) {
                            if (animation.equals(ChatActivity.this.floatingDateAnimation)) {
                                AnimatorSet unused = ChatActivity.this.floatingDateAnimation = null;
                            }
                        }
                    });
                    this.floatingDateAnimation.setStartDelay((long) this.hideDateDelay);
                    this.floatingDateAnimation.start();
                } else {
                    AnimatorSet animatorSet2 = this.floatingDateAnimation;
                    if (animatorSet2 != null) {
                        animatorSet2.cancel();
                        this.floatingDateAnimation = null;
                    }
                    this.floatingDateView.setAlpha(0.0f);
                }
                this.hideDateDelay = 500;
            }
        }
    }

    /* access modifiers changed from: protected */
    public void onRemoveFromParent() {
        MessageObject messageObject = MediaController.getInstance().getPlayingMessageObject();
        if (messageObject == null || !messageObject.isVideo()) {
            MediaController.getInstance().setTextureView(this.videoTextureView, (AspectRatioFrameLayout) null, (FrameLayout) null, false);
        } else {
            MediaController.getInstance().cleanupPlayer(true, true);
        }
    }

    /* access modifiers changed from: protected */
    public void setIgnoreAttachOnPause(boolean value) {
        this.ignoreAttachOnPause = value;
    }

    /* access modifiers changed from: private */
    public void checkScrollForLoad(boolean scroll) {
        int checkLoadCount;
        GridLayoutManagerFixed gridLayoutManagerFixed = this.chatLayoutManager;
        if (gridLayoutManagerFixed != null && !this.paused) {
            int firstVisibleItem = gridLayoutManagerFixed.findFirstVisibleItemPosition();
            int visibleItemCount = firstVisibleItem == -1 ? 0 : Math.abs(this.chatLayoutManager.findLastVisibleItemPosition() - firstVisibleItem) + 1;
            int totalItemCount = this.chatAdapter.getItemCount();
            if (scroll) {
                checkLoadCount = 25;
            } else {
                checkLoadCount = 5;
            }
            if ((totalItemCount - firstVisibleItem) - visibleItemCount <= checkLoadCount && !this.loading) {
                boolean[] zArr = this.endReached;
                if (!zArr[0]) {
                    this.loading = true;
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    if (this.messagesByDays.size() != 0) {
                        MessagesController messagesController = getMessagesController();
                        long j = this.dialog_id;
                        int i = this.maxMessageId[0];
                        boolean z = !this.cacheEndReached[0];
                        int i2 = this.minDate[0];
                        int i3 = this.classGuid;
                        boolean isChannel = ChatObject.isChannel(this.currentChat);
                        boolean z2 = this.inScheduleMode;
                        int i4 = this.lastLoadIndex;
                        this.lastLoadIndex = i4 + 1;
                        messagesController.loadMessages(j, 50, i, 0, z, i2, i3, 0, 0, isChannel, z2, i4);
                    } else {
                        MessagesController messagesController2 = getMessagesController();
                        long j2 = this.dialog_id;
                        boolean z3 = !this.cacheEndReached[0];
                        int i5 = this.minDate[0];
                        int i6 = this.classGuid;
                        boolean isChannel2 = ChatObject.isChannel(this.currentChat);
                        boolean z4 = this.inScheduleMode;
                        int i7 = this.lastLoadIndex;
                        this.lastLoadIndex = i7 + 1;
                        messagesController2.loadMessages(j2, 50, 0, 0, z3, i5, i6, 0, 0, isChannel2, z4, i7);
                    }
                } else if (this.mergeDialogId != 0 && !zArr[1]) {
                    this.loading = true;
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    MessagesController messagesController3 = getMessagesController();
                    long j3 = this.mergeDialogId;
                    int i8 = this.maxMessageId[1];
                    boolean z5 = !this.cacheEndReached[1];
                    int i9 = this.minDate[1];
                    int i10 = this.classGuid;
                    boolean z6 = this.inScheduleMode;
                    int i11 = this.lastLoadIndex;
                    this.lastLoadIndex = i11 + 1;
                    messagesController3.loadMessages(j3, 50, i8, 0, z5, i9, i10, 0, 0, false, z6, i11);
                }
            }
            if (visibleItemCount > 0 && !this.loadingForward && firstVisibleItem <= 10) {
                if (this.mergeDialogId != 0 && !this.forwardEndReached[1]) {
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    MessagesController messagesController4 = getMessagesController();
                    long j4 = this.mergeDialogId;
                    int i12 = this.minMessageId[1];
                    int i13 = this.maxDate[1];
                    int i14 = this.classGuid;
                    boolean z7 = this.inScheduleMode;
                    int i15 = this.lastLoadIndex;
                    this.lastLoadIndex = i15 + 1;
                    messagesController4.loadMessages(j4, 50, i12, 0, true, i13, i14, 1, 0, false, z7, i15);
                    this.loadingForward = true;
                } else if (!this.forwardEndReached[0]) {
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    MessagesController messagesController5 = getMessagesController();
                    long j5 = this.dialog_id;
                    int i16 = this.minMessageId[0];
                    int i17 = this.maxDate[0];
                    int i18 = this.classGuid;
                    boolean isChannel3 = ChatObject.isChannel(this.currentChat);
                    boolean z8 = this.inScheduleMode;
                    int i19 = this.lastLoadIndex;
                    this.lastLoadIndex = i19 + 1;
                    messagesController5.loadMessages(j5, 50, i16, 0, true, i17, i18, 1, 0, isChannel3, z8, i19);
                    this.loadingForward = true;
                }
            }
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v16, resolved type: boolean} */
    /* JADX WARNING: type inference failed for: r6v0 */
    /* JADX WARNING: type inference failed for: r6v13 */
    /* JADX WARNING: type inference failed for: r6v17 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void processSelectedAttach(int r17) {
        /*
            r16 = this;
            r1 = r16
            r2 = r17
            r0 = 5
            r3 = 3
            r4 = 4
            r5 = 2
            r6 = 1
            if (r2 == r4) goto L_0x0013
            if (r2 == r6) goto L_0x0013
            if (r2 == r3) goto L_0x0013
            if (r2 == r5) goto L_0x0013
            if (r2 != 0) goto L_0x003b
        L_0x0013:
            im.bclpbkiauv.tgnet.TLRPC$Chat r7 = r1.currentChat
            if (r7 == 0) goto L_0x003b
            boolean r7 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r7)
            if (r7 != 0) goto L_0x002f
            im.bclpbkiauv.tgnet.TLRPC$Chat r7 = r1.currentChat
            im.bclpbkiauv.tgnet.TLRPC$TL_chatBannedRights r7 = r7.default_banned_rights
            if (r7 == 0) goto L_0x002f
            im.bclpbkiauv.tgnet.TLRPC$Chat r7 = r1.currentChat
            im.bclpbkiauv.tgnet.TLRPC$TL_chatBannedRights r7 = r7.default_banned_rights
            boolean r7 = r7.send_media
            if (r7 == 0) goto L_0x002f
            im.bclpbkiauv.ui.components.AlertsCreator.showSendMediaAlert(r0, r1)
            return
        L_0x002f:
            im.bclpbkiauv.tgnet.TLRPC$Chat r7 = r1.currentChat
            boolean r7 = im.bclpbkiauv.messenger.ChatObject.canSendMedia(r7)
            if (r7 != 0) goto L_0x003b
            im.bclpbkiauv.ui.components.AlertsCreator.showSendMediaAlert(r5, r1)
            return
        L_0x003b:
            java.lang.String r7 = "im.bclpbkiauv.messenger.provider"
            r8 = 24
            java.lang.String r9 = "output"
            java.lang.String r10 = "android.permission.CAMERA"
            r11 = 23
            r12 = 0
            if (r2 != 0) goto L_0x00a6
            boolean r0 = im.bclpbkiauv.messenger.SharedConfig.inappCamera
            if (r0 == 0) goto L_0x0050
            r16.openCameraView()
            return
        L_0x0050:
            int r0 = android.os.Build.VERSION.SDK_INT
            if (r0 < r11) goto L_0x006c
            androidx.fragment.app.FragmentActivity r0 = r16.getParentActivity()
            int r0 = r0.checkSelfPermission(r10)
            if (r0 == 0) goto L_0x006c
            androidx.fragment.app.FragmentActivity r0 = r16.getParentActivity()
            java.lang.String[] r3 = new java.lang.String[]{r10}
            r4 = 19
            r0.requestPermissions(r3, r4)
            return
        L_0x006c:
            android.content.Intent r0 = new android.content.Intent     // Catch:{ Exception -> 0x00a0 }
            java.lang.String r3 = "android.media.action.IMAGE_CAPTURE"
            r0.<init>(r3)     // Catch:{ Exception -> 0x00a0 }
            java.io.File r3 = im.bclpbkiauv.messenger.AndroidUtilities.generatePicturePath()     // Catch:{ Exception -> 0x00a0 }
            if (r3 == 0) goto L_0x009c
            int r4 = android.os.Build.VERSION.SDK_INT     // Catch:{ Exception -> 0x00a0 }
            if (r4 < r8) goto L_0x008f
            androidx.fragment.app.FragmentActivity r4 = r16.getParentActivity()     // Catch:{ Exception -> 0x00a0 }
            android.net.Uri r4 = androidx.core.content.FileProvider.getUriForFile(r4, r7, r3)     // Catch:{ Exception -> 0x00a0 }
            r0.putExtra(r9, r4)     // Catch:{ Exception -> 0x00a0 }
            r0.addFlags(r5)     // Catch:{ Exception -> 0x00a0 }
            r0.addFlags(r6)     // Catch:{ Exception -> 0x00a0 }
            goto L_0x0096
        L_0x008f:
            android.net.Uri r4 = android.net.Uri.fromFile(r3)     // Catch:{ Exception -> 0x00a0 }
            r0.putExtra(r9, r4)     // Catch:{ Exception -> 0x00a0 }
        L_0x0096:
            java.lang.String r4 = r3.getAbsolutePath()     // Catch:{ Exception -> 0x00a0 }
            r1.currentPicturePath = r4     // Catch:{ Exception -> 0x00a0 }
        L_0x009c:
            r1.startActivityForResult(r0, r12)     // Catch:{ Exception -> 0x00a0 }
            goto L_0x00a4
        L_0x00a0:
            r0 = move-exception
            im.bclpbkiauv.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x00a4:
            goto L_0x03ff
        L_0x00a6:
            java.lang.String r13 = "android.permission.READ_EXTERNAL_STORAGE"
            if (r2 != r6) goto L_0x0128
            int r0 = android.os.Build.VERSION.SDK_INT
            if (r0 < r11) goto L_0x00c6
            androidx.fragment.app.FragmentActivity r0 = r16.getParentActivity()
            int r0 = r0.checkSelfPermission(r13)
            if (r0 == 0) goto L_0x00c6
            androidx.fragment.app.FragmentActivity r0 = r16.getParentActivity()     // Catch:{ all -> 0x00c4 }
            java.lang.String[] r3 = new java.lang.String[]{r13}     // Catch:{ all -> 0x00c4 }
            r0.requestPermissions(r3, r4)     // Catch:{ all -> 0x00c4 }
            goto L_0x00c5
        L_0x00c4:
            r0 = move-exception
        L_0x00c5:
            return
        L_0x00c6:
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r1.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x00de
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r1.currentChat
            im.bclpbkiauv.tgnet.TLRPC$TL_chatBannedRights r0 = r0.banned_rights
            if (r0 == 0) goto L_0x00de
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r1.currentChat
            im.bclpbkiauv.tgnet.TLRPC$TL_chatBannedRights r0 = r0.banned_rights
            boolean r0 = r0.send_gifs
            if (r0 == 0) goto L_0x00de
            r0 = 0
            goto L_0x00f0
        L_0x00de:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r1.currentEncryptedChat
            if (r0 == 0) goto L_0x00ef
            int r0 = r0.layer
            int r0 = im.bclpbkiauv.messenger.AndroidUtilities.getPeerLayerVersion(r0)
            r3 = 46
            if (r0 < r3) goto L_0x00ed
            goto L_0x00ef
        L_0x00ed:
            r0 = 0
            goto L_0x00f0
        L_0x00ef:
            r0 = 1
        L_0x00f0:
            im.bclpbkiauv.ui.PhotoAlbumPickerActivity r3 = new im.bclpbkiauv.ui.PhotoAlbumPickerActivity
            r3.<init>(r12, r0, r6, r1)
            im.bclpbkiauv.tgnet.TLRPC$Chat r4 = r1.currentChat
            if (r4 == 0) goto L_0x010b
            boolean r4 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r4)
            if (r4 != 0) goto L_0x010b
            im.bclpbkiauv.tgnet.TLRPC$Chat r4 = r1.currentChat
            boolean r4 = r4.slowmode_enabled
            if (r4 == 0) goto L_0x010b
            r4 = 10
            r3.setMaxSelectedPhotos(r4, r6)
            goto L_0x011b
        L_0x010b:
            im.bclpbkiauv.messenger.MessageObject r4 = r1.editingMessageObject
            if (r4 == 0) goto L_0x0111
            r4 = 1
            goto L_0x0112
        L_0x0111:
            r4 = 0
        L_0x0112:
            im.bclpbkiauv.messenger.MessageObject r5 = r1.editingMessageObject
            if (r5 != 0) goto L_0x0117
            goto L_0x0118
        L_0x0117:
            r6 = 0
        L_0x0118:
            r3.setMaxSelectedPhotos(r4, r6)
        L_0x011b:
            im.bclpbkiauv.ui.ChatActivity$51 r4 = new im.bclpbkiauv.ui.ChatActivity$51
            r4.<init>()
            r3.setDelegate(r4)
            r1.presentFragment(r3)
            goto L_0x03ff
        L_0x0128:
            if (r2 != r5) goto L_0x0190
            int r0 = android.os.Build.VERSION.SDK_INT
            if (r0 < r11) goto L_0x0148
            androidx.fragment.app.FragmentActivity r0 = r16.getParentActivity()
            int r0 = r0.checkSelfPermission(r10)
            if (r0 == 0) goto L_0x0148
            androidx.fragment.app.FragmentActivity r0 = r16.getParentActivity()     // Catch:{ all -> 0x0146 }
            java.lang.String[] r3 = new java.lang.String[]{r10}     // Catch:{ all -> 0x0146 }
            r4 = 20
            r0.requestPermissions(r3, r4)     // Catch:{ all -> 0x0146 }
            goto L_0x0147
        L_0x0146:
            r0 = move-exception
        L_0x0147:
            return
        L_0x0148:
            android.content.Intent r0 = new android.content.Intent     // Catch:{ Exception -> 0x018a }
            java.lang.String r3 = "android.media.action.VIDEO_CAPTURE"
            r0.<init>(r3)     // Catch:{ Exception -> 0x018a }
            java.io.File r3 = im.bclpbkiauv.messenger.AndroidUtilities.generateVideoPath()     // Catch:{ Exception -> 0x018a }
            if (r3 == 0) goto L_0x0186
            int r4 = android.os.Build.VERSION.SDK_INT     // Catch:{ Exception -> 0x018a }
            if (r4 < r8) goto L_0x016b
            androidx.fragment.app.FragmentActivity r4 = r16.getParentActivity()     // Catch:{ Exception -> 0x018a }
            android.net.Uri r4 = androidx.core.content.FileProvider.getUriForFile(r4, r7, r3)     // Catch:{ Exception -> 0x018a }
            r0.putExtra(r9, r4)     // Catch:{ Exception -> 0x018a }
            r0.addFlags(r5)     // Catch:{ Exception -> 0x018a }
            r0.addFlags(r6)     // Catch:{ Exception -> 0x018a }
            goto L_0x0178
        L_0x016b:
            int r4 = android.os.Build.VERSION.SDK_INT     // Catch:{ Exception -> 0x018a }
            r6 = 18
            if (r4 < r6) goto L_0x0178
            android.net.Uri r4 = android.net.Uri.fromFile(r3)     // Catch:{ Exception -> 0x018a }
            r0.putExtra(r9, r4)     // Catch:{ Exception -> 0x018a }
        L_0x0178:
            java.lang.String r4 = "android.intent.extra.sizeLimit"
            r6 = 1610612736(0x60000000, double:7.957484216E-315)
            r0.putExtra(r4, r6)     // Catch:{ Exception -> 0x018a }
            java.lang.String r4 = r3.getAbsolutePath()     // Catch:{ Exception -> 0x018a }
            r1.currentPicturePath = r4     // Catch:{ Exception -> 0x018a }
        L_0x0186:
            r1.startActivityForResult(r0, r5)     // Catch:{ Exception -> 0x018a }
            goto L_0x018e
        L_0x018a:
            r0 = move-exception
            im.bclpbkiauv.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x018e:
            goto L_0x03ff
        L_0x0190:
            r7 = 6
            if (r2 != r7) goto L_0x01e7
            boolean r0 = r16.isSecretChat()
            if (r0 != 0) goto L_0x01da
            im.bclpbkiauv.messenger.LocationController r0 = r16.getLocationController()
            long r3 = r1.dialog_id
            boolean r0 = r0.isSharingLocation(r3)
            if (r0 == 0) goto L_0x01a6
            goto L_0x01da
        L_0x01a6:
            im.bclpbkiauv.ui.dialogs.BottomDialog r0 = new im.bclpbkiauv.ui.dialogs.BottomDialog
            androidx.fragment.app.FragmentActivity r3 = r16.getParentActivity()
            r0.<init>(r3)
            im.bclpbkiauv.ui.dialogs.BottomDialog$NormalTextItem r3 = new im.bclpbkiauv.ui.dialogs.BottomDialog$NormalTextItem
            r4 = 2131693817(0x7f0f10f9, float:1.9016773E38)
            java.lang.String r4 = im.bclpbkiauv.messenger.LocaleController.getString(r4)
            r3.<init>(r12, r4, r6)
            r0.addDialogItem(r3)
            im.bclpbkiauv.ui.dialogs.BottomDialog$NormalTextItem r3 = new im.bclpbkiauv.ui.dialogs.BottomDialog$NormalTextItem
            r4 = 2131693930(0x7f0f116a, float:1.9017002E38)
            java.lang.String r4 = im.bclpbkiauv.messenger.LocaleController.getString(r4)
            r3.<init>(r6, r4, r12)
            r0.addDialogItem(r3)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$ebsW7ypWEEUzYHzh8JjdLgRRnhI r3 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$ebsW7ypWEEUzYHzh8JjdLgRRnhI
            r3.<init>()
            r0.setOnItemClickListener(r3)
            r1.showDialog(r0)
            goto L_0x03ff
        L_0x01da:
            im.bclpbkiauv.ui.NewLocationActivity r0 = new im.bclpbkiauv.ui.NewLocationActivity
            r0.<init>(r12)
            r0.setDelegate(r1)
            r1.presentFragment(r0)
            goto L_0x03ff
        L_0x01e7:
            if (r2 != r4) goto L_0x0233
            int r0 = android.os.Build.VERSION.SDK_INT
            if (r0 < r11) goto L_0x0205
            androidx.fragment.app.FragmentActivity r0 = r16.getParentActivity()
            int r0 = r0.checkSelfPermission(r13)
            if (r0 == 0) goto L_0x0205
            androidx.fragment.app.FragmentActivity r0 = r16.getParentActivity()     // Catch:{ all -> 0x0203 }
            java.lang.String[] r3 = new java.lang.String[]{r13}     // Catch:{ all -> 0x0203 }
            r0.requestPermissions(r3, r4)     // Catch:{ all -> 0x0203 }
            goto L_0x0204
        L_0x0203:
            r0 = move-exception
        L_0x0204:
            return
        L_0x0205:
            im.bclpbkiauv.ui.DocumentSelectActivity r0 = new im.bclpbkiauv.ui.DocumentSelectActivity
            r0.<init>(r6)
            r0.setChatActivity(r1)
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r1.currentChat
            if (r3 == 0) goto L_0x021d
            boolean r3 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r3)
            if (r3 != 0) goto L_0x021d
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r1.currentChat
            boolean r3 = r3.slowmode_enabled
            if (r3 != 0) goto L_0x0221
        L_0x021d:
            im.bclpbkiauv.messenger.MessageObject r3 = r1.editingMessageObject
            if (r3 == 0) goto L_0x0222
        L_0x0221:
            goto L_0x0223
        L_0x0222:
            r6 = -1
        L_0x0223:
            r0.setMaxSelectedFiles(r6)
            im.bclpbkiauv.ui.ChatActivity$52 r3 = new im.bclpbkiauv.ui.ChatActivity$52
            r3.<init>()
            r0.setDelegate(r3)
            r1.presentFragment(r0)
            goto L_0x03ff
        L_0x0233:
            if (r2 != r3) goto L_0x0261
            int r0 = android.os.Build.VERSION.SDK_INT
            if (r0 < r11) goto L_0x024f
            androidx.fragment.app.FragmentActivity r0 = r16.getParentActivity()
            int r0 = r0.checkSelfPermission(r13)
            if (r0 == 0) goto L_0x024f
            androidx.fragment.app.FragmentActivity r0 = r16.getParentActivity()
            java.lang.String[] r3 = new java.lang.String[]{r13}
            r0.requestPermissions(r3, r4)
            return
        L_0x024f:
            im.bclpbkiauv.ui.AudioSelectActivity r0 = new im.bclpbkiauv.ui.AudioSelectActivity
            r0.<init>(r1)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$lQ7l1vNI9ymwY0RF8-j3u50C7k8 r3 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$lQ7l1vNI9ymwY0RF8-j3u50C7k8
            r3.<init>()
            r0.setDelegate(r3)
            r1.presentFragment(r0)
            goto L_0x03ff
        L_0x0261:
            if (r2 != r0) goto L_0x0275
            im.bclpbkiauv.ui.PhoneBookSelectActivity r0 = new im.bclpbkiauv.ui.PhoneBookSelectActivity
            r0.<init>(r1)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$FLSMQ8AExHvOg-JiNun2soQ4_k8 r3 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$FLSMQ8AExHvOg-JiNun2soQ4_k8
            r3.<init>()
            r0.setDelegate(r3)
            r1.presentFragment(r0)
            goto L_0x03ff
        L_0x0275:
            r0 = 9
            if (r2 != r0) goto L_0x02b7
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r1.currentChat
            if (r0 != 0) goto L_0x0281
            im.bclpbkiauv.ui.components.AlertsCreator.showSendMediaAlert(r3, r1)
            return
        L_0x0281:
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r0)
            if (r0 != 0) goto L_0x0299
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r1.currentChat
            im.bclpbkiauv.tgnet.TLRPC$TL_chatBannedRights r0 = r0.default_banned_rights
            if (r0 == 0) goto L_0x0299
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r1.currentChat
            im.bclpbkiauv.tgnet.TLRPC$TL_chatBannedRights r0 = r0.default_banned_rights
            boolean r0 = r0.send_polls
            if (r0 == 0) goto L_0x0299
            im.bclpbkiauv.ui.components.AlertsCreator.showSendMediaAlert(r7, r1)
            return
        L_0x0299:
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r1.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.canSendPolls(r0)
            if (r0 != 0) goto L_0x02a5
            im.bclpbkiauv.ui.components.AlertsCreator.showSendMediaAlert(r3, r1)
            return
        L_0x02a5:
            im.bclpbkiauv.ui.PollCreateActivity r0 = new im.bclpbkiauv.ui.PollCreateActivity
            r0.<init>(r1)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$lGtS_fV8wZw-PRPx_iSqPgppRAE r3 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$lGtS_fV8wZw-PRPx_iSqPgppRAE
            r3.<init>()
            r0.setDelegate(r3)
            r1.presentFragment(r0)
            goto L_0x03ff
        L_0x02b7:
            r0 = 1010(0x3f2, float:1.415E-42)
            java.lang.String r7 = "ArrayUser"
            java.lang.String r8 = "CallType"
            r9 = 2131695607(0x7f0f17f7, float:1.9020404E38)
            java.lang.String r10 = "visual_call_no_network"
            r11 = 2131695606(0x7f0f17f6, float:1.9020402E38)
            java.lang.String r13 = "visual_call_no_friend_tip"
            java.lang.String r15 = "visual_call_busing_tip"
            java.lang.String r14 = "user_id"
            if (r2 != r0) goto L_0x0372
            byte r0 = im.bclpbkiauv.messenger.ApplicationLoader.mbytAVideoCallBusy
            if (r0 != 0) goto L_0x035b
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r1.currentEncryptedChat
            if (r0 != 0) goto L_0x02ee
            int r0 = r1.currentAccount
            im.bclpbkiauv.messenger.MessagesController r0 = im.bclpbkiauv.messenger.MessagesController.getInstance(r0)
            android.os.Bundle r3 = r1.arguments
            int r3 = r3.getInt(r14, r12)
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            im.bclpbkiauv.tgnet.TLRPC$User r0 = r0.getUser(r3)
            goto L_0x0300
        L_0x02ee:
            int r0 = r1.currentAccount
            im.bclpbkiauv.messenger.MessagesController r0 = im.bclpbkiauv.messenger.MessagesController.getInstance(r0)
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r3 = r1.currentEncryptedChat
            int r3 = r3.user_id
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            im.bclpbkiauv.tgnet.TLRPC$User r0 = r0.getUser(r3)
        L_0x0300:
            boolean r3 = r0.mutual_contact
            if (r3 == 0) goto L_0x0353
            int r3 = r1.currentAccount
            im.bclpbkiauv.tgnet.ConnectionsManager r3 = im.bclpbkiauv.tgnet.ConnectionsManager.getInstance(r3)
            int r3 = r3.getConnectionState()
            if (r3 == r5) goto L_0x034b
            if (r3 != r6) goto L_0x0313
            goto L_0x034b
        L_0x0313:
            android.content.Intent r4 = new android.content.Intent
            r4.<init>()
            androidx.fragment.app.FragmentActivity r5 = r16.getParentActivity()
            java.lang.Class<im.bclpbkiauv.ui.hui.visualcall.VisualCallActivity> r9 = im.bclpbkiauv.ui.hui.visualcall.VisualCallActivity.class
            r4.setClass(r5, r9)
            r4.putExtra(r8, r6)
            java.util.ArrayList r5 = new java.util.ArrayList
            r5.<init>()
            android.os.Bundle r6 = r1.arguments
            int r6 = r6.getInt(r14, r12)
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
            r5.add(r6)
            r4.putExtra(r7, r5)
            java.util.ArrayList r6 = new java.util.ArrayList
            r6.<init>()
            java.lang.String r7 = "channel"
            r4.putExtra(r7, r6)
            androidx.fragment.app.FragmentActivity r6 = r16.getParentActivity()
            r6.startActivity(r4)
            goto L_0x0352
        L_0x034b:
            java.lang.String r4 = im.bclpbkiauv.messenger.LocaleController.getString(r10, r9)
            im.bclpbkiauv.ui.components.toast.ToastUtils.show((java.lang.CharSequence) r4)
        L_0x0352:
            goto L_0x0364
        L_0x0353:
            java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r13, r11)
            im.bclpbkiauv.ui.components.toast.ToastUtils.show((java.lang.CharSequence) r3)
            goto L_0x0364
        L_0x035b:
            byte r0 = im.bclpbkiauv.messenger.ApplicationLoader.mbytAVideoCallBusy
            if (r0 == r3) goto L_0x0366
            byte r0 = im.bclpbkiauv.messenger.ApplicationLoader.mbytAVideoCallBusy
            if (r0 != r4) goto L_0x0364
            goto L_0x0366
        L_0x0364:
            goto L_0x03ff
        L_0x0366:
            r0 = 2131695586(0x7f0f17e2, float:1.902036E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r15, r0)
            im.bclpbkiauv.ui.components.toast.ToastUtils.show((java.lang.CharSequence) r0)
            goto L_0x03ff
        L_0x0372:
            r0 = 1011(0x3f3, float:1.417E-42)
            if (r2 != r0) goto L_0x03fe
            byte r0 = im.bclpbkiauv.messenger.ApplicationLoader.mbytAVideoCallBusy
            if (r0 != 0) goto L_0x03e9
            int r0 = r1.currentAccount
            im.bclpbkiauv.messenger.MessagesController r0 = im.bclpbkiauv.messenger.MessagesController.getInstance(r0)
            android.os.Bundle r3 = r1.arguments
            int r3 = r3.getInt(r14, r12)
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            im.bclpbkiauv.tgnet.TLRPC$User r0 = r0.getUser(r3)
            boolean r3 = r0.mutual_contact
            if (r3 == 0) goto L_0x03e1
            int r3 = r1.currentAccount
            im.bclpbkiauv.tgnet.ConnectionsManager r3 = im.bclpbkiauv.tgnet.ConnectionsManager.getInstance(r3)
            int r3 = r3.getConnectionState()
            if (r3 == r5) goto L_0x03d9
            if (r3 != r6) goto L_0x03a1
            goto L_0x03d9
        L_0x03a1:
            android.content.Intent r4 = new android.content.Intent
            r4.<init>()
            androidx.fragment.app.FragmentActivity r6 = r16.getParentActivity()
            java.lang.Class<im.bclpbkiauv.ui.hui.visualcall.VisualCallActivity> r9 = im.bclpbkiauv.ui.hui.visualcall.VisualCallActivity.class
            r4.setClass(r6, r9)
            r4.putExtra(r8, r5)
            java.util.ArrayList r5 = new java.util.ArrayList
            r5.<init>()
            android.os.Bundle r6 = r1.arguments
            int r6 = r6.getInt(r14, r12)
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
            r5.add(r6)
            r4.putExtra(r7, r5)
            java.util.ArrayList r6 = new java.util.ArrayList
            r6.<init>()
            java.lang.String r7 = "channel"
            r4.putExtra(r7, r6)
            androidx.fragment.app.FragmentActivity r6 = r16.getParentActivity()
            r6.startActivity(r4)
            goto L_0x03e0
        L_0x03d9:
            java.lang.String r4 = im.bclpbkiauv.messenger.LocaleController.getString(r10, r9)
            im.bclpbkiauv.ui.components.toast.ToastUtils.show((java.lang.CharSequence) r4)
        L_0x03e0:
            goto L_0x03f2
        L_0x03e1:
            java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r13, r11)
            im.bclpbkiauv.ui.components.toast.ToastUtils.show((java.lang.CharSequence) r3)
            goto L_0x03f2
        L_0x03e9:
            byte r0 = im.bclpbkiauv.messenger.ApplicationLoader.mbytAVideoCallBusy
            if (r0 == r3) goto L_0x03f3
            byte r0 = im.bclpbkiauv.messenger.ApplicationLoader.mbytAVideoCallBusy
            if (r0 != r4) goto L_0x03f2
            goto L_0x03f3
        L_0x03f2:
            goto L_0x03ff
        L_0x03f3:
            r0 = 2131695586(0x7f0f17e2, float:1.902036E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r15, r0)
            im.bclpbkiauv.ui.components.toast.ToastUtils.show((java.lang.CharSequence) r0)
            goto L_0x03ff
        L_0x03fe:
        L_0x03ff:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.processSelectedAttach(int):void");
    }

    public /* synthetic */ void lambda$processSelectedAttach$54$ChatActivity(int id, View v) {
        if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(PermissionUtils.PERMISSION_ACCESS_COARSE_LOCATION) != 0) {
            getParentActivity().requestPermissions(new String[]{PermissionUtils.PERMISSION_ACCESS_COARSE_LOCATION, "android.permission.ACCESS_FINE_LOCATION"}, 2);
        } else if (!GpsUtils.isOpen(getParentActivity())) {
            WalletDialogUtil.showWalletDialog(this, "", LocaleController.getString("GpsNotOpenTips", R.string.GpsNotOpenTips), LocaleController.getString("Cancel", R.string.Cancel), LocaleController.getString("GoOpen", R.string.GoOpen), (DialogInterface.OnClickListener) null, new DialogInterface.OnClickListener() {
                public final void onClick(DialogInterface dialogInterface, int i) {
                    ChatActivity.this.lambda$null$53$ChatActivity(dialogInterface, i);
                }
            }, (DialogInterface.OnDismissListener) null);
        } else {
            NewLocationActivity fragment = null;
            if (id == 0) {
                fragment = new NewLocationActivity(0);
            } else if (id == 1) {
                fragment = new NewLocationActivity(2, this.dialog_id);
            }
            fragment.setDelegate(this);
            presentFragment(fragment);
        }
    }

    public /* synthetic */ void lambda$null$53$ChatActivity(DialogInterface dialogInterface, int i) {
        GpsUtils.toGpsSettingActivity(getParentActivity());
    }

    public /* synthetic */ void lambda$processSelectedAttach$55$ChatActivity(ArrayList audios, boolean notify, int scheduleDate) {
        fillEditingMediaWithCaption((CharSequence) null, (ArrayList<TLRPC.MessageEntity>) null);
        SendMessagesHelper.prepareSendingAudioDocuments(getAccountInstance(), audios, this.dialog_id, this.replyingMessageObject, this.editingMessageObject, notify, scheduleDate);
        afterMessageSend();
    }

    public /* synthetic */ void lambda$processSelectedAttach$56$ChatActivity(TLRPC.User user, boolean notify, int scheduleDate) {
        getSendMessagesHelper().sendMessage(user, this.dialog_id, this.replyingMessageObject, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, notify, scheduleDate);
        afterMessageSend();
    }

    public /* synthetic */ void lambda$processSelectedAttach$57$ChatActivity(TLRPC.TL_messageMediaPoll poll, boolean notify, int scheduleDate) {
        getSendMessagesHelper().sendMessage(poll, this.dialog_id, this.replyingMessageObject, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, notify, scheduleDate);
        afterMessageSend();
    }

    public boolean dismissDialogOnPause(Dialog dialog) {
        return dialog != this.chatAttachAlert && super.dismissDialogOnPause(dialog);
    }

    /* access modifiers changed from: private */
    public void searchLinks(CharSequence charSequence, boolean force) {
        TLRPC.WebPage webPage;
        if (this.currentEncryptedChat == null || (getMessagesController().secretWebpagePreview != 0 && AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 46)) {
            if (force && (webPage = this.foundWebPage) != null) {
                if (webPage.url != null) {
                    int index = TextUtils.indexOf(charSequence, this.foundWebPage.url);
                    char lastChar = 0;
                    boolean lenEqual = false;
                    boolean z = true;
                    if (index != -1) {
                        if (this.foundWebPage.url.length() + index != charSequence.length()) {
                            z = false;
                        }
                        lenEqual = z;
                        lastChar = !lenEqual ? charSequence.charAt(this.foundWebPage.url.length() + index) : 0;
                    } else if (this.foundWebPage.display_url != null) {
                        index = TextUtils.indexOf(charSequence, this.foundWebPage.display_url);
                        if (index == -1 || this.foundWebPage.display_url.length() + index != charSequence.length()) {
                            z = false;
                        }
                        lenEqual = z;
                        lastChar = (index == -1 || lenEqual) ? 0 : charSequence.charAt(this.foundWebPage.display_url.length() + index);
                    }
                    if (index != -1 && (lenEqual || lastChar == ' ' || lastChar == ',' || lastChar == '.' || lastChar == '!' || lastChar == '/')) {
                        return;
                    }
                }
                this.pendingLinkSearchString = null;
                this.foundUrls = null;
                showFieldPanelForWebPage(false, this.foundWebPage, false);
            }
            Utilities.searchQueue.postRunnable(new Runnable(charSequence, getMessagesController(), force) {
                private final /* synthetic */ CharSequence f$1;
                private final /* synthetic */ MessagesController f$2;
                private final /* synthetic */ boolean f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    ChatActivity.this.lambda$searchLinks$64$ChatActivity(this.f$1, this.f$2, this.f$3);
                }
            });
        }
    }

    public /* synthetic */ void lambda$searchLinks$64$ChatActivity(CharSequence charSequence, MessagesController messagesController, boolean force) {
        CharSequence textToCheck;
        URLSpanReplacement[] spans;
        if (this.linkSearchRequestId != 0) {
            getConnectionsManager().cancelRequest(this.linkSearchRequestId, true);
            this.linkSearchRequestId = 0;
        }
        ArrayList<CharSequence> urls = null;
        try {
            Matcher m = AndroidUtilities.WEB_URL.matcher(charSequence);
            while (m.find()) {
                if (m.start() <= 0 || charSequence.charAt(m.start() - 1) != '@') {
                    if (urls == null) {
                        urls = new ArrayList<>();
                    }
                    urls.add(charSequence.subSequence(m.start(), m.end()));
                }
            }
            if ((charSequence instanceof Spannable) && (spans = (URLSpanReplacement[]) ((Spannable) charSequence).getSpans(0, charSequence.length(), URLSpanReplacement.class)) != null && spans.length > 0) {
                if (urls == null) {
                    urls = new ArrayList<>();
                }
                for (URLSpanReplacement url : spans) {
                    urls.add(url.getURL());
                }
            }
            if (!(urls == null || this.foundUrls == null || urls.size() != this.foundUrls.size())) {
                boolean clear = true;
                for (int a = 0; a < urls.size(); a++) {
                    if (!TextUtils.equals(urls.get(a), this.foundUrls.get(a))) {
                        clear = false;
                    }
                }
                if (clear) {
                    return;
                }
            }
            this.foundUrls = urls;
            if (urls == null) {
                AndroidUtilities.runOnUIThread(new Runnable() {
                    public final void run() {
                        ChatActivity.this.lambda$null$58$ChatActivity();
                    }
                });
                return;
            }
            textToCheck = TextUtils.join(" ", urls);
            if (this.currentEncryptedChat == null || messagesController.secretWebpagePreview != 2) {
                TLRPC.TL_messages_getWebPagePreview req = new TLRPC.TL_messages_getWebPagePreview();
                if (textToCheck instanceof String) {
                    req.message = (String) textToCheck;
                } else {
                    req.message = textToCheck.toString();
                }
                this.linkSearchRequestId = getConnectionsManager().sendRequest(req, new RequestDelegate(req) {
                    private final /* synthetic */ TLRPC.TL_messages_getWebPagePreview f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                        ChatActivity.this.lambda$null$63$ChatActivity(this.f$1, tLObject, tL_error);
                    }
                });
                getConnectionsManager().bindRequestToGuid(this.linkSearchRequestId, this.classGuid);
                return;
            }
            AndroidUtilities.runOnUIThread(new Runnable(messagesController, charSequence, force) {
                private final /* synthetic */ MessagesController f$1;
                private final /* synthetic */ CharSequence f$2;
                private final /* synthetic */ boolean f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    ChatActivity.this.lambda$null$61$ChatActivity(this.f$1, this.f$2, this.f$3);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            String text = charSequence.toString().toLowerCase();
            if (charSequence.length() < 13 || (!text.contains("http://") && !text.contains("https://"))) {
                AndroidUtilities.runOnUIThread(new Runnable() {
                    public final void run() {
                        ChatActivity.this.lambda$null$59$ChatActivity();
                    }
                });
                return;
            }
            textToCheck = charSequence;
        }
    }

    public /* synthetic */ void lambda$null$58$ChatActivity() {
        TLRPC.WebPage webPage = this.foundWebPage;
        if (webPage != null) {
            showFieldPanelForWebPage(false, webPage, false);
            this.foundWebPage = null;
        }
    }

    public /* synthetic */ void lambda$null$59$ChatActivity() {
        TLRPC.WebPage webPage = this.foundWebPage;
        if (webPage != null) {
            showFieldPanelForWebPage(false, webPage, false);
            this.foundWebPage = null;
        }
    }

    public /* synthetic */ void lambda$null$61$ChatActivity(MessagesController messagesController, CharSequence charSequence, boolean force) {
        AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
        builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
        builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener(messagesController, charSequence, force) {
            private final /* synthetic */ MessagesController f$1;
            private final /* synthetic */ CharSequence f$2;
            private final /* synthetic */ boolean f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void onClick(DialogInterface dialogInterface, int i) {
                ChatActivity.this.lambda$null$60$ChatActivity(this.f$1, this.f$2, this.f$3, dialogInterface, i);
            }
        });
        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), (DialogInterface.OnClickListener) null);
        builder.setMessage(LocaleController.getString("SecretLinkPreviewAlert", R.string.SecretLinkPreviewAlert));
        showDialog(builder.create());
        messagesController.secretWebpagePreview = 0;
        MessagesController.getGlobalMainSettings().edit().putInt("secretWebpage2", messagesController.secretWebpagePreview).commit();
    }

    public /* synthetic */ void lambda$null$60$ChatActivity(MessagesController messagesController, CharSequence charSequence, boolean force, DialogInterface dialog, int which) {
        messagesController.secretWebpagePreview = 1;
        MessagesController.getGlobalMainSettings().edit().putInt("secretWebpage2", getMessagesController().secretWebpagePreview).commit();
        this.foundUrls = null;
        searchLinks(charSequence, force);
    }

    public /* synthetic */ void lambda$null$63$ChatActivity(TLRPC.TL_messages_getWebPagePreview req, TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new Runnable(error, response, req) {
            private final /* synthetic */ TLRPC.TL_error f$1;
            private final /* synthetic */ TLObject f$2;
            private final /* synthetic */ TLRPC.TL_messages_getWebPagePreview f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                ChatActivity.this.lambda$null$62$ChatActivity(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    public /* synthetic */ void lambda$null$62$ChatActivity(TLRPC.TL_error error, TLObject response, TLRPC.TL_messages_getWebPagePreview req) {
        this.linkSearchRequestId = 0;
        if (error != null) {
            return;
        }
        if (response instanceof TLRPC.TL_messageMediaWebPage) {
            TLRPC.WebPage webPage = ((TLRPC.TL_messageMediaWebPage) response).webpage;
            this.foundWebPage = webPage;
            if ((webPage instanceof TLRPC.TL_webPage) || (webPage instanceof TLRPC.TL_webPagePending)) {
                if (this.foundWebPage instanceof TLRPC.TL_webPagePending) {
                    this.pendingLinkSearchString = req.message;
                }
                if (this.currentEncryptedChat != null) {
                    TLRPC.WebPage webPage2 = this.foundWebPage;
                    if (webPage2 instanceof TLRPC.TL_webPagePending) {
                        webPage2.url = req.message;
                    }
                }
                showFieldPanelForWebPage(true, this.foundWebPage, false);
            } else if (webPage != null) {
                showFieldPanelForWebPage(false, webPage, false);
                this.foundWebPage = null;
            }
        } else {
            TLRPC.WebPage webPage3 = this.foundWebPage;
            if (webPage3 != null) {
                showFieldPanelForWebPage(false, webPage3, false);
                this.foundWebPage = null;
            }
        }
    }

    private void forwardMessages(ArrayList<MessageObject> arrayList, boolean fromMyName, boolean notify, int scheduleDate) {
        if (arrayList != null && !arrayList.isEmpty()) {
            if (!fromMyName) {
                AlertsCreator.showSendMediaAlert(getSendMessagesHelper().sendMessage(arrayList, this.dialog_id, notify, scheduleDate), this);
                return;
            }
            Iterator<MessageObject> it = arrayList.iterator();
            while (it.hasNext()) {
                getSendMessagesHelper().processForwardFromMyName(it.next(), this.dialog_id);
            }
        }
    }

    private void checkBotKeyboard() {
        MessageObject messageObject;
        if (this.chatActivityEnterView != null && (messageObject = this.botButtons) != null && !this.userBlocked) {
            if (messageObject.messageOwner.reply_markup instanceof TLRPC.TL_replyKeyboardForceReply) {
                SharedPreferences preferences = MessagesController.getMainSettings(this.currentAccount);
                if (preferences.getInt("answered_" + this.dialog_id, 0) == this.botButtons.getId()) {
                    return;
                }
                if (this.replyingMessageObject == null || this.chatActivityEnterView.getFieldText() == null) {
                    MessageObject messageObject2 = this.botButtons;
                    this.botReplyButtons = messageObject2;
                    this.chatActivityEnterView.setButtons(messageObject2);
                    showFieldPanelForReply(this.botButtons);
                    return;
                }
                return;
            }
            MessageObject messageObject3 = this.replyingMessageObject;
            if (messageObject3 != null && this.botReplyButtons == messageObject3) {
                this.botReplyButtons = null;
                hideFieldPanel(true);
            }
            this.chatActivityEnterView.setButtons(this.botButtons);
        }
    }

    public void hideFieldPanel(boolean animated) {
        showFieldPanel(false, (MessageObject) null, (MessageObject) null, (ArrayList<MessageObject>) null, (TLRPC.WebPage) null, true, 0, false, animated);
    }

    public void hideFieldPanel(boolean notify, int scheduleDate, boolean animated) {
        showFieldPanel(false, (MessageObject) null, (MessageObject) null, (ArrayList<MessageObject>) null, (TLRPC.WebPage) null, notify, scheduleDate, false, animated);
    }

    public void showFieldPanelForWebPage(boolean show, TLRPC.WebPage webPage, boolean cancel) {
        showFieldPanel(show, (MessageObject) null, (MessageObject) null, (ArrayList<MessageObject>) null, webPage, true, 0, cancel, true);
    }

    public void showFieldPanelForForward(boolean show, ArrayList<MessageObject> messageObjectsToForward) {
        showFieldPanel(show, (MessageObject) null, (MessageObject) null, messageObjectsToForward, (TLRPC.WebPage) null, true, 0, false, true);
    }

    public void showFieldPanelForReply(MessageObject messageObjectToReply) {
        showFieldPanel(true, messageObjectToReply, (MessageObject) null, (ArrayList<MessageObject>) null, (TLRPC.WebPage) null, true, 0, false, true);
    }

    public void showFieldPanelForEdit(boolean show, MessageObject messageObjectToEdit) {
        showFieldPanel(show, (MessageObject) null, messageObjectToEdit, (ArrayList<MessageObject>) null, (TLRPC.WebPage) null, true, 0, false, true);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:263:0x06b4, code lost:
        if (r14.mime_type.toLowerCase().startsWith(PREFIX_VIDEO) == false) goto L_0x06b9;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void showFieldPanel(boolean r33, im.bclpbkiauv.messenger.MessageObject r34, im.bclpbkiauv.messenger.MessageObject r35, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r36, im.bclpbkiauv.tgnet.TLRPC.WebPage r37, boolean r38, int r39, boolean r40, boolean r41) {
        /*
            r32 = this;
            r10 = r32
            r11 = r34
            r12 = r35
            r13 = r37
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r10.chatActivityEnterView
            if (r0 != 0) goto L_0x000d
            return
        L_0x000d:
            r0 = 0
            r1 = 0
            if (r33 == 0) goto L_0x07f9
            if (r11 != 0) goto L_0x001a
            if (r36 != 0) goto L_0x001a
            if (r12 != 0) goto L_0x001a
            if (r13 != 0) goto L_0x001a
            return
        L_0x001a:
            im.bclpbkiauv.ui.components.HintView r2 = r10.noSoundHintView
            if (r2 == 0) goto L_0x0021
            r2.hide()
        L_0x0021:
            im.bclpbkiauv.ui.components.HintView r2 = r10.forwardHintView
            if (r2 == 0) goto L_0x0028
            r2.hide()
        L_0x0028:
            im.bclpbkiauv.ui.components.HintView r2 = r10.slowModeHint
            if (r2 == 0) goto L_0x002f
            r2.hide()
        L_0x002f:
            im.bclpbkiauv.ui.actionbar.ActionBarMenuItem r2 = r10.searchItem
            if (r2 == 0) goto L_0x004f
            im.bclpbkiauv.ui.actionbar.ActionBar r2 = r10.actionBar
            boolean r2 = r2.isSearchFieldVisible()
            if (r2 == 0) goto L_0x004f
            im.bclpbkiauv.ui.actionbar.ActionBar r2 = r10.actionBar
            r2.closeSearchField(r1)
            im.bclpbkiauv.ui.components.ChatActivityEnterView r2 = r10.chatActivityEnterView
            r2.setFieldFocused()
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$Q3EFcExRhs8Ot4YE-CgsTVhW2GM r2 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$Q3EFcExRhs8Ot4YE-CgsTVhW2GM
            r2.<init>()
            r3 = 100
            im.bclpbkiauv.messenger.AndroidUtilities.runOnUIThread(r2, r3)
        L_0x004f:
            r2 = 0
            if (r11 == 0) goto L_0x0068
            long r3 = r34.getDialogId()
            long r5 = r10.dialog_id
            int r7 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r7 == 0) goto L_0x0068
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            r3.add(r11)
            r4 = 0
            r2 = 1
            r11 = r4
            goto L_0x006a
        L_0x0068:
            r3 = r36
        L_0x006a:
            r5 = 32
            r6 = 10
            r7 = 1096810496(0x41600000, float:14.0)
            r8 = 150(0x96, float:2.1E-43)
            r9 = 1
            if (r12 == 0) goto L_0x0120
            r10.forwardingMessages = r0
            r10.replyingMessageObject = r0
            r10.editingMessageObject = r12
            im.bclpbkiauv.ui.components.ChatActivityEnterView r14 = r10.chatActivityEnterView
            r14.setReplyingMessageObject(r0)
            im.bclpbkiauv.ui.components.ChatActivityEnterView r14 = r10.chatActivityEnterView
            boolean r15 = r35.isMediaEmpty()
            r15 = r15 ^ r9
            r14.setEditingMessageObject(r12, r15)
            im.bclpbkiauv.tgnet.TLRPC$WebPage r14 = r10.foundWebPage
            if (r14 == 0) goto L_0x008f
            return
        L_0x008f:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r14 = r10.chatActivityEnterView
            r14.setForceShowSendButton(r1, r1)
            android.widget.ImageView r14 = r10.replyIconImageView
            r15 = 2131231064(0x7f080158, float:1.8078198E38)
            r14.setImageResource(r15)
            android.widget.ImageView r14 = r10.replyIconImageView
            r15 = 2131689505(0x7f0f0021, float:1.9008027E38)
            java.lang.String r4 = "AccDescrEditing"
            java.lang.String r4 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r15)
            r14.setContentDescription(r4)
            android.widget.ImageView r4 = r10.replyCloseImageView
            r14 = 2131689495(0x7f0f0017, float:1.9008007E38)
            java.lang.String r15 = "AccDescrCancelEdit"
            java.lang.String r14 = im.bclpbkiauv.messenger.LocaleController.getString(r15, r14)
            r4.setContentDescription(r14)
            boolean r4 = r35.isMediaEmpty()
            if (r4 == 0) goto L_0x00cd
            im.bclpbkiauv.ui.actionbar.SimpleTextView r4 = r10.replyNameTextView
            r14 = 2131691029(0x7f0f0615, float:1.9011118E38)
            java.lang.String r15 = "EditMessage"
            java.lang.String r14 = im.bclpbkiauv.messenger.LocaleController.getString(r15, r14)
            r4.setText(r14)
            goto L_0x00db
        L_0x00cd:
            im.bclpbkiauv.ui.actionbar.SimpleTextView r4 = r10.replyNameTextView
            r14 = 2131691025(0x7f0f0611, float:1.901111E38)
            java.lang.String r15 = "EditCaption"
            java.lang.String r14 = im.bclpbkiauv.messenger.LocaleController.getString(r15, r14)
            r4.setText(r14)
        L_0x00db:
            boolean r4 = r35.canEditMedia()
            if (r4 == 0) goto L_0x00f1
            im.bclpbkiauv.ui.actionbar.SimpleTextView r4 = r10.replyObjectTextView
            r5 = 2131691031(0x7f0f0617, float:1.9011122E38)
            java.lang.String r6 = "EditMessageMedia"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.getString(r6, r5)
            r4.setText(r5)
            goto L_0x0647
        L_0x00f1:
            java.lang.CharSequence r4 = r12.messageText
            if (r4 == 0) goto L_0x0647
            java.lang.CharSequence r4 = r12.messageText
            java.lang.String r4 = r4.toString()
            int r14 = r4.length()
            if (r14 <= r8) goto L_0x0105
            java.lang.String r4 = r4.substring(r1, r8)
        L_0x0105:
            java.lang.String r4 = r4.replace(r6, r5)
            im.bclpbkiauv.ui.actionbar.SimpleTextView r5 = r10.replyObjectTextView
            android.graphics.Paint r6 = r5.getPaint()
            android.graphics.Paint$FontMetricsInt r6 = r6.getFontMetricsInt()
            int r7 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r7)
            java.lang.CharSequence r6 = im.bclpbkiauv.messenger.Emoji.replaceEmoji(r4, r6, r7, r1)
            r5.setText(r6)
            goto L_0x0647
        L_0x0120:
            if (r11 == 0) goto L_0x0219
            r10.forwardingMessages = r0
            r10.editingMessageObject = r0
            r10.replyingMessageObject = r11
            im.bclpbkiauv.ui.components.ChatActivityEnterView r4 = r10.chatActivityEnterView
            r4.setReplyingMessageObject(r11)
            im.bclpbkiauv.ui.components.ChatActivityEnterView r4 = r10.chatActivityEnterView
            r4.setEditingMessageObject(r0, r1)
            im.bclpbkiauv.tgnet.TLRPC$WebPage r4 = r10.foundWebPage
            if (r4 == 0) goto L_0x0137
            return
        L_0x0137:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r4 = r10.chatActivityEnterView
            r4.setForceShowSendButton(r1, r1)
            boolean r4 = r11.isFromUser()
            if (r4 == 0) goto L_0x015a
            im.bclpbkiauv.messenger.MessagesController r4 = r32.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$Message r14 = r11.messageOwner
            int r14 = r14.from_id
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)
            im.bclpbkiauv.tgnet.TLRPC$User r4 = r4.getUser(r14)
            if (r4 != 0) goto L_0x0155
            return
        L_0x0155:
            java.lang.String r4 = im.bclpbkiauv.messenger.UserObject.getName(r4)
            goto L_0x0199
        L_0x015a:
            im.bclpbkiauv.tgnet.TLRPC$Chat r4 = r10.currentChat
            boolean r4 = im.bclpbkiauv.messenger.ChatObject.isChannel(r4)
            if (r4 == 0) goto L_0x0181
            im.bclpbkiauv.tgnet.TLRPC$Chat r4 = r10.currentChat
            boolean r4 = r4.megagroup
            if (r4 == 0) goto L_0x0181
            boolean r4 = r11.isForwardedChannelPost()
            if (r4 == 0) goto L_0x0181
            im.bclpbkiauv.messenger.MessagesController r4 = r32.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$Message r14 = r11.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageFwdHeader r14 = r14.fwd_from
            int r14 = r14.channel_id
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)
            im.bclpbkiauv.tgnet.TLRPC$Chat r4 = r4.getChat(r14)
            goto L_0x0193
        L_0x0181:
            im.bclpbkiauv.messenger.MessagesController r4 = r32.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$Message r14 = r11.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$Peer r14 = r14.to_id
            int r14 = r14.channel_id
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)
            im.bclpbkiauv.tgnet.TLRPC$Chat r4 = r4.getChat(r14)
        L_0x0193:
            if (r4 != 0) goto L_0x0196
            return
        L_0x0196:
            java.lang.String r14 = r4.title
            r4 = r14
        L_0x0199:
            android.widget.ImageView r14 = r10.replyIconImageView
            r15 = 2131231328(0x7f080260, float:1.8078734E38)
            r14.setImageResource(r15)
            im.bclpbkiauv.ui.actionbar.SimpleTextView r14 = r10.replyNameTextView
            r14.setText(r4)
            android.widget.ImageView r14 = r10.replyIconImageView
            r15 = 2131689541(0x7f0f0045, float:1.90081E38)
            java.lang.String r9 = "AccDescrReplying"
            java.lang.String r9 = im.bclpbkiauv.messenger.LocaleController.getString(r9, r15)
            r14.setContentDescription(r9)
            android.widget.ImageView r9 = r10.replyCloseImageView
            r14 = 2131689497(0x7f0f0019, float:1.9008011E38)
            java.lang.String r15 = "AccDescrCancelReply"
            java.lang.String r14 = im.bclpbkiauv.messenger.LocaleController.getString(r15, r14)
            r9.setContentDescription(r14)
            im.bclpbkiauv.tgnet.TLRPC$Message r9 = r11.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r9 = r9.media
            boolean r9 = r9 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageMediaGame
            if (r9 == 0) goto L_0x01ea
            im.bclpbkiauv.ui.actionbar.SimpleTextView r5 = r10.replyObjectTextView
            im.bclpbkiauv.tgnet.TLRPC$Message r6 = r11.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r6 = r6.media
            im.bclpbkiauv.tgnet.TLRPC$TL_game r6 = r6.game
            java.lang.String r6 = r6.title
            im.bclpbkiauv.ui.actionbar.SimpleTextView r8 = r10.replyObjectTextView
            android.graphics.Paint r8 = r8.getPaint()
            android.graphics.Paint$FontMetricsInt r8 = r8.getFontMetricsInt()
            int r7 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r7)
            java.lang.CharSequence r6 = im.bclpbkiauv.messenger.Emoji.replaceEmoji(r6, r8, r7, r1)
            r5.setText(r6)
            goto L_0x0217
        L_0x01ea:
            java.lang.CharSequence r9 = r11.messageText
            if (r9 == 0) goto L_0x0217
            java.lang.CharSequence r9 = r11.messageText
            java.lang.String r9 = r9.toString()
            int r14 = r9.length()
            if (r14 <= r8) goto L_0x01fe
            java.lang.String r9 = r9.substring(r1, r8)
        L_0x01fe:
            java.lang.String r5 = r9.replace(r6, r5)
            im.bclpbkiauv.ui.actionbar.SimpleTextView r6 = r10.replyObjectTextView
            android.graphics.Paint r8 = r6.getPaint()
            android.graphics.Paint$FontMetricsInt r8 = r8.getFontMetricsInt()
            int r7 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r7)
            java.lang.CharSequence r7 = im.bclpbkiauv.messenger.Emoji.replaceEmoji(r5, r8, r7, r1)
            r6.setText(r7)
        L_0x0217:
            goto L_0x0647
        L_0x0219:
            if (r3 == 0) goto L_0x05ce
            boolean r4 = r3.isEmpty()
            if (r4 == 0) goto L_0x0222
            return
        L_0x0222:
            r10.replyingMessageObject = r0
            r10.editingMessageObject = r0
            im.bclpbkiauv.ui.components.ChatActivityEnterView r4 = r10.chatActivityEnterView
            r4.setReplyingMessageObject(r0)
            im.bclpbkiauv.ui.components.ChatActivityEnterView r4 = r10.chatActivityEnterView
            r4.setEditingMessageObject(r0, r1)
            r10.forwardingMessages = r3
            im.bclpbkiauv.tgnet.TLRPC$WebPage r4 = r10.foundWebPage
            if (r4 == 0) goto L_0x0237
            return
        L_0x0237:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r4 = r10.chatActivityEnterView
            r9 = 1
            r4.setForceShowSendButton(r9, r1)
            java.util.ArrayList r4 = new java.util.ArrayList
            r4.<init>()
            android.widget.ImageView r9 = r10.replyIconImageView
            r14 = 2131231327(0x7f08025f, float:1.8078732E38)
            r9.setImageResource(r14)
            android.widget.ImageView r9 = r10.replyIconImageView
            r14 = 2131689508(0x7f0f0024, float:1.9008033E38)
            java.lang.String r15 = "AccDescrForwarding"
            java.lang.String r14 = im.bclpbkiauv.messenger.LocaleController.getString(r15, r14)
            r9.setContentDescription(r14)
            android.widget.ImageView r9 = r10.replyCloseImageView
            r14 = 2131689496(0x7f0f0018, float:1.900801E38)
            java.lang.String r15 = "AccDescrCancelForward"
            java.lang.String r14 = im.bclpbkiauv.messenger.LocaleController.getString(r15, r14)
            r9.setContentDescription(r14)
            java.lang.Object r9 = r3.get(r1)
            im.bclpbkiauv.messenger.MessageObject r9 = (im.bclpbkiauv.messenger.MessageObject) r9
            boolean r14 = r9.isFromUser()
            if (r14 == 0) goto L_0x027e
            im.bclpbkiauv.tgnet.TLRPC$Message r14 = r9.messageOwner
            int r14 = r14.from_id
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)
            r4.add(r14)
            goto L_0x02bd
        L_0x027e:
            im.bclpbkiauv.messenger.MessagesController r14 = r32.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$Message r15 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$Peer r15 = r15.to_id
            int r15 = r15.channel_id
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)
            im.bclpbkiauv.tgnet.TLRPC$Chat r14 = r14.getChat(r15)
            boolean r15 = im.bclpbkiauv.messenger.ChatObject.isChannel(r14)
            if (r15 == 0) goto L_0x02af
            boolean r15 = r14.megagroup
            if (r15 == 0) goto L_0x02af
            boolean r15 = r9.isForwardedChannelPost()
            if (r15 == 0) goto L_0x02af
            im.bclpbkiauv.tgnet.TLRPC$Message r15 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageFwdHeader r15 = r15.fwd_from
            int r15 = r15.channel_id
            int r15 = -r15
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)
            r4.add(r15)
            goto L_0x02bd
        L_0x02af:
            im.bclpbkiauv.tgnet.TLRPC$Message r15 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$Peer r15 = r15.to_id
            int r15 = r15.channel_id
            int r15 = -r15
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)
            r4.add(r15)
        L_0x02bd:
            boolean r14 = r9.isAnimatedEmoji()
            if (r14 == 0) goto L_0x02c5
            r14 = 0
            goto L_0x02c7
        L_0x02c5:
            int r14 = r9.type
        L_0x02c7:
            r15 = 1
        L_0x02c8:
            int r0 = r3.size()
            if (r15 >= r0) goto L_0x0336
            java.lang.Object r0 = r3.get(r15)
            r9 = r0
            im.bclpbkiauv.messenger.MessageObject r9 = (im.bclpbkiauv.messenger.MessageObject) r9
            boolean r0 = r9.isFromUser()
            if (r0 == 0) goto L_0x02e0
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r9.messageOwner
            int r0 = r0.from_id
            goto L_0x0313
        L_0x02e0:
            im.bclpbkiauv.messenger.MessagesController r0 = r32.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$Peer r5 = r5.to_id
            int r5 = r5.channel_id
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r0.getChat(r5)
            boolean r5 = im.bclpbkiauv.messenger.ChatObject.isChannel(r0)
            if (r5 == 0) goto L_0x030b
            boolean r5 = r0.megagroup
            if (r5 == 0) goto L_0x030b
            boolean r5 = r9.isForwardedChannelPost()
            if (r5 == 0) goto L_0x030b
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageFwdHeader r5 = r5.fwd_from
            int r5 = r5.channel_id
            int r5 = -r5
            r0 = r5
            goto L_0x0313
        L_0x030b:
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$Peer r5 = r5.to_id
            int r5 = r5.channel_id
            int r5 = -r5
            r0 = r5
        L_0x0313:
            java.lang.Integer r5 = java.lang.Integer.valueOf(r0)
            boolean r5 = r4.contains(r5)
            if (r5 != 0) goto L_0x0324
            java.lang.Integer r5 = java.lang.Integer.valueOf(r0)
            r4.add(r5)
        L_0x0324:
            java.lang.Object r5 = r3.get(r15)
            im.bclpbkiauv.messenger.MessageObject r5 = (im.bclpbkiauv.messenger.MessageObject) r5
            int r5 = r5.type
            if (r5 == r14) goto L_0x0330
            r5 = -1
            r14 = r5
        L_0x0330:
            int r15 = r15 + 1
            r0 = 0
            r5 = 32
            goto L_0x02c8
        L_0x0336:
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            r5 = 0
        L_0x033c:
            int r15 = r4.size()
            if (r5 >= r15) goto L_0x03fb
            java.lang.Object r15 = r4.get(r5)
            java.lang.Integer r15 = (java.lang.Integer) r15
            r19 = 0
            r20 = 0
            int r21 = r15.intValue()
            if (r21 <= 0) goto L_0x035f
            im.bclpbkiauv.messenger.MessagesController r7 = r32.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$User r20 = r7.getUser(r15)
            r1 = r19
            r7 = r20
            goto L_0x0374
        L_0x035f:
            im.bclpbkiauv.messenger.MessagesController r7 = r32.getMessagesController()
            int r1 = r15.intValue()
            int r1 = -r1
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            im.bclpbkiauv.tgnet.TLRPC$Chat r19 = r7.getChat(r1)
            r1 = r19
            r7 = r20
        L_0x0374:
            if (r7 != 0) goto L_0x037c
            if (r1 != 0) goto L_0x037c
            r22 = r9
            goto L_0x03ee
        L_0x037c:
            int r6 = r4.size()
            r8 = 1
            if (r6 != r8) goto L_0x0397
            if (r7 == 0) goto L_0x038f
            java.lang.String r6 = im.bclpbkiauv.messenger.UserObject.getName(r7)
            r0.append(r6)
            r22 = r9
            goto L_0x03ee
        L_0x038f:
            java.lang.String r6 = r1.title
            r0.append(r6)
            r22 = r9
            goto L_0x03ee
        L_0x0397:
            int r6 = r4.size()
            java.lang.String r8 = " "
            r22 = r9
            r9 = 2
            if (r6 == r9) goto L_0x03bc
            int r6 = r0.length()
            if (r6 != 0) goto L_0x03a9
            goto L_0x03bc
        L_0x03a9:
            r0.append(r8)
            int r6 = r4.size()
            r8 = 1
            int r6 = r6 - r8
            java.lang.String r8 = "AndOther"
            java.lang.String r6 = im.bclpbkiauv.messenger.LocaleController.formatPluralString(r8, r6)
            r0.append(r6)
            goto L_0x03fd
        L_0x03bc:
            int r6 = r0.length()
            if (r6 <= 0) goto L_0x03c7
            java.lang.String r6 = ", "
            r0.append(r6)
        L_0x03c7:
            if (r7 == 0) goto L_0x03e9
            java.lang.String r6 = r7.first_name
            boolean r6 = android.text.TextUtils.isEmpty(r6)
            if (r6 != 0) goto L_0x03d7
            java.lang.String r6 = r7.first_name
            r0.append(r6)
            goto L_0x03ee
        L_0x03d7:
            java.lang.String r6 = r7.last_name
            boolean r6 = android.text.TextUtils.isEmpty(r6)
            if (r6 != 0) goto L_0x03e5
            java.lang.String r6 = r7.last_name
            r0.append(r6)
            goto L_0x03ee
        L_0x03e5:
            r0.append(r8)
            goto L_0x03ee
        L_0x03e9:
            java.lang.String r6 = r1.title
            r0.append(r6)
        L_0x03ee:
            int r5 = r5 + 1
            r9 = r22
            r1 = 0
            r6 = 10
            r7 = 1096810496(0x41600000, float:14.0)
            r8 = 150(0x96, float:2.1E-43)
            goto L_0x033c
        L_0x03fb:
            r22 = r9
        L_0x03fd:
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyNameTextView
            r1.setText(r0)
            r1 = -1
            if (r14 == r1) goto L_0x0546
            if (r14 == 0) goto L_0x0546
            r1 = 10
            if (r14 == r1) goto L_0x0546
            r1 = 11
            if (r14 != r1) goto L_0x0411
            goto L_0x0546
        L_0x0411:
            r1 = 1
            if (r14 != r1) goto L_0x0433
            im.bclpbkiauv.ui.actionbar.SimpleTextView r5 = r10.replyObjectTextView
            int r6 = r3.size()
            java.lang.String r7 = "ForwardedPhoto"
            java.lang.String r6 = im.bclpbkiauv.messenger.LocaleController.formatPluralString(r7, r6)
            r5.setText(r6)
            int r5 = r3.size()
            if (r5 != r1) goto L_0x05cc
            r1 = 0
            java.lang.Object r5 = r3.get(r1)
            r11 = r5
            im.bclpbkiauv.messenger.MessageObject r11 = (im.bclpbkiauv.messenger.MessageObject) r11
            goto L_0x05cc
        L_0x0433:
            r1 = 4
            if (r14 != r1) goto L_0x0447
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyObjectTextView
            int r5 = r3.size()
            java.lang.String r6 = "ForwardedLocation"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatPluralString(r6, r5)
            r1.setText(r5)
            goto L_0x05cc
        L_0x0447:
            r1 = 3
            if (r14 != r1) goto L_0x046a
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyObjectTextView
            int r5 = r3.size()
            java.lang.String r6 = "ForwardedVideo"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatPluralString(r6, r5)
            r1.setText(r5)
            int r1 = r3.size()
            r5 = 1
            if (r1 != r5) goto L_0x05cc
            r1 = 0
            java.lang.Object r5 = r3.get(r1)
            r11 = r5
            im.bclpbkiauv.messenger.MessageObject r11 = (im.bclpbkiauv.messenger.MessageObject) r11
            goto L_0x05cc
        L_0x046a:
            r1 = 12
            if (r14 != r1) goto L_0x047f
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyObjectTextView
            int r5 = r3.size()
            java.lang.String r6 = "ForwardedContact"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatPluralString(r6, r5)
            r1.setText(r5)
            goto L_0x05cc
        L_0x047f:
            r1 = 2
            if (r14 != r1) goto L_0x0493
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyObjectTextView
            int r5 = r3.size()
            java.lang.String r6 = "ForwardedAudio"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatPluralString(r6, r5)
            r1.setText(r5)
            goto L_0x05cc
        L_0x0493:
            r1 = 5
            if (r14 != r1) goto L_0x04a7
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyObjectTextView
            int r5 = r3.size()
            java.lang.String r6 = "ForwardedRound"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatPluralString(r6, r5)
            r1.setText(r5)
            goto L_0x05cc
        L_0x04a7:
            r1 = 14
            if (r14 != r1) goto L_0x04bc
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyObjectTextView
            int r5 = r3.size()
            java.lang.String r6 = "ForwardedMusic"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatPluralString(r6, r5)
            r1.setText(r5)
            goto L_0x05cc
        L_0x04bc:
            r1 = 13
            if (r14 == r1) goto L_0x0535
            r1 = 15
            if (r14 != r1) goto L_0x04c6
            goto L_0x0535
        L_0x04c6:
            r1 = 17
            if (r14 != r1) goto L_0x04db
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyObjectTextView
            int r5 = r3.size()
            java.lang.String r6 = "ForwardedPoll"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatPluralString(r6, r5)
            r1.setText(r5)
            goto L_0x05cc
        L_0x04db:
            r1 = 8
            if (r14 == r1) goto L_0x04e6
            r5 = 9
            if (r14 != r5) goto L_0x04e4
            goto L_0x04e6
        L_0x04e4:
            goto L_0x05cc
        L_0x04e6:
            int r5 = r3.size()
            r6 = 1
            if (r5 != r6) goto L_0x0524
            if (r14 != r1) goto L_0x04ff
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyObjectTextView
            r5 = 2131689946(0x7f0f01da, float:1.9008922E38)
            java.lang.String r6 = "AttachGif"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.getString(r6, r5)
            r1.setText(r5)
            goto L_0x05cc
        L_0x04ff:
            r1 = 0
            java.lang.Object r5 = r3.get(r1)
            im.bclpbkiauv.messenger.MessageObject r5 = (im.bclpbkiauv.messenger.MessageObject) r5
            im.bclpbkiauv.tgnet.TLRPC$Document r1 = r5.getDocument()
            java.lang.String r1 = im.bclpbkiauv.messenger.FileLoader.getDocumentFileName(r1)
            r5 = r1
            int r1 = r1.length()
            if (r1 == 0) goto L_0x051a
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyObjectTextView
            r1.setText(r5)
        L_0x051a:
            r1 = 0
            java.lang.Object r6 = r3.get(r1)
            r11 = r6
            im.bclpbkiauv.messenger.MessageObject r11 = (im.bclpbkiauv.messenger.MessageObject) r11
            goto L_0x05cc
        L_0x0524:
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyObjectTextView
            int r5 = r3.size()
            java.lang.String r6 = "ForwardedFile"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatPluralString(r6, r5)
            r1.setText(r5)
            goto L_0x05cc
        L_0x0535:
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyObjectTextView
            int r5 = r3.size()
            java.lang.String r6 = "ForwardedSticker"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatPluralString(r6, r5)
            r1.setText(r5)
            goto L_0x05cc
        L_0x0546:
            int r1 = r3.size()
            r5 = 1
            if (r1 != r5) goto L_0x05bd
            r1 = 0
            java.lang.Object r5 = r3.get(r1)
            im.bclpbkiauv.messenger.MessageObject r5 = (im.bclpbkiauv.messenger.MessageObject) r5
            java.lang.CharSequence r5 = r5.messageText
            if (r5 == 0) goto L_0x05bd
            java.lang.Object r5 = r3.get(r1)
            r1 = r5
            im.bclpbkiauv.messenger.MessageObject r1 = (im.bclpbkiauv.messenger.MessageObject) r1
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r1.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r5 = r5.media
            boolean r5 = r5 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageMediaGame
            if (r5 == 0) goto L_0x058a
            im.bclpbkiauv.ui.actionbar.SimpleTextView r5 = r10.replyObjectTextView
            im.bclpbkiauv.tgnet.TLRPC$Message r6 = r1.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r6 = r6.media
            im.bclpbkiauv.tgnet.TLRPC$TL_game r6 = r6.game
            java.lang.String r6 = r6.title
            im.bclpbkiauv.ui.actionbar.SimpleTextView r7 = r10.replyObjectTextView
            android.graphics.Paint r7 = r7.getPaint()
            android.graphics.Paint$FontMetricsInt r7 = r7.getFontMetricsInt()
            r8 = 1096810496(0x41600000, float:14.0)
            int r8 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r8)
            r9 = 0
            java.lang.CharSequence r6 = im.bclpbkiauv.messenger.Emoji.replaceEmoji(r6, r7, r8, r9)
            r5.setText(r6)
            goto L_0x05bc
        L_0x058a:
            r9 = 0
            java.lang.CharSequence r5 = r1.messageText
            java.lang.String r5 = r5.toString()
            int r6 = r5.length()
            r7 = 150(0x96, float:2.1E-43)
            if (r6 <= r7) goto L_0x059d
            java.lang.String r5 = r5.substring(r9, r7)
        L_0x059d:
            r6 = 32
            r7 = 10
            java.lang.String r5 = r5.replace(r7, r6)
            im.bclpbkiauv.ui.actionbar.SimpleTextView r6 = r10.replyObjectTextView
            android.graphics.Paint r7 = r6.getPaint()
            android.graphics.Paint$FontMetricsInt r7 = r7.getFontMetricsInt()
            r8 = 1096810496(0x41600000, float:14.0)
            int r8 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r8)
            java.lang.CharSequence r7 = im.bclpbkiauv.messenger.Emoji.replaceEmoji(r5, r7, r8, r9)
            r6.setText(r7)
        L_0x05bc:
            goto L_0x05cc
        L_0x05bd:
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyObjectTextView
            int r5 = r3.size()
            java.lang.String r6 = "ForwardedMessageCount"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatPluralString(r6, r5)
            r1.setText(r5)
        L_0x05cc:
            goto L_0x0647
        L_0x05ce:
            android.widget.ImageView r0 = r10.replyIconImageView
            r1 = 2131231316(0x7f080254, float:1.807871E38)
            r0.setImageResource(r1)
            boolean r0 = r13 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_webPagePending
            if (r0 == 0) goto L_0x05f0
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r10.replyNameTextView
            r1 = 2131691473(0x7f0f07d1, float:1.9012019E38)
            java.lang.String r4 = "GettingLinkInfo"
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r1)
            r0.setText(r1)
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r10.replyObjectTextView
            java.lang.String r1 = r10.pendingLinkSearchString
            r0.setText(r1)
            goto L_0x0647
        L_0x05f0:
            java.lang.String r0 = r13.site_name
            if (r0 == 0) goto L_0x05fc
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r10.replyNameTextView
            java.lang.String r1 = r13.site_name
            r0.setText(r1)
            goto L_0x0616
        L_0x05fc:
            java.lang.String r0 = r13.title
            if (r0 == 0) goto L_0x0608
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r10.replyNameTextView
            java.lang.String r1 = r13.title
            r0.setText(r1)
            goto L_0x0616
        L_0x0608:
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r10.replyNameTextView
            r1 = 2131691825(0x7f0f0931, float:1.9012733E38)
            java.lang.String r4 = "LinkPreview"
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r1)
            r0.setText(r1)
        L_0x0616:
            java.lang.String r0 = r13.title
            if (r0 == 0) goto L_0x0622
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r10.replyObjectTextView
            java.lang.String r1 = r13.title
            r0.setText(r1)
            goto L_0x0641
        L_0x0622:
            java.lang.String r0 = r13.description
            if (r0 == 0) goto L_0x062e
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r10.replyObjectTextView
            java.lang.String r1 = r13.description
            r0.setText(r1)
            goto L_0x0641
        L_0x062e:
            java.lang.String r0 = r13.author
            if (r0 == 0) goto L_0x063a
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r10.replyObjectTextView
            java.lang.String r1 = r13.author
            r0.setText(r1)
            goto L_0x0641
        L_0x063a:
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r10.replyObjectTextView
            java.lang.String r1 = r13.display_url
            r0.setText(r1)
        L_0x0641:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r10.chatActivityEnterView
            r1 = 1
            r0.setWebPage(r13, r1)
        L_0x0647:
            if (r11 == 0) goto L_0x064b
            r0 = r11
            goto L_0x0651
        L_0x064b:
            if (r12 == 0) goto L_0x0650
            r0 = r35
            goto L_0x0651
        L_0x0650:
            r0 = 0
        L_0x0651:
            im.bclpbkiauv.ui.actionbar.SimpleTextView r1 = r10.replyNameTextView
            android.view.ViewGroup$LayoutParams r1 = r1.getLayoutParams()
            android.widget.FrameLayout$LayoutParams r1 = (android.widget.FrameLayout.LayoutParams) r1
            im.bclpbkiauv.ui.actionbar.SimpleTextView r4 = r10.replyObjectTextView
            android.view.ViewGroup$LayoutParams r4 = r4.getLayoutParams()
            android.widget.FrameLayout$LayoutParams r4 = (android.widget.FrameLayout.LayoutParams) r4
            r5 = 1
            r6 = 0
            r7 = 0
            r8 = 0
            r9 = 0
            if (r0 == 0) goto L_0x072f
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$PhotoSize> r14 = r0.photoThumbs2
            r15 = 320(0x140, float:4.48E-43)
            im.bclpbkiauv.tgnet.TLRPC$PhotoSize r7 = im.bclpbkiauv.messenger.FileLoader.getClosestPhotoSizeWithSize(r14, r15)
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$PhotoSize> r14 = r0.photoThumbs2
            r17 = 1109393408(0x42200000, float:40.0)
            int r15 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r17)
            im.bclpbkiauv.tgnet.TLRPC$PhotoSize r8 = im.bclpbkiauv.messenger.FileLoader.getClosestPhotoSizeWithSize(r14, r15)
            im.bclpbkiauv.tgnet.TLObject r9 = r0.photoThumbsObject2
            if (r7 != 0) goto L_0x072a
            boolean r14 = r0.mediaExists
            if (r14 == 0) goto L_0x070c
            int r14 = r0.type
            r15 = 1
            if (r14 != r15) goto L_0x06f0
            im.bclpbkiauv.tgnet.TLRPC$Document r14 = r0.getDocument()
            int r15 = im.bclpbkiauv.messenger.AndroidUtilities.getPhotoSize()
            if (r14 == 0) goto L_0x06e5
            boolean r18 = im.bclpbkiauv.messenger.MessageObject.isVoiceDocument(r14)
            if (r18 != 0) goto L_0x06dc
            boolean r18 = im.bclpbkiauv.messenger.MessageObject.isMusicDocument(r14)
            if (r18 != 0) goto L_0x06dc
            r19 = r5
            java.lang.String r5 = r14.mime_type
            if (r5 == 0) goto L_0x06b7
            java.lang.String r5 = r14.mime_type
            java.lang.String r5 = r5.toLowerCase()
            r20 = r6
            java.lang.String r6 = "video/"
            boolean r5 = r5.startsWith(r6)
            if (r5 != 0) goto L_0x06e0
            goto L_0x06b9
        L_0x06b7:
            r20 = r6
        L_0x06b9:
            boolean r5 = im.bclpbkiauv.messenger.MessageObject.isGifDocument((im.bclpbkiauv.tgnet.TLRPC.Document) r14)
            if (r5 == 0) goto L_0x06c0
            goto L_0x06e0
        L_0x06c0:
            java.lang.String r5 = r14.mime_type
            if (r5 == 0) goto L_0x06d2
            java.lang.String r5 = r14.mime_type
            java.lang.String r5 = r5.toLowerCase()
            java.lang.String r6 = "image/"
            boolean r5 = r5.startsWith(r6)
            if (r5 != 0) goto L_0x06d8
        L_0x06d2:
            boolean r5 = im.bclpbkiauv.messenger.MessageObject.isDocumentHasThumb(r14)
            if (r5 == 0) goto L_0x06e9
        L_0x06d8:
            r15 = 80000(0x13880, float:1.12104E-40)
            goto L_0x06e9
        L_0x06dc:
            r19 = r5
            r20 = r6
        L_0x06e0:
            int r15 = im.bclpbkiauv.messenger.AndroidUtilities.getPhotoSize()
            goto L_0x06e9
        L_0x06e5:
            r19 = r5
            r20 = r6
        L_0x06e9:
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$PhotoSize> r5 = r0.photoThumbs
            im.bclpbkiauv.tgnet.TLRPC$PhotoSize r5 = im.bclpbkiauv.messenger.FileLoader.getClosestPhotoSizeWithSize(r5, r15)
            goto L_0x06fe
        L_0x06f0:
            r19 = r5
            r20 = r6
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$PhotoSize> r5 = r0.photoThumbs
            int r6 = im.bclpbkiauv.messenger.AndroidUtilities.getPhotoSize()
            im.bclpbkiauv.tgnet.TLRPC$PhotoSize r5 = im.bclpbkiauv.messenger.FileLoader.getClosestPhotoSizeWithSize(r5, r6)
        L_0x06fe:
            if (r5 == 0) goto L_0x0703
            int r6 = r5.size
            goto L_0x0705
        L_0x0703:
            r6 = r20
        L_0x0705:
            r7 = 0
            r31 = r7
            r7 = r5
            r5 = r31
            goto L_0x071d
        L_0x070c:
            r19 = r5
            r20 = r6
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$PhotoSize> r5 = r0.photoThumbs
            r6 = 320(0x140, float:4.48E-43)
            im.bclpbkiauv.tgnet.TLRPC$PhotoSize r5 = im.bclpbkiauv.messenger.FileLoader.getClosestPhotoSizeWithSize(r5, r6)
            r7 = r5
            r5 = r19
            r6 = r20
        L_0x071d:
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$PhotoSize> r14 = r0.photoThumbs
            int r15 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r17)
            im.bclpbkiauv.tgnet.TLRPC$PhotoSize r8 = im.bclpbkiauv.messenger.FileLoader.getClosestPhotoSizeWithSize(r14, r15)
            im.bclpbkiauv.tgnet.TLObject r9 = r0.photoThumbsObject
            goto L_0x0733
        L_0x072a:
            r19 = r5
            r20 = r6
            goto L_0x0733
        L_0x072f:
            r19 = r5
            r20 = r6
        L_0x0733:
            if (r7 != r8) goto L_0x0736
            r8 = 0
        L_0x0736:
            if (r7 == 0) goto L_0x07a5
            boolean r14 = r7 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_photoSizeEmpty
            if (r14 != 0) goto L_0x07a5
            im.bclpbkiauv.tgnet.TLRPC$FileLocation r14 = r7.location
            boolean r14 = r14 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_fileLocationUnavailable
            if (r14 != 0) goto L_0x07a5
            boolean r14 = r0.isAnyKindOfSticker()
            if (r14 != 0) goto L_0x07a5
            if (r0 == 0) goto L_0x0751
            boolean r14 = r0.isSecretMedia()
            if (r14 == 0) goto L_0x0751
            goto L_0x07a5
        L_0x0751:
            if (r0 == 0) goto L_0x0765
            boolean r14 = r0.isRoundVideo()
            if (r14 == 0) goto L_0x0765
            im.bclpbkiauv.ui.components.BackupImageView r14 = r10.replyImageView
            r15 = 1099431936(0x41880000, float:17.0)
            int r15 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r15)
            r14.setRoundRadius(r15)
            goto L_0x076b
        L_0x0765:
            im.bclpbkiauv.ui.components.BackupImageView r14 = r10.replyImageView
            r15 = 0
            r14.setRoundRadius(r15)
        L_0x076b:
            r10.replyImageSize = r6
            r10.replyImageCacheType = r5
            r10.replyImageLocation = r7
            r10.replyImageThumbLocation = r8
            r10.replyImageLocationObject = r9
            im.bclpbkiauv.ui.components.BackupImageView r14 = r10.replyImageView
            im.bclpbkiauv.messenger.ImageLocation r23 = im.bclpbkiauv.messenger.ImageLocation.getForObject(r7, r9)
            im.bclpbkiauv.messenger.ImageLocation r25 = im.bclpbkiauv.messenger.ImageLocation.getForObject(r8, r9)
            r27 = 0
            java.lang.String r24 = "50_50"
            java.lang.String r26 = "50_50_b"
            r22 = r14
            r28 = r6
            r29 = r5
            r30 = r0
            r22.setImage(r23, r24, r25, r26, r27, r28, r29, r30)
            im.bclpbkiauv.ui.components.BackupImageView r14 = r10.replyImageView
            r15 = 0
            r14.setVisibility(r15)
            r14 = 1119879168(0x42c00000, float:96.0)
            int r14 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r14)
            r4.leftMargin = r14
            r1.leftMargin = r14
            r16 = r0
            r17 = r3
            goto L_0x07e3
        L_0x07a5:
            im.bclpbkiauv.ui.components.BackupImageView r14 = r10.replyImageView
            r15 = 0
            r14.setImageBitmap(r15)
            r10.replyImageLocation = r15
            r10.replyImageLocationObject = r15
            r14 = 0
            if (r3 == 0) goto L_0x07cc
            r15 = 0
            java.lang.Object r15 = r3.get(r15)
            im.bclpbkiauv.messenger.MessageObject r15 = (im.bclpbkiauv.messenger.MessageObject) r15
            if (r15 == 0) goto L_0x07c7
            r16 = r0
            int r0 = r15.type
            r17 = r3
            r3 = 207(0xcf, float:2.9E-43)
            if (r0 != r3) goto L_0x07d0
            r14 = 1
            goto L_0x07d0
        L_0x07c7:
            r16 = r0
            r17 = r3
            goto L_0x07d0
        L_0x07cc:
            r16 = r0
            r17 = r3
        L_0x07d0:
            if (r14 != 0) goto L_0x07e2
            im.bclpbkiauv.ui.components.BackupImageView r0 = r10.replyImageView
            r3 = 4
            r0.setVisibility(r3)
            r0 = 1112539136(0x42500000, float:52.0)
            int r0 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r0)
            r4.leftMargin = r0
            r1.leftMargin = r0
        L_0x07e2:
        L_0x07e3:
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r10.replyNameTextView
            r0.setLayoutParams(r1)
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r10.replyObjectTextView
            r0.setLayoutParams(r4)
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r10.chatActivityEnterView
            r3 = 1
            r0.showTopView(r3, r2)
            r2 = r38
            r1 = r41
            goto L_0x08ac
        L_0x07f9:
            im.bclpbkiauv.messenger.MessageObject r0 = r10.replyingMessageObject
            if (r0 != 0) goto L_0x080a
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r0 = r10.forwardingMessages
            if (r0 != 0) goto L_0x080a
            im.bclpbkiauv.tgnet.TLRPC$WebPage r0 = r10.foundWebPage
            if (r0 != 0) goto L_0x080a
            im.bclpbkiauv.messenger.MessageObject r0 = r10.editingMessageObject
            if (r0 != 0) goto L_0x080a
            return
        L_0x080a:
            im.bclpbkiauv.messenger.MessageObject r0 = r10.replyingMessageObject
            if (r0 == 0) goto L_0x0840
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r0.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$ReplyMarkup r0 = r0.reply_markup
            boolean r0 = r0 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_replyKeyboardForceReply
            if (r0 == 0) goto L_0x0840
            int r0 = r10.currentAccount
            android.content.SharedPreferences r0 = im.bclpbkiauv.messenger.MessagesController.getMainSettings(r0)
            android.content.SharedPreferences$Editor r1 = r0.edit()
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            java.lang.String r3 = "answered_"
            r2.append(r3)
            long r3 = r10.dialog_id
            r2.append(r3)
            java.lang.String r2 = r2.toString()
            im.bclpbkiauv.messenger.MessageObject r3 = r10.replyingMessageObject
            int r3 = r3.getId()
            android.content.SharedPreferences$Editor r1 = r1.putInt(r2, r3)
            r1.commit()
        L_0x0840:
            im.bclpbkiauv.tgnet.TLRPC$WebPage r0 = r10.foundWebPage
            if (r0 == 0) goto L_0x0870
            r0 = 0
            r10.foundWebPage = r0
            im.bclpbkiauv.ui.components.ChatActivityEnterView r1 = r10.chatActivityEnterView
            r2 = r40 ^ 1
            r1.setWebPage(r0, r2)
            if (r13 == 0) goto L_0x0870
            im.bclpbkiauv.messenger.MessageObject r0 = r10.replyingMessageObject
            if (r0 != 0) goto L_0x085c
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r0 = r10.forwardingMessages
            if (r0 != 0) goto L_0x085c
            im.bclpbkiauv.messenger.MessageObject r0 = r10.editingMessageObject
            if (r0 == 0) goto L_0x0870
        L_0x085c:
            r1 = 1
            im.bclpbkiauv.messenger.MessageObject r2 = r10.replyingMessageObject
            im.bclpbkiauv.messenger.MessageObject r3 = r10.editingMessageObject
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r4 = r10.forwardingMessages
            r5 = 0
            r8 = 0
            r9 = 1
            r0 = r32
            r6 = r38
            r7 = r39
            r0.showFieldPanel(r1, r2, r3, r4, r5, r6, r7, r8, r9)
            return
        L_0x0870:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r0 = r10.forwardingMessages
            if (r0 == 0) goto L_0x0886
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r0 = r10.forwardingMessages
            r1 = 0
            r10.forwardingMessages = r1
            if (r39 == 0) goto L_0x087e
            int r1 = r39 + 1
            goto L_0x087f
        L_0x087e:
            r1 = 0
        L_0x087f:
            r2 = r38
            r3 = 0
            r10.forwardMessages(r0, r3, r2, r1)
            goto L_0x0889
        L_0x0886:
            r2 = r38
            r3 = 0
        L_0x0889:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r10.chatActivityEnterView
            r0.setForceShowSendButton(r3, r3)
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r10.chatActivityEnterView
            r1 = r41
            r0.hideTopView(r1)
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r10.chatActivityEnterView
            r4 = 0
            r0.setReplyingMessageObject(r4)
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r10.chatActivityEnterView
            r0.setEditingMessageObject(r4, r3)
            r10.topViewWasVisible = r3
            r10.replyingMessageObject = r4
            r10.editingMessageObject = r4
            r10.replyImageLocation = r4
            r10.replyImageLocationObject = r4
            r17 = r36
        L_0x08ac:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.showFieldPanel(boolean, im.bclpbkiauv.messenger.MessageObject, im.bclpbkiauv.messenger.MessageObject, java.util.ArrayList, im.bclpbkiauv.tgnet.TLRPC$WebPage, boolean, int, boolean, boolean):void");
    }

    public /* synthetic */ void lambda$showFieldPanel$65$ChatActivity() {
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.openKeyboard();
        }
    }

    /* access modifiers changed from: private */
    public void moveScrollToLastMessage() {
        if (this.chatListView != null && !this.messages.isEmpty()) {
            this.chatLayoutManager.scrollToPositionWithOffset(0, 0);
        }
    }

    /* access modifiers changed from: private */
    public boolean sendSecretMessageRead(MessageObject messageObject) {
        MessageObject messageObject2 = messageObject;
        if (messageObject2 == null || messageObject.isOut() || !messageObject.isSecretMedia() || messageObject2.messageOwner.destroyTime != 0 || messageObject2.messageOwner.ttl <= 0) {
            return false;
        }
        if (this.currentEncryptedChat != null) {
            getMessagesController().markMessageAsRead(this.dialog_id, messageObject2.messageOwner.random_id, messageObject2.messageOwner.ttl);
        } else {
            getMessagesController().markMessageAsRead(messageObject.getId(), ChatObject.isChannel(this.currentChat) ? this.currentChat.id : 0, (TLRPC.InputChannel) null, messageObject2.messageOwner.ttl, 0);
        }
        messageObject2.messageOwner.destroyTime = messageObject2.messageOwner.ttl + getConnectionsManager().getCurrentTime();
        return true;
    }

    private void clearChatData() {
        this.messages.clear();
        this.messagesByDays.clear();
        this.waitingForLoad.clear();
        this.groupedMessagesMap.clear();
        listViewShowEmptyView(true, this.chatAdapter.botInfoRow == -1);
        for (int a = 0; a < 2; a++) {
            this.messagesDict[a].clear();
            if (this.currentEncryptedChat == null) {
                this.maxMessageId[a] = Integer.MAX_VALUE;
                this.minMessageId[a] = Integer.MIN_VALUE;
            } else {
                this.maxMessageId[a] = Integer.MIN_VALUE;
                this.minMessageId[a] = Integer.MAX_VALUE;
            }
            this.maxDate[a] = Integer.MIN_VALUE;
            this.minDate[a] = 0;
            this.endReached[a] = false;
            this.cacheEndReached[a] = false;
            this.forwardEndReached[a] = true;
        }
        this.first = true;
        this.firstLoading = true;
        this.loading = true;
        this.loadingForward = false;
        this.waitingForReplyMessageLoad = false;
        this.startLoadFromMessageId = 0;
        this.showScrollToMessageError = false;
        this.last_message_id = 0;
        this.unreadMessageObject = null;
        this.createUnreadMessageAfterId = 0;
        this.createUnreadMessageAfterIdLoading = false;
        this.needSelectFromMessageId = false;
        this.chatAdapter.notifyDataSetChanged();
    }

    private void scrollToLastMessage(boolean pagedown) {
        if (!this.forwardEndReached[0] || this.first_unread_id != 0 || this.startLoadFromMessageId != 0) {
            clearChatData();
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            MessagesController messagesController = getMessagesController();
            long j = this.dialog_id;
            int i = this.classGuid;
            boolean isChannel = ChatObject.isChannel(this.currentChat);
            boolean z = this.inScheduleMode;
            int i2 = this.lastLoadIndex;
            this.lastLoadIndex = i2 + 1;
            messagesController.loadMessages(j, 30, 0, 0, true, 0, i, 0, 0, isChannel, z, i2);
        } else if (!pagedown || this.chatLayoutManager.findFirstCompletelyVisibleItemPosition() != 0) {
            this.chatLayoutManager.scrollToPositionWithOffset(0, 0);
        } else {
            showPagedownButton(false, true);
            removeSelectedMessageHighlight();
            updateVisibleRows();
        }
    }

    public void updateTextureViewPosition(boolean needScroll) {
        MessageObject messageObject;
        if (this.fragmentView != null && !this.paused) {
            boolean foundTextureViewMessage = false;
            int count = this.chatListView.getChildCount();
            int a = 0;
            while (true) {
                if (a >= count) {
                    break;
                }
                View view = this.chatListView.getChildAt(a);
                if (view instanceof ChatMessageCell) {
                    ChatMessageCell messageCell = (ChatMessageCell) view;
                    MessageObject messageObject2 = messageCell.getMessageObject();
                    if (this.videoPlayerContainer != null && ((messageObject2.isRoundVideo() || messageObject2.isVideo()) && MediaController.getInstance().isPlayingMessage(messageObject2))) {
                        ImageReceiver imageReceiver = messageCell.getPhotoImage();
                        this.videoPlayerContainer.setTranslationX(((float) imageReceiver.getImageX()) + messageCell.getX());
                        this.videoPlayerContainer.setTranslationY(((float) (((this.fragmentView.getPaddingTop() + messageCell.getTop()) + imageReceiver.getImageY()) - this.chatListViewClipTop)) + this.chatListView.getTranslationY() + ((float) (this.inPreviewMode ? AndroidUtilities.statusBarHeight : 0)));
                        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) this.videoPlayerContainer.getLayoutParams();
                        if (messageObject2.isRoundVideo()) {
                            this.videoPlayerContainer.setTag(R.id.parent_tag, (Object) null);
                            if (!(layoutParams.width == AndroidUtilities.roundMessageSize && layoutParams.height == AndroidUtilities.roundMessageSize)) {
                                int i = AndroidUtilities.roundMessageSize;
                                layoutParams.height = i;
                                layoutParams.width = i;
                                this.aspectRatioFrameLayout.setResizeMode(0);
                                this.videoPlayerContainer.setLayoutParams(layoutParams);
                            }
                        } else {
                            this.videoPlayerContainer.setTag(R.id.parent_tag, 1);
                            if (!(layoutParams.width == imageReceiver.getImageWidth() && layoutParams.height == imageReceiver.getImageHeight())) {
                                this.aspectRatioFrameLayout.setResizeMode(3);
                                layoutParams.width = imageReceiver.getImageWidth();
                                layoutParams.height = imageReceiver.getImageHeight();
                                this.videoPlayerContainer.setLayoutParams(layoutParams);
                            }
                        }
                        this.fragmentView.invalidate();
                        this.videoPlayerContainer.invalidate();
                        foundTextureViewMessage = true;
                    }
                }
                a++;
            }
            if (needScroll && this.videoPlayerContainer != null && (messageObject = MediaController.getInstance().getPlayingMessageObject()) != null && messageObject.eventId == 0) {
                if (foundTextureViewMessage) {
                    MediaController.getInstance().setCurrentVideoVisible(true);
                    if (messageObject.isRoundVideo() || this.scrollToVideo) {
                        scrollToMessageId(messageObject.getId(), 0, false, 0, true);
                    } else {
                        this.chatListView.invalidate();
                    }
                } else if (!this.checkTextureViewPosition || !messageObject.isVideo()) {
                    this.videoPlayerContainer.setTranslationY((float) ((-AndroidUtilities.roundMessageSize) - 100));
                    this.fragmentView.invalidate();
                    if (messageObject == null) {
                        return;
                    }
                    if (!messageObject.isRoundVideo() && !messageObject.isVideo()) {
                        return;
                    }
                    if (this.checkTextureViewPosition || PipRoundVideoView.getInstance() != null) {
                        MediaController.getInstance().setCurrentVideoVisible(false);
                    } else {
                        scrollToMessageId(messageObject.getId(), 0, false, 0, true);
                    }
                } else {
                    MediaController.getInstance().cleanupPlayer(true, true);
                }
            }
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:157:0x031a  */
    /* JADX WARNING: Removed duplicated region for block: B:158:0x0329  */
    /* JADX WARNING: Removed duplicated region for block: B:63:0x015f  */
    /* JADX WARNING: Removed duplicated region for block: B:65:0x0169  */
    /* JADX WARNING: Removed duplicated region for block: B:69:0x017f  */
    /* JADX WARNING: Removed duplicated region for block: B:72:0x019a  */
    /* JADX WARNING: Removed duplicated region for block: B:73:0x019f  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void updateMessagesVisiblePart(boolean r45) {
        /*
            r44 = this;
            r0 = r44
            im.bclpbkiauv.ui.components.RecyclerListView r1 = r0.chatListView
            if (r1 != 0) goto L_0x0007
            return
        L_0x0007:
            int r1 = r1.getChildCount()
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r0.chatListView
            int r2 = r2.getMeasuredHeight()
            r3 = 2147483647(0x7fffffff, float:NaN)
            r4 = 2147483647(0x7fffffff, float:NaN)
            r5 = 0
            r6 = 0
            r7 = 0
            r8 = 0
            im.bclpbkiauv.messenger.MessagesController r9 = r44.getMessagesController()
            java.util.concurrent.ConcurrentHashMap<java.lang.Long, java.lang.Integer> r9 = r9.dialogs_read_inbox_max
            long r10 = r0.dialog_id
            java.lang.Long r10 = java.lang.Long.valueOf(r10)
            java.lang.Object r9 = r9.get(r10)
            java.lang.Integer r9 = (java.lang.Integer) r9
            r10 = 0
            if (r9 != 0) goto L_0x0034
            java.lang.Integer r9 = java.lang.Integer.valueOf(r10)
        L_0x0034:
            r11 = -2147483648(0xffffffff80000000, float:-0.0)
            r12 = 2147483647(0x7fffffff, float:NaN)
            r13 = -2147483648(0xffffffff80000000, float:-0.0)
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r14 = r0.currentEncryptedChat
            if (r14 == 0) goto L_0x0043
            r14 = 2147483647(0x7fffffff, float:NaN)
            goto L_0x0045
        L_0x0043:
            r14 = -2147483648(0xffffffff80000000, float:-0.0)
        L_0x0045:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r15 = r0.pollsToCheck
            r15.clear()
            r15 = 0
        L_0x004b:
            if (r15 >= r1) goto L_0x01dc
            im.bclpbkiauv.ui.components.RecyclerListView r10 = r0.chatListView
            android.view.View r10 = r10.getChildAt(r15)
            r20 = 0
            r29 = r1
            boolean r1 = r10 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r1 == 0) goto L_0x011f
            r1 = r10
            im.bclpbkiauv.ui.cells.ChatMessageCell r1 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r1
            r30 = r14
            int r14 = r1.getTop()
            int r21 = r1.getBottom()
            r31 = r5
            if (r14 < 0) goto L_0x006e
            r5 = 0
            goto L_0x006f
        L_0x006e:
            int r5 = -r14
        L_0x006f:
            r32 = r6
            int r6 = r1.getMeasuredHeight()
            if (r6 <= r2) goto L_0x0079
            int r6 = r5 + r2
        L_0x0079:
            r33 = r2
            int r2 = r6 - r5
            r1.setVisiblePart(r5, r2)
            im.bclpbkiauv.messenger.MessageObject r2 = r1.getMessageObject()
            r22 = r5
            android.widget.FrameLayout r5 = r0.videoPlayerContainer
            if (r5 == 0) goto L_0x0118
            boolean r5 = r2.isVideo()
            if (r5 != 0) goto L_0x009a
            boolean r5 = r2.isRoundVideo()
            if (r5 == 0) goto L_0x0097
            goto L_0x009a
        L_0x0097:
            r28 = 0
            goto L_0x009c
        L_0x009a:
            r28 = 1
        L_0x009c:
            r5 = r28
            if (r28 == 0) goto L_0x010f
            r23 = r6
            im.bclpbkiauv.messenger.MediaController r6 = im.bclpbkiauv.messenger.MediaController.getInstance()
            boolean r6 = r6.isPlayingMessage(r2)
            if (r6 == 0) goto L_0x0108
            im.bclpbkiauv.messenger.ImageReceiver r6 = r1.getPhotoImage()
            if (r5 == 0) goto L_0x00bf
            int r20 = r6.getImageY2()
            int r20 = r14 + r20
            if (r20 >= 0) goto L_0x00bf
            r8 = 0
            r20 = r2
            goto L_0x0135
        L_0x00bf:
            r20 = r2
            android.widget.FrameLayout r2 = r0.videoPlayerContainer
            r24 = r5
            int r5 = r6.getImageX()
            float r5 = (float) r5
            float r25 = r1.getX()
            float r5 = r5 + r25
            r2.setTranslationX(r5)
            android.widget.FrameLayout r2 = r0.videoPlayerContainer
            android.view.View r5 = r0.fragmentView
            int r5 = r5.getPaddingTop()
            int r5 = r5 + r14
            int r25 = r6.getImageY()
            int r5 = r5 + r25
            r25 = r1
            int r1 = r0.chatListViewClipTop
            int r5 = r5 - r1
            float r1 = (float) r5
            im.bclpbkiauv.ui.components.RecyclerListView r5 = r0.chatListView
            float r5 = r5.getTranslationY()
            float r1 = r1 + r5
            boolean r5 = r0.inPreviewMode
            if (r5 == 0) goto L_0x00f6
            int r5 = im.bclpbkiauv.messenger.AndroidUtilities.statusBarHeight
            goto L_0x00f7
        L_0x00f6:
            r5 = 0
        L_0x00f7:
            float r5 = (float) r5
            float r1 = r1 + r5
            r2.setTranslationY(r1)
            android.view.View r1 = r0.fragmentView
            r1.invalidate()
            android.widget.FrameLayout r1 = r0.videoPlayerContainer
            r1.invalidate()
            r8 = 1
            goto L_0x0135
        L_0x0108:
            r25 = r1
            r20 = r2
            r24 = r5
            goto L_0x0135
        L_0x010f:
            r25 = r1
            r20 = r2
            r24 = r5
            r23 = r6
            goto L_0x0135
        L_0x0118:
            r25 = r1
            r20 = r2
            r23 = r6
            goto L_0x0135
        L_0x011f:
            r33 = r2
            r31 = r5
            r32 = r6
            r30 = r14
            boolean r1 = r10 instanceof im.bclpbkiauv.ui.cells.ChatActionCell
            if (r1 == 0) goto L_0x0135
            r1 = r10
            im.bclpbkiauv.ui.cells.ChatActionCell r1 = (im.bclpbkiauv.ui.cells.ChatActionCell) r1
            im.bclpbkiauv.messenger.MessageObject r20 = r1.getMessageObject()
            r1 = r20
            goto L_0x0137
        L_0x0135:
            r1 = r20
        L_0x0137:
            boolean r2 = r0.inScheduleMode
            if (r2 != 0) goto L_0x0184
            if (r1 == 0) goto L_0x0184
            boolean r2 = r1.isOut()
            if (r2 != 0) goto L_0x0149
            boolean r2 = r1.isUnread()
            if (r2 != 0) goto L_0x0159
        L_0x0149:
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r1.messageOwner
            boolean r2 = r2.from_scheduled
            if (r2 == 0) goto L_0x0179
            int r2 = r1.getId()
            int r5 = r9.intValue()
            if (r2 <= r5) goto L_0x0179
        L_0x0159:
            int r2 = r1.getId()
            if (r2 <= 0) goto L_0x0167
            int r5 = r1.getId()
            int r11 = java.lang.Math.max(r11, r5)
        L_0x0167:
            if (r2 >= 0) goto L_0x0171
            int r5 = r1.getId()
            int r12 = java.lang.Math.min(r12, r5)
        L_0x0171:
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r1.messageOwner
            int r5 = r5.date
            int r13 = java.lang.Math.max(r13, r5)
        L_0x0179:
            int r2 = r1.type
            r5 = 17
            if (r2 != r5) goto L_0x0184
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r0.pollsToCheck
            r2.add(r1)
        L_0x0184:
            int r2 = r10.getBottom()
            im.bclpbkiauv.ui.components.RecyclerListView r5 = r0.chatListView
            int r5 = r5.getPaddingTop()
            r6 = 1065353216(0x3f800000, float:1.0)
            int r14 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r6)
            int r5 = r5 + r14
            int r6 = r0.chatListViewClipTop
            int r5 = r5 + r6
            if (r2 > r5) goto L_0x019f
            r5 = r31
            r6 = r32
            goto L_0x01d1
        L_0x019f:
            int r2 = r10.getBottom()
            if (r2 >= r3) goto L_0x01b1
            r3 = r2
            boolean r5 = r10 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r5 != 0) goto L_0x01ae
            boolean r5 = r10 instanceof im.bclpbkiauv.ui.cells.ChatActionCell
            if (r5 == 0) goto L_0x01af
        L_0x01ae:
            r7 = r10
        L_0x01af:
            r6 = r10
            goto L_0x01b3
        L_0x01b1:
            r6 = r32
        L_0x01b3:
            if (r1 == 0) goto L_0x01cf
            boolean r5 = r10 instanceof im.bclpbkiauv.ui.cells.ChatActionCell
            if (r5 == 0) goto L_0x01cf
            boolean r5 = r1.isDateObject
            if (r5 == 0) goto L_0x01cf
            float r5 = r10.getAlpha()
            r14 = 1065353216(0x3f800000, float:1.0)
            int r5 = (r5 > r14 ? 1 : (r5 == r14 ? 0 : -1))
            if (r5 == 0) goto L_0x01ca
            r10.setAlpha(r14)
        L_0x01ca:
            if (r2 >= r4) goto L_0x01cf
            r4 = r2
            r5 = r10
            goto L_0x01d1
        L_0x01cf:
            r5 = r31
        L_0x01d1:
            int r15 = r15 + 1
            r1 = r29
            r14 = r30
            r2 = r33
            r10 = 0
            goto L_0x004b
        L_0x01dc:
            r29 = r1
            r33 = r2
            r31 = r5
            r32 = r6
            r30 = r14
            im.bclpbkiauv.messenger.MessagesController r1 = r44.getMessagesController()
            long r5 = r0.dialog_id
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r0.pollsToCheck
            r1.addToPollsQueue(r5, r2)
            android.widget.FrameLayout r1 = r0.videoPlayerContainer
            if (r1 == 0) goto L_0x024d
            if (r8 != 0) goto L_0x0245
            im.bclpbkiauv.messenger.MediaController r1 = im.bclpbkiauv.messenger.MediaController.getInstance()
            im.bclpbkiauv.messenger.MessageObject r1 = r1.getPlayingMessageObject()
            if (r1 == 0) goto L_0x0244
            boolean r2 = r0.checkTextureViewPosition
            if (r2 == 0) goto L_0x0214
            boolean r2 = r1.isVideo()
            if (r2 == 0) goto L_0x0214
            im.bclpbkiauv.messenger.MediaController r2 = im.bclpbkiauv.messenger.MediaController.getInstance()
            r5 = 1
            r2.cleanupPlayer(r5, r5)
            goto L_0x0244
        L_0x0214:
            android.widget.FrameLayout r2 = r0.videoPlayerContainer
            int r5 = im.bclpbkiauv.messenger.AndroidUtilities.roundMessageSize
            int r5 = -r5
            int r5 = r5 + -100
            float r5 = (float) r5
            r2.setTranslationY(r5)
            android.view.View r2 = r0.fragmentView
            r2.invalidate()
            boolean r2 = r1.isRoundVideo()
            if (r2 != 0) goto L_0x0230
            boolean r2 = r1.isVideo()
            if (r2 == 0) goto L_0x0244
        L_0x0230:
            long r5 = r1.eventId
            r14 = 0
            int r2 = (r5 > r14 ? 1 : (r5 == r14 ? 0 : -1))
            if (r2 != 0) goto L_0x0244
            boolean r2 = r0.checkTextureViewPosition
            if (r2 == 0) goto L_0x0244
            im.bclpbkiauv.messenger.MediaController r2 = im.bclpbkiauv.messenger.MediaController.getInstance()
            r5 = 0
            r2.setCurrentVideoVisible(r5)
        L_0x0244:
            goto L_0x024d
        L_0x0245:
            im.bclpbkiauv.messenger.MediaController r1 = im.bclpbkiauv.messenger.MediaController.getInstance()
            r2 = 1
            r1.setCurrentVideoVisible(r2)
        L_0x024d:
            if (r7 == 0) goto L_0x026f
            boolean r1 = r7 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r1 == 0) goto L_0x025b
            r1 = r7
            im.bclpbkiauv.ui.cells.ChatMessageCell r1 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r1
            im.bclpbkiauv.messenger.MessageObject r1 = r1.getMessageObject()
            goto L_0x0262
        L_0x025b:
            r1 = r7
            im.bclpbkiauv.ui.cells.ChatActionCell r1 = (im.bclpbkiauv.ui.cells.ChatActionCell) r1
            im.bclpbkiauv.messenger.MessageObject r1 = r1.getMessageObject()
        L_0x0262:
            if (r1 == 0) goto L_0x026f
            im.bclpbkiauv.ui.cells.ChatActionCell r2 = r0.floatingDateView
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r1.messageOwner
            int r5 = r5.date
            boolean r6 = r0.inScheduleMode
            r2.setCustomDate(r5, r6)
        L_0x026f:
            r1 = 0
            r0.currentFloatingDateOnScreen = r1
            r6 = r32
            boolean r1 = r6 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r1 != 0) goto L_0x027e
            boolean r1 = r6 instanceof im.bclpbkiauv.ui.cells.ChatActionCell
            if (r1 != 0) goto L_0x027e
            r1 = 1
            goto L_0x027f
        L_0x027e:
            r1 = 0
        L_0x027f:
            r0.currentFloatingTopIsNotMessage = r1
            r1 = 0
            if (r31 == 0) goto L_0x032f
            int r2 = r31.getTop()
            int r5 = r0.chatListViewClipTop
            int r2 = r2 - r5
            im.bclpbkiauv.ui.components.RecyclerListView r5 = r0.chatListView
            int r5 = r5.getPaddingTop()
            if (r2 > r5) goto L_0x02dd
            boolean r2 = r0.currentFloatingTopIsNotMessage
            if (r2 == 0) goto L_0x029c
            r5 = r31
            r10 = 1065353216(0x3f800000, float:1.0)
            goto L_0x02e1
        L_0x029c:
            float r2 = r31.getAlpha()
            int r2 = (r2 > r1 ? 1 : (r2 == r1 ? 0 : -1))
            if (r2 == 0) goto L_0x02aa
            r5 = r31
            r5.setAlpha(r1)
            goto L_0x02ac
        L_0x02aa:
            r5 = r31
        L_0x02ac:
            android.animation.AnimatorSet r2 = r0.floatingDateAnimation
            if (r2 == 0) goto L_0x02b6
            r2.cancel()
            r2 = 0
            r0.floatingDateAnimation = r2
        L_0x02b6:
            im.bclpbkiauv.ui.cells.ChatActionCell r2 = r0.floatingDateView
            java.lang.Object r2 = r2.getTag()
            if (r2 != 0) goto L_0x02c8
            im.bclpbkiauv.ui.cells.ChatActionCell r2 = r0.floatingDateView
            r10 = 1
            java.lang.Integer r14 = java.lang.Integer.valueOf(r10)
            r2.setTag(r14)
        L_0x02c8:
            im.bclpbkiauv.ui.cells.ChatActionCell r2 = r0.floatingDateView
            float r2 = r2.getAlpha()
            r10 = 1065353216(0x3f800000, float:1.0)
            int r2 = (r2 > r10 ? 1 : (r2 == r10 ? 0 : -1))
            if (r2 == 0) goto L_0x02d9
            im.bclpbkiauv.ui.cells.ChatActionCell r2 = r0.floatingDateView
            r2.setAlpha(r10)
        L_0x02d9:
            r2 = 1
            r0.currentFloatingDateOnScreen = r2
            goto L_0x02f3
        L_0x02dd:
            r5 = r31
            r10 = 1065353216(0x3f800000, float:1.0)
        L_0x02e1:
            float r2 = r5.getAlpha()
            int r2 = (r2 > r10 ? 1 : (r2 == r10 ? 0 : -1))
            if (r2 == 0) goto L_0x02ec
            r5.setAlpha(r10)
        L_0x02ec:
            boolean r2 = r0.currentFloatingTopIsNotMessage
            r10 = 1
            r2 = r2 ^ r10
            r0.hideFloatingDateView(r2)
        L_0x02f3:
            int r2 = r5.getBottom()
            im.bclpbkiauv.ui.components.RecyclerListView r10 = r0.chatListView
            int r10 = r10.getPaddingTop()
            int r2 = r2 - r10
            int r10 = r0.chatListViewClipTop
            int r2 = r2 - r10
            float r2 = (float) r2
            im.bclpbkiauv.ui.cells.ChatActionCell r10 = r0.floatingDateView
            int r10 = r10.getMeasuredHeight()
            float r10 = (float) r10
            int r10 = (r2 > r10 ? 1 : (r2 == r10 ? 0 : -1))
            if (r10 <= 0) goto L_0x0329
            im.bclpbkiauv.ui.cells.ChatActionCell r10 = r0.floatingDateView
            int r10 = r10.getMeasuredHeight()
            int r10 = r10 * 2
            float r10 = (float) r10
            int r10 = (r2 > r10 ? 1 : (r2 == r10 ? 0 : -1))
            if (r10 >= 0) goto L_0x0329
            im.bclpbkiauv.ui.cells.ChatActionCell r1 = r0.floatingDateView
            int r10 = r1.getMeasuredHeight()
            int r10 = -r10
            int r10 = r10 * 2
            float r10 = (float) r10
            float r10 = r10 + r2
            r1.setTranslationY(r10)
            goto L_0x032e
        L_0x0329:
            im.bclpbkiauv.ui.cells.ChatActionCell r10 = r0.floatingDateView
            r10.setTranslationY(r1)
        L_0x032e:
            goto L_0x033a
        L_0x032f:
            r5 = r31
            r2 = 1
            r0.hideFloatingDateView(r2)
            im.bclpbkiauv.ui.cells.ChatActionCell r2 = r0.floatingDateView
            r2.setTranslationY(r1)
        L_0x033a:
            boolean r1 = r0.firstLoading
            if (r1 != 0) goto L_0x0464
            boolean r1 = r0.paused
            if (r1 != 0) goto L_0x0464
            boolean r1 = r0.inPreviewMode
            if (r1 != 0) goto L_0x0464
            boolean r1 = r0.inScheduleMode
            if (r1 != 0) goto L_0x0464
            r1 = 0
            r2 = -2147483648(0xffffffff80000000, float:-0.0)
            if (r11 != r2) goto L_0x03a5
            r2 = 2147483647(0x7fffffff, float:NaN)
            if (r12 == r2) goto L_0x0355
            goto L_0x03a5
        L_0x0355:
            boolean r2 = r0.firstUnreadSent
            if (r2 != 0) goto L_0x039f
            androidx.recyclerview.widget.GridLayoutManagerFixed r2 = r0.chatLayoutManager
            int r2 = r2.findFirstVisibleItemPosition()
            if (r2 != 0) goto L_0x0399
            r2 = 0
            r0.newUnreadMessageCount = r2
            if (r45 == 0) goto L_0x036f
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$FzePiC1MBVGUO36c9RwETHZWiLE r2 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$FzePiC1MBVGUO36c9RwETHZWiLE
            r2.<init>()
            im.bclpbkiauv.messenger.AndroidUtilities.runOnUIThread(r2)
            goto L_0x0372
        L_0x036f:
            r44.inlineUpdate2()
        L_0x0372:
            im.bclpbkiauv.messenger.MessagesController r34 = r44.getMessagesController()
            long r14 = r0.dialog_id
            int[] r2 = r0.minMessageId
            r10 = 0
            r37 = r2[r10]
            r38 = r2[r10]
            int[] r2 = r0.maxDate
            r39 = r2[r10]
            r40 = 0
            r41 = 0
            r42 = 1
            r35 = r14
            r43 = r1
            r34.markDialogAsRead(r35, r37, r38, r39, r40, r41, r42, r43)
            r2 = 1
            r0.firstUnreadSent = r2
            r31 = r3
            r17 = r4
            goto L_0x0468
        L_0x0399:
            r31 = r3
            r17 = r4
            goto L_0x0468
        L_0x039f:
            r31 = r3
            r17 = r4
            goto L_0x0468
        L_0x03a5:
            r2 = 0
            r10 = 0
        L_0x03a7:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r14 = r0.messages
            int r14 = r14.size()
            if (r10 >= r14) goto L_0x0404
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r14 = r0.messages
            java.lang.Object r14 = r14.get(r10)
            im.bclpbkiauv.messenger.MessageObject r14 = (im.bclpbkiauv.messenger.MessageObject) r14
            int r15 = r14.getId()
            r31 = r3
            r3 = -2147483648(0xffffffff80000000, float:-0.0)
            if (r11 == r3) goto L_0x03eb
            if (r15 <= 0) goto L_0x03eb
            if (r15 > r11) goto L_0x03eb
            boolean r17 = r14.isUnread()
            if (r17 != 0) goto L_0x03eb
            im.bclpbkiauv.tgnet.TLRPC$Message r3 = r14.messageOwner
            boolean r3 = r3.from_scheduled
            if (r3 == 0) goto L_0x03d7
            int r3 = r9.intValue()
            if (r15 > r3) goto L_0x03dd
        L_0x03d7:
            boolean r3 = r14.isUnread()
            if (r3 == 0) goto L_0x03eb
        L_0x03dd:
            im.bclpbkiauv.tgnet.TLRPC$Message r3 = r14.messageOwner
            boolean r3 = r3.from_scheduled
            if (r3 == 0) goto L_0x03e6
            int r1 = r1 + 1
            goto L_0x03e9
        L_0x03e6:
            r14.setIsRead()
        L_0x03e9:
            int r2 = r2 + 1
        L_0x03eb:
            r3 = 2147483647(0x7fffffff, float:NaN)
            if (r12 == r3) goto L_0x03ff
            if (r15 >= 0) goto L_0x03ff
            if (r15 < r12) goto L_0x03ff
            boolean r16 = r14.isUnread()
            if (r16 == 0) goto L_0x03ff
            r14.setIsRead()
            int r2 = r2 + 1
        L_0x03ff:
            int r10 = r10 + 1
            r3 = r31
            goto L_0x03a7
        L_0x0404:
            r31 = r3
            boolean[] r3 = r0.forwardEndReached
            r10 = 0
            boolean r3 = r3[r10]
            if (r3 == 0) goto L_0x0413
            int[] r3 = r0.minMessageId
            r3 = r3[r10]
            if (r11 == r3) goto L_0x0419
        L_0x0413:
            int[] r3 = r0.minMessageId
            r3 = r3[r10]
            if (r12 != r3) goto L_0x041c
        L_0x0419:
            r0.newUnreadMessageCount = r10
            goto L_0x0425
        L_0x041c:
            int r3 = r0.newUnreadMessageCount
            int r3 = r3 - r2
            r0.newUnreadMessageCount = r3
            if (r3 >= 0) goto L_0x0425
            r0.newUnreadMessageCount = r10
        L_0x0425:
            if (r45 == 0) goto L_0x0430
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$WKkOP158By1PLUCx_MdxVwT2vck r3 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$WKkOP158By1PLUCx_MdxVwT2vck
            r3.<init>()
            im.bclpbkiauv.messenger.AndroidUtilities.runOnUIThread(r3)
            goto L_0x0433
        L_0x0430:
            r44.inlineUpdate1()
        L_0x0433:
            im.bclpbkiauv.messenger.MessagesController r3 = r44.getMessagesController()
            long r14 = r0.dialog_id
            r24 = 0
            int[] r10 = r0.minMessageId
            r17 = r4
            r16 = 0
            r4 = r10[r16]
            if (r11 == r4) goto L_0x044d
            r4 = r10[r16]
            if (r12 != r4) goto L_0x044a
            goto L_0x044d
        L_0x044a:
            r26 = 0
            goto L_0x044f
        L_0x044d:
            r26 = 1
        L_0x044f:
            r18 = r3
            r19 = r14
            r21 = r11
            r22 = r12
            r23 = r13
            r25 = r2
            r27 = r1
            r18.markDialogAsRead(r19, r21, r22, r23, r24, r25, r26, r27)
            r3 = 1
            r0.firstUnreadSent = r3
            goto L_0x0468
        L_0x0464:
            r31 = r3
            r17 = r4
        L_0x0468:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.updateMessagesVisiblePart(boolean):void");
    }

    /* access modifiers changed from: private */
    public void inlineUpdate1() {
        int i = this.prevSetUnreadCount;
        int i2 = this.newUnreadMessageCount;
        if (i != i2) {
            this.prevSetUnreadCount = i2;
            this.pagedownButtonCounter.setText(String.format("%d", new Object[]{Integer.valueOf(i2)}));
        }
        if (this.newUnreadMessageCount <= 0) {
            if (this.pagedownButtonCounter.getVisibility() != 4) {
                this.pagedownButtonCounter.setVisibility(4);
            }
        } else if (this.pagedownButtonCounter.getVisibility() != 0) {
            this.pagedownButtonCounter.setVisibility(0);
        }
    }

    /* access modifiers changed from: private */
    public void inlineUpdate2() {
        int i = this.prevSetUnreadCount;
        int i2 = this.newUnreadMessageCount;
        if (i != i2) {
            this.prevSetUnreadCount = i2;
            this.pagedownButtonCounter.setText(String.format("%d", new Object[]{Integer.valueOf(i2)}));
        }
        if (this.pagedownButtonCounter.getVisibility() != 4) {
            this.pagedownButtonCounter.setVisibility(4);
        }
    }

    /* access modifiers changed from: private */
    public void toggleMute(boolean instant) {
        if (getMessagesController().isDialogMuted(this.dialog_id)) {
            SharedPreferences.Editor editor = MessagesController.getNotificationsSettings(this.currentAccount).edit();
            editor.putInt("notify2_" + this.dialog_id, 0);
            getMessagesStorage().setDialogFlags(this.dialog_id, 0);
            editor.commit();
            TLRPC.Dialog dialog = getMessagesController().dialogs_dict.get(this.dialog_id);
            if (dialog != null) {
                dialog.notify_settings = new TLRPC.TL_peerNotifySettings();
            }
            getNotificationsController().updateServerNotificationsSettings(this.dialog_id);
        } else if (instant) {
            SharedPreferences.Editor editor2 = MessagesController.getNotificationsSettings(this.currentAccount).edit();
            editor2.putInt("notify2_" + this.dialog_id, 2);
            getMessagesStorage().setDialogFlags(this.dialog_id, 1);
            editor2.commit();
            TLRPC.Dialog dialog2 = getMessagesController().dialogs_dict.get(this.dialog_id);
            if (dialog2 != null) {
                dialog2.notify_settings = new TLRPC.TL_peerNotifySettings();
                dialog2.notify_settings.mute_until = Integer.MAX_VALUE;
            }
            getNotificationsController().updateServerNotificationsSettings(this.dialog_id);
            getNotificationsController().removeNotificationsForDialog(this.dialog_id);
        } else if (isSysNotifyMessage().booleanValue()) {
            NotificationsController.getInstance(UserConfig.selectedAccount).setDialogNotificationsSettings(this.dialog_id, 3);
        } else {
            showDialog(AlertsCreator.createMuteAlert(getParentActivity(), this.dialog_id));
        }
    }

    private int getScrollOffsetForMessage(MessageObject object) {
        float itemHeight;
        int offset = Integer.MAX_VALUE;
        MessageObject.GroupedMessages groupedMessages = getValidGroupedMessage(object);
        if (groupedMessages != null) {
            MessageObject.GroupedMessagePosition currentPosition = groupedMessages.positions.get(object);
            float maxH = ((float) Math.max(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y)) * 0.5f;
            if (currentPosition.siblingHeights != null) {
                itemHeight = currentPosition.siblingHeights[0];
            } else {
                itemHeight = currentPosition.ph;
            }
            float totalHeight = 0.0f;
            float moveDiff = 0.0f;
            SparseBooleanArray array = new SparseBooleanArray();
            for (int a = 0; a < groupedMessages.posArray.size(); a++) {
                MessageObject.GroupedMessagePosition pos = groupedMessages.posArray.get(a);
                if (array.indexOfKey(pos.minY) < 0 && pos.siblingHeights == null) {
                    array.put(pos.minY, true);
                    if (pos.minY < currentPosition.minY) {
                        moveDiff -= pos.ph;
                    } else if (pos.minY > currentPosition.minY) {
                        moveDiff += pos.ph;
                    }
                    totalHeight += pos.ph;
                }
            }
            if (Math.abs(totalHeight - itemHeight) < 0.02f) {
                offset = ((((int) (((float) this.chatListView.getMeasuredHeight()) - (totalHeight * maxH))) / 2) - this.chatListView.getPaddingTop()) - AndroidUtilities.dp(7.0f);
            } else {
                offset = ((((int) (((float) this.chatListView.getMeasuredHeight()) - ((itemHeight + moveDiff) * maxH))) / 2) - this.chatListView.getPaddingTop()) - AndroidUtilities.dp(7.0f);
            }
        }
        return Math.max(0, offset == Integer.MAX_VALUE ? (this.chatListView.getMeasuredHeight() - object.getApproximateHeight()) / 2 : offset);
    }

    /* access modifiers changed from: private */
    public void startMessageUnselect() {
        Runnable runnable = this.unselectRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
        }
        $$Lambda$ChatActivity$5tmdHs5zMVzX_QSrdU0D53rd0 r0 = new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$startMessageUnselect$66$ChatActivity();
            }
        };
        this.unselectRunnable = r0;
        AndroidUtilities.runOnUIThread(r0, 1000);
    }

    public /* synthetic */ void lambda$startMessageUnselect$66$ChatActivity() {
        this.highlightMessageId = Integer.MAX_VALUE;
        updateVisibleRows();
        this.unselectRunnable = null;
    }

    /* access modifiers changed from: private */
    public void removeSelectedMessageHighlight() {
        Runnable runnable = this.unselectRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
            this.unselectRunnable = null;
        }
        this.highlightMessageId = Integer.MAX_VALUE;
    }

    public void scrollToMessageId(int id, int fromMessageId, boolean select, int loadIndex, boolean smooth) {
        MessageObject messageObject;
        int i = id;
        boolean z = select;
        int i2 = loadIndex;
        this.wasManualScroll = true;
        MessageObject object = this.messagesDict[i2].get(i);
        boolean query = false;
        if (object == null) {
            query = true;
        } else if (this.messages.indexOf(object) != -1) {
            removeSelectedMessageHighlight();
            if (z) {
                this.highlightMessageId = i;
            }
            int yOffset = getScrollOffsetForMessage(object);
            if (smooth) {
                ArrayList<MessageObject> arrayList = this.messages;
                if (arrayList.get(arrayList.size() - 1) == object) {
                    this.chatListView.smoothScrollToPosition(this.chatAdapter.getItemCount() - 1);
                } else {
                    this.chatListView.smoothScrollToPosition(this.chatAdapter.messagesStartRow + this.messages.indexOf(object));
                }
            } else {
                ArrayList<MessageObject> arrayList2 = this.messages;
                if (arrayList2.get(arrayList2.size() - 1) == object) {
                    this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.getItemCount() - 1, yOffset, false);
                } else {
                    this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(object), yOffset, false);
                }
            }
            updateVisibleRows();
            boolean found = false;
            int count = this.chatListView.getChildCount();
            int a = 0;
            while (true) {
                if (a >= count) {
                    break;
                }
                View view = this.chatListView.getChildAt(a);
                if (!(view instanceof ChatMessageCell)) {
                    if ((view instanceof ChatActionCell) && (messageObject = ((ChatActionCell) view).getMessageObject()) != null && messageObject.getId() == object.getId()) {
                        found = true;
                        view.sendAccessibilityEvent(8);
                        break;
                    }
                } else {
                    MessageObject messageObject2 = ((ChatMessageCell) view).getMessageObject();
                    if (messageObject2 != null && messageObject2.getId() == object.getId()) {
                        found = true;
                        view.sendAccessibilityEvent(8);
                        break;
                    }
                }
                a++;
            }
            if (!found) {
                showPagedownButton(true, true);
            }
        } else {
            query = true;
        }
        if (!query) {
            View child = this.chatListView.getChildAt(0);
            if (child != null && child.getTop() <= 0) {
                showFloatingDateView(false);
            }
        } else if (this.currentEncryptedChat == null || getMessagesStorage().checkMessageId(this.dialog_id, this.startLoadFromMessageId)) {
            this.waitingForLoad.clear();
            this.waitingForReplyMessageLoad = true;
            removeSelectedMessageHighlight();
            this.scrollToMessagePosition = -10000;
            this.startLoadFromMessageId = i;
            this.showScrollToMessageError = true;
            if (i == this.createUnreadMessageAfterId) {
                this.createUnreadMessageAfterIdLoading = true;
            }
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            MessagesController messagesController = getMessagesController();
            long j = i2 == 0 ? this.dialog_id : this.mergeDialogId;
            int i3 = AndroidUtilities.isTablet() ? 30 : 20;
            int i4 = this.startLoadFromMessageId;
            int i5 = this.classGuid;
            boolean isChannel = ChatObject.isChannel(this.currentChat);
            boolean z2 = this.inScheduleMode;
            int i6 = this.lastLoadIndex;
            this.lastLoadIndex = i6 + 1;
            messagesController.loadMessages(j, i3, i4, 0, true, 0, i5, 3, 0, isChannel, z2, i6);
        } else {
            return;
        }
        this.returnToMessageId = fromMessageId;
        this.returnToLoadIndex = i2;
        this.needSelectFromMessageId = z;
    }

    /* access modifiers changed from: private */
    public void showPagedownButton(boolean show, boolean animated) {
        FrameLayout frameLayout = this.pagedownButton;
        if (frameLayout != null) {
            if (show) {
                this.pagedownButtonShowedByScroll = false;
                if (frameLayout.getTag() == null) {
                    AnimatorSet animatorSet = this.pagedownButtonAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.pagedownButtonAnimation = null;
                    }
                    if (animated) {
                        if (this.pagedownButton.getTranslationY() == 0.0f) {
                            this.pagedownButton.setTranslationY((float) AndroidUtilities.dp(100.0f));
                        }
                        if (!isSysNotifyMessage().booleanValue() || this.dialog_id != 773000) {
                            this.pagedownButton.setVisibility(0);
                        } else {
                            this.pagedownButton.setVisibility(4);
                        }
                        this.pagedownButton.setTag(1);
                        this.pagedownButtonAnimation = new AnimatorSet();
                        if (this.mentiondownButton.getVisibility() == 0) {
                            this.pagedownButtonAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{0.0f}), ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(72.0f))})});
                        } else {
                            this.pagedownButtonAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{0.0f})});
                        }
                        this.pagedownButtonAnimation.setDuration(200);
                        this.pagedownButtonAnimation.start();
                        return;
                    }
                    this.pagedownButton.setVisibility(0);
                    return;
                }
                return;
            }
            this.returnToMessageId = 0;
            this.newUnreadMessageCount = 0;
            if (frameLayout.getTag() != null) {
                this.pagedownButton.setTag((Object) null);
                AnimatorSet animatorSet2 = this.pagedownButtonAnimation;
                if (animatorSet2 != null) {
                    animatorSet2.cancel();
                    this.pagedownButtonAnimation = null;
                }
                if (animated) {
                    this.pagedownButtonAnimation = new AnimatorSet();
                    if (this.mentiondownButton.getVisibility() == 0) {
                        this.pagedownButtonAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(100.0f)}), ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{0.0f})});
                    } else {
                        this.pagedownButtonAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(100.0f)})});
                    }
                    this.pagedownButtonAnimation.setDuration(200);
                    this.pagedownButtonAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animation) {
                            ChatActivity.this.pagedownButtonCounter.setVisibility(4);
                            ChatActivity.this.pagedownButton.setVisibility(4);
                        }
                    });
                    this.pagedownButtonAnimation.start();
                    return;
                }
                this.pagedownButton.setVisibility(4);
            }
        }
    }

    /* access modifiers changed from: private */
    public void showMentionDownButton(boolean show, boolean animated) {
        FrameLayout frameLayout = this.mentiondownButton;
        if (frameLayout != null) {
            if (!show) {
                this.returnToMessageId = 0;
                if (frameLayout.getTag() != null) {
                    this.mentiondownButton.setTag((Object) null);
                    ObjectAnimator objectAnimator = this.mentiondownButtonAnimation;
                    if (objectAnimator != null) {
                        objectAnimator.cancel();
                        this.mentiondownButtonAnimation = null;
                    }
                    if (animated) {
                        if (this.pagedownButton.getVisibility() == 0) {
                            this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.ALPHA, new float[]{1.0f, 0.0f}).setDuration(200);
                        } else {
                            this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(100.0f)}).setDuration(200);
                        }
                        this.mentiondownButtonAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animation) {
                                ChatActivity.this.mentiondownButtonCounter.setVisibility(4);
                                ChatActivity.this.mentiondownButton.setVisibility(4);
                            }
                        });
                        this.mentiondownButtonAnimation.start();
                        return;
                    }
                    this.mentiondownButton.setVisibility(4);
                }
            } else if (frameLayout.getTag() == null) {
                ObjectAnimator objectAnimator2 = this.mentiondownButtonAnimation;
                if (objectAnimator2 != null) {
                    objectAnimator2.cancel();
                    this.mentiondownButtonAnimation = null;
                }
                if (animated) {
                    this.mentiondownButton.setVisibility(0);
                    this.mentiondownButton.setTag(1);
                    if (this.pagedownButton.getVisibility() == 0) {
                        this.mentiondownButton.setTranslationY((float) (-AndroidUtilities.dp(72.0f)));
                        this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.ALPHA, new float[]{0.0f, 1.0f}).setDuration(200);
                    } else {
                        if (this.mentiondownButton.getTranslationY() == 0.0f) {
                            this.mentiondownButton.setTranslationY((float) AndroidUtilities.dp(100.0f));
                        }
                        this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{0.0f}).setDuration(200);
                    }
                    this.mentiondownButtonAnimation.start();
                    return;
                }
                this.mentiondownButton.setVisibility(0);
            }
        }
    }

    private void updateSecretStatus() {
        ChatActivityEnterView chatActivityEnterView2;
        if (this.bottomOverlay != null) {
            boolean hideKeyboard = false;
            TLRPC.Chat chat = this.currentChat;
            if (chat == null || ChatObject.canSendMessages(chat) || (ChatObject.isChannel(this.currentChat) && !this.currentChat.megagroup)) {
                TLRPC.EncryptedChat encryptedChat = this.currentEncryptedChat;
                if (encryptedChat == null || this.bigEmptyView == null) {
                    this.bottomOverlay.setVisibility(4);
                    if (!(this.stickersAdapter == null || (chatActivityEnterView2 = this.chatActivityEnterView) == null || !chatActivityEnterView2.hasText())) {
                        this.stickersAdapter.loadStikersForEmoji(this.chatActivityEnterView.getFieldText(), false);
                    }
                    ChatActivityEnterView chatActivityEnterView3 = this.chatActivityEnterView;
                    if (chatActivityEnterView3 != null) {
                        chatActivityEnterView3.updateMenuViewStatus();
                        return;
                    }
                    return;
                }
                if (encryptedChat instanceof TLRPC.TL_encryptedChatRequested) {
                    this.bottomOverlayText.setText(LocaleController.getString("EncryptionProcessing", R.string.EncryptionProcessing));
                    this.bottomOverlay.setVisibility(0);
                    hideKeyboard = true;
                } else if (encryptedChat instanceof TLRPC.TL_encryptedChatWaiting) {
                    TextView textView = this.bottomOverlayText;
                    textView.setText(AndroidUtilities.replaceTags(LocaleController.formatString("AwaitingEncryption", R.string.AwaitingEncryption, "<b>" + this.currentUser.first_name + "</b>")));
                    this.bottomOverlay.setVisibility(0);
                    hideKeyboard = true;
                } else if (encryptedChat instanceof TLRPC.TL_encryptedChatDiscarded) {
                    this.bottomOverlayText.setText(LocaleController.getString("EncryptionRejected", R.string.EncryptionRejected));
                    this.bottomOverlay.setVisibility(0);
                    this.chatActivityEnterView.setFieldText("");
                    getMediaDataController().cleanDraft(this.dialog_id, false);
                    hideKeyboard = true;
                } else if (encryptedChat instanceof TLRPC.TL_encryptedChat) {
                    this.bottomOverlay.setVisibility(4);
                }
                checkRaiseSensors();
                checkActionBarMenu();
            } else {
                if (this.currentChat.default_banned_rights != null && this.currentChat.default_banned_rights.send_messages) {
                    this.bottomOverlayText.setText(LocaleController.getString("GlobalSendMessageRestricted", R.string.GlobalSendMessageRestricted));
                } else if (AndroidUtilities.isBannedForever(this.currentChat.banned_rights)) {
                    this.bottomOverlayText.setText(LocaleController.getString("SendMessageRestrictedForever", R.string.SendMessageRestrictedForever));
                } else {
                    this.bottomOverlayText.setText(LocaleController.formatString("SendMessageRestricted", R.string.SendMessageRestricted, LocaleController.formatDateForBan((long) this.currentChat.banned_rights.until_date)));
                }
                this.bottomOverlay.setVisibility(0);
                AnimatorSet animatorSet = this.mentionListAnimation;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.mentionListAnimation = null;
                }
                this.mentionContainer.setVisibility(8);
                this.mentionContainer.setTag((Object) null);
                updateMessageListAccessibilityVisibility();
                hideKeyboard = true;
                StickersAdapter stickersAdapter2 = this.stickersAdapter;
                if (stickersAdapter2 != null) {
                    stickersAdapter2.hide();
                }
            }
            if (this.inPreviewMode) {
                this.bottomOverlay.setVisibility(4);
            }
            if (hideKeyboard) {
                this.chatActivityEnterView.hidePopup(false);
                if (getParentActivity() != null) {
                    AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
                }
            }
            ChatActivityEnterView chatActivityEnterView4 = this.chatActivityEnterView;
            if (chatActivityEnterView4 != null) {
                chatActivityEnterView4.updateMenuViewStatus();
            }
        }
    }

    public void onRequestPermissionsResultFragment(int requestCode, String[] permissions, int[] grantResults) {
        TLRPC.User user;
        ChatAttachAlert chatAttachAlert2;
        ChatAttachAlert chatAttachAlert3;
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.onRequestPermissionsResultFragment(requestCode, permissions, grantResults);
        }
        MentionsAdapter mentionsAdapter2 = this.mentionsAdapter;
        if (mentionsAdapter2 != null) {
            mentionsAdapter2.onRequestPermissionsResultFragment(requestCode, permissions, grantResults);
        }
        if (requestCode != 4 || (chatAttachAlert3 = this.chatAttachAlert) == null) {
            boolean z = false;
            if ((requestCode == 17 || requestCode == 18) && (chatAttachAlert2 = this.chatAttachAlert) != null) {
                if (grantResults.length > 0 && grantResults[0] == 0) {
                    z = true;
                }
                chatAttachAlert2.checkCamera(z);
            } else if (requestCode == 21) {
                if (getParentActivity() != null && grantResults != null && grantResults.length != 0 && grantResults[0] != 0) {
                    AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
                    builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                    builder.setMessage(LocaleController.getString("PermissionNoAudioVideo", R.string.PermissionNoAudioVideo));
                    builder.setNegativeButton(LocaleController.getString("PermissionOpenSettings", R.string.PermissionOpenSettings), new DialogInterface.OnClickListener() {
                        public final void onClick(DialogInterface dialogInterface, int i) {
                            ChatActivity.this.lambda$onRequestPermissionsResultFragment$67$ChatActivity(dialogInterface, i);
                        }
                    });
                    builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), (DialogInterface.OnClickListener) null);
                    builder.show();
                }
            } else if (requestCode == 19 && grantResults != null && grantResults.length > 0 && grantResults[0] == 0) {
                processSelectedAttach(0);
            } else if (requestCode == 20 && grantResults != null && grantResults.length > 0 && grantResults[0] == 0) {
                processSelectedAttach(2);
            } else if (requestCode == 101 && (user = this.currentUser) != null) {
                if (grantResults.length <= 0 || grantResults[0] != 0) {
                    VoIPHelper.permissionDenied(getParentActivity(), (Runnable) null);
                } else {
                    VoIPHelper.startCall(user, getParentActivity(), getMessagesController().getUserFull(this.currentUser.id));
                }
            }
        } else {
            chatAttachAlert3.checkStorage();
        }
    }

    public /* synthetic */ void lambda$onRequestPermissionsResultFragment$67$ChatActivity(DialogInterface dialog, int which) {
        try {
            Intent intent = new Intent("android.settings.APPLICATION_DETAILS_SETTINGS");
            intent.setData(Uri.parse("package:" + ApplicationLoader.applicationContext.getPackageName()));
            getParentActivity().startActivity(intent);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void checkActionBarMenu() {
        TLRPC.Chat chat;
        TLRPC.User user;
        TLRPC.EncryptedChat encryptedChat = this.currentEncryptedChat;
        if ((encryptedChat == null || (encryptedChat instanceof TLRPC.TL_encryptedChat)) && (((chat = this.currentChat) == null || !ChatObject.isNotInChat(chat)) && ((user = this.currentUser) == null || !UserObject.isDeleted(user)))) {
            View view = this.timeItem2;
            if (view != null) {
                view.setVisibility(0);
            }
        } else {
            View view2 = this.timeItem2;
            if (view2 != null) {
                view2.setVisibility(8);
            }
        }
        checkAndUpdateAvatar();
    }

    /* access modifiers changed from: private */
    public int getMessageType(MessageObject messageObject) {
        String mime;
        String mime2;
        MessageObject messageObject2 = messageObject;
        if (messageObject2 == null) {
            return -1;
        }
        if (this.currentEncryptedChat == null) {
            if (messageObject.isEditing()) {
                return -1;
            }
            if (messageObject.getId() > 0 || !messageObject.isOut()) {
                if (messageObject.isAnimatedEmoji()) {
                    return 2;
                }
                if (messageObject2.type == 6) {
                    return -1;
                }
                if (messageObject2.type == 10 || messageObject2.type == 11) {
                    if (messageObject.getId() == 0) {
                        return -1;
                    }
                    return 1;
                } else if (messageObject.isVoice()) {
                    return 2;
                } else {
                    if (messageObject.isSticker() || messageObject.isAnimatedSticker()) {
                        TLRPC.InputStickerSet inputStickerSet = messageObject.getInputStickerSet();
                        if (inputStickerSet instanceof TLRPC.TL_inputStickerSetID) {
                            if (!getMediaDataController().isStickerPackInstalled(inputStickerSet.id)) {
                                return 7;
                            }
                            return 9;
                        } else if (!(inputStickerSet instanceof TLRPC.TL_inputStickerSetShortName) || getMediaDataController().isStickerPackInstalled(inputStickerSet.short_name)) {
                            return 9;
                        } else {
                            return 7;
                        }
                    } else {
                        if (!messageObject.isRoundVideo() && ((messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaPhoto) || messageObject.getDocument() != null || messageObject.isMusic() || messageObject.isVideo())) {
                            boolean canSave = false;
                            if (!TextUtils.isEmpty(messageObject2.messageOwner.attachPath) && new File(messageObject2.messageOwner.attachPath).exists()) {
                                canSave = true;
                            }
                            if (!canSave && FileLoader.getPathToMessage(messageObject2.messageOwner).exists()) {
                                canSave = true;
                            }
                            if (canSave) {
                                if (!(messageObject.getDocument() == null || (mime2 = messageObject.getDocument().mime_type) == null)) {
                                    if (messageObject.getDocumentName().toLowerCase().endsWith("attheme")) {
                                        return 10;
                                    }
                                    if (mime2.endsWith("/xml")) {
                                        return 5;
                                    }
                                    if (mime2.endsWith("/png") || mime2.endsWith("/jpg") || mime2.endsWith("/jpeg")) {
                                        return 6;
                                    }
                                }
                                return 4;
                            }
                        } else if (messageObject2.type == 12) {
                            return 8;
                        } else {
                            if (messageObject.isMediaEmpty()) {
                                return 3;
                            }
                        }
                        return 2;
                    }
                }
            } else if (messageObject.isSendError()) {
                return !messageObject.isMediaEmpty() ? 0 : 20;
            } else {
                return -1;
            }
        } else if (messageObject.isSending()) {
            return -1;
        } else {
            if (messageObject.isAnimatedEmoji()) {
                return 2;
            }
            if (messageObject2.type == 6) {
                return -1;
            }
            if (messageObject.isSendError()) {
                return !messageObject.isMediaEmpty() ? 0 : 20;
            }
            if (messageObject2.type == 10 || messageObject2.type == 11) {
                if (messageObject.getId() == 0 || messageObject.isSending()) {
                    return -1;
                }
                return 1;
            } else if (messageObject.isVoice()) {
                return 2;
            } else {
                if (!messageObject.isAnimatedEmoji() && (messageObject.isSticker() || messageObject.isAnimatedSticker())) {
                    TLRPC.InputStickerSet inputStickerSet2 = messageObject.getInputStickerSet();
                    return (!(inputStickerSet2 instanceof TLRPC.TL_inputStickerSetShortName) || getMediaDataController().isStickerPackInstalled(inputStickerSet2.short_name)) ? 2 : 7;
                } else if (!messageObject.isRoundVideo() && ((messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaPhoto) || messageObject.getDocument() != null || messageObject.isMusic() || messageObject.isVideo())) {
                    boolean canSave2 = false;
                    if (!TextUtils.isEmpty(messageObject2.messageOwner.attachPath) && new File(messageObject2.messageOwner.attachPath).exists()) {
                        canSave2 = true;
                    }
                    if (!canSave2 && FileLoader.getPathToMessage(messageObject2.messageOwner).exists()) {
                        canSave2 = true;
                    }
                    if (canSave2) {
                        if (messageObject.getDocument() != null && (mime = messageObject.getDocument().mime_type) != null && mime.endsWith("text/xml")) {
                            return 5;
                        }
                        if (messageObject2.messageOwner.ttl <= 0) {
                            return 4;
                        }
                    }
                } else if (messageObject2.type == 12) {
                    return 8;
                } else {
                    if (messageObject.isMediaEmpty()) {
                        return 3;
                    }
                }
            }
        }
    }

    private void addToSelectedMessages(MessageObject messageObject, boolean outside) {
        addToSelectedMessages(messageObject, outside, true);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:292:0x0503, code lost:
        r1 = 8;
     */
    /* JADX WARNING: Removed duplicated region for block: B:303:0x0539  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void addToSelectedMessages(im.bclpbkiauv.messenger.MessageObject r31, boolean r32, boolean r33) {
        /*
            r30 = this;
            r0 = r30
            r1 = r31
            int r2 = r0.cantForwardMessagesCount
            r3 = 0
            r5 = 102(0x66, float:1.43E-43)
            r6 = 101(0x65, float:1.42E-43)
            r7 = 0
            r8 = 1
            if (r1 == 0) goto L_0x01bf
            long r9 = r31.getDialogId()
            long r11 = r0.dialog_id
            int r13 = (r9 > r11 ? 1 : (r9 == r11 ? 0 : -1))
            if (r13 != 0) goto L_0x001c
            r9 = 0
            goto L_0x001d
        L_0x001c:
            r9 = 1
        L_0x001d:
            if (r32 == 0) goto L_0x0098
            long r10 = r31.getGroupId()
            int r12 = (r10 > r3 ? 1 : (r10 == r3 ? 0 : -1))
            if (r12 == 0) goto L_0x0098
            r3 = 0
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r4 = r0.groupedMessagesMap
            long r5 = r31.getGroupId()
            java.lang.Object r4 = r4.get(r5)
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r4 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessages) r4
            if (r4 == 0) goto L_0x0097
            r5 = 0
            r6 = 0
        L_0x0038:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r10 = r4.messages
            int r10 = r10.size()
            if (r6 >= r10) goto L_0x005b
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r10 = r4.messages
            java.lang.Object r10 = r10.get(r6)
            im.bclpbkiauv.messenger.MessageObject r10 = (im.bclpbkiauv.messenger.MessageObject) r10
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r11 = r0.selectedMessagesIds
            r11 = r11[r9]
            int r12 = r10.getId()
            int r11 = r11.indexOfKey(r12)
            if (r11 >= 0) goto L_0x0058
            r3 = 1
            r5 = r6
        L_0x0058:
            int r6 = r6 + 1
            goto L_0x0038
        L_0x005b:
            r6 = 0
        L_0x005c:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r10 = r4.messages
            int r10 = r10.size()
            if (r6 >= r10) goto L_0x0097
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r10 = r4.messages
            java.lang.Object r10 = r10.get(r6)
            im.bclpbkiauv.messenger.MessageObject r10 = (im.bclpbkiauv.messenger.MessageObject) r10
            if (r3 == 0) goto L_0x0085
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r11 = r0.selectedMessagesIds
            r11 = r11[r9]
            int r12 = r10.getId()
            int r11 = r11.indexOfKey(r12)
            if (r11 >= 0) goto L_0x0094
            if (r6 != r5) goto L_0x0080
            r11 = 1
            goto L_0x0081
        L_0x0080:
            r11 = 0
        L_0x0081:
            r0.addToSelectedMessages(r10, r7, r11)
            goto L_0x0094
        L_0x0085:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r11 = r4.messages
            int r11 = r11.size()
            int r11 = r11 - r8
            if (r6 != r11) goto L_0x0090
            r11 = 1
            goto L_0x0091
        L_0x0090:
            r11 = 0
        L_0x0091:
            r0.addToSelectedMessages(r10, r7, r11)
        L_0x0094:
            int r6 = r6 + 1
            goto L_0x005c
        L_0x0097:
            return
        L_0x0098:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r10 = r0.selectedMessagesIds
            r10 = r10[r9]
            int r11 = r31.getId()
            int r10 = r10.indexOfKey(r11)
            if (r10 < 0) goto L_0x0129
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r10 = r0.selectedMessagesIds
            r10 = r10[r9]
            int r11 = r31.getId()
            r10.remove(r11)
            int r10 = r1.type
            if (r10 == 0) goto L_0x00bf
            boolean r10 = r31.isAnimatedEmoji()
            if (r10 != 0) goto L_0x00bf
            java.lang.CharSequence r10 = r1.caption
            if (r10 == 0) goto L_0x00ca
        L_0x00bf:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r10 = r0.selectedMessagesCanCopyIds
            r10 = r10[r9]
            int r11 = r31.getId()
            r10.remove(r11)
        L_0x00ca:
            boolean r10 = r31.isAnimatedEmoji()
            if (r10 != 0) goto L_0x00e7
            boolean r10 = r31.isSticker()
            if (r10 != 0) goto L_0x00dc
            boolean r10 = r31.isAnimatedSticker()
            if (r10 == 0) goto L_0x00e7
        L_0x00dc:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r10 = r0.selectedMessagesCanStarIds
            r10 = r10[r9]
            int r11 = r31.getId()
            r10.remove(r11)
        L_0x00e7:
            int r10 = r1.type
            if (r10 == r6) goto L_0x00ef
            int r10 = r1.type
            if (r10 != r5) goto L_0x00f4
        L_0x00ef:
            int r10 = r0.cantCopyMessageCount
            int r10 = r10 - r8
            r0.cantCopyMessageCount = r10
        L_0x00f4:
            im.bclpbkiauv.tgnet.TLRPC$Chat r10 = r0.currentChat
            boolean r10 = r1.canEditMessage(r10)
            if (r10 == 0) goto L_0x0101
            int r10 = r0.canEditMessagesCount
            int r10 = r10 - r8
            r0.canEditMessagesCount = r10
        L_0x0101:
            boolean r10 = r0.inScheduleMode
            im.bclpbkiauv.tgnet.TLRPC$Chat r11 = r0.currentChat
            boolean r10 = r1.canDeleteMessage(r10, r11)
            if (r10 != 0) goto L_0x0110
            int r10 = r0.cantDeleteMessagesCount
            int r10 = r10 - r8
            r0.cantDeleteMessagesCount = r10
        L_0x0110:
            boolean r10 = r0.inScheduleMode
            if (r10 != 0) goto L_0x0122
            boolean r10 = r31.canForwardMessage()
            if (r10 != 0) goto L_0x011b
            goto L_0x0122
        L_0x011b:
            int r10 = r0.canForwardMessagesCount
            int r10 = r10 - r8
            r0.canForwardMessagesCount = r10
            goto L_0x01bf
        L_0x0122:
            int r10 = r0.cantForwardMessagesCount
            int r10 = r10 - r8
            r0.cantForwardMessagesCount = r10
            goto L_0x01bf
        L_0x0129:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r10 = r0.selectedMessagesIds
            r10 = r10[r7]
            int r10 = r10.size()
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r11 = r0.selectedMessagesIds
            r11 = r11[r8]
            int r11 = r11.size()
            int r10 = r10 + r11
            r11 = 100
            if (r10 < r11) goto L_0x013f
            return
        L_0x013f:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r10 = r0.selectedMessagesIds
            r10 = r10[r9]
            int r11 = r31.getId()
            r10.put(r11, r1)
            int r10 = r1.type
            if (r10 == 0) goto L_0x0158
            boolean r10 = r31.isAnimatedEmoji()
            if (r10 != 0) goto L_0x0158
            java.lang.CharSequence r10 = r1.caption
            if (r10 == 0) goto L_0x0163
        L_0x0158:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r10 = r0.selectedMessagesCanCopyIds
            r10 = r10[r9]
            int r11 = r31.getId()
            r10.put(r11, r1)
        L_0x0163:
            boolean r10 = r31.isAnimatedEmoji()
            if (r10 != 0) goto L_0x0180
            boolean r10 = r31.isSticker()
            if (r10 != 0) goto L_0x0175
            boolean r10 = r31.isAnimatedSticker()
            if (r10 == 0) goto L_0x0180
        L_0x0175:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r10 = r0.selectedMessagesCanStarIds
            r10 = r10[r9]
            int r11 = r31.getId()
            r10.put(r11, r1)
        L_0x0180:
            int r10 = r1.type
            if (r10 == r6) goto L_0x0188
            int r10 = r1.type
            if (r10 != r5) goto L_0x018d
        L_0x0188:
            int r10 = r0.cantCopyMessageCount
            int r10 = r10 + r8
            r0.cantCopyMessageCount = r10
        L_0x018d:
            im.bclpbkiauv.tgnet.TLRPC$Chat r10 = r0.currentChat
            boolean r10 = r1.canEditMessage(r10)
            if (r10 == 0) goto L_0x019a
            int r10 = r0.canEditMessagesCount
            int r10 = r10 + r8
            r0.canEditMessagesCount = r10
        L_0x019a:
            boolean r10 = r0.inScheduleMode
            im.bclpbkiauv.tgnet.TLRPC$Chat r11 = r0.currentChat
            boolean r10 = r1.canDeleteMessage(r10, r11)
            if (r10 != 0) goto L_0x01a9
            int r10 = r0.cantDeleteMessagesCount
            int r10 = r10 + r8
            r0.cantDeleteMessagesCount = r10
        L_0x01a9:
            boolean r10 = r0.inScheduleMode
            if (r10 != 0) goto L_0x01ba
            boolean r10 = r31.canForwardMessage()
            if (r10 != 0) goto L_0x01b4
            goto L_0x01ba
        L_0x01b4:
            int r10 = r0.canForwardMessagesCount
            int r10 = r10 + r8
            r0.canForwardMessagesCount = r10
            goto L_0x01bf
        L_0x01ba:
            int r10 = r0.cantForwardMessagesCount
            int r10 = r10 + r8
            r0.cantForwardMessagesCount = r10
        L_0x01bf:
            android.animation.AnimatorSet r9 = r0.forwardButtonAnimation
            if (r9 == 0) goto L_0x01c9
            r9.cancel()
            r9 = 0
            r0.forwardButtonAnimation = r9
        L_0x01c9:
            if (r33 == 0) goto L_0x0663
            im.bclpbkiauv.ui.actionbar.ActionBar r9 = r0.actionBar
            boolean r9 = r9.isActionModeShowed()
            if (r9 == 0) goto L_0x0663
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r9 = r0.selectedMessagesIds
            r9 = r9[r7]
            int r9 = r9.size()
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r10 = r0.selectedMessagesIds
            r10 = r10[r8]
            int r10 = r10.size()
            int r9 = r9 + r10
            if (r9 != 0) goto L_0x01f0
            r30.hideActionMode()
            r0.updatePinnedMessageView(r8)
            r21 = r2
            goto L_0x0665
        L_0x01f0:
            im.bclpbkiauv.ui.actionbar.ActionBar r10 = r0.actionBar
            im.bclpbkiauv.ui.actionbar.ActionBarMenu r10 = r10.createActionMode()
            r11 = 10
            im.bclpbkiauv.ui.actionbar.ActionBarMenuItem r10 = r10.getItem(r11)
            im.bclpbkiauv.ui.actionbar.ActionBar r11 = r0.actionBar
            im.bclpbkiauv.ui.actionbar.ActionBarMenu r11 = r11.createActionMode()
            r12 = 22
            im.bclpbkiauv.ui.actionbar.ActionBarMenuItem r11 = r11.getItem(r12)
            im.bclpbkiauv.ui.actionbar.ActionBar r12 = r0.actionBar
            im.bclpbkiauv.ui.actionbar.ActionBarMenu r12 = r12.createActionMode()
            r13 = 23
            im.bclpbkiauv.ui.actionbar.ActionBarMenuItem r12 = r12.getItem(r13)
            im.bclpbkiauv.ui.actionbar.ActionBar r13 = r0.actionBar
            im.bclpbkiauv.ui.actionbar.ActionBarMenu r13 = r13.createActionMode()
            r14 = 11
            im.bclpbkiauv.ui.actionbar.ActionBarMenuItem r13 = r13.getItem(r14)
            r14 = 1
            im.bclpbkiauv.tgnet.TLRPC$Chat r15 = r0.currentChat
            if (r15 == 0) goto L_0x023c
            boolean r15 = r15.megagroup
            if (r15 == 0) goto L_0x023c
            im.bclpbkiauv.tgnet.TLRPC$Chat r15 = r0.currentChat
            int r15 = r15.flags
            r16 = 33554432(0x2000000, float:9.403955E-38)
            r15 = r15 & r16
            if (r15 == 0) goto L_0x023c
            im.bclpbkiauv.tgnet.TLRPC$Chat r15 = r0.currentChat
            boolean r15 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r15)
            if (r15 != 0) goto L_0x023c
            r14 = 0
        L_0x023c:
            r17 = 1056964608(0x3f000000, float:0.5)
            if (r2 != 0) goto L_0x0244
            int r15 = r0.cantForwardMessagesCount
            if (r15 != 0) goto L_0x024a
        L_0x0244:
            if (r2 == 0) goto L_0x02bf
            int r15 = r0.cantForwardMessagesCount
            if (r15 != 0) goto L_0x02bf
        L_0x024a:
            android.animation.AnimatorSet r15 = new android.animation.AnimatorSet
            r15.<init>()
            r0.forwardButtonAnimation = r15
            java.util.ArrayList r15 = new java.util.ArrayList
            r15.<init>()
            if (r13 == 0) goto L_0x027c
            int r5 = r0.cantForwardMessagesCount
            if (r5 != 0) goto L_0x0260
            if (r14 == 0) goto L_0x0260
            r5 = 1
            goto L_0x0261
        L_0x0260:
            r5 = 0
        L_0x0261:
            r13.setEnabled(r5)
            android.util.Property r5 = android.view.View.ALPHA
            float[] r6 = new float[r8]
            int r3 = r0.cantForwardMessagesCount
            if (r3 != 0) goto L_0x0271
            if (r14 == 0) goto L_0x0271
            r3 = 1065353216(0x3f800000, float:1.0)
            goto L_0x0273
        L_0x0271:
            r3 = 1056964608(0x3f000000, float:0.5)
        L_0x0273:
            r6[r7] = r3
            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r13, r5, r6)
            r15.add(r3)
        L_0x027c:
            android.widget.TextView r3 = r0.forwardButton
            if (r3 == 0) goto L_0x02a3
            int r4 = r0.cantForwardMessagesCount
            if (r4 != 0) goto L_0x0288
            if (r14 == 0) goto L_0x0288
            r4 = 1
            goto L_0x0289
        L_0x0288:
            r4 = 0
        L_0x0289:
            r3.setEnabled(r4)
            android.widget.TextView r3 = r0.forwardButton
            android.util.Property r4 = android.view.View.ALPHA
            float[] r5 = new float[r8]
            int r6 = r0.cantForwardMessagesCount
            if (r6 != 0) goto L_0x029a
            if (r14 == 0) goto L_0x029a
            r17 = 1065353216(0x3f800000, float:1.0)
        L_0x029a:
            r5[r7] = r17
            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r4, r5)
            r15.add(r3)
        L_0x02a3:
            android.animation.AnimatorSet r3 = r0.forwardButtonAnimation
            r3.playTogether(r15)
            android.animation.AnimatorSet r3 = r0.forwardButtonAnimation
            r4 = 100
            r3.setDuration(r4)
            android.animation.AnimatorSet r3 = r0.forwardButtonAnimation
            im.bclpbkiauv.ui.ChatActivity$55 r4 = new im.bclpbkiauv.ui.ChatActivity$55
            r4.<init>()
            r3.addListener(r4)
            android.animation.AnimatorSet r3 = r0.forwardButtonAnimation
            r3.start()
            goto L_0x030f
        L_0x02bf:
            if (r13 == 0) goto L_0x02db
            int r3 = r0.cantForwardMessagesCount
            if (r3 != 0) goto L_0x02c9
            if (r14 == 0) goto L_0x02c9
            r3 = 1
            goto L_0x02ca
        L_0x02c9:
            r3 = 0
        L_0x02ca:
            r13.setEnabled(r3)
            int r3 = r0.cantForwardMessagesCount
            if (r3 != 0) goto L_0x02d6
            if (r14 == 0) goto L_0x02d6
            r3 = 1065353216(0x3f800000, float:1.0)
            goto L_0x02d8
        L_0x02d6:
            r3 = 1056964608(0x3f000000, float:0.5)
        L_0x02d8:
            r13.setAlpha(r3)
        L_0x02db:
            android.widget.TextView r3 = r0.forwardButton
            if (r3 == 0) goto L_0x030f
            r3.setVisibility(r7)
            android.widget.TextView r3 = r0.forwardButton
            int r4 = r0.cantForwardMessagesCount
            if (r4 != 0) goto L_0x02ec
            if (r14 == 0) goto L_0x02ec
            r4 = 1
            goto L_0x02ed
        L_0x02ec:
            r4 = 0
        L_0x02ed:
            r3.setEnabled(r4)
            android.widget.TextView r3 = r0.forwardButton
            int r4 = r0.cantForwardMessagesCount
            if (r4 != 0) goto L_0x02fb
            if (r14 == 0) goto L_0x02fb
            r4 = 1065353216(0x3f800000, float:1.0)
            goto L_0x02fd
        L_0x02fb:
            r4 = 1056964608(0x3f000000, float:0.5)
        L_0x02fd:
            r3.setAlpha(r4)
            if (r1 == 0) goto L_0x030f
            int r3 = r1.type
            r4 = 207(0xcf, float:2.9E-43)
            if (r3 != r4) goto L_0x030f
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r3 = r0.selectedMessagesIds
            r3 = r3[r7]
            r3.size()
        L_0x030f:
            int r3 = r10.getVisibility()
            int r4 = r11.getVisibility()
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r5 = r0.currentEncryptedChat
            if (r5 != 0) goto L_0x0334
            int r5 = r0.cantCopyMessageCount
            if (r5 != 0) goto L_0x0334
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r5 = r0.selectedMessagesCanCopyIds
            r5 = r5[r7]
            int r5 = r5.size()
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r15 = r0.selectedMessagesCanCopyIds
            r15 = r15[r8]
            int r15 = r15.size()
            int r5 = r5 + r15
            if (r5 == 0) goto L_0x0334
            r5 = 0
            goto L_0x0336
        L_0x0334:
            r5 = 8
        L_0x0336:
            r10.setVisibility(r5)
            im.bclpbkiauv.messenger.MediaDataController r5 = r30.getMediaDataController()
            boolean r5 = r5.canAddStickerToFavorites()
            if (r5 == 0) goto L_0x0358
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r5 = r0.selectedMessagesCanStarIds
            r5 = r5[r7]
            int r5 = r5.size()
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r15 = r0.selectedMessagesCanStarIds
            r15 = r15[r8]
            int r15 = r15.size()
            int r5 = r5 + r15
            if (r5 != r9) goto L_0x0358
            r5 = 0
            goto L_0x035a
        L_0x0358:
            r5 = 8
        L_0x035a:
            r11.setVisibility(r5)
            int r5 = r10.getVisibility()
            int r15 = r11.getVisibility()
            im.bclpbkiauv.ui.actionbar.ActionBar r6 = r0.actionBar
            im.bclpbkiauv.ui.actionbar.ActionBarMenu r6 = r6.createActionMode()
            r8 = 12
            im.bclpbkiauv.ui.actionbar.ActionBarMenuItem r6 = r6.getItem(r8)
            int r8 = r0.cantDeleteMessagesCount
            if (r8 != 0) goto L_0x0377
            r8 = 0
            goto L_0x0379
        L_0x0377:
            r8 = 8
        L_0x0379:
            r6.setVisibility(r8)
            r0.hasUnfavedSelected = r7
            r6 = 0
        L_0x037f:
            r8 = 2
            if (r6 >= r8) goto L_0x03c9
            r20 = 0
            r8 = r20
        L_0x0386:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r7 = r0.selectedMessagesCanStarIds
            r7 = r7[r6]
            int r7 = r7.size()
            if (r8 >= r7) goto L_0x03b8
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r7 = r0.selectedMessagesCanStarIds
            r7 = r7[r6]
            java.lang.Object r7 = r7.valueAt(r8)
            im.bclpbkiauv.messenger.MessageObject r7 = (im.bclpbkiauv.messenger.MessageObject) r7
            r21 = r2
            im.bclpbkiauv.messenger.MediaDataController r2 = r30.getMediaDataController()
            r22 = r10
            im.bclpbkiauv.tgnet.TLRPC$Document r10 = r7.getDocument()
            boolean r2 = r2.isStickerInFavorites(r10)
            if (r2 != 0) goto L_0x03b0
            r2 = 1
            r0.hasUnfavedSelected = r2
            goto L_0x03bc
        L_0x03b0:
            int r8 = r8 + 1
            r2 = r21
            r10 = r22
            r7 = 0
            goto L_0x0386
        L_0x03b8:
            r21 = r2
            r22 = r10
        L_0x03bc:
            boolean r2 = r0.hasUnfavedSelected
            if (r2 == 0) goto L_0x03c1
            goto L_0x03cd
        L_0x03c1:
            int r6 = r6 + 1
            r2 = r21
            r10 = r22
            r7 = 0
            goto L_0x037f
        L_0x03c9:
            r21 = r2
            r22 = r10
        L_0x03cd:
            boolean r2 = r0.hasUnfavedSelected
            if (r2 == 0) goto L_0x03d5
            r2 = 2131231305(0x7f080249, float:1.8078687E38)
            goto L_0x03d8
        L_0x03d5:
            r2 = 2131231350(0x7f080276, float:1.8078779E38)
        L_0x03d8:
            r11.setIcon((int) r2)
            int r2 = r0.canEditMessagesCount
            r6 = 1
            if (r2 != r6) goto L_0x03e4
            if (r9 != r6) goto L_0x03e4
            r2 = 0
            goto L_0x03e6
        L_0x03e4:
            r2 = 8
        L_0x03e6:
            android.widget.TextView r6 = r0.replyButton
            if (r6 == 0) goto L_0x05b7
            r6 = 1
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r8 = r0.currentEncryptedChat
            if (r8 == 0) goto L_0x03f9
            int r8 = r8.layer
            int r8 = im.bclpbkiauv.messenger.AndroidUtilities.getPeerLayerVersion(r8)
            r10 = 46
            if (r8 < r10) goto L_0x042b
        L_0x03f9:
            android.widget.FrameLayout r8 = r0.bottomOverlayChat
            if (r8 == 0) goto L_0x0403
            int r8 = r8.getVisibility()
            if (r8 == 0) goto L_0x042b
        L_0x0403:
            im.bclpbkiauv.tgnet.TLRPC$Chat r8 = r0.currentChat
            if (r8 == 0) goto L_0x042c
            boolean r8 = im.bclpbkiauv.messenger.ChatObject.isNotInChat(r8)
            if (r8 != 0) goto L_0x042b
            im.bclpbkiauv.tgnet.TLRPC$Chat r8 = r0.currentChat
            boolean r8 = im.bclpbkiauv.messenger.ChatObject.isChannel(r8)
            if (r8 == 0) goto L_0x0423
            im.bclpbkiauv.tgnet.TLRPC$Chat r8 = r0.currentChat
            boolean r8 = im.bclpbkiauv.messenger.ChatObject.canPost(r8)
            if (r8 != 0) goto L_0x0423
            im.bclpbkiauv.tgnet.TLRPC$Chat r8 = r0.currentChat
            boolean r8 = r8.megagroup
            if (r8 == 0) goto L_0x042b
        L_0x0423:
            im.bclpbkiauv.tgnet.TLRPC$Chat r8 = r0.currentChat
            boolean r8 = im.bclpbkiauv.messenger.ChatObject.canSendMessages(r8)
            if (r8 != 0) goto L_0x042c
        L_0x042b:
            r6 = 0
        L_0x042c:
            boolean r8 = r0.inScheduleMode
            if (r8 != 0) goto L_0x0529
            if (r6 == 0) goto L_0x0529
            if (r9 == 0) goto L_0x0529
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r8 = r0.selectedMessagesIds
            r10 = 0
            r8 = r8[r10]
            int r8 = r8.size()
            if (r8 == 0) goto L_0x0452
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r8 = r0.selectedMessagesIds
            r10 = 1
            r8 = r8[r10]
            int r8 = r8.size()
            if (r8 == 0) goto L_0x0453
            r23 = r6
            r26 = r9
            r27 = r11
            goto L_0x052f
        L_0x0452:
            r10 = 1
        L_0x0453:
            if (r9 != r10) goto L_0x04a8
            if (r1 == 0) goto L_0x04a8
            r8 = 0
            r10 = 0
        L_0x0459:
            r7 = 2
            if (r10 >= r7) goto L_0x049e
            r7 = 0
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r1 = r0.selectedMessagesIds
            r1 = r1[r10]
            int r1 = r1.size()
        L_0x0465:
            if (r7 >= r1) goto L_0x0491
            r17 = r1
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r1 = r0.selectedMessagesIds
            r1 = r1[r10]
            java.lang.Object r1 = r1.valueAt(r7)
            im.bclpbkiauv.messenger.MessageObject r1 = (im.bclpbkiauv.messenger.MessageObject) r1
            r23 = r6
            int r6 = r1.type
            r18 = r8
            r8 = 101(0x65, float:1.42E-43)
            if (r6 == r8) goto L_0x048d
            int r6 = r1.type
            r8 = 102(0x66, float:1.43E-43)
            if (r6 != r8) goto L_0x0484
            goto L_0x048d
        L_0x0484:
            int r7 = r7 + 1
            r1 = r17
            r8 = r18
            r6 = r23
            goto L_0x0465
        L_0x048d:
            r6 = 8
            r8 = r6
            goto L_0x0497
        L_0x0491:
            r17 = r1
            r23 = r6
            r18 = r8
        L_0x0497:
            int r10 = r10 + 1
            r1 = r31
            r6 = r23
            goto L_0x0459
        L_0x049e:
            r23 = r6
            r18 = r8
            r26 = r9
            r27 = r11
            goto L_0x0531
        L_0x04a8:
            r23 = r6
            r1 = 0
            r6 = 0
            r8 = 0
        L_0x04ae:
            r10 = 2
            if (r8 >= r10) goto L_0x0520
            r10 = 0
            r24 = r1
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r1 = r0.selectedMessagesIds
            r1 = r1[r8]
            int r1 = r1.size()
        L_0x04bc:
            if (r10 >= r1) goto L_0x0507
            r25 = r1
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r1 = r0.selectedMessagesIds
            r1 = r1[r8]
            java.lang.Object r1 = r1.valueAt(r10)
            im.bclpbkiauv.messenger.MessageObject r1 = (im.bclpbkiauv.messenger.MessageObject) r1
            r26 = r9
            int r9 = r1.type
            r27 = r11
            r11 = 101(0x65, float:1.42E-43)
            if (r9 == r11) goto L_0x04ff
            int r9 = r1.type
            r11 = 102(0x66, float:1.43E-43)
            if (r9 != r11) goto L_0x04dd
            r18 = 0
            goto L_0x0503
        L_0x04dd:
            long r28 = r1.getGroupId()
            r18 = 0
            int r9 = (r28 > r18 ? 1 : (r28 == r18 ? 0 : -1))
            if (r9 == 0) goto L_0x04fb
            int r9 = (r6 > r18 ? 1 : (r6 == r18 ? 0 : -1))
            if (r9 == 0) goto L_0x04f0
            int r9 = (r6 > r28 ? 1 : (r6 == r28 ? 0 : -1))
            if (r9 == 0) goto L_0x04f0
            goto L_0x04fb
        L_0x04f0:
            r6 = r28
            int r10 = r10 + 1
            r1 = r25
            r9 = r26
            r11 = r27
            goto L_0x04bc
        L_0x04fb:
            r9 = 8
            r1 = r9
            goto L_0x0513
        L_0x04ff:
            r11 = 102(0x66, float:1.43E-43)
            r18 = 0
        L_0x0503:
            r9 = 8
            r1 = r9
            goto L_0x0513
        L_0x0507:
            r25 = r1
            r26 = r9
            r27 = r11
            r11 = 102(0x66, float:1.43E-43)
            r18 = 0
            r1 = r24
        L_0x0513:
            r9 = 8
            if (r1 != r9) goto L_0x0519
            r8 = r1
            goto L_0x0531
        L_0x0519:
            int r8 = r8 + 1
            r9 = r26
            r11 = r27
            goto L_0x04ae
        L_0x0520:
            r24 = r1
            r26 = r9
            r27 = r11
            r8 = r24
            goto L_0x0531
        L_0x0529:
            r23 = r6
            r26 = r9
            r27 = r11
        L_0x052f:
            r8 = 8
        L_0x0531:
            android.widget.TextView r1 = r0.replyButton
            int r1 = r1.getVisibility()
            if (r1 == r8) goto L_0x05bb
            android.animation.AnimatorSet r1 = r0.replyButtonAnimation
            if (r1 == 0) goto L_0x0540
            r1.cancel()
        L_0x0540:
            android.animation.AnimatorSet r1 = new android.animation.AnimatorSet
            r1.<init>()
            r0.replyButtonAnimation = r1
            if (r8 != 0) goto L_0x0578
            android.widget.TextView r1 = r0.replyButton
            r1.setVisibility(r8)
            android.animation.AnimatorSet r1 = r0.replyButtonAnimation
            r6 = 2
            android.animation.Animator[] r7 = new android.animation.Animator[r6]
            android.widget.TextView r6 = r0.replyButton
            android.util.Property r9 = android.view.View.ALPHA
            r10 = 1
            float[] r11 = new float[r10]
            r16 = 1065353216(0x3f800000, float:1.0)
            r17 = 0
            r11[r17] = r16
            android.animation.ObjectAnimator r6 = android.animation.ObjectAnimator.ofFloat(r6, r9, r11)
            r7[r17] = r6
            android.widget.TextView r6 = r0.replyButton
            android.util.Property r9 = android.view.View.SCALE_Y
            float[] r11 = new float[r10]
            r11[r17] = r16
            android.animation.ObjectAnimator r6 = android.animation.ObjectAnimator.ofFloat(r6, r9, r11)
            r7[r10] = r6
            r1.playTogether(r7)
            goto L_0x059f
        L_0x0578:
            r10 = 1
            r17 = 0
            r6 = 2
            android.animation.Animator[] r7 = new android.animation.Animator[r6]
            android.widget.TextView r6 = r0.replyButton
            android.util.Property r9 = android.view.View.ALPHA
            float[] r11 = new float[r10]
            r18 = 0
            r11[r17] = r18
            android.animation.ObjectAnimator r6 = android.animation.ObjectAnimator.ofFloat(r6, r9, r11)
            r7[r17] = r6
            android.widget.TextView r6 = r0.replyButton
            android.util.Property r9 = android.view.View.SCALE_Y
            float[] r11 = new float[r10]
            r11[r17] = r18
            android.animation.ObjectAnimator r6 = android.animation.ObjectAnimator.ofFloat(r6, r9, r11)
            r7[r10] = r6
            r1.playTogether(r7)
        L_0x059f:
            android.animation.AnimatorSet r1 = r0.replyButtonAnimation
            r6 = 100
            r1.setDuration(r6)
            r1 = r8
            android.animation.AnimatorSet r6 = r0.replyButtonAnimation
            im.bclpbkiauv.ui.ChatActivity$56 r7 = new im.bclpbkiauv.ui.ChatActivity$56
            r7.<init>(r1)
            r6.addListener(r7)
            android.animation.AnimatorSet r6 = r0.replyButtonAnimation
            r6.start()
            goto L_0x05bb
        L_0x05b7:
            r26 = r9
            r27 = r11
        L_0x05bb:
            if (r12 == 0) goto L_0x0665
            if (r3 != r5) goto L_0x064d
            if (r4 == r15) goto L_0x05c3
            goto L_0x064d
        L_0x05c3:
            int r1 = r12.getVisibility()
            if (r1 == r2) goto L_0x0665
            android.animation.AnimatorSet r1 = r0.editButtonAnimation
            if (r1 == 0) goto L_0x05d0
            r1.cancel()
        L_0x05d0:
            android.animation.AnimatorSet r1 = new android.animation.AnimatorSet
            r1.<init>()
            r0.editButtonAnimation = r1
            r1 = 1113063424(0x42580000, float:54.0)
            int r6 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r1)
            float r6 = (float) r6
            r12.setPivotX(r6)
            int r1 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r1)
            float r1 = (float) r1
            r12.setPivotX(r1)
            if (r2 != 0) goto L_0x0613
            r12.setVisibility(r2)
            android.animation.AnimatorSet r1 = r0.editButtonAnimation
            r6 = 2
            android.animation.Animator[] r6 = new android.animation.Animator[r6]
            android.util.Property r7 = android.view.View.ALPHA
            r8 = 1
            float[] r9 = new float[r8]
            r10 = 1065353216(0x3f800000, float:1.0)
            r11 = 0
            r9[r11] = r10
            android.animation.ObjectAnimator r7 = android.animation.ObjectAnimator.ofFloat(r12, r7, r9)
            r6[r11] = r7
            android.util.Property r7 = android.view.View.SCALE_X
            float[] r9 = new float[r8]
            r9[r11] = r10
            android.animation.ObjectAnimator r7 = android.animation.ObjectAnimator.ofFloat(r12, r7, r9)
            r6[r8] = r7
            r1.playTogether(r6)
            goto L_0x0636
        L_0x0613:
            r8 = 1
            r11 = 0
            android.animation.AnimatorSet r1 = r0.editButtonAnimation
            r6 = 2
            android.animation.Animator[] r6 = new android.animation.Animator[r6]
            android.util.Property r7 = android.view.View.ALPHA
            float[] r9 = new float[r8]
            r10 = 0
            r9[r11] = r10
            android.animation.ObjectAnimator r7 = android.animation.ObjectAnimator.ofFloat(r12, r7, r9)
            r6[r11] = r7
            android.util.Property r7 = android.view.View.SCALE_X
            float[] r9 = new float[r8]
            r9[r11] = r10
            android.animation.ObjectAnimator r7 = android.animation.ObjectAnimator.ofFloat(r12, r7, r9)
            r6[r8] = r7
            r1.playTogether(r6)
        L_0x0636:
            android.animation.AnimatorSet r1 = r0.editButtonAnimation
            r6 = 100
            r1.setDuration(r6)
            android.animation.AnimatorSet r1 = r0.editButtonAnimation
            im.bclpbkiauv.ui.ChatActivity$57 r6 = new im.bclpbkiauv.ui.ChatActivity$57
            r6.<init>(r2, r12)
            r1.addListener(r6)
            android.animation.AnimatorSet r1 = r0.editButtonAnimation
            r1.start()
            goto L_0x0665
        L_0x064d:
            if (r2 != 0) goto L_0x0658
            r1 = 1065353216(0x3f800000, float:1.0)
            r12.setAlpha(r1)
            r12.setScaleX(r1)
            goto L_0x065f
        L_0x0658:
            r1 = 0
            r12.setAlpha(r1)
            r12.setScaleX(r1)
        L_0x065f:
            r12.setVisibility(r2)
            goto L_0x0665
        L_0x0663:
            r21 = r2
        L_0x0665:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.addToSelectedMessages(im.bclpbkiauv.messenger.MessageObject, boolean, boolean):void");
    }

    /* access modifiers changed from: private */
    public void processRowSelect(View view, boolean outside, float touchX, float touchY) {
        MessageObject message = null;
        if (view instanceof ChatMessageCell) {
            message = ((ChatMessageCell) view).getMessageObject();
        } else if (view instanceof ChatActionCell) {
            message = ((ChatActionCell) view).getMessageObject();
        }
        int type = getMessageType(message);
        if (type >= 2 && type != 20) {
            addToSelectedMessages(message, outside);
            updateActionModeTitle();
            updateVisibleRows();
        }
    }

    private void updateActionModeTitle() {
        if (this.actionBar.isActionModeShowed()) {
            if (this.selectedMessagesIds[0].size() != 0 || this.selectedMessagesIds[1].size() != 0) {
                this.selectedMessagesCountTextView.setNumber(this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size(), true);
            }
        }
    }

    @Deprecated
    private void updateTitle() {
    }

    private void updateBotButtons() {
        TLRPC.User user;
        if (this.headerItem != null && (user = this.currentUser) != null && this.currentEncryptedChat == null && user.bot) {
            boolean hasHelp = false;
            boolean hasSettings = false;
            if (this.botInfo.size() != 0) {
                for (int b = 0; b < this.botInfo.size(); b++) {
                    TLRPC.BotInfo info = this.botInfo.valueAt(b);
                    for (int a = 0; a < info.commands.size(); a++) {
                        TLRPC.TL_botCommand command = info.commands.get(a);
                        if (command.command.toLowerCase().equals("help")) {
                            hasHelp = true;
                        } else if (command.command.toLowerCase().equals("settings")) {
                            hasSettings = true;
                        }
                        if (hasSettings && hasHelp) {
                            break;
                        }
                    }
                }
            }
            if (hasHelp) {
                this.headerItem.showSubItem(30);
            } else {
                this.headerItem.hideSubItem(30);
            }
            if (hasSettings) {
                this.headerItem.showSubItem(31);
            } else {
                this.headerItem.hideSubItem(31);
            }
        }
    }

    private void updateTitleIcons() {
        if (!this.inScheduleMode) {
            boolean dialogMuted = getMessagesController().isDialogMuted(this.dialog_id);
            Drawable rightIcon = getMessagesController().isDialogMuted(this.dialog_id) ? Theme.chat_muteIconDrawable : null;
            Drawable encryptedIcon = null;
            if (this.currentEncryptedChat != null) {
                encryptedIcon = Theme.getThemedDrawable((Context) getParentActivity(), (int) R.drawable.ic_lock_header, Theme.key_actionBarDefaultTitle);
            }
            if (!isSysNotifyMessage().booleanValue()) {
                this.actionBarHelper.setTitleIcons(encryptedIcon, rightIcon);
                ChatActionBarMenuSubItem chatActionBarMenuSubItem = this.muteItem;
                if (chatActionBarMenuSubItem == null) {
                    return;
                }
                if (rightIcon != null) {
                    chatActionBarMenuSubItem.setTextAndIcon(LocaleController.getString("UnmuteNotifications", R.string.UnmuteNotifications), R.drawable.msg_unmute);
                } else {
                    chatActionBarMenuSubItem.setTextAndIcon(LocaleController.getString("MuteNotifications", R.string.MuteNotifications), R.drawable.msg_mute);
                }
            } else if (this.headerItem instanceof ActionBarMenuItem) {
                ActionBarMenuItem headerItem2 = this.headerItem;
                if (dialogMuted) {
                    headerItem2.setIcon((int) R.mipmap.iv_chat_sys_notify_msg_mute);
                } else {
                    headerItem2.setIcon((int) R.mipmap.iv_chat_sys_notify_msg_unmute);
                }
            }
        }
    }

    private void checkAndUpdateAvatar() {
        TLRPC.Chat chat;
        if (this.currentUser != null) {
            TLRPC.User user = getMessagesController().getUser(Integer.valueOf(this.currentUser.id));
            if (user != null) {
                this.currentUser = user;
            }
        } else if (this.currentChat != null && (chat = getMessagesController().getChat(Integer.valueOf(this.currentChat.id))) != null) {
            this.currentChat = chat;
        }
    }

    public void openVideoEditor(String videoPath, String caption) {
        String str = caption;
        if (getParentActivity() != null) {
            final Bitmap thumb = ThumbnailUtils.createVideoThumbnail(videoPath, 1);
            PhotoViewer.getInstance().setParentActivity(getParentActivity());
            final ArrayList<Object> cameraPhoto = new ArrayList<>();
            MediaController.PhotoEntry entry = new MediaController.PhotoEntry(0, 0, 0, videoPath, 0, true);
            entry.caption = str;
            cameraPhoto.add(entry);
            ArrayList<Object> arrayList = cameraPhoto;
            Bitmap bitmap = thumb;
            PhotoViewer.getInstance().openPhotoForSelect(cameraPhoto, 0, 2, new PhotoViewer.EmptyPhotoViewerProvider() {
                public ImageReceiver.BitmapHolder getThumbForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
                    return new ImageReceiver.BitmapHolder(thumb, (String) null);
                }

                public void sendButtonPressed(int index, VideoEditedInfo videoEditedInfo, boolean notify, int scheduleDate) {
                    ChatActivity.this.sendMedia((MediaController.PhotoEntry) cameraPhoto.get(0), videoEditedInfo, notify, scheduleDate);
                }

                public boolean canScrollAway() {
                    return false;
                }
            }, this);
            return;
        }
        fillEditingMediaWithCaption(str, (ArrayList<TLRPC.MessageEntity>) null);
        SendMessagesHelper.prepareSendingVideo(getAccountInstance(), videoPath, 0, 0, 0, 0, (VideoEditedInfo) null, this.dialog_id, this.replyingMessageObject, (CharSequence) null, (ArrayList<TLRPC.MessageEntity>) null, 0, this.editingMessageObject, true, 0);
        afterMessageSend();
    }

    private void showAttachmentError() {
        if (getParentActivity() != null) {
            ToastUtils.show((int) R.string.UnsupportedAttachment);
        }
    }

    /* access modifiers changed from: private */
    public void fillEditingMediaWithCaption(CharSequence caption, ArrayList<TLRPC.MessageEntity> entities) {
        if (this.editingMessageObject != null) {
            if (!TextUtils.isEmpty(caption)) {
                this.editingMessageObject.editingMessage = caption;
                this.editingMessageObject.editingMessageEntities = entities;
                return;
            }
            ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
            if (chatActivityEnterView2 != null) {
                this.editingMessageObject.editingMessage = chatActivityEnterView2.getFieldText();
                if (this.editingMessageObject.editingMessage == null && !TextUtils.isEmpty(this.editingMessageObject.messageOwner.message)) {
                    this.editingMessageObject.editingMessage = "";
                }
            }
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:16:0x0044  */
    /* JADX WARNING: Removed duplicated region for block: B:18:0x0050  */
    /* JADX WARNING: Removed duplicated region for block: B:20:0x0054  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void sendUriAsDocument(android.net.Uri r21) {
        /*
            r20 = this;
            r1 = r20
            if (r21 != 0) goto L_0x0005
            return
        L_0x0005:
            java.lang.String r2 = r21.toString()
            java.lang.String r0 = "com.google.android.apps.photos.contentprovider"
            boolean r0 = r2.contains(r0)
            r3 = 0
            if (r0 == 0) goto L_0x003b
            java.lang.String r0 = "/1/"
            java.lang.String[] r0 = r2.split(r0)     // Catch:{ Exception -> 0x0037 }
            r4 = 1
            r0 = r0[r4]     // Catch:{ Exception -> 0x0037 }
            java.lang.String r4 = "/ACTUAL"
            int r4 = r0.indexOf(r4)     // Catch:{ Exception -> 0x0037 }
            r5 = -1
            if (r4 == r5) goto L_0x0034
            java.lang.String r5 = r0.substring(r3, r4)     // Catch:{ Exception -> 0x0037 }
            r0 = r5
            java.lang.String r5 = "UTF-8"
            java.lang.String r5 = java.net.URLDecoder.decode(r0, r5)     // Catch:{ Exception -> 0x0037 }
            android.net.Uri r6 = android.net.Uri.parse(r5)     // Catch:{ Exception -> 0x0037 }
            goto L_0x0036
        L_0x0034:
            r6 = r21
        L_0x0036:
            goto L_0x003d
        L_0x0037:
            r0 = move-exception
            im.bclpbkiauv.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x003b:
            r6 = r21
        L_0x003d:
            java.lang.String r0 = im.bclpbkiauv.messenger.AndroidUtilities.getPath(r6)
            r4 = r0
            if (r0 != 0) goto L_0x004e
            java.lang.String r4 = r6.toString()
            java.lang.String r5 = "file"
            java.lang.String r0 = im.bclpbkiauv.messenger.MediaController.copyFileToCache(r6, r5)
        L_0x004e:
            if (r0 != 0) goto L_0x0054
            r20.showAttachmentError()
            return
        L_0x0054:
            r5 = 0
            r1.fillEditingMediaWithCaption(r5, r5)
            boolean r5 = r1.isVedioFile(r0)
            im.bclpbkiauv.messenger.AccountInstance r7 = r20.getAccountInstance()
            r10 = 0
            r11 = 0
            r12 = 0
            long r13 = r1.dialog_id
            im.bclpbkiauv.messenger.MessageObject r15 = r1.replyingMessageObject
            r16 = 0
            im.bclpbkiauv.messenger.MessageObject r9 = r1.editingMessageObject
            r18 = 1
            r19 = 0
            r8 = r0
            r17 = r9
            r9 = r4
            im.bclpbkiauv.messenger.SendMessagesHelper.prepareSendingDocument(r7, r8, r9, r10, r11, r12, r13, r15, r16, r17, r18, r19)
            r1.hideFieldPanel(r3)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.sendUriAsDocument(android.net.Uri):void");
    }

    private String getMimeType(String fileName) {
        return URLConnection.getFileNameMap().getContentTypeFor(fileName);
    }

    public boolean isVedioFile(String fileName) {
        String mimeType = getMimeType(fileName);
        if (TextUtils.isEmpty(fileName) || !mimeType.contains(PREFIX_VIDEO)) {
            return false;
        }
        return true;
    }

    public void onActivityResultFragment(int requestCode, int resultCode, Intent data) {
        int i = requestCode;
        Intent intent = data;
        if (resultCode != -1) {
            return;
        }
        if (i == 0 || i == 2) {
            createChatAttachView();
            ChatAttachAlert chatAttachAlert2 = this.chatAttachAlert;
            if (chatAttachAlert2 != null) {
                chatAttachAlert2.onActivityResultFragment(i, intent, this.currentPicturePath);
            }
            this.currentPicturePath = null;
        } else if (i == 1) {
            if (intent == null || data.getData() == null) {
                showAttachmentError();
                return;
            }
            Uri uri = data.getData();
            if (uri.toString().contains(MimeTypes.BASE_TYPE_VIDEO)) {
                String videoPath = null;
                try {
                    videoPath = AndroidUtilities.getPath(uri);
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
                if (videoPath == null) {
                    showAttachmentError();
                }
                if (this.paused) {
                    this.startVideoEdit = videoPath;
                } else {
                    openVideoEditor(videoPath, (String) null);
                }
                Uri uri2 = uri;
            } else if (this.editingMessageObject != null || !this.inScheduleMode) {
                fillEditingMediaWithCaption((CharSequence) null, (ArrayList<TLRPC.MessageEntity>) null);
                Uri uri3 = uri;
                SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), (String) null, uri, this.dialog_id, this.replyingMessageObject, (CharSequence) null, (ArrayList<TLRPC.MessageEntity>) null, (ArrayList<TLRPC.InputDocument>) null, (InputContentInfoCompat) null, 0, this.editingMessageObject, true, 0);
            } else {
                AlertsCreator.createScheduleDatePickerDialog(getParentActivity(), UserObject.isUserSelf(this.currentUser), new AlertsCreator.ScheduleDatePickerDelegate(uri) {
                    private final /* synthetic */ Uri f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void didSelectDate(boolean z, int i) {
                        ChatActivity.this.lambda$onActivityResultFragment$68$ChatActivity(this.f$1, z, i);
                    }
                });
                Uri uri4 = uri;
            }
            afterMessageSend();
        } else if (i != 21) {
        } else {
            if (intent == null) {
                showAttachmentError();
                return;
            }
            if (data.getData() != null) {
                sendUriAsDocument(data.getData());
            } else if (data.getClipData() != null) {
                ClipData clipData = data.getClipData();
                for (int i2 = 0; i2 < clipData.getItemCount(); i2++) {
                    sendUriAsDocument(clipData.getItemAt(i2).getUri());
                }
            } else {
                showAttachmentError();
            }
            afterMessageSend();
        }
    }

    public /* synthetic */ void lambda$onActivityResultFragment$68$ChatActivity(Uri uri, boolean notify, int scheduleDate) {
        fillEditingMediaWithCaption((CharSequence) null, (ArrayList<TLRPC.MessageEntity>) null);
        SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), (String) null, uri, this.dialog_id, this.replyingMessageObject, (CharSequence) null, (ArrayList<TLRPC.MessageEntity>) null, (ArrayList<TLRPC.InputDocument>) null, (InputContentInfoCompat) null, 0, this.editingMessageObject, notify, scheduleDate);
    }

    public void saveSelfArgs(Bundle args) {
        String str = this.currentPicturePath;
        if (str != null) {
            args.putString("path", str);
        }
    }

    public void restoreSelfArgs(Bundle args) {
        this.currentPicturePath = args.getString("path");
    }

    private void removeUnreadPlane(boolean scrollToEnd) {
        if (this.unreadMessageObject != null) {
            if (scrollToEnd) {
                boolean[] zArr = this.forwardEndReached;
                zArr[1] = true;
                zArr[0] = true;
                this.first_unread_id = 0;
                this.last_message_id = 0;
            }
            this.createUnreadMessageAfterId = 0;
            this.createUnreadMessageAfterIdLoading = false;
            removeMessageObject(this.unreadMessageObject);
            this.unreadMessageObject = null;
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:1483:0x1cb2, code lost:
        if (r2.pinned_msg_id != r16.intValue()) goto L_0x1cb7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1488:0x1cc1, code lost:
        if (r1.pinned_msg_id == r16.intValue()) goto L_0x1cc3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1489:0x1cc3, code lost:
        r9.pinnedMessageObject = null;
        r1 = r9.chatInfo;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1490:0x1cc8, code lost:
        if (r1 == null) goto L_0x1cce;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1491:0x1cca, code lost:
        r2 = 0;
        r1.pinned_msg_id = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1492:0x1cce, code lost:
        r2 = 0;
        r1 = r9.userInfo;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1493:0x1cd1, code lost:
        if (r1 == null) goto L_0x1cd5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1494:0x1cd3, code lost:
        r1.pinned_msg_id = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1495:0x1cd5, code lost:
        getMessagesStorage().updateChatPinnedMessage(r3, r2);
        updatePinnedMessageView(true);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:500:0x09f6, code lost:
        if (r5 == 1) goto L_0x09f8;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:558:0x0b37, code lost:
        if (r2.get(r2.size() - 2) == r9.scrollToMessage) goto L_0x0b39;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:630:0x0c95, code lost:
        if (r9.endReached[0] == false) goto L_0x0c97;
     */
    /* JADX WARNING: Removed duplicated region for block: B:1075:0x1488  */
    /* JADX WARNING: Removed duplicated region for block: B:1119:0x1569  */
    /* JADX WARNING: Removed duplicated region for block: B:1127:0x1588  */
    /* JADX WARNING: Removed duplicated region for block: B:1130:0x159e  */
    /* JADX WARNING: Removed duplicated region for block: B:1140:0x15d2  */
    /* JADX WARNING: Removed duplicated region for block: B:2589:0x15b9 A[SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:398:0x0851  */
    /* JADX WARNING: Removed duplicated region for block: B:399:0x0859  */
    /* JADX WARNING: Removed duplicated region for block: B:402:0x086b  */
    /* JADX WARNING: Removed duplicated region for block: B:585:0x0be3  */
    /* JADX WARNING: Removed duplicated region for block: B:588:0x0bed  */
    /* JADX WARNING: Removed duplicated region for block: B:641:0x0ce7  */
    /* JADX WARNING: Removed duplicated region for block: B:642:0x0cec  */
    /* JADX WARNING: Removed duplicated region for block: B:645:0x0cf8  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void didReceivedNotification(int r62, int r63, java.lang.Object... r64) {
        /*
            r61 = this;
            r9 = r61
            r10 = r62
            r11 = r64
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messagesDidLoad
            r3 = 11
            r4 = 10
            java.lang.String r6 = ""
            java.lang.String r8 = "%d"
            r12 = 6
            r13 = 5
            r15 = 3
            r1 = 4
            r19 = r8
            r7 = 2
            r8 = 0
            r14 = 1
            if (r10 != r0) goto L_0x0d04
            r0 = r11[r4]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            int r2 = r9.classGuid
            if (r0 != r2) goto L_0x0cfc
            r9.setItemAnimationsEnabled(r8)
            boolean r2 = r9.openAnimationEnded
            r4 = 7
            if (r2 != 0) goto L_0x0054
            im.bclpbkiauv.messenger.NotificationCenter r2 = r61.getNotificationCenter()
            int[] r5 = new int[r4]
            int r27 = im.bclpbkiauv.messenger.NotificationCenter.chatInfoDidLoad
            r5[r8] = r27
            int r27 = im.bclpbkiauv.messenger.NotificationCenter.dialogsNeedReload
            r5[r14] = r27
            int r27 = im.bclpbkiauv.messenger.NotificationCenter.scheduledMessagesUpdated
            r5[r7] = r27
            int r27 = im.bclpbkiauv.messenger.NotificationCenter.closeChats
            r5[r15] = r27
            int r27 = im.bclpbkiauv.messenger.NotificationCenter.botKeyboardDidLoad
            r5[r1] = r27
            int r27 = im.bclpbkiauv.messenger.NotificationCenter.userFullInfoDidLoad
            r5[r13] = r27
            int r27 = im.bclpbkiauv.messenger.NotificationCenter.needDeleteDialog
            r5[r12] = r27
            r2.setAllowedNotificationsDutingAnimation(r5)
        L_0x0054:
            r2 = r11[r3]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r5 = r2.intValue()
            java.util.ArrayList<java.lang.Integer> r2 = r9.waitingForLoad
            java.lang.Integer r3 = java.lang.Integer.valueOf(r5)
            int r3 = r2.indexOf(r3)
            im.bclpbkiauv.messenger.UserConfig r2 = r61.getUserConfig()
            int r2 = r2.getClientUserId()
            r28 = 14
            r28 = r11[r28]
            java.lang.Boolean r28 = (java.lang.Boolean) r28
            boolean r12 = r28.booleanValue()
            r28 = r11[r15]
            java.lang.Boolean r28 = (java.lang.Boolean) r28
            boolean r28 = r28.booleanValue()
            r15 = -1
            if (r3 != r15) goto L_0x00d3
            boolean r1 = r9.inScheduleMode
            if (r1 == 0) goto L_0x00d2
            if (r12 == 0) goto L_0x00d2
            if (r28 != 0) goto L_0x00d2
            r9.waitingForReplyMessageLoad = r14
            java.util.ArrayList<java.lang.Integer> r1 = r9.waitingForLoad
            int r4 = r9.lastLoadIndex
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r1.add(r4)
            im.bclpbkiauv.messenger.MessagesController r13 = r61.getMessagesController()
            long r14 = r9.dialog_id
            boolean r1 = im.bclpbkiauv.messenger.AndroidUtilities.isTablet()
            if (r1 == 0) goto L_0x00a9
            r1 = 30
            r16 = 30
            goto L_0x00ad
        L_0x00a9:
            r1 = 20
            r16 = 20
        L_0x00ad:
            r17 = 0
            r18 = 0
            r19 = 1
            r20 = 0
            int r1 = r9.classGuid
            r22 = 2
            r23 = 0
            im.bclpbkiauv.tgnet.TLRPC$Chat r4 = r9.currentChat
            boolean r24 = im.bclpbkiauv.messenger.ChatObject.isChannel(r4)
            boolean r4 = r9.inScheduleMode
            int r6 = r9.lastLoadIndex
            int r7 = r6 + 1
            r9.lastLoadIndex = r7
            r21 = r1
            r25 = r4
            r26 = r6
            r13.loadMessages(r14, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26)
        L_0x00d2:
            return
        L_0x00d3:
            java.util.ArrayList<java.lang.Integer> r15 = r9.waitingForLoad
            r15.remove(r3)
            r15 = r11[r7]
            java.util.ArrayList r15 = (java.util.ArrayList) r15
            boolean r7 = r9.inScheduleMode
            if (r7 == r12) goto L_0x00ef
            if (r7 != 0) goto L_0x00eb
            int r1 = r15.size()
            r9.scheduledMessagesCount = r1
            r9.updateScheduledInterface(r14)
        L_0x00eb:
            r9.listViewShowEmptyView(r8, r8)
            return
        L_0x00ef:
            r31 = 0
            boolean r13 = r9.waitingForReplyMessageLoad
            boolean r4 = r9.waitingForReplyMessageLoad
            if (r4 == 0) goto L_0x016d
            if (r7 != 0) goto L_0x0153
            boolean r4 = r9.createUnreadMessageAfterIdLoading
            if (r4 != 0) goto L_0x0153
            r4 = 0
            r7 = 0
        L_0x00ff:
            int r1 = r15.size()
            if (r7 >= r1) goto L_0x014b
            java.lang.Object r1 = r15.get(r7)
            im.bclpbkiauv.messenger.MessageObject r1 = (im.bclpbkiauv.messenger.MessageObject) r1
            int r14 = r1.getId()
            int r8 = r9.startLoadFromMessageId
            if (r14 != r8) goto L_0x0117
            r4 = 1
            r35 = r0
            goto L_0x014d
        L_0x0117:
            int r8 = r7 + 1
            int r14 = r15.size()
            if (r8 >= r14) goto L_0x0141
            int r8 = r7 + 1
            java.lang.Object r8 = r15.get(r8)
            im.bclpbkiauv.messenger.MessageObject r8 = (im.bclpbkiauv.messenger.MessageObject) r8
            int r14 = r1.getId()
            r35 = r0
            int r0 = r9.startLoadFromMessageId
            if (r14 < r0) goto L_0x0143
            int r0 = r8.getId()
            int r14 = r9.startLoadFromMessageId
            if (r0 >= r14) goto L_0x0143
            int r0 = r1.getId()
            r9.startLoadFromMessageId = r0
            r4 = 1
            goto L_0x014d
        L_0x0141:
            r35 = r0
        L_0x0143:
            int r7 = r7 + 1
            r0 = r35
            r1 = 4
            r8 = 0
            r14 = 1
            goto L_0x00ff
        L_0x014b:
            r35 = r0
        L_0x014d:
            if (r4 != 0) goto L_0x0155
            r1 = 0
            r9.startLoadFromMessageId = r1
            return
        L_0x0153:
            r35 = r0
        L_0x0155:
            int r0 = r9.startLoadFromMessageId
            boolean r1 = r9.needSelectFromMessageId
            int r4 = r9.createUnreadMessageAfterId
            boolean r7 = r9.createUnreadMessageAfterIdLoading
            r61.clearChatData()
            boolean r8 = r9.inScheduleMode
            if (r8 != 0) goto L_0x016a
            r9.createUnreadMessageAfterId = r4
            r9.startLoadFromMessageId = r0
            r9.needSelectFromMessageId = r1
        L_0x016a:
            r31 = r7
            goto L_0x016f
        L_0x016d:
            r35 = r0
        L_0x016f:
            int r0 = r9.loadsCount
            r1 = 1
            int r0 = r0 + r1
            r9.loadsCount = r0
            r1 = 0
            r0 = r11[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r7 = r9.dialog_id
            int r4 = (r0 > r7 ? 1 : (r0 == r7 ? 0 : -1))
            if (r4 != 0) goto L_0x0186
            r4 = 0
            goto L_0x0187
        L_0x0186:
            r4 = 1
        L_0x0187:
            r7 = 1
            r8 = r11[r7]
            java.lang.Integer r8 = (java.lang.Integer) r8
            int r7 = r8.intValue()
            r8 = 4
            r14 = r11[r8]
            java.lang.Integer r14 = (java.lang.Integer) r14
            int r8 = r14.intValue()
            r14 = 7
            r36 = r11[r14]
            java.lang.Integer r36 = (java.lang.Integer) r36
            int r14 = r36.intValue()
            r36 = r0
            r0 = 8
            r1 = r11[r0]
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            r38 = 9
            r38 = r11[r38]
            java.lang.Boolean r38 = (java.lang.Boolean) r38
            boolean r38 = r38.booleanValue()
            r39 = 12
            r39 = r11[r39]
            java.lang.Integer r39 = (java.lang.Integer) r39
            int r0 = r39.intValue()
            r39 = 13
            r39 = r11[r39]
            java.lang.Integer r39 = (java.lang.Integer) r39
            int r39 = r39.intValue()
            if (r39 >= 0) goto L_0x01d9
            int r39 = r39 * -1
            r41 = r2
            r2 = 0
            r9.hasAllMentionsLocal = r2
            r42 = r39
            r2 = 1
            goto L_0x01e6
        L_0x01d9:
            r41 = r2
            boolean r2 = r9.first
            if (r2 == 0) goto L_0x01e3
            r2 = 1
            r9.hasAllMentionsLocal = r2
            goto L_0x01e4
        L_0x01e3:
            r2 = 1
        L_0x01e4:
            r42 = r39
        L_0x01e6:
            r2 = 4
            if (r1 != r2) goto L_0x022c
            r9.startLoadFromMessageId = r0
            int r2 = r15.size()
            r33 = 1
            int r2 = r2 + -1
        L_0x01f3:
            if (r2 <= 0) goto L_0x0227
            java.lang.Object r39 = r15.get(r2)
            r43 = r0
            r0 = r39
            im.bclpbkiauv.messenger.MessageObject r0 = (im.bclpbkiauv.messenger.MessageObject) r0
            r39 = r3
            int r3 = r0.type
            if (r3 >= 0) goto L_0x021e
            int r3 = r0.getId()
            r44 = r0
            int r0 = r9.startLoadFromMessageId
            if (r3 != r0) goto L_0x0220
            int r0 = r2 + -1
            java.lang.Object r0 = r15.get(r0)
            im.bclpbkiauv.messenger.MessageObject r0 = (im.bclpbkiauv.messenger.MessageObject) r0
            int r0 = r0.getId()
            r9.startLoadFromMessageId = r0
            goto L_0x0230
        L_0x021e:
            r44 = r0
        L_0x0220:
            int r2 = r2 + -1
            r3 = r39
            r0 = r43
            goto L_0x01f3
        L_0x0227:
            r43 = r0
            r39 = r3
            goto L_0x0230
        L_0x022c:
            r43 = r0
            r39 = r3
        L_0x0230:
            r0 = 0
            if (r8 == 0) goto L_0x0266
            r2 = 5
            r3 = r11[r2]
            java.lang.Integer r3 = (java.lang.Integer) r3
            int r2 = r3.intValue()
            r9.last_message_id = r2
            r2 = 3
            if (r1 != r2) goto L_0x025a
            boolean r2 = r9.loadingFromOldPosition
            if (r2 == 0) goto L_0x0256
            r2 = 6
            r3 = r11[r2]
            java.lang.Integer r3 = (java.lang.Integer) r3
            int r0 = r3.intValue()
            if (r0 == 0) goto L_0x0252
            r9.createUnreadMessageAfterId = r8
        L_0x0252:
            r2 = 0
            r9.loadingFromOldPosition = r2
            goto L_0x0257
        L_0x0256:
            r2 = 0
        L_0x0257:
            r9.first_unread_id = r2
            goto L_0x027b
        L_0x025a:
            r9.first_unread_id = r8
            r2 = 6
            r3 = r11[r2]
            java.lang.Integer r3 = (java.lang.Integer) r3
            int r0 = r3.intValue()
            goto L_0x027b
        L_0x0266:
            int r2 = r9.startLoadFromMessageId
            if (r2 == 0) goto L_0x027b
            r2 = 3
            if (r1 == r2) goto L_0x0270
            r2 = 4
            if (r1 != r2) goto L_0x027b
        L_0x0270:
            r2 = 5
            r3 = r11[r2]
            java.lang.Integer r3 = (java.lang.Integer) r3
            int r2 = r3.intValue()
            r9.last_message_id = r2
        L_0x027b:
            r3 = 0
            if (r1 == 0) goto L_0x028c
            int r2 = r9.startLoadFromMessageId
            if (r2 != 0) goto L_0x0286
            int r2 = r9.last_message_id
            if (r2 == 0) goto L_0x028c
        L_0x0286:
            boolean[] r2 = r9.forwardEndReached
            r34 = 0
            r2[r4] = r34
        L_0x028c:
            r2 = 1
            if (r1 == r2) goto L_0x029a
            r2 = 3
            if (r1 != r2) goto L_0x0293
            goto L_0x029a
        L_0x0293:
            r44 = r3
            r45 = r5
            r34 = 0
            goto L_0x02ba
        L_0x029a:
            r2 = 1
            if (r4 != r2) goto L_0x02b4
            r44 = r3
            boolean[] r3 = r9.endReached
            r45 = r5
            boolean[] r5 = r9.cacheEndReached
            r34 = 0
            r5[r34] = r2
            r3[r34] = r2
            boolean[] r2 = r9.forwardEndReached
            r2[r34] = r34
            int[] r2 = r9.minMessageId
            r2[r34] = r34
            goto L_0x02ba
        L_0x02b4:
            r44 = r3
            r45 = r5
            r34 = 0
        L_0x02ba:
            boolean r2 = r9.inScheduleMode
            if (r2 == 0) goto L_0x02ce
            boolean[] r2 = r9.endReached
            boolean[] r3 = r9.cacheEndReached
            r5 = 1
            r3[r34] = r5
            r2[r34] = r5
            boolean[] r2 = r9.forwardEndReached
            r2[r34] = r5
            r2[r34] = r5
            goto L_0x02cf
        L_0x02ce:
            r5 = 1
        L_0x02cf:
            int r2 = r9.loadsCount
            if (r2 != r5) goto L_0x02e0
            int r2 = r15.size()
            r3 = 20
            if (r2 <= r3) goto L_0x02e0
            int r2 = r9.loadsCount
            int r2 = r2 + r5
            r9.loadsCount = r2
        L_0x02e0:
            boolean r2 = r9.firstLoading
            if (r2 == 0) goto L_0x0350
            boolean[] r2 = r9.forwardEndReached
            boolean r2 = r2[r4]
            if (r2 != 0) goto L_0x0340
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r9.messages
            r2.clear()
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r2 = r9.messagesByDays
            r2.clear()
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r2 = r9.groupedMessagesMap
            r2.clear()
            r2 = 0
            r3 = r2
        L_0x02fb:
            r2 = 2
            if (r3 >= r2) goto L_0x033a
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r2 = r9.messagesDict
            r2 = r2[r3]
            r2.clear()
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r2 = r9.currentEncryptedChat
            if (r2 != 0) goto L_0x0319
            int[] r2 = r9.maxMessageId
            r5 = 2147483647(0x7fffffff, float:NaN)
            r2[r3] = r5
            int[] r2 = r9.minMessageId
            r23 = -2147483648(0xffffffff80000000, float:-0.0)
            r2[r3] = r23
            r5 = r41
            goto L_0x0328
        L_0x0319:
            r5 = 2147483647(0x7fffffff, float:NaN)
            r23 = -2147483648(0xffffffff80000000, float:-0.0)
            int[] r2 = r9.maxMessageId
            r2[r3] = r23
            int[] r2 = r9.minMessageId
            r2[r3] = r5
            r5 = r41
        L_0x0328:
            int[] r2 = r9.maxDate
            r2[r3] = r23
            int[] r2 = r9.minDate
            r41 = r8
            r8 = 0
            r2[r3] = r8
            int r3 = r3 + 1
            r8 = r41
            r41 = r5
            goto L_0x02fb
        L_0x033a:
            r5 = r41
            r41 = r8
            r8 = 0
            goto L_0x0345
        L_0x0340:
            r5 = r41
            r41 = r8
            r8 = 0
        L_0x0345:
            r9.firstLoading = r8
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$xdxtzREdGXOzubpNRVjpd3PpQ2A r2 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$xdxtzREdGXOzubpNRVjpd3PpQ2A
            r2.<init>()
            im.bclpbkiauv.messenger.AndroidUtilities.runOnUIThread(r2)
            goto L_0x0354
        L_0x0350:
            r5 = r41
            r41 = r8
        L_0x0354:
            r2 = 1
            if (r1 != r2) goto L_0x035a
            java.util.Collections.reverse(r15)
        L_0x035a:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r2 = r9.currentEncryptedChat
            if (r2 != 0) goto L_0x036b
            im.bclpbkiauv.messenger.MediaDataController r2 = r61.getMediaDataController()
            r3 = r12
            long r11 = r9.dialog_id
            boolean r8 = r9.inScheduleMode
            r2.loadReplyMessagesForMessages(r15, r11, r8)
            goto L_0x036c
        L_0x036b:
            r3 = r12
        L_0x036c:
            r2 = 0
            r8 = 2
            if (r1 == r8) goto L_0x0373
            r8 = 1
            if (r1 != r8) goto L_0x0381
        L_0x0373:
            boolean r8 = r15.isEmpty()
            if (r8 == 0) goto L_0x0381
            if (r28 != 0) goto L_0x0381
            boolean[] r8 = r9.forwardEndReached
            r11 = 0
            r12 = 1
            r8[r11] = r12
        L_0x0381:
            r8 = 0
            r11 = 0
            im.bclpbkiauv.messenger.MediaController r12 = im.bclpbkiauv.messenger.MediaController.getInstance()
            r23 = 0
            r46 = 0
            r47 = 0
            r48 = r2
            int r2 = r15.size()
            r49 = r3
            r3 = r23
            r23 = r8
            r8 = r47
        L_0x039b:
            if (r8 >= r2) goto L_0x03d2
            int r47 = r2 - r8
            r50 = r2
            r33 = 1
            int r2 = r47 + -1
            java.lang.Object r2 = r15.get(r2)
            im.bclpbkiauv.messenger.MessageObject r2 = (im.bclpbkiauv.messenger.MessageObject) r2
            r47 = r11
            im.bclpbkiauv.tgnet.TLRPC$Message r11 = r2.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r11 = r11.action
            if (r8 != 0) goto L_0x03bd
            r51 = r2
            boolean r2 = r11 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatCreate
            if (r2 == 0) goto L_0x03bf
            r2 = 1
            r46 = r2
            goto L_0x03cb
        L_0x03bd:
            r51 = r2
        L_0x03bf:
            if (r46 != 0) goto L_0x03c2
            goto L_0x03d6
        L_0x03c2:
            r2 = 2
            if (r8 >= r2) goto L_0x03cb
            boolean r2 = r11 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatEditPhoto
            if (r2 == 0) goto L_0x03cb
            r2 = r11
            r3 = r2
        L_0x03cb:
            int r8 = r8 + 1
            r11 = r47
            r2 = r50
            goto L_0x039b
        L_0x03d2:
            r50 = r2
            r47 = r11
        L_0x03d6:
            r2 = 0
            r11 = r23
            r8 = r44
            r44 = r14
            r14 = r47
        L_0x03df:
            int r10 = r15.size()
            r47 = r13
            if (r2 >= r10) goto L_0x0897
            java.lang.Object r10 = r15.get(r2)
            im.bclpbkiauv.messenger.MessageObject r10 = (im.bclpbkiauv.messenger.MessageObject) r10
            int r13 = r10.getId()
            int r50 = r10.getApproximateHeight()
            r51 = r0
            int r0 = r48 + r50
            r50 = r7
            im.bclpbkiauv.tgnet.TLRPC$User r7 = r9.currentUser
            if (r7 == 0) goto L_0x0427
            boolean r7 = r7.self
            if (r7 == 0) goto L_0x040b
            im.bclpbkiauv.tgnet.TLRPC$Message r7 = r10.messageOwner
            r52 = r6
            r6 = 1
            r7.out = r6
            goto L_0x040d
        L_0x040b:
            r52 = r6
        L_0x040d:
            boolean r6 = r9.inScheduleMode
            if (r6 != 0) goto L_0x0429
            im.bclpbkiauv.tgnet.TLRPC$User r6 = r9.currentUser
            boolean r6 = r6.bot
            if (r6 == 0) goto L_0x041d
            boolean r6 = r10.isOut()
            if (r6 != 0) goto L_0x0423
        L_0x041d:
            im.bclpbkiauv.tgnet.TLRPC$User r6 = r9.currentUser
            int r6 = r6.id
            if (r6 != r5) goto L_0x0429
        L_0x0423:
            r10.setIsRead()
            goto L_0x0429
        L_0x0427:
            r52 = r6
        L_0x0429:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r6 = r9.messagesDict
            r6 = r6[r4]
            int r6 = r6.indexOfKey(r13)
            if (r6 < 0) goto L_0x0440
            r48 = r0
            r54 = r3
            r53 = r5
            r57 = r12
            r7 = r52
            r5 = r4
            goto L_0x0883
        L_0x0440:
            r6 = 0
            r9.addToPolls(r10, r6)
            boolean r6 = r61.isSecretChat()
            if (r6 == 0) goto L_0x044d
            r9.checkSecretMessageForLocation(r10)
        L_0x044d:
            boolean r6 = r12.isPlayingMessage(r10)
            if (r6 == 0) goto L_0x0463
            im.bclpbkiauv.messenger.MessageObject r6 = r12.getPlayingMessageObject()
            float r7 = r6.audioProgress
            r10.audioProgress = r7
            int r7 = r6.audioProgressSec
            r10.audioProgressSec = r7
            int r7 = r6.audioPlayerDuration
            r10.audioPlayerDuration = r7
        L_0x0463:
            if (r4 != 0) goto L_0x0478
            im.bclpbkiauv.tgnet.TLRPC$Chat r6 = r9.currentChat
            boolean r6 = im.bclpbkiauv.messenger.ChatObject.isChannel(r6)
            if (r6 == 0) goto L_0x0478
            r6 = 1
            if (r13 != r6) goto L_0x0478
            boolean[] r7 = r9.endReached
            r7[r4] = r6
            boolean[] r7 = r9.cacheEndReached
            r7[r4] = r6
        L_0x0478:
            if (r13 <= 0) goto L_0x048f
            int[] r6 = r9.maxMessageId
            r7 = r6[r4]
            int r7 = java.lang.Math.min(r13, r7)
            r6[r4] = r7
            int[] r6 = r9.minMessageId
            r7 = r6[r4]
            int r7 = java.lang.Math.max(r13, r7)
            r6[r4] = r7
            goto L_0x04a7
        L_0x048f:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r6 = r9.currentEncryptedChat
            if (r6 == 0) goto L_0x04a7
            int[] r6 = r9.maxMessageId
            r7 = r6[r4]
            int r7 = java.lang.Math.max(r13, r7)
            r6[r4] = r7
            int[] r6 = r9.minMessageId
            r7 = r6[r4]
            int r7 = java.lang.Math.min(r13, r7)
            r6[r4] = r7
        L_0x04a7:
            im.bclpbkiauv.tgnet.TLRPC$Message r6 = r10.messageOwner
            int r6 = r6.date
            if (r6 == 0) goto L_0x04d6
            int[] r6 = r9.maxDate
            r7 = r6[r4]
            r53 = r5
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r10.messageOwner
            int r5 = r5.date
            int r5 = java.lang.Math.max(r7, r5)
            r6[r4] = r5
            int[] r5 = r9.minDate
            r5 = r5[r4]
            if (r5 == 0) goto L_0x04cd
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r10.messageOwner
            int r5 = r5.date
            int[] r6 = r9.minDate
            r6 = r6[r4]
            if (r5 >= r6) goto L_0x04d8
        L_0x04cd:
            int[] r5 = r9.minDate
            im.bclpbkiauv.tgnet.TLRPC$Message r6 = r10.messageOwner
            int r6 = r6.date
            r5[r4] = r6
            goto L_0x04d8
        L_0x04d6:
            r53 = r5
        L_0x04d8:
            int r5 = r9.last_message_id
            if (r13 != r5) goto L_0x04e2
            boolean[] r5 = r9.forwardEndReached
            r6 = 1
            r5[r4] = r6
            goto L_0x04e3
        L_0x04e2:
            r6 = 1
        L_0x04e3:
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r10.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r5 = r5.action
            int r7 = r10.type
            if (r7 < 0) goto L_0x0877
            if (r4 != r6) goto L_0x04fc
            boolean r6 = r5 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatMigrateTo
            if (r6 == 0) goto L_0x04fc
            r48 = r0
            r54 = r3
            r5 = r4
            r57 = r12
            r7 = r52
            goto L_0x0883
        L_0x04fc:
            im.bclpbkiauv.tgnet.TLRPC$Chat r6 = r9.currentChat
            if (r6 == 0) goto L_0x0522
            boolean r6 = r6.creator
            if (r6 == 0) goto L_0x0522
            boolean r6 = r5 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatCreate
            if (r6 != 0) goto L_0x0517
            if (r3 == 0) goto L_0x0522
            if (r5 != r3) goto L_0x0522
            r48 = r0
            r54 = r3
            r5 = r4
            r57 = r12
            r7 = r52
            goto L_0x0883
        L_0x0517:
            r48 = r0
            r54 = r3
            r5 = r4
            r57 = r12
            r7 = r52
            goto L_0x0883
        L_0x0522:
            im.bclpbkiauv.tgnet.TLRPC$Message r6 = r10.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r6 = r6.action
            boolean r6 = r6 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChannelMigrateFrom
            if (r6 == 0) goto L_0x0535
            r48 = r0
            r54 = r3
            r5 = r4
            r57 = r12
            r7 = r52
            goto L_0x0883
        L_0x0535:
            im.bclpbkiauv.messenger.MessageObject r6 = r9.needAnimateToMessage
            if (r6 == 0) goto L_0x0554
            int r6 = r6.getId()
            if (r6 != r13) goto L_0x0554
            if (r13 >= 0) goto L_0x0554
            int r6 = r10.type
            r7 = 5
            if (r6 != r7) goto L_0x0554
            boolean r6 = r9.inScheduleMode
            if (r6 != 0) goto L_0x0554
            im.bclpbkiauv.messenger.MessageObject r10 = r9.needAnimateToMessage
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r9.animatingMessageObjects
            r6.add(r10)
            r6 = 0
            r9.needAnimateToMessage = r6
        L_0x0554:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r6 = r9.messagesDict
            r6 = r6[r4]
            r6.put(r13, r10)
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r6 = r9.messagesByDays
            java.lang.String r7 = r10.dateKey
            java.lang.Object r6 = r6.get(r7)
            java.util.ArrayList r6 = (java.util.ArrayList) r6
            if (r6 != 0) goto L_0x05fe
            java.util.ArrayList r7 = new java.util.ArrayList
            r7.<init>()
            r6 = r7
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r7 = r9.messagesByDays
            r54 = r3
            java.lang.String r3 = r10.dateKey
            r7.put(r3, r6)
            im.bclpbkiauv.tgnet.TLRPC$TL_message r3 = new im.bclpbkiauv.tgnet.TLRPC$TL_message
            r3.<init>()
            boolean r7 = r9.inScheduleMode
            if (r7 == 0) goto L_0x05a1
            r55 = r5
            r7 = 1
            java.lang.Object[] r5 = new java.lang.Object[r7]
            im.bclpbkiauv.tgnet.TLRPC$Message r7 = r10.messageOwner
            int r7 = r7.date
            r56 = r6
            long r6 = (long) r7
            r57 = r12
            r12 = 1
            java.lang.String r6 = im.bclpbkiauv.messenger.LocaleController.formatDateChat(r6, r12)
            r7 = 0
            r5[r7] = r6
            java.lang.String r6 = "MessageScheduledOn"
            r7 = 2131692012(0x7f0f09ec, float:1.9013112E38)
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatString(r6, r7, r5)
            r3.message = r5
            goto L_0x05b2
        L_0x05a1:
            r55 = r5
            r56 = r6
            r57 = r12
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r10.messageOwner
            int r5 = r5.date
            long r5 = (long) r5
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.formatDateChat(r5)
            r3.message = r5
        L_0x05b2:
            r5 = 0
            r3.id = r5
            java.util.Calendar r6 = java.util.Calendar.getInstance()
            im.bclpbkiauv.tgnet.TLRPC$Message r7 = r10.messageOwner
            int r7 = r7.date
            r58 = r13
            long r12 = (long) r7
            r17 = 1000(0x3e8, double:4.94E-321)
            long r12 = r12 * r17
            r6.setTimeInMillis(r12)
            r7 = 11
            r6.set(r7, r5)
            r7 = 12
            r6.set(r7, r5)
            long r12 = r6.getTimeInMillis()
            long r12 = r12 / r17
            int r7 = (int) r12
            r3.date = r7
            im.bclpbkiauv.messenger.MessageObject r7 = new im.bclpbkiauv.messenger.MessageObject
            int r12 = r9.currentAccount
            r7.<init>(r12, r3, r5)
            r5 = r7
            r7 = 10
            r5.type = r7
            r7 = 1
            r5.contentType = r7
            r5.isDateObject = r7
            if (r1 != r7) goto L_0x05f4
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r7 = r9.messages
            r12 = 0
            r7.add(r12, r5)
            goto L_0x05f9
        L_0x05f4:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r7 = r9.messages
            r7.add(r5)
        L_0x05f9:
            int r8 = r8 + 1
            r6 = r56
            goto L_0x0606
        L_0x05fe:
            r54 = r3
            r55 = r5
            r57 = r12
            r58 = r13
        L_0x0606:
            boolean r3 = r10.hasValidGroupId()
            if (r3 == 0) goto L_0x06c5
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r3 = r9.groupedMessagesMap
            long r12 = r10.getGroupIdForUse()
            java.lang.Object r3 = r3.get(r12)
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r3 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessages) r3
            if (r3 == 0) goto L_0x0676
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r5 = r9.messages
            int r5 = r5.size()
            r7 = 1
            if (r5 <= r7) goto L_0x0676
            if (r1 != r7) goto L_0x062f
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r5 = r9.messages
            r7 = 0
            java.lang.Object r5 = r5.get(r7)
            im.bclpbkiauv.messenger.MessageObject r5 = (im.bclpbkiauv.messenger.MessageObject) r5
            goto L_0x063d
        L_0x062f:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r5 = r9.messages
            int r7 = r5.size()
            r12 = 2
            int r7 = r7 - r12
            java.lang.Object r5 = r5.get(r7)
            im.bclpbkiauv.messenger.MessageObject r5 = (im.bclpbkiauv.messenger.MessageObject) r5
        L_0x063d:
            long r12 = r5.getGroupIdForUse()
            long r59 = r10.getGroupIdForUse()
            int r7 = (r12 > r59 ? 1 : (r12 == r59 ? 0 : -1))
            if (r7 != 0) goto L_0x0661
            long r12 = r5.localGroupId
            r20 = 0
            int r7 = (r12 > r20 ? 1 : (r12 == r20 ? 0 : -1))
            if (r7 == 0) goto L_0x0676
            long r12 = r5.localGroupId
            r10.localGroupId = r12
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r7 = r9.groupedMessagesMap
            long r12 = r5.localGroupId
            java.lang.Object r7 = r7.get(r12)
            r3 = r7
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r3 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessages) r3
            goto L_0x0676
        L_0x0661:
            long r12 = r5.getGroupIdForUse()
            long r59 = r10.getGroupIdForUse()
            int r7 = (r12 > r59 ? 1 : (r12 == r59 ? 0 : -1))
            if (r7 == 0) goto L_0x0676
            java.security.SecureRandom r7 = im.bclpbkiauv.messenger.Utilities.random
            long r12 = r7.nextLong()
            r10.localGroupId = r12
            r3 = 0
        L_0x0676:
            if (r3 != 0) goto L_0x068c
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r5 = new im.bclpbkiauv.messenger.MessageObject$GroupedMessages
            r5.<init>()
            r3 = r5
            long r12 = r10.getGroupId()
            r3.groupId = r12
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r5 = r9.groupedMessagesMap
            long r12 = r3.groupId
            r5.put(r12, r3)
            goto L_0x06a7
        L_0x068c:
            if (r11 == 0) goto L_0x0698
            long r12 = r10.getGroupId()
            int r5 = r11.indexOfKey(r12)
            if (r5 >= 0) goto L_0x06a7
        L_0x0698:
            if (r14 != 0) goto L_0x06a0
            android.util.LongSparseArray r5 = new android.util.LongSparseArray
            r5.<init>()
            r14 = r5
        L_0x06a0:
            long r12 = r10.getGroupId()
            r14.put(r12, r3)
        L_0x06a7:
            if (r11 != 0) goto L_0x06af
            android.util.LongSparseArray r5 = new android.util.LongSparseArray
            r5.<init>()
            r11 = r5
        L_0x06af:
            long r12 = r3.groupId
            r11.put(r12, r3)
            r5 = 1
            if (r1 != r5) goto L_0x06bd
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r5 = r3.messages
            r5.add(r10)
            goto L_0x06c3
        L_0x06bd:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r5 = r3.messages
            r7 = 0
            r5.add(r7, r10)
        L_0x06c3:
            r5 = r4
            goto L_0x06d6
        L_0x06c5:
            long r12 = r10.getGroupIdForUse()
            r5 = r4
            r3 = 0
            int r7 = (r12 > r3 ? 1 : (r12 == r3 ? 0 : -1))
            if (r7 == 0) goto L_0x06d6
            im.bclpbkiauv.tgnet.TLRPC$Message r7 = r10.messageOwner
            r7.grouped_id = r3
            r10.localSentGroupId = r3
        L_0x06d6:
            r3 = 1
            int r8 = r8 + r3
            r6.add(r10)
            if (r1 != r3) goto L_0x06e4
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r4 = r9.messages
            r7 = 0
            r4.add(r7, r10)
            goto L_0x06ee
        L_0x06e4:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r4 = r9.messages
            int r7 = r4.size()
            int r7 = r7 - r3
            r4.add(r7, r10)
        L_0x06ee:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r4 = r9.currentEncryptedChat
            if (r4 != 0) goto L_0x0720
            int r4 = r9.createUnreadMessageAfterId
            if (r4 == 0) goto L_0x071e
            if (r1 == r3) goto L_0x071e
            int r3 = r2 + 1
            int r4 = r15.size()
            if (r3 >= r4) goto L_0x071e
            int r3 = r2 + 1
            java.lang.Object r3 = r15.get(r3)
            im.bclpbkiauv.messenger.MessageObject r3 = (im.bclpbkiauv.messenger.MessageObject) r3
            boolean r4 = r10.isOut()
            if (r4 == 0) goto L_0x0714
            im.bclpbkiauv.tgnet.TLRPC$Message r4 = r10.messageOwner
            boolean r4 = r4.from_scheduled
            if (r4 == 0) goto L_0x071c
        L_0x0714:
            int r4 = r3.getId()
            int r7 = r9.createUnreadMessageAfterId
            if (r4 < r7) goto L_0x074a
        L_0x071c:
            r3 = 0
            goto L_0x074a
        L_0x071e:
            r3 = 0
            goto L_0x074a
        L_0x0720:
            int r3 = r9.createUnreadMessageAfterId
            if (r3 == 0) goto L_0x0749
            r3 = 1
            if (r1 == r3) goto L_0x0749
            int r3 = r2 + -1
            if (r3 < 0) goto L_0x0749
            int r3 = r2 + -1
            java.lang.Object r3 = r15.get(r3)
            im.bclpbkiauv.messenger.MessageObject r3 = (im.bclpbkiauv.messenger.MessageObject) r3
            boolean r4 = r10.isOut()
            if (r4 == 0) goto L_0x073f
            im.bclpbkiauv.tgnet.TLRPC$Message r4 = r10.messageOwner
            boolean r4 = r4.from_scheduled
            if (r4 == 0) goto L_0x0747
        L_0x073f:
            int r4 = r3.getId()
            int r7 = r9.createUnreadMessageAfterId
            if (r4 < r7) goto L_0x074a
        L_0x0747:
            r3 = 0
            goto L_0x074a
        L_0x0749:
            r3 = 0
        L_0x074a:
            r4 = 2
            if (r1 != r4) goto L_0x07a7
            int r7 = r9.first_unread_id
            r12 = r58
            if (r12 != r7) goto L_0x07a0
            android.graphics.Point r7 = im.bclpbkiauv.messenger.AndroidUtilities.displaySize
            int r7 = r7.y
            int r7 = r7 / r4
            if (r0 > r7) goto L_0x076a
            boolean[] r4 = r9.forwardEndReached
            r7 = 0
            boolean r4 = r4[r7]
            if (r4 != 0) goto L_0x0762
            goto L_0x076a
        L_0x0762:
            r48 = r0
            r7 = r52
            r52 = r6
            goto L_0x07f3
        L_0x076a:
            im.bclpbkiauv.tgnet.TLRPC$TL_message r4 = new im.bclpbkiauv.tgnet.TLRPC$TL_message
            r4.<init>()
            r7 = r52
            r4.message = r7
            r13 = 0
            r4.id = r13
            r48 = r0
            im.bclpbkiauv.messenger.MessageObject r0 = new im.bclpbkiauv.messenger.MessageObject
            r52 = r6
            int r6 = r9.currentAccount
            r0.<init>(r6, r4, r13)
            r6 = 6
            r0.type = r6
            r6 = 2
            r0.contentType = r6
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r9.messages
            int r13 = r6.size()
            r33 = 1
            int r13 = r13 + -1
            r6.add(r13, r0)
            r9.unreadMessageObject = r0
            r9.scrollToMessage = r0
            r6 = -10000(0xffffffffffffd8f0, float:NaN)
            r9.scrollToMessagePosition = r6
            int r8 = r8 + 1
            goto L_0x07f3
        L_0x07a0:
            r48 = r0
            r7 = r52
            r52 = r6
            goto L_0x07af
        L_0x07a7:
            r48 = r0
            r7 = r52
            r12 = r58
            r52 = r6
        L_0x07af:
            r0 = 3
            if (r1 == r0) goto L_0x07b5
            r0 = 4
            if (r1 != r0) goto L_0x07f3
        L_0x07b5:
            int r0 = r9.startLoadFromMessageId
            if (r0 >= 0) goto L_0x07bb
            if (r12 == r0) goto L_0x07c3
        L_0x07bb:
            int r0 = r9.startLoadFromMessageId
            if (r0 <= 0) goto L_0x07f3
            if (r12 <= 0) goto L_0x07f3
            if (r12 > r0) goto L_0x07f3
        L_0x07c3:
            r61.removeSelectedMessageHighlight()
            boolean r0 = r9.needSelectFromMessageId
            if (r0 == 0) goto L_0x07d0
            int r0 = r9.startLoadFromMessageId
            if (r12 != r0) goto L_0x07d0
            r9.highlightMessageId = r12
        L_0x07d0:
            boolean r0 = r9.showScrollToMessageError
            if (r0 == 0) goto L_0x07e4
            int r0 = r9.startLoadFromMessageId
            if (r12 == r0) goto L_0x07e4
            r0 = 2131691999(0x7f0f09df, float:1.9013086E38)
            java.lang.String r4 = "MessageNotFound"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r0)
            im.bclpbkiauv.ui.components.AlertsCreator.showSimpleToast(r9, r0)
        L_0x07e4:
            r9.scrollToMessage = r10
            r4 = 0
            r9.startLoadFromMessageId = r4
            int r0 = r9.scrollToMessagePosition
            r4 = -10000(0xffffffffffffd8f0, float:NaN)
            if (r0 != r4) goto L_0x07f3
            r0 = -9000(0xffffffffffffdcd8, float:NaN)
            r9.scrollToMessagePosition = r0
        L_0x07f3:
            r0 = 2
            if (r1 == r0) goto L_0x0883
            im.bclpbkiauv.messenger.MessageObject r0 = r9.unreadMessageObject
            if (r0 != 0) goto L_0x0883
            int r0 = r9.createUnreadMessageAfterId
            if (r0 == 0) goto L_0x0883
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r9.currentEncryptedChat
            if (r0 != 0) goto L_0x0812
            boolean r0 = r10.isOut()
            if (r0 == 0) goto L_0x080e
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r10.messageOwner
            boolean r0 = r0.from_scheduled
            if (r0 == 0) goto L_0x0812
        L_0x080e:
            int r0 = r9.createUnreadMessageAfterId
            if (r12 >= r0) goto L_0x0826
        L_0x0812:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r9.currentEncryptedChat
            if (r0 == 0) goto L_0x0883
            boolean r0 = r10.isOut()
            if (r0 == 0) goto L_0x0822
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r10.messageOwner
            boolean r0 = r0.from_scheduled
            if (r0 == 0) goto L_0x0883
        L_0x0822:
            int r0 = r9.createUnreadMessageAfterId
            if (r12 > r0) goto L_0x0883
        L_0x0826:
            r4 = 1
            if (r1 == r4) goto L_0x0836
            if (r3 != 0) goto L_0x0836
            if (r3 != 0) goto L_0x0883
            if (r31 == 0) goto L_0x0883
            int r0 = r15.size()
            int r0 = r0 - r4
            if (r2 != r0) goto L_0x0883
        L_0x0836:
            im.bclpbkiauv.tgnet.TLRPC$TL_message r0 = new im.bclpbkiauv.tgnet.TLRPC$TL_message
            r0.<init>()
            r0.message = r7
            r4 = 0
            r0.id = r4
            im.bclpbkiauv.messenger.MessageObject r6 = new im.bclpbkiauv.messenger.MessageObject
            int r13 = r9.currentAccount
            r6.<init>(r13, r0, r4)
            r4 = r6
            r6 = 6
            r4.type = r6
            r6 = 2
            r4.contentType = r6
            r6 = 1
            if (r1 != r6) goto L_0x0859
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r13 = r9.messages
            r13.add(r6, r4)
            r56 = r0
            goto L_0x0866
        L_0x0859:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r13 = r9.messages
            int r33 = r13.size()
            r56 = r0
            int r0 = r33 + -1
            r13.add(r0, r4)
        L_0x0866:
            r9.unreadMessageObject = r4
            r0 = 3
            if (r1 != r0) goto L_0x0874
            r9.scrollToMessage = r4
            r6 = 0
            r9.startLoadFromMessageId = r6
            r0 = -9000(0xffffffffffffdcd8, float:NaN)
            r9.scrollToMessagePosition = r0
        L_0x0874:
            int r8 = r8 + 1
            goto L_0x0883
        L_0x0877:
            r48 = r0
            r54 = r3
            r55 = r5
            r57 = r12
            r12 = r13
            r7 = r52
            r5 = r4
        L_0x0883:
            int r2 = r2 + 1
            r10 = r62
            r4 = r5
            r6 = r7
            r13 = r47
            r7 = r50
            r0 = r51
            r5 = r53
            r3 = r54
            r12 = r57
            goto L_0x03df
        L_0x0897:
            r51 = r0
            r54 = r3
            r53 = r5
            r50 = r7
            r57 = r12
            r5 = r4
            r7 = r6
            if (r31 == 0) goto L_0x08a8
            r2 = 0
            r9.createUnreadMessageAfterId = r2
        L_0x08a8:
            if (r1 != 0) goto L_0x08b2
            if (r8 != 0) goto L_0x08b2
            int r0 = r9.loadsCount
            r2 = 1
            int r0 = r0 - r2
            r9.loadsCount = r0
        L_0x08b2:
            boolean[] r0 = r9.forwardEndReached
            boolean r0 = r0[r5]
            if (r0 == 0) goto L_0x08c2
            r2 = 1
            if (r5 == r2) goto L_0x08c2
            r2 = 0
            r9.first_unread_id = r2
            r9.last_message_id = r2
            r9.createUnreadMessageAfterId = r2
        L_0x08c2:
            r2 = 1
            if (r1 != r2) goto L_0x097f
            r0 = 0
            int r2 = r15.size()
            r3 = r50
            if (r2 >= r3) goto L_0x08f6
            if (r28 == 0) goto L_0x08da
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r2 = r9.currentEncryptedChat
            if (r2 != 0) goto L_0x08da
            boolean[] r2 = r9.forwardEndReached
            boolean r2 = r2[r5]
            if (r2 == 0) goto L_0x08f6
        L_0x08da:
            boolean[] r2 = r9.forwardEndReached
            r4 = 1
            r2[r5] = r4
            if (r5 == r4) goto L_0x08f3
            r2 = 0
            r9.first_unread_id = r2
            r9.last_message_id = r2
            r9.createUnreadMessageAfterId = r2
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r9.chatAdapter
            int r4 = r2.loadingDownRow
            r2.notifyItemRemoved(r4)
            int r0 = r0 + 1
        L_0x08f3:
            r2 = 0
            r9.startLoadFromMessageId = r2
        L_0x08f6:
            if (r8 <= 0) goto L_0x0972
            androidx.recyclerview.widget.GridLayoutManagerFixed r2 = r9.chatLayoutManager
            int r2 = r2.findFirstVisibleItemPosition()
            if (r2 != 0) goto L_0x0902
            int r2 = r2 + 1
        L_0x0902:
            androidx.recyclerview.widget.GridLayoutManagerFixed r4 = r9.chatLayoutManager
            android.view.View r4 = r4.findViewByPosition(r2)
            r6 = r2
            r10 = r4
            r12 = 0
            r13 = -1
            if (r10 == 0) goto L_0x0940
        L_0x090e:
            if (r12 != 0) goto L_0x093d
            r16 = r12
            boolean r12 = r10 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r12 == 0) goto L_0x093a
            r12 = r10
            im.bclpbkiauv.ui.cells.ChatMessageCell r12 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r12
            im.bclpbkiauv.messenger.MessageObject r12 = r12.getMessageObject()
            boolean r17 = r12.hasValidGroupId()
            if (r17 == 0) goto L_0x0935
            int r6 = r6 + 1
            r17 = r12
            androidx.recyclerview.widget.GridLayoutManagerFixed r12 = r9.chatLayoutManager
            android.view.View r10 = r12.findViewByPosition(r6)
            if (r10 != 0) goto L_0x0932
            r13 = r2
            r12 = r4
            goto L_0x0942
        L_0x0932:
            r12 = r16
            goto L_0x090e
        L_0x0935:
            r17 = r12
            r13 = r6
            r12 = r10
            goto L_0x0942
        L_0x093a:
            r13 = r6
            r12 = r10
            goto L_0x0942
        L_0x093d:
            r16 = r12
            goto L_0x0942
        L_0x0940:
            r16 = r12
        L_0x0942:
            r16 = r2
            if (r12 != 0) goto L_0x094a
            r17 = r4
            r2 = 0
            goto L_0x095f
        L_0x094a:
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r9.chatListView
            int r2 = r2.getMeasuredHeight()
            int r17 = r12.getBottom()
            int r2 = r2 - r17
            r17 = r4
            im.bclpbkiauv.ui.components.RecyclerListView r4 = r9.chatListView
            int r4 = r4.getPaddingBottom()
            int r2 = r2 - r4
        L_0x095f:
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r4 = r9.chatAdapter
            r18 = r6
            r6 = 0
            r4.notifyItemRangeInserted(r6, r8)
            r4 = -1
            if (r13 == r4) goto L_0x0972
            androidx.recyclerview.widget.GridLayoutManagerFixed r4 = r9.chatLayoutManager
            int r6 = r13 + r8
            int r6 = r6 - r0
            r4.scrollToPositionWithOffset(r6, r2)
        L_0x0972:
            r2 = 0
            r9.loadingForward = r2
            r50 = r1
            r17 = r3
            r0 = r42
            r4 = r51
            goto L_0x0c04
        L_0x097f:
            r3 = r50
            int r0 = r15.size()
            if (r0 >= r3) goto L_0x09c6
            r0 = 3
            if (r1 == r0) goto L_0x09c6
            r0 = 4
            if (r1 == r0) goto L_0x09c6
            if (r28 == 0) goto L_0x09b0
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r9.currentEncryptedChat
            if (r0 != 0) goto L_0x09a3
            r2 = 1
            if (r5 != r2) goto L_0x09a1
            long r12 = r9.mergeDialogId
            r17 = 0
            int r0 = (r12 > r17 ? 1 : (r12 == r17 ? 0 : -1))
            if (r0 == 0) goto L_0x09a1
            if (r38 == 0) goto L_0x09a1
            goto L_0x09a3
        L_0x09a1:
            r2 = 1
            goto L_0x09a8
        L_0x09a3:
            boolean[] r0 = r9.endReached
            r2 = 1
            r0[r5] = r2
        L_0x09a8:
            r0 = 2
            if (r1 == r0) goto L_0x09c6
            boolean[] r4 = r9.cacheEndReached
            r4[r5] = r2
            goto L_0x09c6
        L_0x09b0:
            r0 = 2
            if (r1 != r0) goto L_0x09c1
            int r0 = r15.size()
            if (r0 != 0) goto L_0x09c6
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r0 = r9.messages
            boolean r0 = r0.isEmpty()
            if (r0 == 0) goto L_0x09c6
        L_0x09c1:
            boolean[] r0 = r9.endReached
            r2 = 1
            r0[r5] = r2
        L_0x09c6:
            r2 = 0
            r9.loading = r2
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r9.chatListView
            if (r0 == 0) goto L_0x0bf3
            boolean r0 = r9.first
            if (r0 != 0) goto L_0x0ac2
            boolean r0 = r9.scrollToTopOnResume
            if (r0 != 0) goto L_0x0ac2
            boolean r0 = r9.forceScrollToTop
            if (r0 == 0) goto L_0x09df
            r50 = r1
            r17 = r3
            goto L_0x0ac6
        L_0x09df:
            if (r8 == 0) goto L_0x0a96
            r0 = 0
            boolean[] r2 = r9.endReached
            boolean r2 = r2[r5]
            if (r2 == 0) goto L_0x0a09
            if (r5 != 0) goto L_0x09f5
            long r12 = r9.mergeDialogId
            r16 = 0
            int r2 = (r12 > r16 ? 1 : (r12 == r16 ? 0 : -1))
            if (r2 == 0) goto L_0x09f3
            goto L_0x09f5
        L_0x09f3:
            r2 = 1
            goto L_0x09f8
        L_0x09f5:
            r2 = 1
            if (r5 != r2) goto L_0x0a09
        L_0x09f8:
            r0 = 1
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r4 = r9.chatAdapter
            int r6 = r4.loadingUpRow
            int r6 = r6 - r2
            r2 = 2
            r4.notifyItemRangeChanged(r6, r2)
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r9.chatAdapter
            r2.updateRows()
        L_0x0a09:
            androidx.recyclerview.widget.GridLayoutManagerFixed r2 = r9.chatLayoutManager
            int r2 = r2.findFirstVisibleItemPosition()
            androidx.recyclerview.widget.GridLayoutManagerFixed r4 = r9.chatLayoutManager
            android.view.View r4 = r4.findViewByPosition(r2)
            r6 = r2
            r10 = r4
            r12 = 0
            r13 = -1
            if (r10 == 0) goto L_0x0a4d
        L_0x0a1b:
            if (r12 != 0) goto L_0x0a4a
            r50 = r1
            boolean r1 = r10 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r1 == 0) goto L_0x0a47
            r1 = r10
            im.bclpbkiauv.ui.cells.ChatMessageCell r1 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r1
            im.bclpbkiauv.messenger.MessageObject r1 = r1.getMessageObject()
            boolean r16 = r1.hasValidGroupId()
            if (r16 == 0) goto L_0x0a42
            int r6 = r6 + 1
            r16 = r1
            androidx.recyclerview.widget.GridLayoutManagerFixed r1 = r9.chatLayoutManager
            android.view.View r10 = r1.findViewByPosition(r6)
            if (r10 != 0) goto L_0x0a3f
            r13 = r2
            r12 = r4
            goto L_0x0a4f
        L_0x0a3f:
            r1 = r50
            goto L_0x0a1b
        L_0x0a42:
            r16 = r1
            r13 = r6
            r12 = r10
            goto L_0x0a4f
        L_0x0a47:
            r13 = r6
            r12 = r10
            goto L_0x0a4f
        L_0x0a4a:
            r50 = r1
            goto L_0x0a4f
        L_0x0a4d:
            r50 = r1
        L_0x0a4f:
            if (r12 != 0) goto L_0x0a55
            r16 = r2
            r1 = 0
            goto L_0x0a6a
        L_0x0a55:
            im.bclpbkiauv.ui.components.RecyclerListView r1 = r9.chatListView
            int r1 = r1.getMeasuredHeight()
            int r16 = r12.getBottom()
            int r1 = r1 - r16
            r16 = r2
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r9.chatListView
            int r2 = r2.getPaddingBottom()
            int r1 = r1 - r2
        L_0x0a6a:
            int r2 = r8 - r0
            if (r2 <= 0) goto L_0x0a89
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r9.chatAdapter
            int r2 = r2.messagesEndRow
            r17 = r3
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r3 = r9.chatAdapter
            r18 = r4
            int r4 = r3.loadingUpRow
            r3.notifyItemChanged(r4)
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r3 = r9.chatAdapter
            int r4 = r8 - r0
            r3.notifyItemRangeInserted(r2, r4)
            goto L_0x0a8d
        L_0x0a89:
            r17 = r3
            r18 = r4
        L_0x0a8d:
            r2 = -1
            if (r13 == r2) goto L_0x0abc
            androidx.recyclerview.widget.GridLayoutManagerFixed r2 = r9.chatLayoutManager
            r2.scrollToPositionWithOffset(r13, r1)
            goto L_0x0abc
        L_0x0a96:
            r50 = r1
            r17 = r3
            boolean[] r0 = r9.endReached
            boolean r0 = r0[r5]
            if (r0 == 0) goto L_0x0abc
            if (r5 != 0) goto L_0x0aaa
            long r0 = r9.mergeDialogId
            r2 = 0
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 == 0) goto L_0x0aad
        L_0x0aaa:
            r1 = 1
            if (r5 != r1) goto L_0x0abc
        L_0x0aad:
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r0 = r9.chatAdapter
            int r1 = r0.loadingUpRow
            r0.notifyItemRemoved(r1)
            r0 = r42
            r4 = r51
            goto L_0x0bdf
        L_0x0abc:
            r0 = r42
            r4 = r51
            goto L_0x0bdf
        L_0x0ac2:
            r50 = r1
            r17 = r3
        L_0x0ac6:
            r1 = 0
            r9.forceScrollToTop = r1
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r0 = r9.chatAdapter
            r0.notifyDataSetChanged()
            im.bclpbkiauv.messenger.MessageObject r0 = r9.scrollToMessage
            if (r0 == 0) goto L_0x0bb5
            r1 = 1
            int r2 = r9.startLoadFromMessageOffset
            r3 = 2147483647(0x7fffffff, float:NaN)
            if (r2 == r3) goto L_0x0ae5
            int r0 = -r2
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r9.chatListView
            int r2 = r2.getPaddingBottom()
            int r0 = r0 - r2
            r9.startLoadFromMessageOffset = r3
            goto L_0x0b00
        L_0x0ae5:
            int r2 = r9.scrollToMessagePosition
            r3 = -9000(0xffffffffffffdcd8, float:NaN)
            if (r2 != r3) goto L_0x0af1
            int r0 = r9.getScrollOffsetForMessage(r0)
            r1 = 0
            goto L_0x0b00
        L_0x0af1:
            r0 = -10000(0xffffffffffffd8f0, float:NaN)
            if (r2 != r0) goto L_0x0afe
            r0 = 1093664768(0x41300000, float:11.0)
            int r0 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r0)
            int r0 = -r0
            r1 = 0
            goto L_0x0b00
        L_0x0afe:
            int r0 = r9.scrollToMessagePosition
        L_0x0b00:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r9.messages
            boolean r2 = r2.isEmpty()
            if (r2 != 0) goto L_0x0b59
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r9.chatAdapter
            int r2 = r2.loadingUpRow
            r3 = -1
            if (r2 == r3) goto L_0x0b45
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r9.messages
            boolean r2 = r2.isEmpty()
            if (r2 != 0) goto L_0x0b45
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r9.messages
            int r3 = r2.size()
            r4 = 1
            int r3 = r3 - r4
            java.lang.Object r2 = r2.get(r3)
            im.bclpbkiauv.messenger.MessageObject r3 = r9.scrollToMessage
            if (r2 == r3) goto L_0x0b39
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r9.messages
            int r3 = r2.size()
            r4 = 2
            int r3 = r3 - r4
            java.lang.Object r2 = r2.get(r3)
            im.bclpbkiauv.messenger.MessageObject r3 = r9.scrollToMessage
            if (r2 != r3) goto L_0x0b45
        L_0x0b39:
            androidx.recyclerview.widget.GridLayoutManagerFixed r2 = r9.chatLayoutManager
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r3 = r9.chatAdapter
            int r3 = r3.loadingUpRow
            r2.scrollToPositionWithOffset(r3, r0, r1)
            goto L_0x0b59
        L_0x0b45:
            androidx.recyclerview.widget.GridLayoutManagerFixed r2 = r9.chatLayoutManager
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r3 = r9.chatAdapter
            int r3 = r3.messagesStartRow
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r4 = r9.messages
            im.bclpbkiauv.messenger.MessageObject r6 = r9.scrollToMessage
            int r4 = r4.indexOf(r6)
            int r3 = r3 + r4
            r2.scrollToPositionWithOffset(r3, r0, r1)
        L_0x0b59:
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r9.chatListView
            r2.invalidate()
            int r2 = r9.scrollToMessagePosition
            r3 = -10000(0xffffffffffffd8f0, float:NaN)
            if (r2 == r3) goto L_0x0b6e
            r3 = -9000(0xffffffffffffdcd8, float:NaN)
            if (r2 != r3) goto L_0x0b69
            goto L_0x0b6e
        L_0x0b69:
            r3 = r19
            r4 = r51
            goto L_0x0bad
        L_0x0b6e:
            r2 = 1
            r9.showPagedownButton(r2, r2)
            if (r51 == 0) goto L_0x0ba9
            android.widget.TextView r2 = r9.pagedownButtonCounter
            if (r2 == 0) goto L_0x0ba4
            r3 = 0
            r2.setVisibility(r3)
            int r2 = r9.prevSetUnreadCount
            int r4 = r9.newUnreadMessageCount
            if (r2 == r4) goto L_0x0b9f
            android.widget.TextView r2 = r9.pagedownButtonCounter
            r4 = 1
            java.lang.Object[] r6 = new java.lang.Object[r4]
            r4 = r51
            r9.newUnreadMessageCount = r4
            java.lang.Integer r10 = java.lang.Integer.valueOf(r4)
            r6[r3] = r10
            r3 = r19
            java.lang.String r6 = java.lang.String.format(r3, r6)
            r2.setText(r6)
            int r2 = r9.newUnreadMessageCount
            r9.prevSetUnreadCount = r2
            goto L_0x0bad
        L_0x0b9f:
            r3 = r19
            r4 = r51
            goto L_0x0bad
        L_0x0ba4:
            r3 = r19
            r4 = r51
            goto L_0x0bad
        L_0x0ba9:
            r3 = r19
            r4 = r51
        L_0x0bad:
            r2 = -10000(0xffffffffffffd8f0, float:NaN)
            r9.scrollToMessagePosition = r2
            r2 = 0
            r9.scrollToMessage = r2
            goto L_0x0bbc
        L_0x0bb5:
            r3 = r19
            r4 = r51
            r61.moveScrollToLastMessage()
        L_0x0bbc:
            r0 = r42
            if (r0 == 0) goto L_0x0bdf
            r1 = 1
            r9.showMentionDownButton(r1, r1)
            android.widget.TextView r2 = r9.mentiondownButtonCounter
            if (r2 == 0) goto L_0x0bdf
            r6 = 0
            r2.setVisibility(r6)
            android.widget.TextView r2 = r9.mentiondownButtonCounter
            java.lang.Object[] r10 = new java.lang.Object[r1]
            r9.newMentionsCount = r0
            java.lang.Integer r1 = java.lang.Integer.valueOf(r0)
            r10[r6] = r1
            java.lang.String r1 = java.lang.String.format(r3, r10)
            r2.setText(r1)
        L_0x0bdf:
            boolean r1 = r9.paused
            if (r1 == 0) goto L_0x0bed
            r1 = 1
            r9.scrollToTopOnResume = r1
            im.bclpbkiauv.messenger.MessageObject r2 = r9.scrollToMessage
            if (r2 == 0) goto L_0x0bee
            r9.scrollToTopUnReadOnResume = r1
            goto L_0x0bee
        L_0x0bed:
            r1 = 1
        L_0x0bee:
            r2 = 0
            r9.listViewShowEmptyView(r1, r2)
            goto L_0x0c04
        L_0x0bf3:
            r50 = r1
            r17 = r3
            r0 = r42
            r4 = r51
            r1 = 1
            r9.scrollToTopOnResume = r1
            im.bclpbkiauv.messenger.MessageObject r2 = r9.scrollToMessage
            if (r2 == 0) goto L_0x0c04
            r9.scrollToTopUnReadOnResume = r1
        L_0x0c04:
            if (r11 == 0) goto L_0x0c51
            r1 = 0
        L_0x0c07:
            int r2 = r11.size()
            if (r1 >= r2) goto L_0x0c51
            java.lang.Object r2 = r11.valueAt(r1)
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r2 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessages) r2
            r2.calculate()
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r3 = r9.chatAdapter
            if (r3 == 0) goto L_0x0c4e
            if (r14 == 0) goto L_0x0c4e
            long r12 = r11.keyAt(r1)
            int r3 = r14.indexOfKey(r12)
            if (r3 < 0) goto L_0x0c4e
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r2.messages
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r2.messages
            int r6 = r6.size()
            r10 = 1
            int r6 = r6 - r10
            java.lang.Object r3 = r3.get(r6)
            im.bclpbkiauv.messenger.MessageObject r3 = (im.bclpbkiauv.messenger.MessageObject) r3
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r9.messages
            int r6 = r6.indexOf(r3)
            if (r6 < 0) goto L_0x0c4e
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r10 = r9.chatAdapter
            int r12 = r10.messagesStartRow
            int r12 = r12 + r6
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r13 = r2.messages
            int r13 = r13.size()
            r10.notifyItemRangeChanged(r12, r13)
        L_0x0c4e:
            int r1 = r1 + 1
            goto L_0x0c07
        L_0x0c51:
            boolean r1 = r9.first
            if (r1 == 0) goto L_0x0c60
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r9.messages
            int r1 = r1.size()
            if (r1 <= 0) goto L_0x0c60
            r1 = 0
            r9.first = r1
        L_0x0c60:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r9.messages
            boolean r1 = r1.isEmpty()
            if (r1 == 0) goto L_0x0c7d
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r1 = r9.currentEncryptedChat
            if (r1 != 0) goto L_0x0c7d
            im.bclpbkiauv.tgnet.TLRPC$User r1 = r9.currentUser
            if (r1 == 0) goto L_0x0c7d
            boolean r1 = r1.bot
            if (r1 == 0) goto L_0x0c7d
            java.lang.String r1 = r9.botUser
            if (r1 != 0) goto L_0x0c7d
            r9.botUser = r7
            r61.updateBottomOverlay()
        L_0x0c7d:
            if (r8 != 0) goto L_0x0c9e
            long r1 = r9.mergeDialogId
            r6 = 0
            int r3 = (r1 > r6 ? 1 : (r1 == r6 ? 0 : -1))
            if (r3 == 0) goto L_0x0c8c
            if (r5 == 0) goto L_0x0c8a
            goto L_0x0c8c
        L_0x0c8a:
            r2 = 0
            goto L_0x0c97
        L_0x0c8c:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r1 = r9.currentEncryptedChat
            if (r1 == 0) goto L_0x0c9e
            boolean[] r1 = r9.endReached
            r2 = 0
            boolean r1 = r1[r2]
            if (r1 != 0) goto L_0x0c9e
        L_0x0c97:
            r1 = 1
            r9.first = r1
            r9.listViewShowEmptyView(r1, r2)
            goto L_0x0ca6
        L_0x0c9e:
            android.widget.FrameLayout r1 = r9.progressView
            if (r1 == 0) goto L_0x0ca6
            r2 = 4
            r1.setVisibility(r2)
        L_0x0ca6:
            if (r8 != 0) goto L_0x0ce5
            long r1 = r9.mergeDialogId
            r6 = 0
            int r3 = (r1 > r6 ? 1 : (r1 == r6 ? 0 : -1))
            if (r3 == 0) goto L_0x0ce5
            if (r5 != 0) goto L_0x0ce5
            im.bclpbkiauv.messenger.NotificationCenter r1 = r61.getNotificationCenter()
            r2 = 8
            int[] r2 = new int[r2]
            int r3 = im.bclpbkiauv.messenger.NotificationCenter.chatInfoDidLoad
            r6 = 0
            r2[r6] = r3
            int r3 = im.bclpbkiauv.messenger.NotificationCenter.dialogsNeedReload
            r6 = 1
            r2[r6] = r3
            int r3 = im.bclpbkiauv.messenger.NotificationCenter.scheduledMessagesUpdated
            r6 = 2
            r2[r6] = r3
            int r3 = im.bclpbkiauv.messenger.NotificationCenter.closeChats
            r6 = 3
            r2[r6] = r3
            int r3 = im.bclpbkiauv.messenger.NotificationCenter.messagesDidLoad
            r6 = 4
            r2[r6] = r3
            int r3 = im.bclpbkiauv.messenger.NotificationCenter.botKeyboardDidLoad
            r6 = 5
            r2[r6] = r3
            int r3 = im.bclpbkiauv.messenger.NotificationCenter.userFullInfoDidLoad
            r6 = 6
            r2[r6] = r3
            int r3 = im.bclpbkiauv.messenger.NotificationCenter.needDeleteDialog
            r6 = 7
            r2[r6] = r3
            r1.setAllowedNotificationsDutingAnimation(r2)
        L_0x0ce5:
            if (r47 == 0) goto L_0x0cec
            r1 = 0
            r9.showFloatingDateView(r1)
            goto L_0x0ced
        L_0x0cec:
            r1 = 0
        L_0x0ced:
            r9.checkScrollForLoad(r1)
            r1 = 1
            r9.setItemAnimationsEnabled(r1)
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r1 = r9.actionBarHelper
            if (r1 == 0) goto L_0x0cfe
            r1.updateUnreadMessageCount()
            goto L_0x0cfe
        L_0x0cfc:
            r35 = r0
        L_0x0cfe:
            r10 = r62
            r11 = r64
            goto L_0x30be
        L_0x0d04:
            r7 = r6
            r3 = r19
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.emojiDidLoad
            r10 = r62
            if (r10 != r0) goto L_0x0d3f
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r9.chatListView
            if (r0 == 0) goto L_0x0d14
            r0.invalidateViews()
        L_0x0d14:
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r9.replyObjectTextView
            if (r0 == 0) goto L_0x0d1b
            r0.invalidate()
        L_0x0d1b:
            android.widget.TextView r0 = r9.alertTextView
            if (r0 == 0) goto L_0x0d22
            r0.invalidate()
        L_0x0d22:
            im.bclpbkiauv.ui.actionbar.SimpleTextView r0 = r9.pinnedMessageTextView
            if (r0 == 0) goto L_0x0d29
            r0.invalidate()
        L_0x0d29:
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r9.mentionListView
            if (r0 == 0) goto L_0x0d30
            r0.invalidateViews()
        L_0x0d30:
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r9.stickersListView
            if (r0 == 0) goto L_0x0d3b
            r0.invalidateViews()
            r11 = r64
            goto L_0x30be
        L_0x0d3b:
            r11 = r64
            goto L_0x30be
        L_0x0d3f:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.didUpdateConnectionState
            if (r10 != r0) goto L_0x0d62
            im.bclpbkiauv.tgnet.ConnectionsManager r0 = im.bclpbkiauv.tgnet.ConnectionsManager.getInstance(r63)
            int r0 = r0.getConnectionState()
            r1 = 3
            if (r0 != r1) goto L_0x0d52
            r1 = 0
            r9.checkAutoDownloadMessages(r1)
        L_0x0d52:
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r1 = r9.actionBarHelper
            if (r1 == 0) goto L_0x0d5e
            r1.updateUnreadMessageCount()
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r1 = r9.actionBarHelper
            r1.updateCurrentConnectionState(r0)
        L_0x0d5e:
            r11 = r64
            goto L_0x30be
        L_0x0d62:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.chatOnlineCountDidLoad
            if (r10 != r0) goto L_0x0d9a
            r11 = r64
            r1 = 0
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r1 = r9.chatInfo
            if (r1 == 0) goto L_0x0d99
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r9.currentChat
            if (r1 == 0) goto L_0x0d99
            int r1 = r1.id
            int r2 = r0.intValue()
            if (r1 == r2) goto L_0x0d7e
            goto L_0x0d99
        L_0x0d7e:
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r1 = r9.chatInfo
            r2 = 1
            r2 = r11[r2]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r2 = r2.intValue()
            r1.online_count = r2
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r1 = r9.actionBarHelper
            if (r1 == 0) goto L_0x0d97
            r1.updateOnlineCount()
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r1 = r9.actionBarHelper
            r1.updateSubtitle()
        L_0x0d97:
            goto L_0x30be
        L_0x0d99:
            return
        L_0x0d9a:
            r11 = r64
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.updateInterfaces
            if (r10 != r0) goto L_0x0e7c
            r1 = 0
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            r1 = r0 & 1
            if (r1 != 0) goto L_0x0db1
            r1 = r0 & 16
            if (r1 == 0) goto L_0x0deb
        L_0x0db1:
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r9.currentChat
            if (r1 == 0) goto L_0x0dca
            im.bclpbkiauv.messenger.MessagesController r1 = r61.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            int r2 = r2.id
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r1.getChat(r2)
            if (r1 == 0) goto L_0x0de3
            r9.currentChat = r1
            goto L_0x0de3
        L_0x0dca:
            im.bclpbkiauv.tgnet.TLRPC$User r1 = r9.currentUser
            if (r1 == 0) goto L_0x0de3
            im.bclpbkiauv.messenger.MessagesController r1 = r61.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$User r2 = r9.currentUser
            int r2 = r2.id
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            im.bclpbkiauv.tgnet.TLRPC$User r1 = r1.getUser(r2)
            if (r1 == 0) goto L_0x0de4
            r9.currentUser = r1
            goto L_0x0de4
        L_0x0de3:
        L_0x0de4:
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r1 = r9.actionBarHelper
            if (r1 == 0) goto L_0x0deb
            r1.updateTitle()
        L_0x0deb:
            r1 = 0
            r2 = r0 & 32
            if (r2 != 0) goto L_0x0df4
            r2 = r0 & 4
            if (r2 == 0) goto L_0x0e00
        L_0x0df4:
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r2 = r9.actionBarHelper
            if (r2 == 0) goto L_0x0dff
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r9.currentChat
            if (r3 == 0) goto L_0x0dff
            r2.updateOnlineCount()
        L_0x0dff:
            r1 = 1
        L_0x0e00:
            r2 = r0 & 2
            if (r2 != 0) goto L_0x0e0c
            r2 = r0 & 8
            if (r2 != 0) goto L_0x0e0c
            r2 = r0 & 1
            if (r2 == 0) goto L_0x0e12
        L_0x0e0c:
            r61.checkAndUpdateAvatar()
            r61.updateVisibleRows()
        L_0x0e12:
            r2 = r0 & 64
            if (r2 == 0) goto L_0x0e17
            r1 = 1
        L_0x0e17:
            r2 = r0 & 8192(0x2000, float:1.14794E-41)
            if (r2 == 0) goto L_0x0e43
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            if (r2 == 0) goto L_0x0e43
            im.bclpbkiauv.messenger.MessagesController r2 = r61.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r9.currentChat
            int r3 = r3.id
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r2.getChat(r3)
            if (r2 != 0) goto L_0x0e32
            return
        L_0x0e32:
            r9.currentChat = r2
            r1 = 1
            r61.updateBottomOverlay()
            im.bclpbkiauv.ui.components.ChatActivityEnterView r3 = r9.chatActivityEnterView
            if (r3 == 0) goto L_0x0e43
            long r4 = r9.dialog_id
            int r6 = r9.currentAccount
            r3.setDialogId(r4, r6)
        L_0x0e43:
            r2 = r0 & 256(0x100, float:3.59E-43)
            if (r2 == 0) goto L_0x0e69
            im.bclpbkiauv.ui.ChatActivity$UnreadCounterTextView r2 = r9.bottomOverlayChatText2
            if (r2 == 0) goto L_0x0e69
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            if (r2 == 0) goto L_0x0e69
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            boolean r2 = im.bclpbkiauv.messenger.ChatObject.isChannel(r2)
            if (r2 == 0) goto L_0x0e69
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            boolean r2 = r2.megagroup
            if (r2 != 0) goto L_0x0e69
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            int r2 = r2.linked_chat_id
            int r2 = -r2
            if (r2 == 0) goto L_0x0e69
            im.bclpbkiauv.ui.ChatActivity$UnreadCounterTextView r2 = r9.bottomOverlayChatText2
            r2.updateCounter()
        L_0x0e69:
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r2 = r9.actionBarHelper
            if (r2 == 0) goto L_0x0e72
            if (r1 == 0) goto L_0x0e72
            r2.updateSubtitle()
        L_0x0e72:
            r2 = r0 & 128(0x80, float:1.794E-43)
            if (r2 == 0) goto L_0x0e7a
            r2 = 1
            r9.updateTopPanel(r2)
        L_0x0e7a:
            goto L_0x30be
        L_0x0e7c:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.didReceiveNewMessages
            if (r10 != r0) goto L_0x195c
            r1 = 0
            r0 = r11[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r12 = r0.longValue()
            long r0 = r9.dialog_id
            int r2 = (r12 > r0 ? 1 : (r12 == r0 ? 0 : -1))
            if (r2 != 0) goto L_0x194f
            r0 = 2
            r1 = r11[r0]
            java.lang.Boolean r1 = (java.lang.Boolean) r1
            boolean r0 = r1.booleanValue()
            boolean r1 = r9.inScheduleMode
            if (r0 == r1) goto L_0x0ec2
            if (r1 != 0) goto L_0x0ec1
            boolean r1 = r9.isPaused
            if (r1 != 0) goto L_0x0ec1
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r9.forwardingMessages
            if (r1 != 0) goto L_0x0ec1
            r1 = 1
            r1 = r11[r1]
            java.util.ArrayList r1 = (java.util.ArrayList) r1
            boolean r2 = r1.isEmpty()
            if (r2 != 0) goto L_0x0ec1
            r2 = 0
            java.lang.Object r2 = r1.get(r2)
            im.bclpbkiauv.messenger.MessageObject r2 = (im.bclpbkiauv.messenger.MessageObject) r2
            int r2 = r2.getId()
            if (r2 >= 0) goto L_0x0ec1
            r61.openScheduledMessages()
        L_0x0ec1:
            return
        L_0x0ec2:
            im.bclpbkiauv.messenger.UserConfig r1 = r61.getUserConfig()
            int r8 = r1.getClientUserId()
            r1 = 0
            r2 = 0
            r4 = 1
            r5 = r11[r4]
            r14 = r5
            java.util.ArrayList r14 = (java.util.ArrayList) r14
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r5 = r9.currentEncryptedChat
            if (r5 == 0) goto L_0x0f71
            int r5 = r14.size()
            if (r5 != r4) goto L_0x0f71
            r4 = 0
            java.lang.Object r5 = r14.get(r4)
            r4 = r5
            im.bclpbkiauv.messenger.MessageObject r4 = (im.bclpbkiauv.messenger.MessageObject) r4
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r5 = r9.currentEncryptedChat
            if (r5 == 0) goto L_0x0f6e
            boolean r5 = r4.isOut()
            if (r5 == 0) goto L_0x0f6e
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r4.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r5 = r5.action
            boolean r5 = r5 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageEncryptedAction
            if (r5 == 0) goto L_0x0f6e
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r4.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r5 = r5.action
            im.bclpbkiauv.tgnet.TLRPC$DecryptedMessageAction r5 = r5.encryptedAction
            boolean r5 = r5 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL
            if (r5 == 0) goto L_0x0f6e
            androidx.fragment.app.FragmentActivity r5 = r61.getParentActivity()
            if (r5 == 0) goto L_0x0f6e
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r5 = r9.currentEncryptedChat
            int r5 = r5.layer
            int r5 = im.bclpbkiauv.messenger.AndroidUtilities.getPeerLayerVersion(r5)
            r6 = 17
            if (r5 >= r6) goto L_0x0f6b
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r5 = r9.currentEncryptedChat
            int r5 = r5.ttl
            if (r5 <= 0) goto L_0x0f6b
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r5 = r9.currentEncryptedChat
            int r5 = r5.ttl
            r6 = 60
            if (r5 > r6) goto L_0x0f6b
            im.bclpbkiauv.ui.actionbar.AlertDialog$Builder r5 = new im.bclpbkiauv.ui.actionbar.AlertDialog$Builder
            androidx.fragment.app.FragmentActivity r6 = r61.getParentActivity()
            r5.<init>((android.content.Context) r6)
            r6 = 2131689824(0x7f0f0160, float:1.9008674E38)
            java.lang.String r15 = "AppName"
            java.lang.String r6 = im.bclpbkiauv.messenger.LocaleController.getString(r15, r6)
            r5.setTitle(r6)
            r6 = 2131692462(0x7f0f0bae, float:1.9014025E38)
            java.lang.String r15 = "OK"
            java.lang.String r6 = im.bclpbkiauv.messenger.LocaleController.getString(r15, r6)
            r15 = 0
            r5.setPositiveButton(r6, r15)
            r15 = 2
            java.lang.Object[] r6 = new java.lang.Object[r15]
            im.bclpbkiauv.tgnet.TLRPC$User r15 = r9.currentUser
            java.lang.String r15 = r15.first_name
            r24 = 0
            r6[r24] = r15
            im.bclpbkiauv.tgnet.TLRPC$User r15 = r9.currentUser
            java.lang.String r15 = r15.first_name
            r24 = 1
            r6[r24] = r15
            java.lang.String r15 = "CompatibilityChat"
            r24 = r0
            r0 = 2131690660(0x7f0f04a4, float:1.901037E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.formatString(r15, r0, r6)
            r5.setMessage(r0)
            im.bclpbkiauv.ui.actionbar.AlertDialog r0 = r5.create()
            r9.showDialog(r0)
            goto L_0x0f73
        L_0x0f6b:
            r24 = r0
            goto L_0x0f73
        L_0x0f6e:
            r24 = r0
            goto L_0x0f73
        L_0x0f71:
            r24 = r0
        L_0x0f73:
            r0 = 0
            r4 = 0
        L_0x0f75:
            int r5 = r14.size()
            if (r4 >= r5) goto L_0x1126
            java.lang.Object r5 = r14.get(r4)
            im.bclpbkiauv.messenger.MessageObject r5 = (im.bclpbkiauv.messenger.MessageObject) r5
            boolean r6 = r5.isOut()
            if (r6 == 0) goto L_0x1011
            if (r0 != 0) goto L_0x0f9d
            r0 = 1
            im.bclpbkiauv.messenger.NotificationCenter r6 = im.bclpbkiauv.messenger.NotificationCenter.getGlobalInstance()
            int r15 = im.bclpbkiauv.messenger.NotificationCenter.closeSearchByActiveAction
            r28 = r0
            r19 = r1
            r1 = 0
            java.lang.Object[] r0 = new java.lang.Object[r1]
            r6.postNotificationName(r15, r0)
            r0 = r28
            goto L_0x0f9f
        L_0x0f9d:
            r19 = r1
        L_0x0f9f:
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r9.currentChat
            if (r1 == 0) goto L_0x100a
            boolean r1 = r1.slowmode_enabled
            if (r1 == 0) goto L_0x100a
            boolean r1 = r5.isSent()
            if (r1 == 0) goto L_0x100a
            boolean r1 = r9.inScheduleMode
            if (r1 != 0) goto L_0x100a
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r1 = r9.chatInfo
            if (r1 == 0) goto L_0x0ff8
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r5.messageOwner
            int r1 = r1.date
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r6 = r9.chatInfo
            int r6 = r6.slowmode_seconds
            int r1 = r1 + r6
            im.bclpbkiauv.tgnet.ConnectionsManager r6 = r61.getConnectionsManager()
            int r6 = r6.getCurrentTime()
            im.bclpbkiauv.tgnet.ConnectionsManager r15 = r61.getConnectionsManager()
            int r15 = r15.getCurrentTime()
            if (r1 <= r15) goto L_0x0ff3
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r15 = r9.chatInfo
            r28 = r0
            int r0 = r15.slowmode_next_send_date
            r29 = r2
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            int r2 = r2.slowmode_seconds
            int r2 = r2 + r6
            int r2 = java.lang.Math.min(r2, r1)
            int r0 = java.lang.Math.max(r0, r2)
            r15.slowmode_next_send_date = r0
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r9.chatActivityEnterView
            if (r0 == 0) goto L_0x0ffc
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            int r2 = r2.slowmode_next_send_date
            r0.setSlowModeTimer(r2)
            goto L_0x0ffc
        L_0x0ff3:
            r28 = r0
            r29 = r2
            goto L_0x0ffc
        L_0x0ff8:
            r28 = r0
            r29 = r2
        L_0x0ffc:
            im.bclpbkiauv.messenger.MessagesController r0 = r61.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r9.currentChat
            int r1 = r1.id
            r2 = 0
            r6 = 1
            r0.loadFullChat(r1, r2, r6)
            goto L_0x100e
        L_0x100a:
            r28 = r0
            r29 = r2
        L_0x100e:
            r0 = r28
            goto L_0x1015
        L_0x1011:
            r19 = r1
            r29 = r2
        L_0x1015:
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r9.currentChat
            if (r1 == 0) goto L_0x1068
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r5.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r1 = r1.action
            boolean r1 = r1 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatDeleteUser
            if (r1 == 0) goto L_0x1029
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r5.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r1 = r1.action
            int r1 = r1.user_id
            if (r1 == r8) goto L_0x1041
        L_0x1029:
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r5.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r1 = r1.action
            boolean r1 = r1 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatAddUser
            if (r1 == 0) goto L_0x1065
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r5.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r1 = r1.action
            java.util.ArrayList<java.lang.Integer> r1 = r1.users
            java.lang.Integer r2 = java.lang.Integer.valueOf(r8)
            boolean r1 = r1.contains(r2)
            if (r1 == 0) goto L_0x1065
        L_0x1041:
            im.bclpbkiauv.messenger.MessagesController r1 = r61.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            int r2 = r2.id
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r1.getChat(r2)
            if (r1 == 0) goto L_0x1062
            r9.currentChat = r1
            r61.checkActionBarMenu()
            r61.updateBottomOverlay()
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r2 = r9.actionBarHelper
            if (r2 == 0) goto L_0x1062
            r2.updateSubtitle()
        L_0x1062:
            r28 = r0
            goto L_0x10c1
        L_0x1065:
            r28 = r0
            goto L_0x10c1
        L_0x1068:
            long r1 = r9.inlineReturn
            r20 = 0
            int r6 = (r1 > r20 ? 1 : (r1 == r20 ? 0 : -1))
            if (r6 == 0) goto L_0x10bf
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r5.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$ReplyMarkup r1 = r1.reply_markup
            if (r1 == 0) goto L_0x10bc
            r1 = 0
        L_0x1077:
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r5.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$ReplyMarkup r2 = r2.reply_markup
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$TL_keyboardButtonRow> r2 = r2.rows
            int r2 = r2.size()
            if (r1 >= r2) goto L_0x10b9
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r5.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$ReplyMarkup r2 = r2.reply_markup
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$TL_keyboardButtonRow> r2 = r2.rows
            java.lang.Object r2 = r2.get(r1)
            im.bclpbkiauv.tgnet.TLRPC$TL_keyboardButtonRow r2 = (im.bclpbkiauv.tgnet.TLRPC.TL_keyboardButtonRow) r2
            r6 = 0
        L_0x1090:
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$KeyboardButton> r15 = r2.buttons
            int r15 = r15.size()
            if (r6 >= r15) goto L_0x10b2
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$KeyboardButton> r15 = r2.buttons
            java.lang.Object r15 = r15.get(r6)
            im.bclpbkiauv.tgnet.TLRPC$KeyboardButton r15 = (im.bclpbkiauv.tgnet.TLRPC.KeyboardButton) r15
            r28 = r0
            boolean r0 = r15 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_keyboardButtonSwitchInline
            if (r0 == 0) goto L_0x10ad
            r0 = r15
            im.bclpbkiauv.tgnet.TLRPC$TL_keyboardButtonSwitchInline r0 = (im.bclpbkiauv.tgnet.TLRPC.TL_keyboardButtonSwitchInline) r0
            r9.processSwitchButton(r0)
            goto L_0x10b4
        L_0x10ad:
            int r6 = r6 + 1
            r0 = r28
            goto L_0x1090
        L_0x10b2:
            r28 = r0
        L_0x10b4:
            int r1 = r1 + 1
            r0 = r28
            goto L_0x1077
        L_0x10b9:
            r28 = r0
            goto L_0x10c1
        L_0x10bc:
            r28 = r0
            goto L_0x10c1
        L_0x10bf:
            r28 = r0
        L_0x10c1:
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r5.messageOwner
            int r0 = r0.reply_to_msg_id
            if (r0 == 0) goto L_0x111c
            im.bclpbkiauv.messenger.MessageObject r0 = r5.replyMessageObject
            if (r0 != 0) goto L_0x111c
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r0 = r9.messagesDict
            r1 = 0
            r0 = r0[r1]
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r5.messageOwner
            int r1 = r1.reply_to_msg_id
            java.lang.Object r0 = r0.get(r1)
            im.bclpbkiauv.messenger.MessageObject r0 = (im.bclpbkiauv.messenger.MessageObject) r0
            r5.replyMessageObject = r0
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r5.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r0 = r0.action
            boolean r0 = r0 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionPinMessage
            if (r0 == 0) goto L_0x10e9
            r1 = 0
            r5.generatePinMessageText(r1, r1)
            goto L_0x1101
        L_0x10e9:
            r1 = 0
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r5.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r0 = r0.action
            boolean r0 = r0 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionGameScore
            if (r0 == 0) goto L_0x10f6
            r5.generateGameMessageText(r1)
            goto L_0x1101
        L_0x10f6:
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r5.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r0 = r0.action
            boolean r0 = r0 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionPaymentSent
            if (r0 == 0) goto L_0x1101
            r5.generatePaymentSentMessageText(r1)
        L_0x1101:
            boolean r0 = r5.isMegagroup()
            if (r0 == 0) goto L_0x111c
            im.bclpbkiauv.messenger.MessageObject r0 = r5.replyMessageObject
            if (r0 == 0) goto L_0x111c
            im.bclpbkiauv.messenger.MessageObject r0 = r5.replyMessageObject
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r0.messageOwner
            if (r0 == 0) goto L_0x111c
            im.bclpbkiauv.messenger.MessageObject r0 = r5.replyMessageObject
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r0.messageOwner
            int r1 = r0.flags
            r2 = -2147483648(0xffffffff80000000, float:-0.0)
            r1 = r1 | r2
            r0.flags = r1
        L_0x111c:
            int r4 = r4 + 1
            r1 = r19
            r0 = r28
            r2 = r29
            goto L_0x0f75
        L_0x1126:
            r19 = r1
            r29 = r2
            boolean r1 = r9.inScheduleMode
            if (r1 == 0) goto L_0x113a
            boolean r1 = r14.isEmpty()
            if (r1 != 0) goto L_0x113a
            r1 = 0
            r2 = 1
            r9.replaceMessageObjects(r14, r1, r2)
            goto L_0x113b
        L_0x113a:
            r1 = 0
        L_0x113b:
            r2 = 0
            boolean[] r4 = r9.forwardEndReached
            boolean r4 = r4[r1]
            if (r4 != 0) goto L_0x12ac
            r1 = -2147483648(0xffffffff80000000, float:-0.0)
            r4 = -2147483648(0xffffffff80000000, float:-0.0)
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r5 = r9.currentEncryptedChat
            if (r5 == 0) goto L_0x114d
            r4 = 2147483647(0x7fffffff, float:NaN)
        L_0x114d:
            r5 = 0
        L_0x114e:
            int r6 = r14.size()
            if (r5 >= r6) goto L_0x1254
            java.lang.Object r6 = r14.get(r5)
            im.bclpbkiauv.messenger.MessageObject r6 = (im.bclpbkiauv.messenger.MessageObject) r6
            int r7 = r6.getId()
            boolean r15 = r9.inScheduleMode
            if (r15 != 0) goto L_0x1179
            im.bclpbkiauv.tgnet.TLRPC$User r15 = r9.currentUser
            if (r15 == 0) goto L_0x1179
            boolean r15 = r15.bot
            if (r15 == 0) goto L_0x1170
            boolean r15 = r6.isOut()
            if (r15 != 0) goto L_0x1176
        L_0x1170:
            im.bclpbkiauv.tgnet.TLRPC$User r15 = r9.currentUser
            int r15 = r15.id
            if (r15 != r8) goto L_0x1179
        L_0x1176:
            r6.setIsRead()
        L_0x1179:
            im.bclpbkiauv.tgnet.TLRPC$Message r15 = r6.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r15 = r15.action
            r28 = r0
            boolean r0 = r15 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatMigrateTo
            if (r0 == 0) goto L_0x1187
            r9.migrateToNewChat(r6)
            return
        L_0x1187:
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r9.currentChat
            if (r0 == 0) goto L_0x1199
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x1199
            boolean r0 = r15 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatAddUser
            if (r0 != 0) goto L_0x1197
            boolean r0 = r15 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatDeleteUser
            if (r0 == 0) goto L_0x1199
        L_0x1197:
            r0 = 1
            r2 = r0
        L_0x1199:
            if (r5 != 0) goto L_0x11af
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r6.messageOwner
            int r0 = r0.id
            if (r0 >= 0) goto L_0x11af
            int r0 = r6.type
            r16 = r2
            r2 = 5
            if (r0 != r2) goto L_0x11b1
            boolean r0 = r9.inScheduleMode
            if (r0 != 0) goto L_0x11b1
            r9.needAnimateToMessage = r6
            goto L_0x11b1
        L_0x11af:
            r16 = r2
        L_0x11b1:
            boolean r0 = r6.isOut()
            if (r0 == 0) goto L_0x11c2
            boolean r0 = r6.isSending()
            if (r0 == 0) goto L_0x11c2
            r2 = 0
            r9.scrollToLastMessage(r2)
            return
        L_0x11c2:
            int r0 = r6.type
            if (r0 < 0) goto L_0x124c
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r0 = r9.messagesDict
            r2 = 0
            r0 = r0[r2]
            int r0 = r0.indexOfKey(r7)
            if (r0 < 0) goto L_0x11d3
            goto L_0x124c
        L_0x11d3:
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r9.currentChat
            if (r0 == 0) goto L_0x11ed
            boolean r0 = r0.creator
            if (r0 == 0) goto L_0x11ed
            boolean r0 = r15 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatCreate
            if (r0 != 0) goto L_0x124c
            boolean r0 = r15 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatEditPhoto
            if (r0 == 0) goto L_0x11ed
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r0 = r9.messages
            int r0 = r0.size()
            r2 = 4
            if (r0 >= r2) goto L_0x11ed
            goto L_0x124c
        L_0x11ed:
            boolean r0 = r15 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChannelMigrateFrom
            if (r0 == 0) goto L_0x11f2
            goto L_0x124c
        L_0x11f2:
            r2 = 0
            r9.addToPolls(r6, r2)
            r6.checkLayout()
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r6.messageOwner
            int r0 = r0.date
            int r0 = java.lang.Math.max(r1, r0)
            if (r7 <= 0) goto L_0x1210
            int r4 = java.lang.Math.max(r7, r4)
            int r1 = r9.last_message_id
            int r1 = java.lang.Math.max(r1, r7)
            r9.last_message_id = r1
            goto L_0x1220
        L_0x1210:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r1 = r9.currentEncryptedChat
            if (r1 == 0) goto L_0x1220
            int r4 = java.lang.Math.min(r7, r4)
            int r1 = r9.last_message_id
            int r1 = java.lang.Math.min(r1, r7)
            r9.last_message_id = r1
        L_0x1220:
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r6.messageOwner
            boolean r1 = r1.mentioned
            if (r1 == 0) goto L_0x1233
            boolean r1 = r6.isContentUnread()
            if (r1 == 0) goto L_0x1233
            int r1 = r9.newMentionsCount
            r2 = 1
            int r1 = r1 + r2
            r9.newMentionsCount = r1
            goto L_0x1234
        L_0x1233:
            r2 = 1
        L_0x1234:
            int r1 = r9.newUnreadMessageCount
            int r1 = r1 + r2
            r9.newUnreadMessageCount = r1
            int r1 = r6.type
            r2 = 10
            if (r1 == r2) goto L_0x1248
            int r1 = r6.type
            r2 = 11
            if (r1 != r2) goto L_0x1246
            goto L_0x1248
        L_0x1246:
            r1 = r0
            goto L_0x124c
        L_0x1248:
            r1 = 1
            r19 = r1
            r1 = r0
        L_0x124c:
            int r5 = r5 + 1
            r2 = r16
            r0 = r28
            goto L_0x114e
        L_0x1254:
            r28 = r0
            int r0 = r9.newUnreadMessageCount
            if (r0 == 0) goto L_0x127c
            android.widget.TextView r0 = r9.pagedownButtonCounter
            if (r0 == 0) goto L_0x127c
            r5 = 0
            r0.setVisibility(r5)
            int r0 = r9.prevSetUnreadCount
            int r6 = r9.newUnreadMessageCount
            if (r0 == r6) goto L_0x127c
            r9.prevSetUnreadCount = r6
            android.widget.TextView r0 = r9.pagedownButtonCounter
            r7 = 1
            java.lang.Object[] r15 = new java.lang.Object[r7]
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
            r15[r5] = r6
            java.lang.String r5 = java.lang.String.format(r3, r15)
            r0.setText(r5)
        L_0x127c:
            int r0 = r9.newMentionsCount
            if (r0 == 0) goto L_0x129f
            android.widget.TextView r0 = r9.mentiondownButtonCounter
            if (r0 == 0) goto L_0x129f
            r5 = 0
            r0.setVisibility(r5)
            android.widget.TextView r0 = r9.mentiondownButtonCounter
            r6 = 1
            java.lang.Object[] r7 = new java.lang.Object[r6]
            int r15 = r9.newMentionsCount
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)
            r7[r5] = r15
            java.lang.String r3 = java.lang.String.format(r3, r7)
            r0.setText(r3)
            r9.showMentionDownButton(r6, r6)
        L_0x129f:
            r61.updateVisibleRows()
            r23 = r2
            r32 = r8
            r35 = r12
            r31 = r14
            goto L_0x18f5
        L_0x12ac:
            r28 = r0
            r0 = 0
            r1 = 0
            boolean r4 = im.bclpbkiauv.messenger.BuildVars.LOGS_ENABLED
            if (r4 == 0) goto L_0x12d6
            java.lang.StringBuilder r4 = new java.lang.StringBuilder
            r4.<init>()
            java.lang.String r5 = "received new messages "
            r4.append(r5)
            int r5 = r14.size()
            r4.append(r5)
            java.lang.String r5 = " in dialog "
            r4.append(r5)
            long r5 = r9.dialog_id
            r4.append(r5)
            java.lang.String r4 = r4.toString()
            im.bclpbkiauv.messenger.FileLog.d(r4)
        L_0x12d6:
            r4 = 0
            r5 = r4
            r4 = r2
            r2 = r29
        L_0x12db:
            int r6 = r14.size()
            if (r5 >= r6) goto L_0x17e1
            java.lang.Object r6 = r14.get(r5)
            im.bclpbkiauv.messenger.MessageObject r6 = (im.bclpbkiauv.messenger.MessageObject) r6
            boolean r15 = r6.scheduled
            r23 = r4
            boolean r4 = r9.inScheduleMode
            if (r15 == r4) goto L_0x1300
            r38 = r2
            r32 = r8
            r35 = r12
            r31 = r14
            r2 = -10000(0xffffffffffffd8f0, float:NaN)
            r11 = 11
            r12 = r3
            r3 = 10
            goto L_0x17d0
        L_0x1300:
            r4 = -1
            int r15 = r6.getId()
            r29 = r4
            boolean r4 = r9.inScheduleMode
            if (r4 == 0) goto L_0x136d
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r4 = r9.messagesDict
            r31 = 0
            r4 = r4[r31]
            int r4 = r4.indexOfKey(r15)
            if (r4 < 0) goto L_0x136d
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r4 = r9.messagesDict
            r4 = r4[r31]
            java.lang.Object r4 = r4.get(r15)
            im.bclpbkiauv.messenger.MessageObject r4 = (im.bclpbkiauv.messenger.MessageObject) r4
            r35 = r12
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r12 = r9.messagesDict
            r12 = r12[r31]
            r12.remove(r15)
            if (r4 == 0) goto L_0x136f
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r12 = r9.messages
            int r12 = r12.indexOf(r4)
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r13 = r9.messages
            r13.remove(r12)
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r13 = r9.messagesByDays
            java.lang.String r11 = r4.dateKey
            java.lang.Object r11 = r13.get(r11)
            java.util.ArrayList r11 = (java.util.ArrayList) r11
            r11.remove(r4)
            boolean r13 = r11.isEmpty()
            if (r13 == 0) goto L_0x1363
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r13 = r9.messagesByDays
            r31 = r11
            java.lang.String r11 = r4.dateKey
            r13.remove(r11)
            if (r12 < 0) goto L_0x1365
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r11 = r9.messages
            int r11 = r11.size()
            if (r12 >= r11) goto L_0x1365
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r11 = r9.messages
            r11.remove(r12)
            goto L_0x1365
        L_0x1363:
            r31 = r11
        L_0x1365:
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r11 = r9.chatAdapter
            if (r11 == 0) goto L_0x136f
            r11.notifyDataSetChanged()
            goto L_0x136f
        L_0x136d:
            r35 = r12
        L_0x136f:
            boolean r4 = r61.isSecretChat()
            if (r4 == 0) goto L_0x1378
            r9.checkSecretMessageForLocation(r6)
        L_0x1378:
            boolean r4 = r9.inScheduleMode
            if (r4 != 0) goto L_0x1393
            im.bclpbkiauv.tgnet.TLRPC$User r4 = r9.currentUser
            if (r4 == 0) goto L_0x1393
            boolean r4 = r4.bot
            if (r4 == 0) goto L_0x138a
            boolean r4 = r6.isOut()
            if (r4 != 0) goto L_0x1390
        L_0x138a:
            im.bclpbkiauv.tgnet.TLRPC$User r4 = r9.currentUser
            int r4 = r4.id
            if (r4 != r8) goto L_0x1393
        L_0x1390:
            r6.setIsRead()
        L_0x1393:
            im.bclpbkiauv.tgnet.TLRPC$Message r4 = r6.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r4 = r4.action
            int r11 = r6.type
            if (r11 < 0) goto L_0x17c3
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r11 = r9.messagesDict
            r12 = 0
            r11 = r11[r12]
            int r11 = r11.indexOfKey(r15)
            if (r11 < 0) goto L_0x13b5
            r38 = r2
            r12 = r3
            r32 = r8
            r31 = r14
            r2 = -10000(0xffffffffffffd8f0, float:NaN)
            r3 = 10
            r11 = 11
            goto L_0x17d0
        L_0x13b5:
            im.bclpbkiauv.tgnet.TLRPC$Chat r11 = r9.currentChat
            if (r11 == 0) goto L_0x13ec
            boolean r11 = r11.creator
            if (r11 == 0) goto L_0x13ec
            boolean r11 = r4 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatCreate
            if (r11 != 0) goto L_0x13dd
            boolean r11 = r4 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatEditPhoto
            if (r11 == 0) goto L_0x13ec
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r11 = r9.messages
            int r11 = r11.size()
            r12 = 4
            if (r11 >= r12) goto L_0x13ec
            r38 = r2
            r12 = r3
            r32 = r8
            r31 = r14
            r2 = -10000(0xffffffffffffd8f0, float:NaN)
            r3 = 10
            r11 = 11
            goto L_0x17d0
        L_0x13dd:
            r38 = r2
            r12 = r3
            r32 = r8
            r31 = r14
            r2 = -10000(0xffffffffffffd8f0, float:NaN)
            r3 = 10
            r11 = 11
            goto L_0x17d0
        L_0x13ec:
            boolean r11 = r4 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChannelMigrateFrom
            if (r11 == 0) goto L_0x13ff
            r38 = r2
            r12 = r3
            r32 = r8
            r31 = r14
            r2 = -10000(0xffffffffffffd8f0, float:NaN)
            r3 = 10
            r11 = 11
            goto L_0x17d0
        L_0x13ff:
            r11 = 0
            r9.addToPolls(r6, r11)
            if (r5 != 0) goto L_0x1419
            im.bclpbkiauv.tgnet.TLRPC$Message r11 = r6.messageOwner
            int r11 = r11.id
            if (r11 >= 0) goto L_0x1419
            int r11 = r6.type
            r12 = 5
            if (r11 != r12) goto L_0x1419
            boolean r11 = r9.inScheduleMode
            if (r11 != 0) goto L_0x1419
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r11 = r9.animatingMessageObjects
            r11.add(r6)
        L_0x1419:
            boolean r11 = r6.hasValidGroupId()
            if (r11 == 0) goto L_0x1458
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r11 = r9.groupedMessagesMap
            long r12 = r6.getGroupId()
            java.lang.Object r11 = r11.get(r12)
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r11 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessages) r11
            if (r11 != 0) goto L_0x1443
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r12 = new im.bclpbkiauv.messenger.MessageObject$GroupedMessages
            r12.<init>()
            r11 = r12
            long r12 = r6.getGroupId()
            r11.groupId = r12
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r12 = r9.groupedMessagesMap
            r31 = r14
            long r13 = r11.groupId
            r12.put(r13, r11)
            goto L_0x1445
        L_0x1443:
            r31 = r14
        L_0x1445:
            if (r0 != 0) goto L_0x144d
            android.util.LongSparseArray r12 = new android.util.LongSparseArray
            r12.<init>()
            r0 = r12
        L_0x144d:
            long r12 = r11.groupId
            r0.put(r12, r11)
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r12 = r11.messages
            r12.add(r6)
            goto L_0x145b
        L_0x1458:
            r31 = r14
            r11 = 0
        L_0x145b:
            if (r11 == 0) goto L_0x1483
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r12 = r11.messages
            int r12 = r12.size()
            r13 = 1
            if (r12 <= r13) goto L_0x1479
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r13 = r11.messages
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r14 = r11.messages
            int r14 = r14.size()
            r30 = 2
            int r14 = r14 + -2
            java.lang.Object r13 = r13.get(r14)
            im.bclpbkiauv.messenger.MessageObject r13 = (im.bclpbkiauv.messenger.MessageObject) r13
            goto L_0x147a
        L_0x1479:
            r13 = 0
        L_0x147a:
            if (r13 == 0) goto L_0x1483
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r14 = r9.messages
            int r14 = r14.indexOf(r13)
            goto L_0x1485
        L_0x1483:
            r14 = r29
        L_0x1485:
            r12 = -1
            if (r14 != r12) goto L_0x1569
            boolean r12 = r6.scheduled
            if (r12 != 0) goto L_0x1492
            im.bclpbkiauv.tgnet.TLRPC$Message r12 = r6.messageOwner
            int r12 = r12.id
            if (r12 < 0) goto L_0x149a
        L_0x1492:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r12 = r9.messages
            boolean r12 = r12.isEmpty()
            if (r12 == 0) goto L_0x14a4
        L_0x149a:
            r14 = 0
            r38 = r2
            r12 = r3
            r32 = r8
            r37 = r11
            goto L_0x1570
        L_0x14a4:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r12 = r9.messages
            int r12 = r12.size()
            r13 = 0
        L_0x14ab:
            if (r13 >= r12) goto L_0x154e
            r32 = r8
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r8 = r9.messages
            java.lang.Object r8 = r8.get(r13)
            im.bclpbkiauv.messenger.MessageObject r8 = (im.bclpbkiauv.messenger.MessageObject) r8
            r37 = r11
            int r11 = r8.type
            if (r11 < 0) goto L_0x153a
            im.bclpbkiauv.tgnet.TLRPC$Message r11 = r8.messageOwner
            int r11 = r11.date
            if (r11 <= 0) goto L_0x153a
            boolean r11 = r9.inScheduleMode
            if (r11 != 0) goto L_0x14e0
            im.bclpbkiauv.tgnet.TLRPC$Message r11 = r8.messageOwner
            int r11 = r11.id
            if (r11 <= 0) goto L_0x14e0
            im.bclpbkiauv.tgnet.TLRPC$Message r11 = r6.messageOwner
            int r11 = r11.id
            if (r11 <= 0) goto L_0x14e0
            im.bclpbkiauv.tgnet.TLRPC$Message r11 = r8.messageOwner
            int r11 = r11.id
            r29 = r12
            im.bclpbkiauv.tgnet.TLRPC$Message r12 = r6.messageOwner
            int r12 = r12.id
            if (r11 < r12) goto L_0x14ec
            goto L_0x14e2
        L_0x14e0:
            r29 = r12
        L_0x14e2:
            im.bclpbkiauv.tgnet.TLRPC$Message r11 = r8.messageOwner
            int r11 = r11.date
            im.bclpbkiauv.tgnet.TLRPC$Message r12 = r6.messageOwner
            int r12 = r12.date
            if (r11 > r12) goto L_0x1534
        L_0x14ec:
            long r11 = r8.getGroupId()
            r20 = 0
            int r38 = (r11 > r20 ? 1 : (r11 == r20 ? 0 : -1))
            if (r38 == 0) goto L_0x1511
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r11 = r9.groupedMessagesMap
            r38 = r2
            r12 = r3
            long r2 = r8.getGroupId()
            java.lang.Object r2 = r11.get(r2)
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r2 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessages) r2
            if (r2 == 0) goto L_0x1515
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r2.messages
            int r3 = r3.size()
            if (r3 != 0) goto L_0x1515
            r2 = 0
            goto L_0x1515
        L_0x1511:
            r38 = r2
            r12 = r3
            r2 = 0
        L_0x1515:
            if (r2 != 0) goto L_0x151a
            r3 = r13
            r14 = r3
            goto L_0x1557
        L_0x151a:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r9.messages
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r11 = r2.messages
            r39 = r8
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r8 = r2.messages
            int r8 = r8.size()
            r33 = 1
            int r8 = r8 + -1
            java.lang.Object r8 = r11.get(r8)
            int r3 = r3.indexOf(r8)
            r14 = r3
            goto L_0x1557
        L_0x1534:
            r38 = r2
            r12 = r3
            r39 = r8
            goto L_0x1541
        L_0x153a:
            r38 = r2
            r39 = r8
            r29 = r12
            r12 = r3
        L_0x1541:
            int r13 = r13 + 1
            r3 = r12
            r12 = r29
            r8 = r32
            r11 = r37
            r2 = r38
            goto L_0x14ab
        L_0x154e:
            r38 = r2
            r32 = r8
            r37 = r11
            r29 = r12
            r12 = r3
        L_0x1557:
            r2 = -1
            if (r14 == r2) goto L_0x1562
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r9.messages
            int r2 = r2.size()
            if (r14 <= r2) goto L_0x1570
        L_0x1562:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r9.messages
            int r14 = r2.size()
            goto L_0x1570
        L_0x1569:
            r38 = r2
            r12 = r3
            r32 = r8
            r37 = r11
        L_0x1570:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r2 = r9.currentEncryptedChat
            if (r2 == 0) goto L_0x15b2
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r6.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r2 = r2.media
            boolean r2 = r2 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageMediaWebPage
            if (r2 == 0) goto L_0x15b2
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r6.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r2 = r2.media
            im.bclpbkiauv.tgnet.TLRPC$WebPage r2 = r2.webpage
            boolean r2 = r2 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_webPageUrlPending
            if (r2 == 0) goto L_0x15b2
            if (r1 != 0) goto L_0x158e
            java.util.HashMap r2 = new java.util.HashMap
            r2.<init>()
            r1 = r2
        L_0x158e:
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r6.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r2 = r2.media
            im.bclpbkiauv.tgnet.TLRPC$WebPage r2 = r2.webpage
            java.lang.String r2 = r2.url
            java.lang.Object r2 = r1.get(r2)
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            if (r2 != 0) goto L_0x15af
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            r2 = r3
            im.bclpbkiauv.tgnet.TLRPC$Message r3 = r6.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r3 = r3.media
            im.bclpbkiauv.tgnet.TLRPC$WebPage r3 = r3.webpage
            java.lang.String r3 = r3.url
            r1.put(r3, r2)
        L_0x15af:
            r2.add(r6)
        L_0x15b2:
            r6.checkLayout()
            boolean r2 = r4 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatMigrateTo
            if (r2 == 0) goto L_0x15d2
            r9.migrateToNewChat(r6)
            if (r0 == 0) goto L_0x15d1
            r2 = 0
        L_0x15bf:
            int r3 = r0.size()
            if (r2 >= r3) goto L_0x15d1
            java.lang.Object r3 = r0.valueAt(r2)
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r3 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessages) r3
            r3.calculate()
            int r2 = r2 + 1
            goto L_0x15bf
        L_0x15d1:
            return
        L_0x15d2:
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            if (r2 == 0) goto L_0x15e4
            boolean r2 = r2.megagroup
            if (r2 == 0) goto L_0x15e4
            boolean r2 = r4 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatAddUser
            if (r2 != 0) goto L_0x15e2
            boolean r2 = r4 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionChatDeleteUser
            if (r2 == 0) goto L_0x15e4
        L_0x15e2:
            r2 = 1
            goto L_0x15e6
        L_0x15e4:
            r2 = r23
        L_0x15e6:
            int[] r3 = r9.minDate
            r8 = 0
            r3 = r3[r8]
            if (r3 == 0) goto L_0x15f7
            im.bclpbkiauv.tgnet.TLRPC$Message r3 = r6.messageOwner
            int r3 = r3.date
            int[] r11 = r9.minDate
            r11 = r11[r8]
            if (r3 >= r11) goto L_0x1600
        L_0x15f7:
            int[] r3 = r9.minDate
            im.bclpbkiauv.tgnet.TLRPC$Message r8 = r6.messageOwner
            int r8 = r8.date
            r11 = 0
            r3[r11] = r8
        L_0x1600:
            boolean r3 = r6.isOut()
            if (r3 == 0) goto L_0x1612
            im.bclpbkiauv.tgnet.TLRPC$Message r3 = r6.messageOwner
            boolean r3 = r3.from_scheduled
            if (r3 != 0) goto L_0x1612
            r3 = 1
            r9.removeUnreadPlane(r3)
            r3 = 1
            goto L_0x1614
        L_0x1612:
            r3 = r38
        L_0x1614:
            if (r15 <= 0) goto L_0x162c
            int[] r8 = r9.maxMessageId
            r11 = 0
            r13 = r8[r11]
            int r13 = java.lang.Math.min(r15, r13)
            r8[r11] = r13
            int[] r8 = r9.minMessageId
            r13 = r8[r11]
            int r13 = java.lang.Math.max(r15, r13)
            r8[r11] = r13
            goto L_0x1645
        L_0x162c:
            r11 = 0
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r8 = r9.currentEncryptedChat
            if (r8 == 0) goto L_0x1645
            int[] r8 = r9.maxMessageId
            r13 = r8[r11]
            int r13 = java.lang.Math.max(r15, r13)
            r8[r11] = r13
            int[] r8 = r9.minMessageId
            r13 = r8[r11]
            int r13 = java.lang.Math.min(r15, r13)
            r8[r11] = r13
        L_0x1645:
            int[] r8 = r9.maxDate
            r13 = r8[r11]
            im.bclpbkiauv.tgnet.TLRPC$Message r11 = r6.messageOwner
            int r11 = r11.date
            int r11 = java.lang.Math.max(r13, r11)
            r13 = 0
            r8[r13] = r11
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r8 = r9.messagesDict
            r8 = r8[r13]
            r8.put(r15, r6)
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r8 = r9.messagesByDays
            java.lang.String r11 = r6.dateKey
            java.lang.Object r8 = r8.get(r11)
            java.util.ArrayList r8 = (java.util.ArrayList) r8
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r11 = r9.messages
            int r11 = r11.size()
            if (r14 <= r11) goto L_0x1673
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r11 = r9.messages
            int r14 = r11.size()
        L_0x1673:
            if (r8 != 0) goto L_0x1704
            java.util.ArrayList r11 = new java.util.ArrayList
            r11.<init>()
            r8 = r11
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r11 = r9.messagesByDays
            java.lang.String r13 = r6.dateKey
            r11.put(r13, r8)
            im.bclpbkiauv.tgnet.TLRPC$TL_message r11 = new im.bclpbkiauv.tgnet.TLRPC$TL_message
            r11.<init>()
            boolean r13 = r9.inScheduleMode
            if (r13 == 0) goto L_0x16ad
            r39 = r0
            r13 = 1
            java.lang.Object[] r0 = new java.lang.Object[r13]
            im.bclpbkiauv.tgnet.TLRPC$Message r13 = r6.messageOwner
            int r13 = r13.date
            r29 = r1
            r40 = r2
            long r1 = (long) r13
            r13 = 1
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.formatDateChat(r1, r13)
            r2 = 0
            r0[r2] = r1
            java.lang.String r1 = "MessageScheduledOn"
            r2 = 2131692012(0x7f0f09ec, float:1.9013112E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.formatString(r1, r2, r0)
            r11.message = r0
            goto L_0x16be
        L_0x16ad:
            r39 = r0
            r29 = r1
            r40 = r2
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r6.messageOwner
            int r0 = r0.date
            long r0 = (long) r0
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.formatDateChat(r0)
            r11.message = r0
        L_0x16be:
            r1 = 0
            r11.id = r1
            java.util.Calendar r0 = java.util.Calendar.getInstance()
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r6.messageOwner
            int r2 = r2.date
            long r1 = (long) r2
            r17 = 1000(0x3e8, double:4.94E-321)
            long r1 = r1 * r17
            r0.setTimeInMillis(r1)
            r1 = 11
            r2 = 0
            r0.set(r1, r2)
            r1 = 12
            r0.set(r1, r2)
            long r41 = r0.getTimeInMillis()
            r1 = r3
            long r2 = r41 / r17
            int r3 = (int) r2
            r11.date = r3
            im.bclpbkiauv.messenger.MessageObject r2 = new im.bclpbkiauv.messenger.MessageObject
            int r3 = r9.currentAccount
            r13 = 0
            r2.<init>(r3, r11, r13)
            r3 = 10
            r2.type = r3
            r3 = 1
            r2.contentType = r3
            r2.isDateObject = r3
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r9.messages
            r3.add(r14, r2)
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r3 = r9.chatAdapter
            if (r3 == 0) goto L_0x170b
            r3.notifyItemInserted(r14)
            goto L_0x170b
        L_0x1704:
            r39 = r0
            r29 = r1
            r40 = r2
            r1 = r3
        L_0x170b:
            boolean r0 = r6.isOut()
            if (r0 == 0) goto L_0x171b
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r6.messageOwner
            boolean r0 = r0.from_scheduled
            if (r0 == 0) goto L_0x1718
            goto L_0x171b
        L_0x1718:
            r2 = -10000(0xffffffffffffd8f0, float:NaN)
            goto L_0x176b
        L_0x171b:
            boolean r0 = r9.paused
            if (r0 == 0) goto L_0x1769
            if (r14 != 0) goto L_0x1769
            boolean r0 = r9.scrollToTopUnReadOnResume
            if (r0 != 0) goto L_0x1733
            im.bclpbkiauv.messenger.MessageObject r0 = r9.unreadMessageObject
            if (r0 == 0) goto L_0x1733
            r9.removeMessageObject(r0)
            if (r14 <= 0) goto L_0x1730
            int r14 = r14 + -1
        L_0x1730:
            r2 = 0
            r9.unreadMessageObject = r2
        L_0x1733:
            im.bclpbkiauv.messenger.MessageObject r0 = r9.unreadMessageObject
            if (r0 != 0) goto L_0x1766
            im.bclpbkiauv.tgnet.TLRPC$TL_message r0 = new im.bclpbkiauv.tgnet.TLRPC$TL_message
            r0.<init>()
            r0.message = r7
            r2 = 0
            r0.id = r2
            im.bclpbkiauv.messenger.MessageObject r3 = new im.bclpbkiauv.messenger.MessageObject
            int r11 = r9.currentAccount
            r3.<init>(r11, r0, r2)
            r11 = 6
            r3.type = r11
            r11 = 2
            r3.contentType = r11
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r11 = r9.messages
            r11.add(r2, r3)
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r11 = r9.chatAdapter
            if (r11 == 0) goto L_0x175a
            r11.notifyItemInserted(r2)
        L_0x175a:
            r9.unreadMessageObject = r3
            r9.scrollToMessage = r3
            r2 = -10000(0xffffffffffffd8f0, float:NaN)
            r9.scrollToMessagePosition = r2
            r11 = 1
            r9.scrollToTopUnReadOnResume = r11
            goto L_0x176b
        L_0x1766:
            r2 = -10000(0xffffffffffffd8f0, float:NaN)
            goto L_0x176b
        L_0x1769:
            r2 = -10000(0xffffffffffffd8f0, float:NaN)
        L_0x176b:
            r3 = 0
            r8.add(r3, r6)
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r0 = r9.messages
            r0.add(r14, r6)
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r0 = r9.chatAdapter
            if (r0 == 0) goto L_0x1780
            r0.notifyItemChanged(r14)
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r0 = r9.chatAdapter
            r0.notifyItemInserted(r14)
        L_0x1780:
            boolean r0 = r6.isOut()
            if (r0 != 0) goto L_0x1799
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r6.messageOwner
            boolean r0 = r0.mentioned
            if (r0 == 0) goto L_0x1799
            boolean r0 = r6.isContentUnread()
            if (r0 == 0) goto L_0x1799
            int r0 = r9.newMentionsCount
            r3 = 1
            int r0 = r0 + r3
            r9.newMentionsCount = r0
            goto L_0x179a
        L_0x1799:
            r3 = 1
        L_0x179a:
            int r0 = r9.newUnreadMessageCount
            int r0 = r0 + r3
            r9.newUnreadMessageCount = r0
            int r0 = r6.type
            r3 = 10
            if (r0 == r3) goto L_0x17b5
            int r0 = r6.type
            r11 = 11
            if (r0 != r11) goto L_0x17ac
            goto L_0x17b7
        L_0x17ac:
            r38 = r1
            r1 = r29
            r0 = r39
            r4 = r40
            goto L_0x17d2
        L_0x17b5:
            r11 = 11
        L_0x17b7:
            r0 = 1
            r19 = r0
            r38 = r1
            r1 = r29
            r0 = r39
            r4 = r40
            goto L_0x17d2
        L_0x17c3:
            r38 = r2
            r12 = r3
            r32 = r8
            r31 = r14
            r2 = -10000(0xffffffffffffd8f0, float:NaN)
            r3 = 10
            r11 = 11
        L_0x17d0:
            r4 = r23
        L_0x17d2:
            int r5 = r5 + 1
            r11 = r64
            r3 = r12
            r14 = r31
            r8 = r32
            r12 = r35
            r2 = r38
            goto L_0x12db
        L_0x17e1:
            r38 = r2
            r23 = r4
            r32 = r8
            r35 = r12
            r31 = r14
            r12 = r3
            if (r1 == 0) goto L_0x17f9
            im.bclpbkiauv.messenger.MessagesController r2 = r61.getMessagesController()
            long r3 = r9.dialog_id
            boolean r5 = r9.inScheduleMode
            r2.reloadWebPages(r3, r1, r5)
        L_0x17f9:
            if (r0 == 0) goto L_0x183d
            r2 = 0
        L_0x17fc:
            int r3 = r0.size()
            if (r2 >= r3) goto L_0x183d
            java.lang.Object r3 = r0.valueAt(r2)
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r3 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessages) r3
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r4 = r3.posArray
            int r4 = r4.size()
            r3.calculate()
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r5 = r3.posArray
            int r5 = r5.size()
            int r6 = r5 - r4
            if (r6 <= 0) goto L_0x183a
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r6 = r9.chatAdapter
            if (r6 == 0) goto L_0x183a
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r9.messages
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r7 = r3.messages
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r8 = r3.messages
            int r8 = r8.size()
            r11 = 1
            int r8 = r8 - r11
            java.lang.Object r7 = r7.get(r8)
            int r6 = r6.indexOf(r7)
            if (r6 < 0) goto L_0x183a
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r7 = r9.chatAdapter
            r7.notifyItemRangeChanged(r6, r5)
        L_0x183a:
            int r2 = r2 + 1
            goto L_0x17fc
        L_0x183d:
            android.widget.FrameLayout r2 = r9.progressView
            if (r2 == 0) goto L_0x1845
            r3 = 4
            r2.setVisibility(r3)
        L_0x1845:
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r9.chatAdapter
            if (r2 != 0) goto L_0x184c
            r2 = 1
            r9.scrollToTopOnResume = r2
        L_0x184c:
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r9.chatListView
            if (r2 == 0) goto L_0x18f0
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r9.chatAdapter
            if (r2 == 0) goto L_0x18f0
            androidx.recyclerview.widget.GridLayoutManagerFixed r2 = r9.chatLayoutManager
            int r2 = r2.findFirstVisibleItemPosition()
            r3 = -1
            if (r2 != r3) goto L_0x185e
            r2 = 0
        L_0x185e:
            androidx.recyclerview.widget.GridLayoutManagerFixed r3 = r9.chatLayoutManager
            android.view.View r3 = r3.findViewByPosition(r2)
            if (r3 == 0) goto L_0x1872
            int r4 = r3.getBottom()
            im.bclpbkiauv.ui.components.RecyclerListView r5 = r9.chatListView
            int r5 = r5.getMeasuredHeight()
            int r4 = r4 - r5
            goto L_0x1873
        L_0x1872:
            r4 = 0
        L_0x1873:
            if (r2 != 0) goto L_0x187d
            r5 = 1084227584(0x40a00000, float:5.0)
            int r5 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r5)
            if (r4 <= r5) goto L_0x187f
        L_0x187d:
            if (r38 == 0) goto L_0x189d
        L_0x187f:
            r5 = 0
            r9.newUnreadMessageCount = r5
            boolean r5 = r9.firstLoading
            if (r5 != 0) goto L_0x189b
            boolean r5 = r9.inScheduleMode
            if (r5 != 0) goto L_0x189b
            boolean r5 = r9.paused
            if (r5 == 0) goto L_0x1893
            r5 = 1
            r9.scrollToTopOnResume = r5
            r6 = r12
            goto L_0x18cc
        L_0x1893:
            r5 = 1
            r9.forceScrollToTop = r5
            r61.moveScrollToLastMessage()
            r6 = r12
            goto L_0x18cc
        L_0x189b:
            r6 = r12
            goto L_0x18cc
        L_0x189d:
            int r5 = r9.newUnreadMessageCount
            if (r5 == 0) goto L_0x18c7
            android.widget.TextView r5 = r9.pagedownButtonCounter
            if (r5 == 0) goto L_0x18c7
            r6 = 0
            r5.setVisibility(r6)
            int r5 = r9.prevSetUnreadCount
            int r7 = r9.newUnreadMessageCount
            if (r5 == r7) goto L_0x18c5
            r9.prevSetUnreadCount = r7
            android.widget.TextView r5 = r9.pagedownButtonCounter
            r8 = 1
            java.lang.Object[] r11 = new java.lang.Object[r8]
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)
            r11[r6] = r7
            r6 = r12
            java.lang.String r7 = java.lang.String.format(r6, r11)
            r5.setText(r7)
            goto L_0x18c8
        L_0x18c5:
            r6 = r12
            goto L_0x18c8
        L_0x18c7:
            r6 = r12
        L_0x18c8:
            r5 = 1
            r9.showPagedownButton(r5, r5)
        L_0x18cc:
            int r5 = r9.newMentionsCount
            if (r5 == 0) goto L_0x18ef
            android.widget.TextView r5 = r9.mentiondownButtonCounter
            if (r5 == 0) goto L_0x18ef
            r7 = 0
            r5.setVisibility(r7)
            android.widget.TextView r5 = r9.mentiondownButtonCounter
            r8 = 1
            java.lang.Object[] r11 = new java.lang.Object[r8]
            int r12 = r9.newMentionsCount
            java.lang.Integer r12 = java.lang.Integer.valueOf(r12)
            r11[r7] = r12
            java.lang.String r6 = java.lang.String.format(r6, r11)
            r5.setText(r6)
            r9.showMentionDownButton(r8, r8)
        L_0x18ef:
            goto L_0x18f3
        L_0x18f0:
            r2 = 1
            r9.scrollToTopOnResume = r2
        L_0x18f3:
            r29 = r38
        L_0x18f5:
            boolean r0 = r9.inScheduleMode
            if (r0 == 0) goto L_0x1919
            boolean r0 = r31.isEmpty()
            if (r0 != 0) goto L_0x1919
            r0 = r31
            r1 = 0
            java.lang.Object r2 = r0.get(r1)
            im.bclpbkiauv.messenger.MessageObject r2 = (im.bclpbkiauv.messenger.MessageObject) r2
            int r7 = r2.getId()
            if (r7 >= 0) goto L_0x191b
            r3 = 0
            r4 = 0
            r5 = 0
            r6 = 1
            r1 = r61
            r2 = r7
            r1.scrollToMessageId(r2, r3, r4, r5, r6)
            goto L_0x191b
        L_0x1919:
            r0 = r31
        L_0x191b:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r9.messages
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x1933
            java.lang.String r1 = r9.botUser
            if (r1 == 0) goto L_0x1933
            int r1 = r1.length()
            if (r1 != 0) goto L_0x1933
            r1 = 0
            r9.botUser = r1
            r61.updateBottomOverlay()
        L_0x1933:
            if (r19 == 0) goto L_0x193f
            r61.checkAndUpdateAvatar()
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r1 = r9.actionBarHelper
            if (r1 == 0) goto L_0x193f
            r1.updateTitle()
        L_0x193f:
            if (r23 == 0) goto L_0x194e
            im.bclpbkiauv.messenger.MessagesController r1 = r61.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            int r2 = r2.id
            r3 = 0
            r4 = 1
            r1.loadFullChat(r2, r3, r4)
        L_0x194e:
            goto L_0x1958
        L_0x194f:
            r35 = r12
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r0 = r9.actionBarHelper
            if (r0 == 0) goto L_0x1958
            r0.updateUnreadMessageCount()
        L_0x1958:
            r11 = r64
            goto L_0x30be
        L_0x195c:
            r6 = r3
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.closeChats
            if (r10 != r0) goto L_0x1981
            r11 = r64
            if (r11 == 0) goto L_0x197c
            int r0 = r11.length
            if (r0 <= 0) goto L_0x197c
            r1 = 0
            r0 = r11[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r9.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x197a
            r61.finishFragment()
        L_0x197a:
            goto L_0x30be
        L_0x197c:
            r61.removeSelfFromStack()
            goto L_0x30be
        L_0x1981:
            r11 = r64
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messagesRead
            if (r10 != r0) goto L_0x1abd
            boolean r0 = r9.inScheduleMode
            if (r0 == 0) goto L_0x198c
            return
        L_0x198c:
            r1 = 0
            r0 = r11[r1]
            im.bclpbkiauv.messenger.support.SparseLongArray r0 = (im.bclpbkiauv.messenger.support.SparseLongArray) r0
            r1 = 1
            r2 = r11[r1]
            r1 = r2
            im.bclpbkiauv.messenger.support.SparseLongArray r1 = (im.bclpbkiauv.messenger.support.SparseLongArray) r1
            r2 = 0
            if (r0 == 0) goto L_0x1a1f
            im.bclpbkiauv.ui.ChatActivity$UnreadCounterTextView r3 = r9.bottomOverlayChatText2
            if (r3 == 0) goto L_0x19bc
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r3 = r9.chatInfo
            if (r3 == 0) goto L_0x19bc
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r9.currentChat
            boolean r3 = im.bclpbkiauv.messenger.ChatObject.isChannel(r3)
            if (r3 == 0) goto L_0x19bc
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r9.currentChat
            boolean r3 = r3.megagroup
            if (r3 != 0) goto L_0x19bc
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r3 = r9.chatInfo
            int r3 = r3.linked_chat_id
            int r3 = -r3
            if (r3 == 0) goto L_0x19bc
            im.bclpbkiauv.ui.ChatActivity$UnreadCounterTextView r3 = r9.bottomOverlayChatText2
            r3.updateCounter()
        L_0x19bc:
            r3 = 0
            int r4 = r0.size()
        L_0x19c1:
            if (r3 >= r4) goto L_0x1a1c
            int r5 = r0.keyAt(r3)
            long r7 = r0.get(r5)
            long r12 = (long) r5
            long r14 = r9.dialog_id
            int r16 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1))
            if (r16 == 0) goto L_0x19d6
            int r3 = r3 + 1
            goto L_0x19c1
        L_0x19d6:
            r12 = 0
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r13 = r9.messages
            int r13 = r13.size()
        L_0x19dd:
            if (r12 >= r13) goto L_0x1a15
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r14 = r9.messages
            java.lang.Object r14 = r14.get(r12)
            im.bclpbkiauv.messenger.MessageObject r14 = (im.bclpbkiauv.messenger.MessageObject) r14
            boolean r15 = r14.isOut()
            if (r15 != 0) goto L_0x1a0e
            int r15 = r14.getId()
            if (r15 <= 0) goto L_0x1a0e
            int r15 = r14.getId()
            r16 = r0
            int r0 = (int) r7
            if (r15 > r0) goto L_0x1a10
            boolean r0 = r14.isUnread()
            if (r0 != 0) goto L_0x1a03
            goto L_0x1a17
        L_0x1a03:
            r14.setIsRead()
            r2 = 1
            int r0 = r9.newUnreadMessageCount
            r15 = 1
            int r0 = r0 - r15
            r9.newUnreadMessageCount = r0
            goto L_0x1a10
        L_0x1a0e:
            r16 = r0
        L_0x1a10:
            int r12 = r12 + 1
            r0 = r16
            goto L_0x19dd
        L_0x1a15:
            r16 = r0
        L_0x1a17:
            r12 = 0
            r9.removeUnreadPlane(r12)
            goto L_0x1a21
        L_0x1a1c:
            r16 = r0
            goto L_0x1a21
        L_0x1a1f:
            r16 = r0
        L_0x1a21:
            if (r2 == 0) goto L_0x1a68
            int r0 = r9.newUnreadMessageCount
            if (r0 >= 0) goto L_0x1a2a
            r3 = 0
            r9.newUnreadMessageCount = r3
        L_0x1a2a:
            android.widget.TextView r0 = r9.pagedownButtonCounter
            if (r0 == 0) goto L_0x1a68
            int r3 = r9.prevSetUnreadCount
            int r4 = r9.newUnreadMessageCount
            if (r3 == r4) goto L_0x1a47
            r9.prevSetUnreadCount = r4
            r3 = 1
            java.lang.Object[] r3 = new java.lang.Object[r3]
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r5 = 0
            r3[r5] = r4
            java.lang.String r3 = java.lang.String.format(r6, r3)
            r0.setText(r3)
        L_0x1a47:
            int r0 = r9.newUnreadMessageCount
            if (r0 > 0) goto L_0x1a5a
            android.widget.TextView r0 = r9.pagedownButtonCounter
            int r0 = r0.getVisibility()
            r3 = 4
            if (r0 == r3) goto L_0x1a68
            android.widget.TextView r0 = r9.pagedownButtonCounter
            r0.setVisibility(r3)
            goto L_0x1a68
        L_0x1a5a:
            android.widget.TextView r0 = r9.pagedownButtonCounter
            int r0 = r0.getVisibility()
            if (r0 == 0) goto L_0x1a68
            android.widget.TextView r0 = r9.pagedownButtonCounter
            r3 = 0
            r0.setVisibility(r3)
        L_0x1a68:
            if (r1 == 0) goto L_0x1ab6
            r0 = 0
            int r3 = r1.size()
        L_0x1a6f:
            if (r0 >= r3) goto L_0x1ab6
            int r4 = r1.keyAt(r0)
            long r5 = r1.get(r4)
            int r6 = (int) r5
            long r7 = (long) r4
            long r12 = r9.dialog_id
            int r5 = (r7 > r12 ? 1 : (r7 == r12 ? 0 : -1))
            if (r5 == 0) goto L_0x1a85
            int r0 = r0 + 1
            goto L_0x1a6f
        L_0x1a85:
            r5 = 0
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r7 = r9.messages
            int r7 = r7.size()
        L_0x1a8c:
            if (r5 >= r7) goto L_0x1ab6
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r8 = r9.messages
            java.lang.Object r8 = r8.get(r5)
            im.bclpbkiauv.messenger.MessageObject r8 = (im.bclpbkiauv.messenger.MessageObject) r8
            boolean r12 = r8.isOut()
            if (r12 == 0) goto L_0x1ab3
            int r12 = r8.getId()
            if (r12 <= 0) goto L_0x1ab3
            int r12 = r8.getId()
            if (r12 > r6) goto L_0x1ab3
            boolean r12 = r8.isUnread()
            if (r12 != 0) goto L_0x1aaf
            goto L_0x1ab6
        L_0x1aaf:
            r8.setIsRead()
            r2 = 1
        L_0x1ab3:
            int r5 = r5 + 1
            goto L_0x1a8c
        L_0x1ab6:
            if (r2 == 0) goto L_0x1abb
            r61.updateVisibleRows()
        L_0x1abb:
            goto L_0x30be
        L_0x1abd:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.historyCleared
            if (r10 != r0) goto L_0x1c40
            r1 = 0
            r0 = r11[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r3 = r9.dialog_id
            int r5 = (r0 > r3 ? 1 : (r0 == r3 ? 0 : -1))
            if (r5 == 0) goto L_0x1ad1
            return
        L_0x1ad1:
            r3 = 1
            r4 = r11[r3]
            java.lang.Integer r4 = (java.lang.Integer) r4
            int r3 = r4.intValue()
            r4 = 0
            r5 = 0
        L_0x1adc:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r9.messages
            int r6 = r6.size()
            if (r5 >= r6) goto L_0x1b76
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r9.messages
            java.lang.Object r6 = r6.get(r5)
            im.bclpbkiauv.messenger.MessageObject r6 = (im.bclpbkiauv.messenger.MessageObject) r6
            int r8 = r6.getId()
            if (r8 <= 0) goto L_0x1b72
            if (r8 <= r3) goto L_0x1af6
            goto L_0x1b72
        L_0x1af6:
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r12 = r9.chatInfo
            if (r12 == 0) goto L_0x1b16
            int r12 = r12.pinned_msg_id
            if (r12 != r8) goto L_0x1b16
            r12 = 0
            r9.pinnedMessageObject = r12
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r12 = r9.chatInfo
            r13 = 0
            r12.pinned_msg_id = r13
            im.bclpbkiauv.messenger.MessagesStorage r12 = r61.getMessagesStorage()
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r14 = r9.chatInfo
            int r14 = r14.id
            r12.updateChatPinnedMessage(r14, r13)
            r12 = 1
            r9.updatePinnedMessageView(r12)
            goto L_0x1b35
        L_0x1b16:
            im.bclpbkiauv.tgnet.TLRPC$UserFull r12 = r9.userInfo
            if (r12 == 0) goto L_0x1b35
            int r12 = r12.pinned_msg_id
            if (r12 != r8) goto L_0x1b35
            r12 = 0
            r9.pinnedMessageObject = r12
            im.bclpbkiauv.tgnet.TLRPC$UserFull r12 = r9.userInfo
            r13 = 0
            r12.pinned_msg_id = r13
            im.bclpbkiauv.messenger.MessagesStorage r12 = r61.getMessagesStorage()
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r14 = r9.chatInfo
            int r14 = r14.id
            r12.updateUserPinnedMessage(r14, r13)
            r12 = 1
            r9.updatePinnedMessageView(r12)
        L_0x1b35:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r12 = r9.messages
            r12.remove(r5)
            int r5 = r5 + -1
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r12 = r9.messagesDict
            r13 = 0
            r12 = r12[r13]
            r12.remove(r8)
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r12 = r9.messagesByDays
            java.lang.String r13 = r6.dateKey
            java.lang.Object r12 = r12.get(r13)
            java.util.ArrayList r12 = (java.util.ArrayList) r12
            if (r12 == 0) goto L_0x1b71
            r12.remove(r6)
            boolean r13 = r12.isEmpty()
            if (r13 == 0) goto L_0x1b71
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r13 = r9.messagesByDays
            java.lang.String r14 = r6.dateKey
            r13.remove(r14)
            if (r5 < 0) goto L_0x1b71
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r13 = r9.messages
            int r13 = r13.size()
            if (r5 >= r13) goto L_0x1b71
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r13 = r9.messages
            r13.remove(r5)
            int r5 = r5 + -1
        L_0x1b71:
            r4 = 1
        L_0x1b72:
            r6 = 1
            int r5 = r5 + r6
            goto L_0x1adc
        L_0x1b76:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r5 = r9.messages
            boolean r5 = r5.isEmpty()
            if (r5 == 0) goto L_0x1c28
            boolean[] r5 = r9.endReached
            r6 = 0
            boolean r5 = r5[r6]
            if (r5 != 0) goto L_0x1c04
            boolean r5 = r9.loading
            if (r5 != 0) goto L_0x1c04
            r5 = 1
            r9.listViewShowEmptyView(r5, r6)
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r7 = r9.currentEncryptedChat
            if (r7 != 0) goto L_0x1ba3
            int[] r7 = r9.maxMessageId
            r2 = 2147483647(0x7fffffff, float:NaN)
            r7[r5] = r2
            r7[r6] = r2
            int[] r2 = r9.minMessageId
            r7 = -2147483648(0xffffffff80000000, float:-0.0)
            r2[r5] = r7
            r2[r6] = r7
            goto L_0x1bb4
        L_0x1ba3:
            r7 = -2147483648(0xffffffff80000000, float:-0.0)
            int[] r8 = r9.maxMessageId
            r8[r5] = r7
            r8[r6] = r7
            int[] r8 = r9.minMessageId
            r2 = 2147483647(0x7fffffff, float:NaN)
            r8[r5] = r2
            r8[r6] = r2
        L_0x1bb4:
            int[] r2 = r9.maxDate
            r2[r5] = r7
            r2[r6] = r7
            int[] r2 = r9.minDate
            r2[r5] = r6
            r2[r6] = r6
            java.util.ArrayList<java.lang.Integer> r2 = r9.waitingForLoad
            int r5 = r9.lastLoadIndex
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            r2.add(r5)
            im.bclpbkiauv.messenger.MessagesController r12 = r61.getMessagesController()
            long r13 = r9.dialog_id
            r15 = 30
            r16 = 0
            r17 = 0
            boolean[] r2 = r9.cacheEndReached
            r5 = 0
            boolean r2 = r2[r5]
            r6 = 1
            r18 = r2 ^ 1
            int[] r2 = r9.minDate
            r19 = r2[r5]
            int r2 = r9.classGuid
            r21 = 0
            r22 = 0
            im.bclpbkiauv.tgnet.TLRPC$Chat r5 = r9.currentChat
            boolean r23 = im.bclpbkiauv.messenger.ChatObject.isChannel(r5)
            boolean r5 = r9.inScheduleMode
            int r6 = r9.lastLoadIndex
            int r7 = r6 + 1
            r9.lastLoadIndex = r7
            r20 = r2
            r24 = r5
            r25 = r6
            r12.loadMessages(r13, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25)
            r2 = 1
            r9.loading = r2
            goto L_0x1c28
        L_0x1c04:
            im.bclpbkiauv.messenger.MessageObject r2 = r9.botButtons
            if (r2 == 0) goto L_0x1c13
            r2 = 0
            r9.botButtons = r2
            im.bclpbkiauv.ui.components.ChatActivityEnterView r5 = r9.chatActivityEnterView
            if (r5 == 0) goto L_0x1c13
            r6 = 0
            r5.setButtons(r2, r6)
        L_0x1c13:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r2 = r9.currentEncryptedChat
            if (r2 != 0) goto L_0x1c28
            im.bclpbkiauv.tgnet.TLRPC$User r2 = r9.currentUser
            if (r2 == 0) goto L_0x1c28
            boolean r2 = r2.bot
            if (r2 == 0) goto L_0x1c28
            java.lang.String r2 = r9.botUser
            if (r2 != 0) goto L_0x1c28
            r9.botUser = r7
            r61.updateBottomOverlay()
        L_0x1c28:
            r2 = 0
            r5 = 1
            r9.showPagedownButton(r2, r5)
            r9.showMentionDownButton(r2, r5)
            if (r4 == 0) goto L_0x1c3e
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r9.chatAdapter
            if (r2 == 0) goto L_0x1c3e
            r9.removeUnreadPlane(r5)
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r9.chatAdapter
            r2.notifyDataSetChanged()
        L_0x1c3e:
            goto L_0x30be
        L_0x1c40:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messagesDeleted
            if (r10 != r0) goto L_0x1f71
            r0 = 2
            r0 = r11[r0]
            java.lang.Boolean r0 = (java.lang.Boolean) r0
            boolean r0 = r0.booleanValue()
            boolean r1 = r9.inScheduleMode
            if (r0 == r1) goto L_0x1c52
            return
        L_0x1c52:
            r1 = 0
            r3 = r11[r1]
            r1 = r3
            java.util.ArrayList r1 = (java.util.ArrayList) r1
            r3 = 1
            r4 = r11[r3]
            java.lang.Integer r4 = (java.lang.Integer) r4
            int r3 = r4.intValue()
            r4 = 0
            im.bclpbkiauv.tgnet.TLRPC$Chat r5 = r9.currentChat
            boolean r5 = im.bclpbkiauv.messenger.ChatObject.isChannel(r5)
            if (r5 == 0) goto L_0x1c7f
            if (r3 != 0) goto L_0x1c76
            long r5 = r9.mergeDialogId
            r12 = 0
            int r8 = (r5 > r12 ? 1 : (r5 == r12 ? 0 : -1))
            if (r8 == 0) goto L_0x1c76
            r4 = 1
            goto L_0x1c82
        L_0x1c76:
            im.bclpbkiauv.tgnet.TLRPC$Chat r5 = r9.currentChat
            int r5 = r5.id
            if (r3 != r5) goto L_0x1c7e
            r4 = 0
            goto L_0x1c82
        L_0x1c7e:
            return
        L_0x1c7f:
            if (r3 == 0) goto L_0x1c82
            return
        L_0x1c82:
            r5 = 0
            r6 = 0
            int r8 = r1.size()
            r12 = 0
            r13 = 0
            r14 = 0
            r15 = 0
        L_0x1c8c:
            if (r15 >= r8) goto L_0x1daa
            java.lang.Object r16 = r1.get(r15)
            java.lang.Integer r16 = (java.lang.Integer) r16
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r2 = r9.messagesDict
            r2 = r2[r4]
            r17 = r0
            int r0 = r16.intValue()
            java.lang.Object r0 = r2.get(r0)
            im.bclpbkiauv.messenger.MessageObject r0 = (im.bclpbkiauv.messenger.MessageObject) r0
            if (r4 != 0) goto L_0x1ce1
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            if (r2 == 0) goto L_0x1cb5
            int r2 = r2.pinned_msg_id
            r18 = r1
            int r1 = r16.intValue()
            if (r2 == r1) goto L_0x1cc3
            goto L_0x1cb7
        L_0x1cb5:
            r18 = r1
        L_0x1cb7:
            im.bclpbkiauv.tgnet.TLRPC$UserFull r1 = r9.userInfo
            if (r1 == 0) goto L_0x1ce3
            int r1 = r1.pinned_msg_id
            int r2 = r16.intValue()
            if (r1 != r2) goto L_0x1ce3
        L_0x1cc3:
            r1 = 0
            r9.pinnedMessageObject = r1
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r1 = r9.chatInfo
            if (r1 == 0) goto L_0x1cce
            r2 = 0
            r1.pinned_msg_id = r2
            goto L_0x1cd5
        L_0x1cce:
            r2 = 0
            im.bclpbkiauv.tgnet.TLRPC$UserFull r1 = r9.userInfo
            if (r1 == 0) goto L_0x1cd5
            r1.pinned_msg_id = r2
        L_0x1cd5:
            im.bclpbkiauv.messenger.MessagesStorage r1 = r61.getMessagesStorage()
            r1.updateChatPinnedMessage(r3, r2)
            r1 = 1
            r9.updatePinnedMessageView(r1)
            goto L_0x1ce3
        L_0x1ce1:
            r18 = r1
        L_0x1ce3:
            if (r0 == 0) goto L_0x1d9e
            im.bclpbkiauv.messenger.MessageObject r1 = r9.editingMessageObject
            if (r1 != r0) goto L_0x1ced
            r1 = 1
            r9.hideFieldPanel(r1)
        L_0x1ced:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r9.messages
            int r1 = r1.indexOf(r0)
            r2 = -1
            if (r1 == r2) goto L_0x1d9b
            boolean r2 = r0.scheduled
            if (r2 == 0) goto L_0x1d03
            int r2 = r9.scheduledMessagesCount
            r19 = 1
            int r2 = r2 + -1
            r9.scheduledMessagesCount = r2
            r14 = 1
        L_0x1d03:
            r2 = 0
            r9.removeUnreadPlane(r2)
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r2 = r9.selectedMessagesIds
            r2 = r2[r4]
            r19 = r3
            int r3 = r16.intValue()
            int r2 = r2.indexOfKey(r3)
            if (r2 < 0) goto L_0x1d24
            r12 = 1
            int r2 = r8 + -1
            if (r15 != r2) goto L_0x1d1e
            r2 = 1
            goto L_0x1d1f
        L_0x1d1e:
            r2 = 0
        L_0x1d1f:
            r13 = r2
            r3 = 0
            r9.addToSelectedMessages(r0, r3, r2)
        L_0x1d24:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r9.messages
            java.lang.Object r2 = r2.remove(r1)
            im.bclpbkiauv.messenger.MessageObject r2 = (im.bclpbkiauv.messenger.MessageObject) r2
            long r27 = r2.getGroupId()
            r20 = 0
            int r3 = (r27 > r20 ? 1 : (r27 == r20 ? 0 : -1))
            if (r3 == 0) goto L_0x1d5b
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r3 = r9.groupedMessagesMap
            r25 = r12
            r27 = r13
            long r12 = r2.getGroupId()
            java.lang.Object r3 = r3.get(r12)
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r3 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessages) r3
            if (r3 == 0) goto L_0x1d5f
            if (r6 != 0) goto L_0x1d50
            android.util.LongSparseArray r12 = new android.util.LongSparseArray
            r12.<init>()
            r6 = r12
        L_0x1d50:
            long r12 = r3.groupId
            r6.put(r12, r3)
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r12 = r3.messages
            r12.remove(r0)
            goto L_0x1d5f
        L_0x1d5b:
            r25 = r12
            r27 = r13
        L_0x1d5f:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r3 = r9.messagesDict
            r3 = r3[r4]
            int r12 = r16.intValue()
            r3.remove(r12)
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r3 = r9.messagesByDays
            java.lang.String r12 = r0.dateKey
            java.lang.Object r3 = r3.get(r12)
            java.util.ArrayList r3 = (java.util.ArrayList) r3
            if (r3 == 0) goto L_0x1d95
            r3.remove(r0)
            boolean r12 = r3.isEmpty()
            if (r12 == 0) goto L_0x1d95
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r12 = r9.messagesByDays
            java.lang.String r13 = r0.dateKey
            r12.remove(r13)
            if (r1 < 0) goto L_0x1d95
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r12 = r9.messages
            int r12 = r12.size()
            if (r1 >= r12) goto L_0x1d95
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r12 = r9.messages
            r12.remove(r1)
        L_0x1d95:
            r5 = 1
            r12 = r25
            r13 = r27
            goto L_0x1da0
        L_0x1d9b:
            r19 = r3
            goto L_0x1da0
        L_0x1d9e:
            r19 = r3
        L_0x1da0:
            int r15 = r15 + 1
            r0 = r17
            r1 = r18
            r3 = r19
            goto L_0x1c8c
        L_0x1daa:
            r17 = r0
            r18 = r1
            r19 = r3
            if (r12 == 0) goto L_0x1dbd
            if (r13 != 0) goto L_0x1dba
            r1 = 0
            r2 = 0
            r3 = 1
            r9.addToSelectedMessages(r1, r2, r3)
        L_0x1dba:
            r61.updateActionModeTitle()
        L_0x1dbd:
            if (r6 == 0) goto L_0x1e20
            r0 = 0
        L_0x1dc0:
            int r1 = r6.size()
            if (r0 >= r1) goto L_0x1e1e
            java.lang.Object r1 = r6.valueAt(r0)
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessages) r1
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r1.messages
            boolean r2 = r2.isEmpty()
            if (r2 == 0) goto L_0x1ddd
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r2 = r9.groupedMessagesMap
            r15 = r4
            long r3 = r1.groupId
            r2.remove(r3)
            goto L_0x1e1a
        L_0x1ddd:
            r15 = r4
            r1.calculate()
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r1.messages
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r1.messages
            int r3 = r3.size()
            r4 = 1
            int r3 = r3 - r4
            java.lang.Object r2 = r2.get(r3)
            im.bclpbkiauv.messenger.MessageObject r2 = (im.bclpbkiauv.messenger.MessageObject) r2
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r9.messages
            int r3 = r3.indexOf(r2)
            if (r3 < 0) goto L_0x1e16
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r4 = r9.chatAdapter
            if (r4 == 0) goto L_0x1e11
            int r16 = r4.messagesStartRow
            r20 = r2
            int r2 = r3 + r16
            r16 = r3
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r1.messages
            int r3 = r3.size()
            r4.notifyItemRangeChanged(r2, r3)
            goto L_0x1e1a
        L_0x1e11:
            r20 = r2
            r16 = r3
            goto L_0x1e1a
        L_0x1e16:
            r20 = r2
            r16 = r3
        L_0x1e1a:
            int r0 = r0 + 1
            r4 = r15
            goto L_0x1dc0
        L_0x1e1e:
            r15 = r4
            goto L_0x1e21
        L_0x1e20:
            r15 = r4
        L_0x1e21:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r0 = r9.messages
            boolean r0 = r0.isEmpty()
            if (r0 == 0) goto L_0x1edd
            boolean[] r0 = r9.endReached
            r1 = 0
            boolean r0 = r0[r1]
            if (r0 != 0) goto L_0x1eb1
            boolean r0 = r9.loading
            if (r0 != 0) goto L_0x1eb1
            r3 = 1
            r9.listViewShowEmptyView(r3, r1)
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r9.currentEncryptedChat
            if (r0 != 0) goto L_0x1e4e
            int[] r0 = r9.maxMessageId
            r2 = 2147483647(0x7fffffff, float:NaN)
            r0[r3] = r2
            r0[r1] = r2
            int[] r0 = r9.minMessageId
            r4 = -2147483648(0xffffffff80000000, float:-0.0)
            r0[r3] = r4
            r0[r1] = r4
            goto L_0x1e5f
        L_0x1e4e:
            r4 = -2147483648(0xffffffff80000000, float:-0.0)
            int[] r0 = r9.maxMessageId
            r0[r3] = r4
            r0[r1] = r4
            int[] r0 = r9.minMessageId
            r2 = 2147483647(0x7fffffff, float:NaN)
            r0[r3] = r2
            r0[r1] = r2
        L_0x1e5f:
            int[] r0 = r9.maxDate
            r0[r3] = r4
            r0[r1] = r4
            int[] r0 = r9.minDate
            r0[r3] = r1
            r0[r1] = r1
            java.util.ArrayList<java.lang.Integer> r0 = r9.waitingForLoad
            int r1 = r9.lastLoadIndex
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r0.add(r1)
            im.bclpbkiauv.messenger.MessagesController r35 = r61.getMessagesController()
            long r0 = r9.dialog_id
            r38 = 30
            r39 = 0
            r40 = 0
            boolean[] r2 = r9.cacheEndReached
            r3 = 0
            boolean r2 = r2[r3]
            r4 = 1
            r41 = r2 ^ 1
            int[] r2 = r9.minDate
            r42 = r2[r3]
            int r2 = r9.classGuid
            r44 = 0
            r45 = 0
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r9.currentChat
            boolean r46 = im.bclpbkiauv.messenger.ChatObject.isChannel(r3)
            boolean r3 = r9.inScheduleMode
            int r4 = r9.lastLoadIndex
            int r7 = r4 + 1
            r9.lastLoadIndex = r7
            r36 = r0
            r43 = r2
            r47 = r3
            r48 = r4
            r35.loadMessages(r36, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48)
            r1 = 1
            r9.loading = r1
            goto L_0x1ed5
        L_0x1eb1:
            im.bclpbkiauv.messenger.MessageObject r0 = r9.botButtons
            if (r0 == 0) goto L_0x1ec0
            r1 = 0
            r9.botButtons = r1
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r9.chatActivityEnterView
            if (r0 == 0) goto L_0x1ec0
            r2 = 0
            r0.setButtons(r1, r2)
        L_0x1ec0:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r9.currentEncryptedChat
            if (r0 != 0) goto L_0x1ed5
            im.bclpbkiauv.tgnet.TLRPC$User r0 = r9.currentUser
            if (r0 == 0) goto L_0x1ed5
            boolean r0 = r0.bot
            if (r0 == 0) goto L_0x1ed5
            java.lang.String r0 = r9.botUser
            if (r0 != 0) goto L_0x1ed5
            r9.botUser = r7
            r61.updateBottomOverlay()
        L_0x1ed5:
            r1 = 0
            r2 = 1
            r9.showPagedownButton(r1, r2)
            r9.showMentionDownButton(r1, r2)
        L_0x1edd:
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r0 = r9.chatAdapter
            if (r0 == 0) goto L_0x1f69
            if (r5 == 0) goto L_0x1f52
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r9.chatListView
            int r0 = r0.getChildCount()
            r1 = -1
            r2 = 0
            r3 = 0
        L_0x1eec:
            if (r3 >= r0) goto L_0x1f32
            im.bclpbkiauv.ui.components.RecyclerListView r4 = r9.chatListView
            android.view.View r4 = r4.getChildAt(r3)
            r7 = 0
            r16 = r0
            boolean r0 = r4 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r0 == 0) goto L_0x1f03
            r0 = r4
            im.bclpbkiauv.ui.cells.ChatMessageCell r0 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r0
            im.bclpbkiauv.messenger.MessageObject r7 = r0.getMessageObject()
            goto L_0x1f0e
        L_0x1f03:
            boolean r0 = r4 instanceof im.bclpbkiauv.ui.cells.ChatActionCell
            if (r0 == 0) goto L_0x1f0e
            r0 = r4
            im.bclpbkiauv.ui.cells.ChatActionCell r0 = (im.bclpbkiauv.ui.cells.ChatActionCell) r0
            im.bclpbkiauv.messenger.MessageObject r7 = r0.getMessageObject()
        L_0x1f0e:
            if (r7 == 0) goto L_0x1f29
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r0 = r9.messages
            int r0 = r0.indexOf(r7)
            if (r0 >= 0) goto L_0x1f1b
            r20 = r1
            goto L_0x1f2b
        L_0x1f1b:
            r20 = r1
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r1 = r9.chatAdapter
            int r1 = r1.messagesStartRow
            int r1 = r1 + r0
            int r2 = r4.getBottom()
            goto L_0x1f36
        L_0x1f29:
            r20 = r1
        L_0x1f2b:
            int r3 = r3 + 1
            r0 = r16
            r1 = r20
            goto L_0x1eec
        L_0x1f32:
            r16 = r0
            r20 = r1
        L_0x1f36:
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r0 = r9.chatAdapter
            r0.notifyDataSetChanged()
            r0 = -1
            if (r1 == r0) goto L_0x1f51
            androidx.recyclerview.widget.GridLayoutManagerFixed r0 = r9.chatLayoutManager
            im.bclpbkiauv.ui.components.RecyclerListView r3 = r9.chatListView
            int r3 = r3.getMeasuredHeight()
            int r3 = r3 - r2
            im.bclpbkiauv.ui.components.RecyclerListView r4 = r9.chatListView
            int r4 = r4.getPaddingBottom()
            int r3 = r3 - r4
            r0.scrollToPositionWithOffset(r1, r3)
        L_0x1f51:
            goto L_0x1f69
        L_0x1f52:
            r1 = 0
            r9.first_unread_id = r1
            r9.last_message_id = r1
            r9.createUnreadMessageAfterId = r1
            im.bclpbkiauv.messenger.MessageObject r0 = r9.unreadMessageObject
            r9.removeMessageObject(r0)
            r1 = 0
            r9.unreadMessageObject = r1
            android.widget.TextView r0 = r9.pagedownButtonCounter
            if (r0 == 0) goto L_0x1f69
            r1 = 4
            r0.setVisibility(r1)
        L_0x1f69:
            if (r14 == 0) goto L_0x1f6f
            r1 = 1
            r9.updateScheduledInterface(r1)
        L_0x1f6f:
            goto L_0x30be
        L_0x1f71:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messageReceivedByServer
            if (r10 != r0) goto L_0x2156
            r1 = 6
            r0 = r11[r1]
            r1 = r0
            java.lang.Boolean r1 = (java.lang.Boolean) r1
            boolean r0 = r1.booleanValue()
            boolean r2 = r9.inScheduleMode
            if (r0 == r2) goto L_0x1f84
            return
        L_0x1f84:
            r2 = 0
            r0 = r11[r2]
            r3 = r0
            java.lang.Integer r3 = (java.lang.Integer) r3
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r0 = r9.messagesDict
            r0 = r0[r2]
            int r2 = r3.intValue()
            java.lang.Object r0 = r0.get(r2)
            r2 = r0
            im.bclpbkiauv.messenger.MessageObject r2 = (im.bclpbkiauv.messenger.MessageObject) r2
            if (r2 == 0) goto L_0x2154
            r4 = 1
            r0 = r11[r4]
            r4 = r0
            java.lang.Integer r4 = (java.lang.Integer) r4
            boolean r0 = r4.equals(r3)
            if (r0 != 0) goto L_0x200d
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r0 = r9.messagesDict
            r5 = 0
            r0 = r0[r5]
            int r6 = r4.intValue()
            int r0 = r0.indexOfKey(r6)
            if (r0 < 0) goto L_0x200d
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r0 = r9.messagesDict
            r0 = r0[r5]
            int r6 = r3.intValue()
            java.lang.Object r0 = r0.get(r6)
            im.bclpbkiauv.messenger.MessageObject r0 = (im.bclpbkiauv.messenger.MessageObject) r0
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r6 = r9.messagesDict
            r5 = r6[r5]
            int r6 = r3.intValue()
            r5.remove(r6)
            if (r0 == 0) goto L_0x200c
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r5 = r9.messages
            int r5 = r5.indexOf(r0)
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r9.messages
            r6.remove(r5)
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r6 = r9.messagesByDays
            java.lang.String r7 = r0.dateKey
            java.lang.Object r6 = r6.get(r7)
            java.util.ArrayList r6 = (java.util.ArrayList) r6
            r6.remove(r2)
            boolean r7 = r6.isEmpty()
            if (r7 == 0) goto L_0x2005
            java.util.HashMap<java.lang.String, java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r7 = r9.messagesByDays
            java.lang.String r8 = r2.dateKey
            r7.remove(r8)
            if (r5 < 0) goto L_0x2005
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r7 = r9.messages
            int r7 = r7.size()
            if (r5 >= r7) goto L_0x2005
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r7 = r9.messages
            r7.remove(r5)
        L_0x2005:
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r7 = r9.chatAdapter
            if (r7 == 0) goto L_0x200c
            r7.notifyDataSetChanged()
        L_0x200c:
            return
        L_0x200d:
            r0 = 2
            r0 = r11[r0]
            r5 = r0
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = (im.bclpbkiauv.tgnet.TLRPC.Message) r5
            int r0 = r11.length
            r6 = 4
            if (r0 < r6) goto L_0x201d
            r0 = r11[r6]
            java.lang.Long r0 = (java.lang.Long) r0
            r6 = r0
            goto L_0x2024
        L_0x201d:
            r6 = 0
            java.lang.Long r0 = java.lang.Long.valueOf(r6)
            r6 = r0
        L_0x2024:
            r7 = 0
            r8 = 0
            if (r5 == 0) goto L_0x20e1
            boolean r0 = r2.isForwarded()     // Catch:{ Exception -> 0x2080 }
            if (r0 == 0) goto L_0x2046
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r2.messageOwner     // Catch:{ Exception -> 0x2080 }
            im.bclpbkiauv.tgnet.TLRPC$ReplyMarkup r0 = r0.reply_markup     // Catch:{ Exception -> 0x2080 }
            if (r0 != 0) goto L_0x2038
            im.bclpbkiauv.tgnet.TLRPC$ReplyMarkup r0 = r5.reply_markup     // Catch:{ Exception -> 0x2080 }
            if (r0 != 0) goto L_0x2044
        L_0x2038:
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r2.messageOwner     // Catch:{ Exception -> 0x2080 }
            java.lang.String r0 = r0.message     // Catch:{ Exception -> 0x2080 }
            java.lang.String r12 = r5.message     // Catch:{ Exception -> 0x2080 }
            boolean r0 = r0.equals(r12)     // Catch:{ Exception -> 0x2080 }
            if (r0 != 0) goto L_0x2046
        L_0x2044:
            r0 = 1
            goto L_0x2047
        L_0x2046:
            r0 = 0
        L_0x2047:
            r8 = r0
            if (r8 != 0) goto L_0x207d
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r2.messageOwner     // Catch:{ Exception -> 0x2080 }
            java.util.HashMap<java.lang.String, java.lang.String> r0 = r0.params     // Catch:{ Exception -> 0x2080 }
            if (r0 == 0) goto L_0x205c
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r2.messageOwner     // Catch:{ Exception -> 0x2080 }
            java.util.HashMap<java.lang.String, java.lang.String> r0 = r0.params     // Catch:{ Exception -> 0x2080 }
            java.lang.String r12 = "query_id"
            boolean r0 = r0.containsKey(r12)     // Catch:{ Exception -> 0x2080 }
            if (r0 != 0) goto L_0x207d
        L_0x205c:
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r0 = r5.media     // Catch:{ Exception -> 0x2080 }
            if (r0 == 0) goto L_0x207b
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r2.messageOwner     // Catch:{ Exception -> 0x2080 }
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r0 = r0.media     // Catch:{ Exception -> 0x2080 }
            if (r0 == 0) goto L_0x207b
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r0 = r5.media     // Catch:{ Exception -> 0x2080 }
            java.lang.Class r0 = r0.getClass()     // Catch:{ Exception -> 0x2080 }
            im.bclpbkiauv.tgnet.TLRPC$Message r12 = r2.messageOwner     // Catch:{ Exception -> 0x2080 }
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r12 = r12.media     // Catch:{ Exception -> 0x2080 }
            java.lang.Class r12 = r12.getClass()     // Catch:{ Exception -> 0x2080 }
            boolean r0 = r0.equals(r12)     // Catch:{ Exception -> 0x2080 }
            if (r0 != 0) goto L_0x207b
            goto L_0x207d
        L_0x207b:
            r0 = 0
            goto L_0x207e
        L_0x207d:
            r0 = 1
        L_0x207e:
            r7 = r0
            goto L_0x2084
        L_0x2080:
            r0 = move-exception
            im.bclpbkiauv.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x2084:
            long r12 = r2.getGroupId()
            r14 = 0
            int r0 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1))
            if (r0 == 0) goto L_0x20b7
            long r12 = r5.grouped_id
            int r0 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1))
            if (r0 == 0) goto L_0x20b7
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r0 = r9.groupedMessagesMap
            long r12 = r2.getGroupId()
            java.lang.Object r0 = r0.get(r12)
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r0 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessages) r0
            if (r0 == 0) goto L_0x20a9
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r12 = r9.groupedMessagesMap
            long r13 = r5.grouped_id
            r12.put(r13, r0)
        L_0x20a9:
            im.bclpbkiauv.tgnet.TLRPC$Message r12 = r2.messageOwner
            long r12 = r12.grouped_id
            r2.localSentGroupId = r12
            im.bclpbkiauv.tgnet.TLRPC$Message r12 = r2.messageOwner
            long r13 = r6.longValue()
            r12.grouped_id = r13
        L_0x20b7:
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r2.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageFwdHeader r0 = r0.fwd_from
            r2.messageOwner = r5
            if (r0 == 0) goto L_0x20d1
            im.bclpbkiauv.tgnet.TLRPC$MessageFwdHeader r12 = r5.fwd_from
            if (r12 == 0) goto L_0x20d1
            im.bclpbkiauv.tgnet.TLRPC$MessageFwdHeader r12 = r5.fwd_from
            java.lang.String r12 = r12.from_name
            boolean r12 = android.text.TextUtils.isEmpty(r12)
            if (r12 != 0) goto L_0x20d1
            im.bclpbkiauv.tgnet.TLRPC$Message r12 = r2.messageOwner
            r12.fwd_from = r0
        L_0x20d1:
            r12 = 1
            r2.generateThumbs(r12)
            r2.setType()
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r12 = r5.media
            boolean r12 = r12 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageMediaGame
            if (r12 == 0) goto L_0x20e1
            r2.applyNewText()
        L_0x20e1:
            if (r8 == 0) goto L_0x20e6
            r2.measureInlineBotButtons()
        L_0x20e6:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r0 = r9.messagesDict
            r12 = 0
            r0 = r0[r12]
            int r13 = r3.intValue()
            r0.remove(r13)
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r0 = r9.messagesDict
            r0 = r0[r12]
            int r13 = r4.intValue()
            r0.put(r13, r2)
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r2.messageOwner
            int r13 = r4.intValue()
            r0.id = r13
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r2.messageOwner
            r0.send_state = r12
            r2.forceUpdate = r7
            int r0 = r11.length
            r12 = 6
            if (r0 < r12) goto L_0x211b
            r12 = 5
            r0 = r11[r12]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            r2.applyMediaExistanceFlags(r0)
        L_0x211b:
            r12 = 0
            r9.addToPolls(r2, r12)
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r0.add(r2)
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r12 = r9.currentEncryptedChat
            if (r12 != 0) goto L_0x2136
            im.bclpbkiauv.messenger.MediaDataController r12 = r61.getMediaDataController()
            long r13 = r9.dialog_id
            boolean r15 = r9.inScheduleMode
            r12.loadReplyMessagesForMessages(r0, r13, r15)
        L_0x2136:
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r12 = r9.chatAdapter
            if (r12 == 0) goto L_0x213e
            r13 = 1
            r12.updateRowWithMessageObject(r2, r13)
        L_0x213e:
            androidx.recyclerview.widget.GridLayoutManagerFixed r12 = r9.chatLayoutManager
            if (r12 == 0) goto L_0x214d
            if (r7 == 0) goto L_0x214d
            int r12 = r12.findFirstVisibleItemPosition()
            if (r12 != 0) goto L_0x214d
            r61.moveScrollToLastMessage()
        L_0x214d:
            im.bclpbkiauv.messenger.NotificationsController r12 = r61.getNotificationsController()
            r12.playOutChatSound()
        L_0x2154:
            goto L_0x30be
        L_0x2156:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.updateChatNewmsgMentionText
            if (r10 != r0) goto L_0x218c
            r1 = 0
            r0 = r11[r1]
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = (im.bclpbkiauv.tgnet.TLRPC.Message) r0
            im.bclpbkiauv.messenger.MessageObject r2 = new im.bclpbkiauv.messenger.MessageObject
            int r3 = r9.currentAccount
            r4 = 1
            r2.<init>(r3, r0, r4)
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r3 = r9.messagesDict
            r1 = r3[r1]
            int r3 = r0.id
            java.lang.Object r1 = r1.get(r3)
            im.bclpbkiauv.messenger.MessageObject r1 = (im.bclpbkiauv.messenger.MessageObject) r1
            if (r1 == 0) goto L_0x218a
            r1.messageOwner = r0
            java.lang.CharSequence r3 = r2.messageText
            r1.messageText = r3
            r3 = 0
            r1.generateLayout(r3)
            r1.renderText()
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r3 = r9.chatAdapter
            if (r3 == 0) goto L_0x218a
            r4 = 1
            r3.updateRowWithMessageObject(r1, r4)
        L_0x218a:
            goto L_0x30be
        L_0x218c:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messageReceivedByAck
            if (r10 != r0) goto L_0x21b3
            r1 = 0
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r2 = r9.messagesDict
            r2 = r2[r1]
            int r3 = r0.intValue()
            java.lang.Object r2 = r2.get(r3)
            im.bclpbkiauv.messenger.MessageObject r2 = (im.bclpbkiauv.messenger.MessageObject) r2
            if (r2 == 0) goto L_0x21b1
            im.bclpbkiauv.tgnet.TLRPC$Message r3 = r2.messageOwner
            r3.send_state = r1
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r1 = r9.chatAdapter
            if (r1 == 0) goto L_0x21b1
            r3 = 1
            r1.updateRowWithMessageObject(r2, r3)
        L_0x21b1:
            goto L_0x30be
        L_0x21b3:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messageSendError
            if (r10 != r0) goto L_0x21d6
            r1 = 0
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r2 = r9.messagesDict
            r1 = r2[r1]
            int r2 = r0.intValue()
            java.lang.Object r1 = r1.get(r2)
            im.bclpbkiauv.messenger.MessageObject r1 = (im.bclpbkiauv.messenger.MessageObject) r1
            if (r1 == 0) goto L_0x21d4
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r1.messageOwner
            r3 = 2
            r2.send_state = r3
            r61.updateVisibleRows()
        L_0x21d4:
            goto L_0x30be
        L_0x21d6:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.contactRelationShip
            if (r10 != r0) goto L_0x2221
            r1 = 0
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r1 = r0.intValue()
            r2 = 101(0x65, float:1.42E-43)
            if (r1 != r2) goto L_0x221f
            r1 = 2131689677(0x7f0f00cd, float:1.9008376E38)
            java.lang.String r2 = "AddContactsTip"
            java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r1)
            r1 = 2131691492(0x7f0f07e4, float:1.9012057E38)
            java.lang.String r2 = "GoVerify"
            java.lang.String r4 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r1)
            r1 = 2131691493(0x7f0f07e5, float:1.901206E38)
            java.lang.String r2 = "OK"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r1)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$fEXQtFeF9-MFj_uE98stgAvJNwM r6 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$fEXQtFeF9-MFj_uE98stgAvJNwM
            r6.<init>()
            r7 = 0
            r8 = 0
            java.lang.String r2 = ""
            r1 = r61
            im.bclpbkiauv.ui.dialogs.WalletDialog r1 = im.bclpbkiauv.ui.hui.wallet_public.utils.WalletDialogUtil.showWalletDialog(r1, r2, r3, r4, r5, r6, r7, r8)
            android.widget.TextView r2 = r1.getNegativeButton()
            java.lang.String r3 = "windowBackgroundWhiteBlueText"
            int r3 = im.bclpbkiauv.ui.actionbar.Theme.getColor(r3)
            r2.setTextColor(r3)
        L_0x221f:
            goto L_0x30be
        L_0x2221:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.chatInfoDidLoad
            if (r10 != r0) goto L_0x248f
            r1 = 0
            r0 = r11[r1]
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r0 = (im.bclpbkiauv.tgnet.TLRPC.ChatFull) r0
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r9.currentChat
            if (r1 == 0) goto L_0x248d
            int r1 = r0.id
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            int r2 = r2.id
            if (r1 != r2) goto L_0x248d
            boolean r1 = r0 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_channelFull
            if (r1 == 0) goto L_0x2293
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r9.currentChat
            boolean r1 = r1.megagroup
            if (r1 == 0) goto L_0x2287
            r1 = 0
            im.bclpbkiauv.tgnet.TLRPC$ChatParticipants r2 = r0.participants
            if (r2 == 0) goto L_0x2263
            r2 = 0
        L_0x2246:
            im.bclpbkiauv.tgnet.TLRPC$ChatParticipants r3 = r0.participants
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$ChatParticipant> r3 = r3.participants
            int r3 = r3.size()
            if (r2 >= r3) goto L_0x2263
            im.bclpbkiauv.tgnet.TLRPC$ChatParticipants r3 = r0.participants
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$ChatParticipant> r3 = r3.participants
            java.lang.Object r3 = r3.get(r2)
            im.bclpbkiauv.tgnet.TLRPC$ChatParticipant r3 = (im.bclpbkiauv.tgnet.TLRPC.ChatParticipant) r3
            int r3 = r3.date
            int r1 = java.lang.Math.max(r3, r1)
            int r2 = r2 + 1
            goto L_0x2246
        L_0x2263:
            if (r1 == 0) goto L_0x2278
            long r2 = java.lang.System.currentTimeMillis()
            r4 = 1000(0x3e8, double:4.94E-321)
            long r2 = r2 / r4
            long r4 = (long) r1
            long r2 = r2 - r4
            long r2 = java.lang.Math.abs(r2)
            r4 = 3600(0xe10, double:1.7786E-320)
            int r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r6 <= 0) goto L_0x2287
        L_0x2278:
            im.bclpbkiauv.messenger.MessagesController r2 = r61.getMessagesController()
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r9.currentChat
            int r3 = r3.id
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            r2.loadChannelParticipants(r3)
        L_0x2287:
            im.bclpbkiauv.tgnet.TLRPC$ChatParticipants r1 = r0.participants
            if (r1 != 0) goto L_0x2293
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r1 = r9.chatInfo
            if (r1 == 0) goto L_0x2293
            im.bclpbkiauv.tgnet.TLRPC$ChatParticipants r1 = r1.participants
            r0.participants = r1
        L_0x2293:
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r1 = r9.chatInfo
            r9.chatInfo = r0
            im.bclpbkiauv.ui.components.ChatActivityEnterView r2 = r9.chatActivityEnterView
            if (r2 == 0) goto L_0x2303
            int r2 = r0.slowmode_seconds
            if (r2 == 0) goto L_0x22fc
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            boolean r2 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r2)
            if (r2 != 0) goto L_0x22fc
            if (r1 == 0) goto L_0x22c7
            int r2 = r1.slowmode_seconds
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r3 = r9.chatInfo
            int r3 = r3.slowmode_seconds
            if (r2 == r3) goto L_0x22c7
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            int r3 = r2.slowmode_seconds
            int r4 = r1.slowmode_seconds
            int r3 = r3 - r4
            int r4 = r1.slowmode_next_send_date
            int r3 = r3 + r4
            r2.slowmode_next_send_date = r3
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            int r3 = r2.flags
            r4 = 262144(0x40000, float:3.67342E-40)
            r3 = r3 | r4
            r2.flags = r3
            goto L_0x22fc
        L_0x22c7:
            r2 = 0
        L_0x22c8:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r9.messages
            int r3 = r3.size()
            if (r2 >= r3) goto L_0x22fc
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r9.messages
            java.lang.Object r3 = r3.get(r2)
            im.bclpbkiauv.messenger.MessageObject r3 = (im.bclpbkiauv.messenger.MessageObject) r3
            boolean r4 = r3.isOutOwner()
            if (r4 == 0) goto L_0x22f9
            boolean r4 = r3.isDateObject
            if (r4 != 0) goto L_0x22f9
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r4 = r9.chatInfo
            im.bclpbkiauv.tgnet.TLRPC$Message r5 = r3.messageOwner
            int r5 = r5.date
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r6 = r9.chatInfo
            int r6 = r6.slowmode_seconds
            int r5 = r5 + r6
            r4.slowmode_next_send_date = r5
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r4 = r9.chatInfo
            int r5 = r4.flags
            r6 = 262144(0x40000, float:3.67342E-40)
            r5 = r5 | r6
            r4.flags = r5
            goto L_0x22fc
        L_0x22f9:
            int r2 = r2 + 1
            goto L_0x22c8
        L_0x22fc:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r2 = r9.chatActivityEnterView
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r3 = r9.chatInfo
            r2.setChatInfo(r3)
        L_0x2303:
            im.bclpbkiauv.ui.adapters.MentionsAdapter r2 = r9.mentionsAdapter
            if (r2 == 0) goto L_0x230c
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r3 = r9.chatInfo
            r2.setChatInfo(r3)
        L_0x230c:
            r2 = 3
            r3 = r11[r2]
            boolean r3 = r3 instanceof im.bclpbkiauv.messenger.MessageObject
            if (r3 == 0) goto L_0x231e
            r2 = r11[r2]
            im.bclpbkiauv.messenger.MessageObject r2 = (im.bclpbkiauv.messenger.MessageObject) r2
            r9.pinnedMessageObject = r2
            r2 = 0
            r9.updatePinnedMessageView(r2)
            goto L_0x2322
        L_0x231e:
            r2 = 1
            r9.updatePinnedMessageView(r2)
        L_0x2322:
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r2 = r9.actionBarHelper
            if (r2 == 0) goto L_0x232e
            r2.updateOnlineCount()
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r2 = r9.actionBarHelper
            r2.updateSubtitle()
        L_0x232e:
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            boolean r3 = r2 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_chatFull
            if (r3 == 0) goto L_0x238c
            r2 = 0
            r9.hasBotsCommands = r2
            android.util.SparseArray<im.bclpbkiauv.tgnet.TLRPC$BotInfo> r3 = r9.botInfo
            r3.clear()
            r9.botsCount = r2
            im.bclpbkiauv.ui.components.URLSpanBotCommand.enabled = r2
            r2 = 0
        L_0x2341:
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r3 = r9.chatInfo
            im.bclpbkiauv.tgnet.TLRPC$ChatParticipants r3 = r3.participants
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$ChatParticipant> r3 = r3.participants
            int r3 = r3.size()
            if (r2 >= r3) goto L_0x2383
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r3 = r9.chatInfo
            im.bclpbkiauv.tgnet.TLRPC$ChatParticipants r3 = r3.participants
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$ChatParticipant> r3 = r3.participants
            java.lang.Object r3 = r3.get(r2)
            im.bclpbkiauv.tgnet.TLRPC$ChatParticipant r3 = (im.bclpbkiauv.tgnet.TLRPC.ChatParticipant) r3
            im.bclpbkiauv.messenger.MessagesController r4 = r61.getMessagesController()
            int r5 = r3.user_id
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            im.bclpbkiauv.tgnet.TLRPC$User r4 = r4.getUser(r5)
            if (r4 == 0) goto L_0x2380
            boolean r5 = r4.bot
            if (r5 == 0) goto L_0x2380
            r5 = 1
            im.bclpbkiauv.ui.components.URLSpanBotCommand.enabled = r5
            int r6 = r9.botsCount
            int r6 = r6 + r5
            r9.botsCount = r6
            im.bclpbkiauv.messenger.MediaDataController r6 = r61.getMediaDataController()
            int r7 = r4.id
            int r8 = r9.classGuid
            r6.loadBotInfo(r7, r5, r8)
        L_0x2380:
            int r2 = r2 + 1
            goto L_0x2341
        L_0x2383:
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r9.chatListView
            if (r2 == 0) goto L_0x2435
            r2.invalidateViews()
            goto L_0x2435
        L_0x238c:
            boolean r2 = r2 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_channelFull
            if (r2 == 0) goto L_0x2435
            r2 = 0
            r9.hasBotsCommands = r2
            android.util.SparseArray<im.bclpbkiauv.tgnet.TLRPC$BotInfo> r3 = r9.botInfo
            r3.clear()
            r9.botsCount = r2
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$BotInfo> r2 = r2.bot_info
            boolean r2 = r2.isEmpty()
            if (r2 != 0) goto L_0x23ae
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            if (r2 == 0) goto L_0x23ae
            boolean r2 = r2.megagroup
            if (r2 == 0) goto L_0x23ae
            r2 = 1
            goto L_0x23af
        L_0x23ae:
            r2 = 0
        L_0x23af:
            im.bclpbkiauv.ui.components.URLSpanBotCommand.enabled = r2
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$BotInfo> r2 = r2.bot_info
            int r2 = r2.size()
            r9.botsCount = r2
            r2 = 0
        L_0x23bc:
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r3 = r9.chatInfo
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$BotInfo> r3 = r3.bot_info
            int r3 = r3.size()
            if (r2 >= r3) goto L_0x23f5
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r3 = r9.chatInfo
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$BotInfo> r3 = r3.bot_info
            java.lang.Object r3 = r3.get(r2)
            im.bclpbkiauv.tgnet.TLRPC$BotInfo r3 = (im.bclpbkiauv.tgnet.TLRPC.BotInfo) r3
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$TL_botCommand> r4 = r3.commands
            boolean r4 = r4.isEmpty()
            if (r4 != 0) goto L_0x23eb
            im.bclpbkiauv.tgnet.TLRPC$Chat r4 = r9.currentChat
            boolean r4 = im.bclpbkiauv.messenger.ChatObject.isChannel(r4)
            if (r4 == 0) goto L_0x23e8
            im.bclpbkiauv.tgnet.TLRPC$Chat r4 = r9.currentChat
            if (r4 == 0) goto L_0x23eb
            boolean r4 = r4.megagroup
            if (r4 == 0) goto L_0x23eb
        L_0x23e8:
            r4 = 1
            r9.hasBotsCommands = r4
        L_0x23eb:
            android.util.SparseArray<im.bclpbkiauv.tgnet.TLRPC$BotInfo> r4 = r9.botInfo
            int r5 = r3.user_id
            r4.put(r5, r3)
            int r2 = r2 + 1
            goto L_0x23bc
        L_0x23f5:
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r9.chatListView
            if (r2 == 0) goto L_0x23fc
            r2.invalidateViews()
        L_0x23fc:
            im.bclpbkiauv.ui.adapters.MentionsAdapter r2 = r9.mentionsAdapter
            if (r2 == 0) goto L_0x2417
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            boolean r2 = im.bclpbkiauv.messenger.ChatObject.isChannel(r2)
            if (r2 == 0) goto L_0x2410
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            if (r2 == 0) goto L_0x2417
            boolean r2 = r2.megagroup
            if (r2 == 0) goto L_0x2417
        L_0x2410:
            im.bclpbkiauv.ui.adapters.MentionsAdapter r2 = r9.mentionsAdapter
            android.util.SparseArray<im.bclpbkiauv.tgnet.TLRPC$BotInfo> r3 = r9.botInfo
            r2.setBotInfo(r3)
        L_0x2417:
            im.bclpbkiauv.ui.ChatActivity$UnreadCounterTextView r2 = r9.bottomOverlayChatText2
            if (r2 == 0) goto L_0x2435
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            boolean r2 = im.bclpbkiauv.messenger.ChatObject.isChannel(r2)
            if (r2 == 0) goto L_0x2435
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            boolean r2 = r2.megagroup
            if (r2 != 0) goto L_0x2435
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            int r2 = r2.linked_chat_id
            int r2 = -r2
            if (r2 == 0) goto L_0x2435
            im.bclpbkiauv.ui.ChatActivity$UnreadCounterTextView r2 = r9.bottomOverlayChatText2
            r2.updateCounter()
        L_0x2435:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r2 = r9.chatActivityEnterView
            if (r2 == 0) goto L_0x2440
            int r3 = r9.botsCount
            boolean r4 = r9.hasBotsCommands
            r2.setBotsCount(r3, r4)
        L_0x2440:
            im.bclpbkiauv.ui.adapters.MentionsAdapter r2 = r9.mentionsAdapter
            if (r2 == 0) goto L_0x2449
            int r3 = r9.botsCount
            r2.setBotsCount(r3)
        L_0x2449:
            boolean r2 = r9.inScheduleMode
            if (r2 != 0) goto L_0x248d
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            boolean r2 = im.bclpbkiauv.messenger.ChatObject.isChannel(r2)
            if (r2 == 0) goto L_0x248d
            long r2 = r9.mergeDialogId
            r4 = 0
            int r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r6 != 0) goto L_0x248d
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            int r2 = r2.migrated_from_chat_id
            if (r2 == 0) goto L_0x248d
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r9.chatInfo
            int r2 = r2.migrated_from_chat_id
            int r2 = -r2
            long r2 = (long) r2
            r9.mergeDialogId = r2
            int[] r2 = r9.maxMessageId
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r3 = r9.chatInfo
            int r3 = r3.migrated_from_max_id
            r4 = 1
            r2[r4] = r3
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r9.chatAdapter
            if (r2 == 0) goto L_0x247b
            r2.notifyDataSetChanged()
        L_0x247b:
            long r2 = r9.mergeDialogId
            r4 = 0
            int r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r6 == 0) goto L_0x248d
            boolean[] r2 = r9.endReached
            r3 = 0
            boolean r2 = r2[r3]
            if (r2 == 0) goto L_0x248d
            r9.checkScrollForLoad(r3)
        L_0x248d:
            goto L_0x30be
        L_0x248f:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.pinnedLiveMessage
            if (r10 != r0) goto L_0x24c6
            r1 = 0
            r0 = r11[r1]
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r0 = (im.bclpbkiauv.tgnet.TLRPC.ChatFull) r0
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r9.currentChat
            if (r1 == 0) goto L_0x24c4
            int r1 = r0.id
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            int r2 = r2.id
            if (r1 != r2) goto L_0x24c4
            int r1 = r0.pinned_msg_id
            r2 = 0
            r3 = 1
            r9.updatePinnedLiveMessageView(r2, r1, r3)
            im.bclpbkiauv.ui.actionbar.ChatActionBarMenuPopupWindow r1 = r9.chatActionBarMenuPop
            r2 = 33
            r3 = 2131558562(0x7f0d00a2, float:1.8742443E38)
            java.lang.String r4 = "直播中"
            r1.addLiveSubItem(r2, r3, r4)
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r1 = r9.actionBarHelper
            if (r1 == 0) goto L_0x24c4
            r1.updateOnlineCount()
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r1 = r9.actionBarHelper
            r1.updateSubtitle()
        L_0x24c4:
            goto L_0x30be
        L_0x24c6:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.chatInfoCantLoad
            if (r10 != r0) goto L_0x253f
            r1 = 0
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r9.currentChat
            if (r1 == 0) goto L_0x253d
            int r1 = r1.id
            if (r1 != r0) goto L_0x253d
            r1 = 1
            r2 = r11[r1]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r1 = r2.intValue()
            androidx.fragment.app.FragmentActivity r2 = r61.getParentActivity()
            if (r2 == 0) goto L_0x253c
            android.app.Dialog r2 = r9.closeChatDialog
            if (r2 == 0) goto L_0x24ef
            goto L_0x253c
        L_0x24ef:
            java.lang.String r2 = ""
            if (r1 != 0) goto L_0x24fd
            r3 = 2131690414(0x7f0f03ae, float:1.900987E38)
            java.lang.String r4 = "ChannelCantOpenPrivate"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r3)
            goto L_0x2516
        L_0x24fd:
            r3 = 1
            if (r1 != r3) goto L_0x250a
            r3 = 2131690413(0x7f0f03ad, float:1.9009869E38)
            java.lang.String r4 = "ChannelCantOpenNa"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r3)
            goto L_0x2516
        L_0x250a:
            r3 = 2
            if (r1 != r3) goto L_0x2516
            r3 = 2131690412(0x7f0f03ac, float:1.9009867E38)
            java.lang.String r4 = "ChannelCantOpenBanned"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r3)
        L_0x2516:
            r3 = 2131692462(0x7f0f0bae, float:1.9014025E38)
            java.lang.String r4 = "OK"
            java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r3)
            r4 = 0
            im.bclpbkiauv.ui.dialogs.WalletDialog r3 = im.bclpbkiauv.ui.hui.wallet_public.utils.WalletDialogUtil.showWalletDialog(r9, r2, r3, r4)
            r9.closeChatDialog = r3
            r9.showDialog(r3)
            r3 = 0
            r9.loading = r3
            android.widget.FrameLayout r3 = r9.progressView
            if (r3 == 0) goto L_0x2534
            r4 = 4
            r3.setVisibility(r4)
        L_0x2534:
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r3 = r9.chatAdapter
            if (r3 == 0) goto L_0x253d
            r3.notifyDataSetChanged()
            goto L_0x253d
        L_0x253c:
            return
        L_0x253d:
            goto L_0x30be
        L_0x253f:
            r4 = 4
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.contactsDidLoad
            if (r10 != r0) goto L_0x2551
            r1 = 1
            r9.updateTopPanel(r1)
            im.bclpbkiauv.ui.utils.ChatActionBarHelper r0 = r9.actionBarHelper
            if (r0 == 0) goto L_0x30be
            r0.updateSubtitle()
            goto L_0x30be
        L_0x2551:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.encryptedChatUpdated
            if (r10 != r0) goto L_0x25c4
            r1 = 0
            r0 = r11[r1]
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = (im.bclpbkiauv.tgnet.TLRPC.EncryptedChat) r0
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r1 = r9.currentEncryptedChat
            if (r1 == 0) goto L_0x25c2
            int r1 = r0.id
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r2 = r9.currentEncryptedChat
            int r2 = r2.id
            if (r1 != r2) goto L_0x25c2
            r9.currentEncryptedChat = r0
            r1 = 1
            r9.updateTopPanel(r1)
            r61.updateSecretStatus()
            r61.initStickers()
            im.bclpbkiauv.ui.components.ChatActivityEnterView r1 = r9.chatActivityEnterView
            if (r1 == 0) goto L_0x25a2
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r2 = r9.currentEncryptedChat
            if (r2 == 0) goto L_0x2587
            int r2 = r2.layer
            int r2 = im.bclpbkiauv.messenger.AndroidUtilities.getPeerLayerVersion(r2)
            r3 = 23
            if (r2 < r3) goto L_0x2585
            goto L_0x2587
        L_0x2585:
            r2 = 0
            goto L_0x2588
        L_0x2587:
            r2 = 1
        L_0x2588:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r3 = r9.currentEncryptedChat
            if (r3 == 0) goto L_0x2599
            int r3 = r3.layer
            int r3 = im.bclpbkiauv.messenger.AndroidUtilities.getPeerLayerVersion(r3)
            r4 = 46
            if (r3 < r4) goto L_0x2597
            goto L_0x2599
        L_0x2597:
            r3 = 0
            goto L_0x259a
        L_0x2599:
            r3 = 1
        L_0x259a:
            r1.setAllowStickersAndGifs(r2, r3)
            im.bclpbkiauv.ui.components.ChatActivityEnterView r1 = r9.chatActivityEnterView
            r1.checkRoundVideo()
        L_0x25a2:
            im.bclpbkiauv.ui.adapters.MentionsAdapter r1 = r9.mentionsAdapter
            if (r1 == 0) goto L_0x25c2
            im.bclpbkiauv.ui.components.ChatActivityEnterView r2 = r9.chatActivityEnterView
            boolean r2 = r2.isEditingMessage()
            if (r2 != 0) goto L_0x25be
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r2 = r9.currentEncryptedChat
            if (r2 == 0) goto L_0x25bc
            int r2 = r2.layer
            int r2 = im.bclpbkiauv.messenger.AndroidUtilities.getPeerLayerVersion(r2)
            r3 = 46
            if (r2 < r3) goto L_0x25be
        L_0x25bc:
            r8 = 1
            goto L_0x25bf
        L_0x25be:
            r8 = 0
        L_0x25bf:
            r1.setNeedBotContext(r8)
        L_0x25c2:
            goto L_0x30be
        L_0x25c4:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messagesReadEncrypted
            if (r10 != r0) goto L_0x2619
            r1 = 0
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r1 = r9.currentEncryptedChat
            if (r1 == 0) goto L_0x2617
            int r1 = r1.id
            if (r1 != r0) goto L_0x2617
            r1 = 1
            r2 = r11[r1]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r1 = r2.intValue()
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r9.messages
            java.util.Iterator r2 = r2.iterator()
        L_0x25e8:
            boolean r3 = r2.hasNext()
            if (r3 == 0) goto L_0x2614
            java.lang.Object r3 = r2.next()
            im.bclpbkiauv.messenger.MessageObject r3 = (im.bclpbkiauv.messenger.MessageObject) r3
            boolean r4 = r3.isOut()
            if (r4 != 0) goto L_0x25fb
            goto L_0x25e8
        L_0x25fb:
            boolean r4 = r3.isOut()
            if (r4 == 0) goto L_0x2608
            boolean r4 = r3.isUnread()
            if (r4 != 0) goto L_0x2608
            goto L_0x2614
        L_0x2608:
            im.bclpbkiauv.tgnet.TLRPC$Message r4 = r3.messageOwner
            int r4 = r4.date
            r5 = 1
            int r4 = r4 - r5
            if (r4 > r1) goto L_0x2613
            r3.setIsRead()
        L_0x2613:
            goto L_0x25e8
        L_0x2614:
            r61.updateVisibleRows()
        L_0x2617:
            goto L_0x30be
        L_0x2619:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.removeAllMessagesFromDialog
            if (r10 != r0) goto L_0x263a
            r1 = 0
            r0 = r11[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r9.dialog_id
            int r4 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1))
            if (r4 != 0) goto L_0x2638
            r2 = 1
            r2 = r11[r2]
            java.lang.Boolean r2 = (java.lang.Boolean) r2
            boolean r2 = r2.booleanValue()
            r9.clearHistory(r2)
        L_0x2638:
            goto L_0x30be
        L_0x263a:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.screenshotTook
            if (r10 != r0) goto L_0x2643
            r61.updateInformationForScreenshotDetector()
            goto L_0x30be
        L_0x2643:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.blockedUsersDidLoad
            if (r10 != r0) goto L_0x2669
            im.bclpbkiauv.tgnet.TLRPC$User r0 = r9.currentUser
            if (r0 == 0) goto L_0x30be
            boolean r0 = r9.userBlocked
            im.bclpbkiauv.messenger.MessagesController r1 = r61.getMessagesController()
            android.util.SparseIntArray r1 = r1.blockedUsers
            im.bclpbkiauv.tgnet.TLRPC$User r2 = r9.currentUser
            int r2 = r2.id
            int r1 = r1.indexOfKey(r2)
            if (r1 < 0) goto L_0x265f
            r8 = 1
            goto L_0x2660
        L_0x265f:
            r8 = 0
        L_0x2660:
            r9.userBlocked = r8
            if (r0 == r8) goto L_0x2667
            r61.updateBottomOverlay()
        L_0x2667:
            goto L_0x30be
        L_0x2669:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.fileNewChunkAvailable
            if (r10 != r0) goto L_0x26b2
            r1 = 0
            r0 = r11[r1]
            im.bclpbkiauv.messenger.MessageObject r0 = (im.bclpbkiauv.messenger.MessageObject) r0
            r1 = 3
            r1 = r11[r1]
            java.lang.Long r1 = (java.lang.Long) r1
            long r1 = r1.longValue()
            r3 = 0
            int r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r5 == 0) goto L_0x26b0
            long r3 = r9.dialog_id
            long r5 = r0.getDialogId()
            int r7 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r7 != 0) goto L_0x26b0
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r3 = r9.messagesDict
            r4 = 0
            r3 = r3[r4]
            int r4 = r0.getId()
            java.lang.Object r3 = r3.get(r4)
            im.bclpbkiauv.messenger.MessageObject r3 = (im.bclpbkiauv.messenger.MessageObject) r3
            if (r3 == 0) goto L_0x26b0
            im.bclpbkiauv.tgnet.TLRPC$Message r4 = r3.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r4 = r4.media
            im.bclpbkiauv.tgnet.TLRPC$Document r4 = r4.document
            if (r4 == 0) goto L_0x26b0
            im.bclpbkiauv.tgnet.TLRPC$Message r4 = r3.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r4 = r4.media
            im.bclpbkiauv.tgnet.TLRPC$Document r4 = r4.document
            int r5 = (int) r1
            r4.size = r5
            r61.updateVisibleRows()
        L_0x26b0:
            goto L_0x30be
        L_0x26b2:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.didCreatedNewDeleteTask
            r1 = 32
            if (r10 != r0) goto L_0x2719
            r2 = 0
            r0 = r11[r2]
            android.util.SparseArray r0 = (android.util.SparseArray) r0
            r2 = 0
            r3 = 0
        L_0x26bf:
            int r4 = r0.size()
            if (r3 >= r4) goto L_0x2712
            int r4 = r0.keyAt(r3)
            java.lang.Object r5 = r0.get(r4)
            java.util.ArrayList r5 = (java.util.ArrayList) r5
            r6 = 0
        L_0x26d0:
            int r7 = r5.size()
            if (r6 >= r7) goto L_0x270f
            java.lang.Object r7 = r5.get(r6)
            java.lang.Long r7 = (java.lang.Long) r7
            long r7 = r7.longValue()
            if (r6 != 0) goto L_0x26f9
            long r12 = r7 >> r1
            int r13 = (int) r12
            if (r13 >= 0) goto L_0x26e8
            r13 = 0
        L_0x26e8:
            im.bclpbkiauv.tgnet.TLRPC$Chat r12 = r9.currentChat
            boolean r12 = im.bclpbkiauv.messenger.ChatObject.isChannel(r12)
            if (r12 == 0) goto L_0x26f5
            im.bclpbkiauv.tgnet.TLRPC$Chat r12 = r9.currentChat
            int r12 = r12.id
            goto L_0x26f6
        L_0x26f5:
            r12 = 0
        L_0x26f6:
            if (r13 == r12) goto L_0x26f9
            return
        L_0x26f9:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r12 = r9.messagesDict
            r13 = 0
            r12 = r12[r13]
            int r13 = (int) r7
            java.lang.Object r12 = r12.get(r13)
            im.bclpbkiauv.messenger.MessageObject r12 = (im.bclpbkiauv.messenger.MessageObject) r12
            if (r12 == 0) goto L_0x270c
            im.bclpbkiauv.tgnet.TLRPC$Message r13 = r12.messageOwner
            r13.destroyTime = r4
            r2 = 1
        L_0x270c:
            int r6 = r6 + 1
            goto L_0x26d0
        L_0x270f:
            int r3 = r3 + 1
            goto L_0x26bf
        L_0x2712:
            if (r2 == 0) goto L_0x2717
            r61.updateVisibleRows()
        L_0x2717:
            goto L_0x30be
        L_0x2719:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messagePlayingDidStart
            if (r10 != r0) goto L_0x2808
            r1 = 0
            r0 = r11[r1]
            im.bclpbkiauv.messenger.MessageObject r0 = (im.bclpbkiauv.messenger.MessageObject) r0
            long r1 = r0.eventId
            r3 = 0
            int r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r5 == 0) goto L_0x272b
            return
        L_0x272b:
            r9.sendSecretMessageRead(r0)
            boolean r1 = r0.isRoundVideo()
            if (r1 != 0) goto L_0x273a
            boolean r1 = r0.isVideo()
            if (r1 == 0) goto L_0x2759
        L_0x273a:
            android.view.View r1 = r9.fragmentView
            if (r1 == 0) goto L_0x2759
            android.view.View r1 = r9.fragmentView
            android.view.ViewParent r1 = r1.getParent()
            if (r1 == 0) goto L_0x2759
            im.bclpbkiauv.messenger.MediaController r1 = im.bclpbkiauv.messenger.MediaController.getInstance()
            r2 = 1
            android.view.TextureView r3 = r9.createTextureView(r2)
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r4 = r9.aspectRatioFrameLayout
            android.widget.FrameLayout r5 = r9.videoPlayerContainer
            r1.setTextureView(r3, r4, r5, r2)
            r9.updateTextureViewPosition(r2)
        L_0x2759:
            im.bclpbkiauv.ui.components.RecyclerListView r1 = r9.chatListView
            if (r1 == 0) goto L_0x2806
            int r1 = r1.getChildCount()
            r2 = 0
        L_0x2762:
            if (r2 >= r1) goto L_0x27d6
            im.bclpbkiauv.ui.components.RecyclerListView r3 = r9.chatListView
            android.view.View r3 = r3.getChildAt(r2)
            boolean r4 = r3 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r4 == 0) goto L_0x27d3
            r4 = r3
            im.bclpbkiauv.ui.cells.ChatMessageCell r4 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r4
            im.bclpbkiauv.messenger.MessageObject r5 = r4.getMessageObject()
            if (r5 == 0) goto L_0x27d3
            boolean r6 = r5.isVideo()
            boolean r7 = r5.isRoundVideo()
            if (r7 != 0) goto L_0x2797
            if (r6 == 0) goto L_0x2785
            r7 = 0
            goto L_0x2798
        L_0x2785:
            boolean r7 = r5.isVoice()
            if (r7 != 0) goto L_0x2791
            boolean r7 = r5.isMusic()
            if (r7 == 0) goto L_0x27d3
        L_0x2791:
            r7 = 0
            r8 = 1
            r4.updateButtonState(r7, r8, r7)
            goto L_0x27d3
        L_0x2797:
            r7 = 0
        L_0x2798:
            r4.checkVideoPlayback(r7)
            im.bclpbkiauv.messenger.MediaController r7 = im.bclpbkiauv.messenger.MediaController.getInstance()
            boolean r7 = r7.isPlayingMessage(r5)
            if (r7 != 0) goto L_0x27cc
            if (r6 == 0) goto L_0x27be
            im.bclpbkiauv.messenger.MediaController r7 = im.bclpbkiauv.messenger.MediaController.getInstance()
            boolean r7 = r7.isGoingToShowMessageObject(r5)
            if (r7 != 0) goto L_0x27be
            im.bclpbkiauv.messenger.ImageReceiver r7 = r4.getPhotoImage()
            im.bclpbkiauv.ui.components.AnimatedFileDrawable r7 = r7.getAnimation()
            if (r7 == 0) goto L_0x27be
            r7.start()
        L_0x27be:
            float r7 = r5.audioProgress
            r8 = 0
            int r7 = (r7 > r8 ? 1 : (r7 == r8 ? 0 : -1))
            if (r7 == 0) goto L_0x27d3
            r5.resetPlayingProgress()
            r4.invalidate()
            goto L_0x27d3
        L_0x27cc:
            if (r6 == 0) goto L_0x27d3
            r7 = 0
            r8 = 1
            r4.updateButtonState(r7, r8, r7)
        L_0x27d3:
            int r2 = r2 + 1
            goto L_0x2762
        L_0x27d6:
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r9.mentionListView
            int r1 = r2.getChildCount()
            r2 = 0
        L_0x27dd:
            if (r2 >= r1) goto L_0x2806
            im.bclpbkiauv.ui.components.RecyclerListView r3 = r9.mentionListView
            android.view.View r3 = r3.getChildAt(r2)
            boolean r4 = r3 instanceof im.bclpbkiauv.ui.cells.ContextLinkCell
            if (r4 == 0) goto L_0x2803
            r4 = r3
            im.bclpbkiauv.ui.cells.ContextLinkCell r4 = (im.bclpbkiauv.ui.cells.ContextLinkCell) r4
            im.bclpbkiauv.messenger.MessageObject r5 = r4.getMessageObject()
            if (r5 == 0) goto L_0x2803
            boolean r6 = r5.isVoice()
            if (r6 != 0) goto L_0x27fe
            boolean r6 = r5.isMusic()
            if (r6 == 0) goto L_0x2803
        L_0x27fe:
            r6 = 0
            r7 = 1
            r4.updateButtonState(r6, r7)
        L_0x2803:
            int r2 = r2 + 1
            goto L_0x27dd
        L_0x2806:
            goto L_0x30be
        L_0x2808:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messagePlayingGoingToStop
            if (r10 != r0) goto L_0x28bb
            r1 = 1
            r0 = r11[r1]
            java.lang.Boolean r0 = (java.lang.Boolean) r0
            boolean r1 = r0.booleanValue()
            if (r1 == 0) goto L_0x2827
            im.bclpbkiauv.ui.components.SizeNotifierFrameLayout r0 = r9.contentView
            android.widget.FrameLayout r2 = r9.videoPlayerContainer
            r0.removeView(r2)
            r2 = 0
            r9.videoPlayerContainer = r2
            r9.videoTextureView = r2
            r9.aspectRatioFrameLayout = r2
            goto L_0x28b9
        L_0x2827:
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r9.chatListView
            if (r0 == 0) goto L_0x28b7
            android.widget.FrameLayout r0 = r9.videoPlayerContainer
            if (r0 == 0) goto L_0x28b7
            java.lang.Object r0 = r0.getTag()
            if (r0 == 0) goto L_0x28b7
            r2 = 0
            r0 = r11[r2]
            r2 = r0
            im.bclpbkiauv.messenger.MessageObject r2 = (im.bclpbkiauv.messenger.MessageObject) r2
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r9.chatListView
            int r3 = r0.getChildCount()
            r0 = 0
            r4 = r0
        L_0x2843:
            if (r4 >= r3) goto L_0x28b4
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r9.chatListView
            android.view.View r5 = r0.getChildAt(r4)
            boolean r0 = r5 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r0 == 0) goto L_0x28ad
            r6 = r5
            im.bclpbkiauv.ui.cells.ChatMessageCell r6 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r6
            im.bclpbkiauv.messenger.MessageObject r7 = r6.getMessageObject()
            if (r2 != r7) goto L_0x28aa
            im.bclpbkiauv.messenger.ImageReceiver r0 = r6.getPhotoImage()
            im.bclpbkiauv.ui.components.AnimatedFileDrawable r8 = r0.getAnimation()
            if (r8 == 0) goto L_0x28a7
            android.graphics.Bitmap r12 = r8.getAnimatedBitmap()
            if (r12 == 0) goto L_0x2890
            android.view.TextureView r0 = r9.videoTextureView     // Catch:{ all -> 0x2889 }
            int r13 = r12.getWidth()     // Catch:{ all -> 0x2889 }
            int r14 = r12.getHeight()     // Catch:{ all -> 0x2889 }
            android.graphics.Bitmap r0 = r0.getBitmap(r13, r14)     // Catch:{ all -> 0x2889 }
            android.graphics.Canvas r13 = new android.graphics.Canvas     // Catch:{ all -> 0x2889 }
            r13.<init>(r12)     // Catch:{ all -> 0x2889 }
            r14 = 0
            r15 = 0
            r16 = r1
            r1 = 0
            r13.drawBitmap(r0, r14, r15, r1)     // Catch:{ all -> 0x2887 }
            r0.recycle()     // Catch:{ all -> 0x2887 }
            goto L_0x2892
        L_0x2887:
            r0 = move-exception
            goto L_0x288c
        L_0x2889:
            r0 = move-exception
            r16 = r1
        L_0x288c:
            im.bclpbkiauv.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x2892
        L_0x2890:
            r16 = r1
        L_0x2892:
            int r0 = r2.audioProgressMs
            long r0 = (long) r0
            im.bclpbkiauv.messenger.FileLoader r13 = r61.getFileLoader()
            im.bclpbkiauv.tgnet.TLRPC$Document r14 = r2.getDocument()
            r15 = 1
            boolean r13 = r13.isLoadingVideo(r14, r15)
            r13 = r13 ^ r15
            r8.seekTo(r0, r13)
            goto L_0x28b9
        L_0x28a7:
            r16 = r1
            goto L_0x28b9
        L_0x28aa:
            r16 = r1
            goto L_0x28af
        L_0x28ad:
            r16 = r1
        L_0x28af:
            int r4 = r4 + 1
            r1 = r16
            goto L_0x2843
        L_0x28b4:
            r16 = r1
            goto L_0x28b9
        L_0x28b7:
            r16 = r1
        L_0x28b9:
            goto L_0x30be
        L_0x28bb:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messagePlayingDidReset
            if (r10 == r0) goto L_0x3003
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messagePlayingPlayStateChanged
            if (r10 != r0) goto L_0x28c5
            goto L_0x3003
        L_0x28c5:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messagePlayingProgressDidChanged
            if (r10 != r0) goto L_0x291e
            r1 = 0
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            im.bclpbkiauv.ui.components.RecyclerListView r1 = r9.chatListView
            if (r1 == 0) goto L_0x291c
            int r1 = r1.getChildCount()
            r2 = 0
        L_0x28d7:
            if (r2 >= r1) goto L_0x291c
            im.bclpbkiauv.ui.components.RecyclerListView r3 = r9.chatListView
            android.view.View r3 = r3.getChildAt(r2)
            boolean r4 = r3 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r4 == 0) goto L_0x2919
            r4 = r3
            im.bclpbkiauv.ui.cells.ChatMessageCell r4 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r4
            im.bclpbkiauv.messenger.MessageObject r5 = r4.getMessageObject()
            if (r5 == 0) goto L_0x2919
            int r6 = r5.getId()
            int r7 = r0.intValue()
            if (r6 != r7) goto L_0x2919
            im.bclpbkiauv.messenger.MediaController r6 = im.bclpbkiauv.messenger.MediaController.getInstance()
            im.bclpbkiauv.messenger.MessageObject r6 = r6.getPlayingMessageObject()
            if (r6 == 0) goto L_0x291c
            float r7 = r6.audioProgress
            r5.audioProgress = r7
            int r7 = r6.audioProgressSec
            r5.audioProgressSec = r7
            int r7 = r6.audioPlayerDuration
            r5.audioPlayerDuration = r7
            r4.updatePlayingMessageProgress()
            im.bclpbkiauv.ui.cells.ChatMessageCell r7 = r9.drawLaterRoundProgressCell
            if (r7 != r4) goto L_0x291c
            android.view.View r7 = r9.fragmentView
            r7.invalidate()
            goto L_0x291c
        L_0x2919:
            int r2 = r2 + 1
            goto L_0x28d7
        L_0x291c:
            goto L_0x30be
        L_0x291e:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.didUpdatePollResults
            if (r10 != r0) goto L_0x2967
            r1 = 0
            r0 = r11[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            android.util.LongSparseArray<java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>> r2 = r9.polls
            java.lang.Object r2 = r2.get(r0)
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            if (r2 == 0) goto L_0x2965
            r3 = 1
            r4 = r11[r3]
            r3 = r4
            im.bclpbkiauv.tgnet.TLRPC$TL_poll r3 = (im.bclpbkiauv.tgnet.TLRPC.TL_poll) r3
            r4 = 2
            r4 = r11[r4]
            im.bclpbkiauv.tgnet.TLRPC$TL_pollResults r4 = (im.bclpbkiauv.tgnet.TLRPC.TL_pollResults) r4
            r5 = 0
            int r6 = r2.size()
        L_0x2945:
            if (r5 >= r6) goto L_0x2965
            java.lang.Object r7 = r2.get(r5)
            im.bclpbkiauv.messenger.MessageObject r7 = (im.bclpbkiauv.messenger.MessageObject) r7
            im.bclpbkiauv.tgnet.TLRPC$Message r8 = r7.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r8 = r8.media
            im.bclpbkiauv.tgnet.TLRPC$TL_messageMediaPoll r8 = (im.bclpbkiauv.tgnet.TLRPC.TL_messageMediaPoll) r8
            if (r3 == 0) goto L_0x2957
            r8.poll = r3
        L_0x2957:
            im.bclpbkiauv.messenger.MessageObject.updatePollResults(r8, r4)
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r12 = r9.chatAdapter
            if (r12 == 0) goto L_0x2962
            r13 = 1
            r12.updateRowWithMessageObject(r7, r13)
        L_0x2962:
            int r5 = r5 + 1
            goto L_0x2945
        L_0x2965:
            goto L_0x30be
        L_0x2967:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.didUpdateReactions
            if (r10 != r0) goto L_0x29b3
            r1 = 0
            r0 = r11[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r9.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 == 0) goto L_0x2980
            long r2 = r9.mergeDialogId
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x29b1
        L_0x2980:
            r2 = 1
            r3 = r11[r2]
            java.lang.Integer r3 = (java.lang.Integer) r3
            int r2 = r3.intValue()
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r3 = r9.messagesDict
            long r4 = r9.dialog_id
            int r6 = (r0 > r4 ? 1 : (r0 == r4 ? 0 : -1))
            if (r6 != 0) goto L_0x2993
            r8 = 0
            goto L_0x2994
        L_0x2993:
            r8 = 1
        L_0x2994:
            r3 = r3[r8]
            java.lang.Object r3 = r3.get(r2)
            im.bclpbkiauv.messenger.MessageObject r3 = (im.bclpbkiauv.messenger.MessageObject) r3
            if (r3 == 0) goto L_0x29b1
            im.bclpbkiauv.tgnet.TLRPC$Message r4 = r3.messageOwner
            r5 = 2
            r5 = r11[r5]
            im.bclpbkiauv.tgnet.TLRPC$TL_messageReactions r5 = (im.bclpbkiauv.tgnet.TLRPC.TL_messageReactions) r5
            im.bclpbkiauv.messenger.MessageObject.updateReactions(r4, r5)
            r3.measureInlineBotButtons()
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r4 = r9.chatAdapter
            r5 = 1
            r4.updateRowWithMessageObject(r3, r5)
        L_0x29b1:
            goto L_0x30be
        L_0x29b3:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.updateMessageMedia
            if (r10 != r0) goto L_0x2ad9
            r1 = 0
            r0 = r11[r1]
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = (im.bclpbkiauv.tgnet.TLRPC.Message) r0
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r2 = r9.messagesDict
            r2 = r2[r1]
            int r1 = r0.id
            java.lang.Object r1 = r2.get(r1)
            im.bclpbkiauv.messenger.MessageObject r1 = (im.bclpbkiauv.messenger.MessageObject) r1
            if (r1 == 0) goto L_0x2ad7
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r1.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r3 = r0.media
            r2.media = r3
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r1.messageOwner
            java.lang.String r3 = r0.attachPath
            r2.attachPath = r3
            r2 = 0
            r1.generateThumbs(r2)
            long r2 = r1.getGroupId()
            r4 = 0
            int r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r6 == 0) goto L_0x2ab2
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$PhotoSize> r2 = r1.photoThumbs
            if (r2 == 0) goto L_0x29f0
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$PhotoSize> r2 = r1.photoThumbs
            boolean r2 = r2.isEmpty()
            if (r2 == 0) goto L_0x2ab2
        L_0x29f0:
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r2 = r9.groupedMessagesMap
            long r3 = r1.getGroupId()
            java.lang.Object r2 = r2.get(r3)
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r2 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessages) r2
            if (r2 == 0) goto L_0x2ab2
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r2.messages
            int r3 = r3.indexOf(r1)
            if (r3 < 0) goto L_0x2ab2
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r4 = r2.messages
            int r4 = r4.size()
            r5 = 0
            if (r3 <= 0) goto L_0x2a73
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r2.messages
            int r6 = r6.size()
            r7 = 1
            int r6 = r6 - r7
            if (r3 >= r6) goto L_0x2a73
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r6 = new im.bclpbkiauv.messenger.MessageObject$GroupedMessages
            r6.<init>()
            java.security.SecureRandom r7 = im.bclpbkiauv.messenger.Utilities.random
            long r7 = r7.nextLong()
            r6.groupId = r7
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r7 = r6.messages
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r8 = r2.messages
            int r12 = r3 + 1
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r13 = r2.messages
            int r13 = r13.size()
            java.util.List r8 = r8.subList(r12, r13)
            r7.addAll(r8)
            r7 = 0
        L_0x2a3a:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r8 = r6.messages
            int r8 = r8.size()
            if (r7 >= r8) goto L_0x2a58
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r8 = r6.messages
            java.lang.Object r8 = r8.get(r7)
            im.bclpbkiauv.messenger.MessageObject r8 = (im.bclpbkiauv.messenger.MessageObject) r8
            long r12 = r6.groupId
            r8.localGroupId = r12
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r8 = r2.messages
            int r12 = r3 + 1
            r8.remove(r12)
            int r7 = r7 + 1
            goto L_0x2a3a
        L_0x2a58:
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r7 = r9.groupedMessagesMap
            long r12 = r6.groupId
            r7.put(r12, r6)
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r7 = r6.messages
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r8 = r6.messages
            int r8 = r8.size()
            r12 = 1
            int r8 = r8 - r12
            java.lang.Object r7 = r7.get(r8)
            r5 = r7
            im.bclpbkiauv.messenger.MessageObject r5 = (im.bclpbkiauv.messenger.MessageObject) r5
            r6.calculate()
        L_0x2a73:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r2.messages
            r6.remove(r3)
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r2.messages
            boolean r6 = r6.isEmpty()
            if (r6 == 0) goto L_0x2a88
            android.util.LongSparseArray<im.bclpbkiauv.messenger.MessageObject$GroupedMessages> r6 = r9.groupedMessagesMap
            long r7 = r2.groupId
            r6.remove(r7)
            goto L_0x2ab2
        L_0x2a88:
            if (r5 != 0) goto L_0x2a9b
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r2.messages
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r7 = r2.messages
            int r7 = r7.size()
            r8 = 1
            int r7 = r7 - r8
            java.lang.Object r6 = r6.get(r7)
            r5 = r6
            im.bclpbkiauv.messenger.MessageObject r5 = (im.bclpbkiauv.messenger.MessageObject) r5
        L_0x2a9b:
            r2.calculate()
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r6 = r9.messages
            int r6 = r6.indexOf(r5)
            if (r6 < 0) goto L_0x2ab2
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r7 = r9.chatAdapter
            if (r7 == 0) goto L_0x2ab2
            int r8 = r7.messagesStartRow
            int r8 = r8 + r6
            r7.notifyItemRangeChanged(r8, r4)
        L_0x2ab2:
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r2 = r0.media
            int r2 = r2.ttl_seconds
            if (r2 == 0) goto L_0x2ad4
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r2 = r0.media
            im.bclpbkiauv.tgnet.TLRPC$Photo r2 = r2.photo
            boolean r2 = r2 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_photoEmpty
            if (r2 != 0) goto L_0x2ac8
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r2 = r0.media
            im.bclpbkiauv.tgnet.TLRPC$Document r2 = r2.document
            boolean r2 = r2 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_documentEmpty
            if (r2 == 0) goto L_0x2ad4
        L_0x2ac8:
            r1.setType()
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r9.chatAdapter
            if (r2 == 0) goto L_0x2ad7
            r3 = 0
            r2.updateRowWithMessageObject(r1, r3)
            goto L_0x2ad7
        L_0x2ad4:
            r61.updateVisibleRows()
        L_0x2ad7:
            goto L_0x30be
        L_0x2ad9:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.replaceMessagesObjects
            if (r10 != r0) goto L_0x2b07
            r1 = 0
            r0 = r11[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r9.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 == 0) goto L_0x2af3
            long r2 = r9.mergeDialogId
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 == 0) goto L_0x2af3
            return
        L_0x2af3:
            long r2 = r9.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x2afb
            r2 = 0
            goto L_0x2afc
        L_0x2afb:
            r2 = 1
        L_0x2afc:
            r3 = 1
            r3 = r11[r3]
            java.util.ArrayList r3 = (java.util.ArrayList) r3
            r4 = 0
            r9.replaceMessageObjects(r3, r2, r4)
            goto L_0x30be
        L_0x2b07:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.notificationsSettingsUpdated
            if (r10 != r0) goto L_0x2b1b
            r61.updateTitleIcons()
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r9.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x30be
            r61.updateBottomOverlay()
            goto L_0x30be
        L_0x2b1b:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.replyMessagesDidLoad
            if (r10 != r0) goto L_0x2b33
            r1 = 0
            r0 = r11[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r9.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x2b31
            r61.updateVisibleRows()
        L_0x2b31:
            goto L_0x30be
        L_0x2b33:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.pinnedMessageDidLoad
            if (r10 != r0) goto L_0x2b69
            r1 = 0
            r0 = r11[r1]
            im.bclpbkiauv.messenger.MessageObject r0 = (im.bclpbkiauv.messenger.MessageObject) r0
            long r1 = r0.getDialogId()
            long r3 = r9.dialog_id
            int r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r5 != 0) goto L_0x2b67
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r1 = r9.chatInfo
            if (r1 == 0) goto L_0x2b52
            int r1 = r1.pinned_msg_id
            int r2 = r0.getId()
            if (r1 == r2) goto L_0x2b5e
        L_0x2b52:
            im.bclpbkiauv.tgnet.TLRPC$UserFull r1 = r9.userInfo
            if (r1 == 0) goto L_0x2b67
            int r1 = r1.pinned_msg_id
            int r2 = r0.getId()
            if (r1 != r2) goto L_0x2b67
        L_0x2b5e:
            r9.pinnedMessageObject = r0
            r1 = 0
            r9.loadingPinnedMessage = r1
            r1 = 1
            r9.updatePinnedMessageView(r1)
        L_0x2b67:
            goto L_0x30be
        L_0x2b69:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.didReceivedWebpages
            if (r10 != r0) goto L_0x2bca
            r1 = 0
            r0 = r11[r1]
            java.util.ArrayList r0 = (java.util.ArrayList) r0
            r1 = 0
            r2 = 0
        L_0x2b74:
            int r3 = r0.size()
            if (r2 >= r3) goto L_0x2bc3
            java.lang.Object r3 = r0.get(r2)
            im.bclpbkiauv.tgnet.TLRPC$Message r3 = (im.bclpbkiauv.tgnet.TLRPC.Message) r3
            long r4 = im.bclpbkiauv.messenger.MessageObject.getDialogId(r3)
            long r6 = r9.dialog_id
            int r8 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r8 == 0) goto L_0x2b91
            long r6 = r9.mergeDialogId
            int r8 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r8 == 0) goto L_0x2b91
            goto L_0x2bc0
        L_0x2b91:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r6 = r9.messagesDict
            long r7 = r9.dialog_id
            int r12 = (r4 > r7 ? 1 : (r4 == r7 ? 0 : -1))
            if (r12 != 0) goto L_0x2b9b
            r7 = 0
            goto L_0x2b9c
        L_0x2b9b:
            r7 = 1
        L_0x2b9c:
            r6 = r6[r7]
            int r7 = r3.id
            java.lang.Object r6 = r6.get(r7)
            im.bclpbkiauv.messenger.MessageObject r6 = (im.bclpbkiauv.messenger.MessageObject) r6
            if (r6 == 0) goto L_0x2bc0
            im.bclpbkiauv.tgnet.TLRPC$Message r7 = r6.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$TL_messageMediaWebPage r8 = new im.bclpbkiauv.tgnet.TLRPC$TL_messageMediaWebPage
            r8.<init>()
            r7.media = r8
            im.bclpbkiauv.tgnet.TLRPC$Message r7 = r6.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r7 = r7.media
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r8 = r3.media
            im.bclpbkiauv.tgnet.TLRPC$WebPage r8 = r8.webpage
            r7.webpage = r8
            r7 = 1
            r6.generateThumbs(r7)
            r1 = 1
        L_0x2bc0:
            int r2 = r2 + 1
            goto L_0x2b74
        L_0x2bc3:
            if (r1 == 0) goto L_0x2bc8
            r61.updateVisibleRows()
        L_0x2bc8:
            goto L_0x30be
        L_0x2bca:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.didReceivedWebpagesInUpdates
            if (r10 != r0) goto L_0x2bfc
            im.bclpbkiauv.tgnet.TLRPC$WebPage r0 = r9.foundWebPage
            if (r0 == 0) goto L_0x30be
            r1 = 0
            r0 = r11[r1]
            android.util.LongSparseArray r0 = (android.util.LongSparseArray) r0
            r1 = 0
        L_0x2bd8:
            int r2 = r0.size()
            if (r1 >= r2) goto L_0x2bfa
            java.lang.Object r2 = r0.valueAt(r1)
            im.bclpbkiauv.tgnet.TLRPC$WebPage r2 = (im.bclpbkiauv.tgnet.TLRPC.WebPage) r2
            long r3 = r2.id
            im.bclpbkiauv.tgnet.TLRPC$WebPage r5 = r9.foundWebPage
            long r5 = r5.id
            int r7 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r7 != 0) goto L_0x2bf7
            boolean r3 = r2 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_webPageEmpty
            r4 = 1
            r3 = r3 ^ r4
            r4 = 0
            r9.showFieldPanelForWebPage(r3, r2, r4)
            goto L_0x2bfa
        L_0x2bf7:
            int r1 = r1 + 1
            goto L_0x2bd8
        L_0x2bfa:
            goto L_0x30be
        L_0x2bfc:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messagesReadContent
            if (r10 != r0) goto L_0x2c8a
            r2 = 0
            r0 = r11[r2]
            java.util.ArrayList r0 = (java.util.ArrayList) r0
            r2 = 0
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r9.currentChat
            boolean r3 = im.bclpbkiauv.messenger.ChatObject.isChannel(r3)
            if (r3 == 0) goto L_0x2c13
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r9.currentChat
            int r3 = r3.id
            goto L_0x2c14
        L_0x2c13:
            r3 = 0
        L_0x2c14:
            r4 = 0
        L_0x2c15:
            int r5 = r0.size()
            if (r4 >= r5) goto L_0x2c81
            java.lang.Object r5 = r0.get(r4)
            java.lang.Long r5 = (java.lang.Long) r5
            long r7 = r5.longValue()
            long r12 = r7 >> r1
            int r5 = (int) r12
            if (r5 >= 0) goto L_0x2c2b
            r5 = 0
        L_0x2c2b:
            if (r5 == r3) goto L_0x2c30
            r17 = r0
            goto L_0x2c7a
        L_0x2c30:
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r12 = r9.messagesDict
            r13 = 0
            r12 = r12[r13]
            int r13 = (int) r7
            java.lang.Object r12 = r12.get(r13)
            im.bclpbkiauv.messenger.MessageObject r12 = (im.bclpbkiauv.messenger.MessageObject) r12
            if (r12 == 0) goto L_0x2c78
            r12.setContentIsRead()
            r2 = 1
            im.bclpbkiauv.tgnet.TLRPC$Message r13 = r12.messageOwner
            boolean r13 = r13.mentioned
            if (r13 == 0) goto L_0x2c75
            int r13 = r9.newMentionsCount
            r14 = 1
            int r13 = r13 - r14
            r9.newMentionsCount = r13
            if (r13 > 0) goto L_0x2c5b
            r15 = 0
            r9.newMentionsCount = r15
            r9.hasAllMentionsLocal = r14
            r9.showMentionDownButton(r15, r14)
            r17 = r0
            goto L_0x2c7a
        L_0x2c5b:
            r15 = 0
            android.widget.TextView r1 = r9.mentiondownButtonCounter
            if (r1 == 0) goto L_0x2c72
            r17 = r0
            java.lang.Object[] r0 = new java.lang.Object[r14]
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)
            r0[r15] = r13
            java.lang.String r0 = java.lang.String.format(r6, r0)
            r1.setText(r0)
            goto L_0x2c7a
        L_0x2c72:
            r17 = r0
            goto L_0x2c7a
        L_0x2c75:
            r17 = r0
            goto L_0x2c7a
        L_0x2c78:
            r17 = r0
        L_0x2c7a:
            int r4 = r4 + 1
            r0 = r17
            r1 = 32
            goto L_0x2c15
        L_0x2c81:
            r17 = r0
            if (r2 == 0) goto L_0x2c88
            r61.updateVisibleRows()
        L_0x2c88:
            goto L_0x30be
        L_0x2c8a:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.botInfoDidLoad
            if (r10 != r0) goto L_0x2cf4
            r1 = 1
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            int r1 = r9.classGuid
            if (r1 != r0) goto L_0x2cf2
            r1 = 0
            r1 = r11[r1]
            im.bclpbkiauv.tgnet.TLRPC$BotInfo r1 = (im.bclpbkiauv.tgnet.TLRPC.BotInfo) r1
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r2 = r9.currentEncryptedChat
            if (r2 != 0) goto L_0x2cef
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$TL_botCommand> r2 = r1.commands
            boolean r2 = r2.isEmpty()
            if (r2 != 0) goto L_0x2cb7
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            boolean r2 = im.bclpbkiauv.messenger.ChatObject.isChannel(r2)
            if (r2 != 0) goto L_0x2cb7
            r2 = 1
            r9.hasBotsCommands = r2
        L_0x2cb7:
            android.util.SparseArray<im.bclpbkiauv.tgnet.TLRPC$BotInfo> r2 = r9.botInfo
            int r3 = r1.user_id
            r2.put(r3, r1)
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r9.chatAdapter
            if (r2 == 0) goto L_0x2cc9
            int r3 = r2.botInfoRow
            r2.notifyItemChanged(r3)
        L_0x2cc9:
            im.bclpbkiauv.ui.adapters.MentionsAdapter r2 = r9.mentionsAdapter
            if (r2 == 0) goto L_0x2ce4
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            boolean r2 = im.bclpbkiauv.messenger.ChatObject.isChannel(r2)
            if (r2 == 0) goto L_0x2cdd
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            if (r2 == 0) goto L_0x2ce4
            boolean r2 = r2.megagroup
            if (r2 == 0) goto L_0x2ce4
        L_0x2cdd:
            im.bclpbkiauv.ui.adapters.MentionsAdapter r2 = r9.mentionsAdapter
            android.util.SparseArray<im.bclpbkiauv.tgnet.TLRPC$BotInfo> r3 = r9.botInfo
            r2.setBotInfo(r3)
        L_0x2ce4:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r2 = r9.chatActivityEnterView
            if (r2 == 0) goto L_0x2cef
            int r3 = r9.botsCount
            boolean r4 = r9.hasBotsCommands
            r2.setBotsCount(r3, r4)
        L_0x2cef:
            r61.updateBotButtons()
        L_0x2cf2:
            goto L_0x30be
        L_0x2cf4:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.botKeyboardDidLoad
            if (r10 != r0) goto L_0x2d3d
            long r0 = r9.dialog_id
            r2 = 1
            r3 = r11[r2]
            java.lang.Long r3 = (java.lang.Long) r3
            long r2 = r3.longValue()
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x30be
            r1 = 0
            r0 = r11[r1]
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = (im.bclpbkiauv.tgnet.TLRPC.Message) r0
            if (r0 == 0) goto L_0x2d1f
            boolean r2 = r9.userBlocked
            if (r2 != 0) goto L_0x2d1f
            im.bclpbkiauv.messenger.MessageObject r2 = new im.bclpbkiauv.messenger.MessageObject
            int r3 = r9.currentAccount
            r2.<init>(r3, r0, r1)
            r9.botButtons = r2
            r61.checkBotKeyboard()
            goto L_0x2d3b
        L_0x2d1f:
            r1 = 0
            r9.botButtons = r1
            im.bclpbkiauv.ui.components.ChatActivityEnterView r2 = r9.chatActivityEnterView
            if (r2 == 0) goto L_0x2d3b
            im.bclpbkiauv.messenger.MessageObject r2 = r9.replyingMessageObject
            if (r2 == 0) goto L_0x2d34
            im.bclpbkiauv.messenger.MessageObject r3 = r9.botReplyButtons
            if (r3 != r2) goto L_0x2d34
            r9.botReplyButtons = r1
            r1 = 1
            r9.hideFieldPanel(r1)
        L_0x2d34:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r1 = r9.chatActivityEnterView
            im.bclpbkiauv.messenger.MessageObject r2 = r9.botButtons
            r1.setButtons(r2)
        L_0x2d3b:
            goto L_0x30be
        L_0x2d3d:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.chatSearchResultsAvailable
            if (r10 != r0) goto L_0x2da6
            int r0 = r9.classGuid
            r1 = 0
            r2 = r11[r1]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r1 = r2.intValue()
            if (r0 != r1) goto L_0x30be
            r1 = 1
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            r1 = 3
            r1 = r11[r1]
            java.lang.Long r1 = (java.lang.Long) r1
            long r7 = r1.longValue()
            if (r0 == 0) goto L_0x2d7b
            r3 = 0
            r5 = 1
            long r1 = r9.dialog_id
            int r6 = (r7 > r1 ? 1 : (r7 == r1 ? 0 : -1))
            if (r6 != 0) goto L_0x2d6d
            r33 = 0
            goto L_0x2d6f
        L_0x2d6d:
            r33 = 1
        L_0x2d6f:
            r6 = 0
            r12 = 4
            r1 = r61
            r2 = r0
            r4 = r5
            r5 = r33
            r1.scrollToMessageId(r2, r3, r4, r5, r6)
            goto L_0x2d7f
        L_0x2d7b:
            r12 = 4
            r61.updateVisibleRows()
        L_0x2d7f:
            r1 = 2
            r1 = r11[r1]
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            r2 = r11[r12]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r2 = r2.intValue()
            r3 = 5
            r3 = r11[r3]
            java.lang.Integer r3 = (java.lang.Integer) r3
            int r3 = r3.intValue()
            r9.updateSearchButtons(r1, r2, r3)
            im.bclpbkiauv.ui.actionbar.ActionBarMenuItem r1 = r9.searchItem
            if (r1 == 0) goto L_0x2da4
            r2 = 0
            r1.setShowSearchProgress(r2)
        L_0x2da4:
            goto L_0x30be
        L_0x2da6:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.chatSearchResultsLoading
            if (r10 != r0) goto L_0x2dc1
            int r0 = r9.classGuid
            r1 = 0
            r1 = r11[r1]
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            if (r0 != r1) goto L_0x30be
            im.bclpbkiauv.ui.actionbar.ActionBarMenuItem r0 = r9.searchItem
            if (r0 == 0) goto L_0x30be
            r1 = 1
            r0.setShowSearchProgress(r1)
            goto L_0x30be
        L_0x2dc1:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.didUpdatedMessagesViews
            if (r10 != r0) goto L_0x2e07
            r1 = 0
            r0 = r11[r1]
            android.util.SparseArray r0 = (android.util.SparseArray) r0
            long r1 = r9.dialog_id
            int r2 = (int) r1
            java.lang.Object r1 = r0.get(r2)
            android.util.SparseIntArray r1 = (android.util.SparseIntArray) r1
            if (r1 == 0) goto L_0x2e05
            r2 = 0
            r3 = 0
        L_0x2dd7:
            int r4 = r1.size()
            if (r3 >= r4) goto L_0x2e00
            int r4 = r1.keyAt(r3)
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r5 = r9.messagesDict
            r6 = 0
            r5 = r5[r6]
            java.lang.Object r5 = r5.get(r4)
            im.bclpbkiauv.messenger.MessageObject r5 = (im.bclpbkiauv.messenger.MessageObject) r5
            if (r5 == 0) goto L_0x2dfd
            int r6 = r1.get(r4)
            im.bclpbkiauv.tgnet.TLRPC$Message r7 = r5.messageOwner
            int r7 = r7.views
            if (r6 <= r7) goto L_0x2dfd
            im.bclpbkiauv.tgnet.TLRPC$Message r7 = r5.messageOwner
            r7.views = r6
            r2 = 1
        L_0x2dfd:
            int r3 = r3 + 1
            goto L_0x2dd7
        L_0x2e00:
            if (r2 == 0) goto L_0x2e05
            r61.updateVisibleRows()
        L_0x2e05:
            goto L_0x30be
        L_0x2e07:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.peerSettingsDidLoad
            if (r10 != r0) goto L_0x2e2e
            r1 = 0
            r0 = r11[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r9.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 == 0) goto L_0x2e25
            im.bclpbkiauv.tgnet.TLRPC$User r2 = r9.currentUser
            if (r2 == 0) goto L_0x2e2c
            int r2 = r2.id
            long r2 = (long) r2
            int r4 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1))
            if (r4 != 0) goto L_0x2e2c
        L_0x2e25:
            boolean r2 = r9.paused
            r3 = 1
            r2 = r2 ^ r3
            r9.updateTopPanel(r2)
        L_0x2e2c:
            goto L_0x30be
        L_0x2e2e:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.newDraftReceived
            if (r10 != r0) goto L_0x2e47
            r1 = 0
            r0 = r11[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r9.dialog_id
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x2e45
            r2 = 1
            r9.applyDraftMaybe(r2)
        L_0x2e45:
            goto L_0x30be
        L_0x2e47:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.userFullInfoDidLoad
            if (r10 != r0) goto L_0x2e8c
            r1 = 0
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            im.bclpbkiauv.tgnet.TLRPC$User r1 = r9.currentUser
            if (r1 == 0) goto L_0x2e8a
            int r1 = r1.id
            int r2 = r0.intValue()
            if (r1 != r2) goto L_0x2e8a
            r1 = 1
            r2 = r11[r1]
            im.bclpbkiauv.tgnet.TLRPC$UserFull r2 = (im.bclpbkiauv.tgnet.TLRPC.UserFull) r2
            r9.userInfo = r2
            if (r2 == 0) goto L_0x2e74
            boolean r1 = r2.phone_calls_available
            if (r1 != 0) goto L_0x2e74
            im.bclpbkiauv.ui.actionbar.ActionBar r1 = r9.actionBar
            im.bclpbkiauv.ui.actionbar.ActionBarMenu r1 = r1.createMenu()
            im.bclpbkiauv.ui.actionbar.ActionBarMenuItem r2 = r9.callItem
            r1.removeView(r2)
        L_0x2e74:
            r1 = 2
            r2 = r11[r1]
            boolean r2 = r2 instanceof im.bclpbkiauv.messenger.MessageObject
            if (r2 == 0) goto L_0x2e86
            r1 = r11[r1]
            im.bclpbkiauv.messenger.MessageObject r1 = (im.bclpbkiauv.messenger.MessageObject) r1
            r9.pinnedMessageObject = r1
            r1 = 0
            r9.updatePinnedMessageView(r1)
            goto L_0x2e8a
        L_0x2e86:
            r1 = 1
            r9.updatePinnedMessageView(r1)
        L_0x2e8a:
            goto L_0x30be
        L_0x2e8c:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.didSetNewWallpapper
            if (r10 != r0) goto L_0x2ecd
            android.view.View r0 = r9.fragmentView
            if (r0 == 0) goto L_0x30be
            im.bclpbkiauv.ui.components.SizeNotifierFrameLayout r0 = r9.contentView
            android.graphics.drawable.Drawable r1 = im.bclpbkiauv.ui.actionbar.Theme.getCachedWallpaper()
            boolean r2 = im.bclpbkiauv.ui.actionbar.Theme.isWallpaperMotion()
            r0.setBackgroundImage(r1, r2)
            android.view.View r0 = r9.progressView2
            android.graphics.drawable.Drawable r0 = r0.getBackground()
            android.graphics.PorterDuffColorFilter r1 = im.bclpbkiauv.ui.actionbar.Theme.colorFilter
            r0.setColorFilter(r1)
            android.widget.TextView r0 = r9.emptyView
            if (r0 == 0) goto L_0x2eb9
            android.graphics.drawable.Drawable r0 = r0.getBackground()
            android.graphics.PorterDuffColorFilter r1 = im.bclpbkiauv.ui.actionbar.Theme.colorFilter
            r0.setColorFilter(r1)
        L_0x2eb9:
            im.bclpbkiauv.ui.components.ChatBigEmptyView r0 = r9.bigEmptyView
            if (r0 == 0) goto L_0x2ec6
            android.graphics.drawable.Drawable r0 = r0.getBackground()
            android.graphics.PorterDuffColorFilter r1 = im.bclpbkiauv.ui.actionbar.Theme.colorFilter
            r0.setColorFilter(r1)
        L_0x2ec6:
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r9.chatListView
            r0.invalidateViews()
            goto L_0x30be
        L_0x2ecd:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.goingToPreviewTheme
            if (r10 != r0) goto L_0x2f07
            androidx.recyclerview.widget.GridLayoutManagerFixed r0 = r9.chatLayoutManager
            if (r0 == 0) goto L_0x30be
            int r0 = r0.findFirstVisibleItemPosition()
            if (r0 == 0) goto L_0x2f02
            r9.scrollToPositionOnRecreate = r0
            im.bclpbkiauv.ui.components.RecyclerListView r1 = r9.chatListView
            androidx.recyclerview.widget.RecyclerView$ViewHolder r1 = r1.findViewHolderForAdapterPosition(r0)
            im.bclpbkiauv.ui.components.RecyclerListView$Holder r1 = (im.bclpbkiauv.ui.components.RecyclerListView.Holder) r1
            if (r1 == 0) goto L_0x2efe
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r9.chatListView
            int r2 = r2.getMeasuredHeight()
            android.view.View r3 = r1.itemView
            int r3 = r3.getBottom()
            int r2 = r2 - r3
            im.bclpbkiauv.ui.components.RecyclerListView r3 = r9.chatListView
            int r3 = r3.getPaddingBottom()
            int r2 = r2 - r3
            r9.scrollToOffsetOnRecreate = r2
            goto L_0x2f01
        L_0x2efe:
            r2 = -1
            r9.scrollToPositionOnRecreate = r2
        L_0x2f01:
            goto L_0x2f05
        L_0x2f02:
            r2 = -1
            r9.scrollToPositionOnRecreate = r2
        L_0x2f05:
            goto L_0x30be
        L_0x2f07:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.channelRightsUpdated
            if (r10 != r0) goto L_0x2f2d
            r1 = 0
            r0 = r11[r1]
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = (im.bclpbkiauv.tgnet.TLRPC.Chat) r0
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r9.currentChat
            if (r1 == 0) goto L_0x2f2b
            int r1 = r0.id
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r9.currentChat
            int r2 = r2.id
            if (r1 != r2) goto L_0x2f2b
            im.bclpbkiauv.ui.components.ChatActivityEnterView r1 = r9.chatActivityEnterView
            if (r1 == 0) goto L_0x2f2b
            r9.currentChat = r0
            r1.checkChannelRights()
            r61.checkRaiseSensors()
            r61.updateSecretStatus()
        L_0x2f2b:
            goto L_0x30be
        L_0x2f2d:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.updateMentionsCount
            if (r10 != r0) goto L_0x2f70
            long r0 = r9.dialog_id
            r2 = 0
            r3 = r11[r2]
            java.lang.Long r3 = (java.lang.Long) r3
            long r2 = r3.longValue()
            int r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r4 != 0) goto L_0x30be
            r1 = 1
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            int r1 = r9.newMentionsCount
            if (r1 <= r0) goto L_0x2f6e
            r9.newMentionsCount = r0
            if (r0 > 0) goto L_0x2f5b
            r1 = 0
            r9.newMentionsCount = r1
            r2 = 1
            r9.hasAllMentionsLocal = r2
            r9.showMentionDownButton(r1, r2)
            goto L_0x2f6e
        L_0x2f5b:
            r1 = 0
            r2 = 1
            android.widget.TextView r3 = r9.mentiondownButtonCounter
            java.lang.Object[] r2 = new java.lang.Object[r2]
            java.lang.Integer r4 = java.lang.Integer.valueOf(r0)
            r2[r1] = r4
            java.lang.String r1 = java.lang.String.format(r6, r2)
            r3.setText(r1)
        L_0x2f6e:
            goto L_0x30be
        L_0x2f70:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.audioRecordTooShort
            if (r10 != r0) goto L_0x2f91
            r1 = 0
            r0 = r11[r1]
            java.lang.Integer r0 = (java.lang.Integer) r0
            int r0 = r0.intValue()
            int r1 = r9.classGuid
            if (r0 == r1) goto L_0x2f82
            return
        L_0x2f82:
            r1 = 1
            r1 = r11[r1]
            java.lang.Boolean r1 = (java.lang.Boolean) r1
            boolean r1 = r1.booleanValue()
            r2 = 0
            r9.showVoiceHint(r2, r1)
            goto L_0x30be
        L_0x2f91:
            r2 = 0
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.videoLoadingStateChanged
            if (r10 != r0) goto L_0x2fce
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r9.chatListView
            if (r0 == 0) goto L_0x30be
            r1 = r11[r2]
            java.lang.String r1 = (java.lang.String) r1
            int r0 = r0.getChildCount()
            r2 = 0
        L_0x2fa3:
            if (r2 >= r0) goto L_0x2fcc
            im.bclpbkiauv.ui.components.RecyclerListView r3 = r9.chatListView
            android.view.View r3 = r3.getChildAt(r2)
            boolean r4 = r3 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r4 != 0) goto L_0x2fb0
            goto L_0x2fc9
        L_0x2fb0:
            r4 = r3
            im.bclpbkiauv.ui.cells.ChatMessageCell r4 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r4
            im.bclpbkiauv.tgnet.TLRPC$Document r5 = r4.getStreamingMedia()
            if (r5 != 0) goto L_0x2fba
            goto L_0x2fc9
        L_0x2fba:
            java.lang.String r6 = im.bclpbkiauv.messenger.FileLoader.getAttachFileName(r5)
            boolean r6 = r6.equals(r1)
            if (r6 == 0) goto L_0x2fc9
            r6 = 0
            r7 = 1
            r4.updateButtonState(r6, r7, r6)
        L_0x2fc9:
            int r2 = r2 + 1
            goto L_0x2fa3
        L_0x2fcc:
            goto L_0x30be
        L_0x2fce:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.scheduledMessagesUpdated
            if (r10 != r0) goto L_0x2ff3
            r1 = 0
            r0 = r11[r1]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            long r2 = r9.dialog_id
            int r4 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1))
            if (r4 != 0) goto L_0x2ff1
            r2 = 1
            r2 = r11[r2]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r2 = r2.intValue()
            r9.scheduledMessagesCount = r2
            boolean r2 = r9.openAnimationEnded
            r9.updateScheduledInterface(r2)
        L_0x2ff1:
            goto L_0x30be
        L_0x2ff3:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.livestatechange
            if (r10 != r0) goto L_0x2fff
            r1 = 0
            r0 = r11[r1]
            im.bclpbkiauv.tgnet.TLRPC$TL_messageMediaShare r0 = (im.bclpbkiauv.tgnet.TLRPC.TL_messageMediaShare) r0
            goto L_0x30be
        L_0x2fff:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.liverestartnotify
            goto L_0x30be
        L_0x3003:
            int r0 = im.bclpbkiauv.messenger.NotificationCenter.messagePlayingDidReset
            if (r10 != r0) goto L_0x300a
            r61.destroyTextureView()
        L_0x300a:
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r9.chatListView
            if (r0 == 0) goto L_0x30be
            int r0 = r0.getChildCount()
            r1 = 0
        L_0x3013:
            if (r1 >= r0) goto L_0x3084
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r9.chatListView
            android.view.View r2 = r2.getChildAt(r1)
            boolean r3 = r2 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r3 == 0) goto L_0x3081
            r3 = r2
            im.bclpbkiauv.ui.cells.ChatMessageCell r3 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r3
            im.bclpbkiauv.messenger.MessageObject r4 = r3.getMessageObject()
            if (r4 == 0) goto L_0x3081
            boolean r5 = r4.isVoice()
            if (r5 != 0) goto L_0x307c
            boolean r5 = r4.isMusic()
            if (r5 == 0) goto L_0x3036
            r5 = 1
            goto L_0x307d
        L_0x3036:
            boolean r5 = r4.isVideo()
            if (r5 == 0) goto L_0x3063
            r5 = 0
            r6 = 1
            r3.updateButtonState(r5, r6, r5)
            im.bclpbkiauv.messenger.MediaController r5 = im.bclpbkiauv.messenger.MediaController.getInstance()
            boolean r5 = r5.isPlayingMessage(r4)
            if (r5 != 0) goto L_0x3081
            im.bclpbkiauv.messenger.MediaController r5 = im.bclpbkiauv.messenger.MediaController.getInstance()
            boolean r5 = r5.isGoingToShowMessageObject(r4)
            if (r5 != 0) goto L_0x3081
            im.bclpbkiauv.messenger.ImageReceiver r5 = r3.getPhotoImage()
            im.bclpbkiauv.ui.components.AnimatedFileDrawable r5 = r5.getAnimation()
            if (r5 == 0) goto L_0x3062
            r5.start()
        L_0x3062:
            goto L_0x3081
        L_0x3063:
            boolean r5 = r4.isRoundVideo()
            if (r5 == 0) goto L_0x307a
            im.bclpbkiauv.messenger.MediaController r5 = im.bclpbkiauv.messenger.MediaController.getInstance()
            boolean r5 = r5.isPlayingMessage(r4)
            if (r5 != 0) goto L_0x3078
            r5 = 1
            r3.checkVideoPlayback(r5)
            goto L_0x3081
        L_0x3078:
            r5 = 1
            goto L_0x3081
        L_0x307a:
            r5 = 1
            goto L_0x3081
        L_0x307c:
            r5 = 1
        L_0x307d:
            r6 = 0
            r3.updateButtonState(r6, r5, r6)
        L_0x3081:
            int r1 = r1 + 1
            goto L_0x3013
        L_0x3084:
            im.bclpbkiauv.ui.components.RecyclerListView r1 = r9.mentionListView
            int r0 = r1.getChildCount()
            r1 = 0
        L_0x308b:
            if (r1 >= r0) goto L_0x30be
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r9.mentionListView
            android.view.View r2 = r2.getChildAt(r1)
            boolean r3 = r2 instanceof im.bclpbkiauv.ui.cells.ContextLinkCell
            if (r3 == 0) goto L_0x30b9
            r3 = r2
            im.bclpbkiauv.ui.cells.ContextLinkCell r3 = (im.bclpbkiauv.ui.cells.ContextLinkCell) r3
            im.bclpbkiauv.messenger.MessageObject r4 = r3.getMessageObject()
            if (r4 == 0) goto L_0x30b6
            boolean r5 = r4.isVoice()
            if (r5 != 0) goto L_0x30b0
            boolean r5 = r4.isMusic()
            if (r5 == 0) goto L_0x30ad
            goto L_0x30b0
        L_0x30ad:
            r5 = 0
            r6 = 1
            goto L_0x30bb
        L_0x30b0:
            r5 = 0
            r6 = 1
            r3.updateButtonState(r5, r6)
            goto L_0x30bb
        L_0x30b6:
            r5 = 0
            r6 = 1
            goto L_0x30bb
        L_0x30b9:
            r5 = 0
            r6 = 1
        L_0x30bb:
            int r1 = r1 + 1
            goto L_0x308b
        L_0x30be:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.didReceivedNotification(int, int, java.lang.Object[]):void");
    }

    public /* synthetic */ void lambda$didReceivedNotification$69$ChatActivity() {
        if (this.parentLayout != null) {
            this.parentLayout.resumeDelayedFragmentAnimation();
        }
    }

    public /* synthetic */ void lambda$didReceivedNotification$70$ChatActivity(DialogInterface dialogInterface, int i) {
        TLRPC.User user = this.currentUser;
        if (user != null) {
            presentFragment(new AddContactsInfoActivity((Bundle) null, user));
        }
    }

    private void listViewShowEmptyView(boolean resetEmptyViewToNull, boolean showProgressView) {
        FrameLayout frameLayout;
        RecyclerListView recyclerListView = this.chatListView;
        int i = 0;
        if (recyclerListView != null) {
            if (resetEmptyViewToNull) {
                recyclerListView.setEmptyView((View) null);
            } else {
                ArrayList<MessageObject> arrayList = this.messages;
                if (arrayList != null && !arrayList.isEmpty()) {
                    this.chatListView.setEmptyView((View) null);
                } else if (this.emptyViewContainer != null) {
                    if (this.chatListView.getEmptyView() == null || this.chatListView.getEmptyView() != (frameLayout = this.emptyViewContainer)) {
                        this.chatListView.setEmptyView(this.emptyViewContainer);
                    } else {
                        frameLayout.setVisibility(0);
                    }
                }
            }
        }
        FrameLayout frameLayout2 = this.progressView;
        if (frameLayout2 != null) {
            if (!showProgressView) {
                i = 4;
            }
            frameLayout2.setVisibility(i);
        }
    }

    private void checkSecretMessageForLocation(MessageObject messageObject) {
        if (messageObject.type == 4 && !this.locationAlertShown && !SharedConfig.isSecretMapPreviewSet()) {
            this.locationAlertShown = true;
            AlertsCreator.showSecretLocationAlert(getParentActivity(), this.currentAccount, new Runnable() {
                public final void run() {
                    ChatActivity.this.lambda$checkSecretMessageForLocation$71$ChatActivity();
                }
            }, true);
        }
    }

    public /* synthetic */ void lambda$checkSecretMessageForLocation$71$ChatActivity() {
        int count = this.chatListView.getChildCount();
        for (int a = 0; a < count; a++) {
            View view = this.chatListView.getChildAt(a);
            if (view instanceof ChatMessageCell) {
                ChatMessageCell cell = (ChatMessageCell) view;
                if (cell.getMessageObject().type == 4) {
                    cell.forceResetMessageObject();
                }
            }
        }
    }

    /* access modifiers changed from: private */
    public void clearHistory(boolean overwrite) {
        TLRPC.User user;
        this.messages.clear();
        this.waitingForLoad.clear();
        this.messagesByDays.clear();
        this.groupedMessagesMap.clear();
        for (int a = 1; a >= 0; a--) {
            this.messagesDict[a].clear();
            if (this.currentEncryptedChat == null) {
                this.maxMessageId[a] = Integer.MAX_VALUE;
                this.minMessageId[a] = Integer.MIN_VALUE;
            } else {
                this.maxMessageId[a] = Integer.MIN_VALUE;
                this.minMessageId[a] = Integer.MAX_VALUE;
            }
            this.maxDate[a] = Integer.MIN_VALUE;
            this.minDate[a] = 0;
            this.selectedMessagesIds[a].clear();
            this.selectedMessagesCanCopyIds[a].clear();
            this.selectedMessagesCanStarIds[a].clear();
        }
        hideActionMode();
        updatePinnedMessageView(true);
        if (this.botButtons != null) {
            this.botButtons = null;
            ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
            if (chatActivityEnterView2 != null) {
                chatActivityEnterView2.setButtons((MessageObject) null, false);
            }
        }
        if (overwrite) {
            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
            if (chatActivityAdapter != null) {
                listViewShowEmptyView(true, chatActivityAdapter.botInfoRow == -1);
            }
            for (int a2 = 0; a2 < 2; a2++) {
                this.endReached[a2] = false;
                this.cacheEndReached[a2] = false;
                this.forwardEndReached[a2] = true;
            }
            this.first = true;
            this.firstLoading = true;
            this.loading = true;
            this.startLoadFromMessageId = 0;
            this.needSelectFromMessageId = false;
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            int i = this.startLoadFromMessageIdSaved;
            if (i != 0) {
                this.startLoadFromMessageId = i;
                this.startLoadFromMessageIdSaved = 0;
                MessagesController messagesController = getMessagesController();
                long j = this.dialog_id;
                int i2 = AndroidUtilities.isTablet() ? 30 : 20;
                int i3 = this.startLoadFromMessageId;
                int i4 = this.classGuid;
                boolean isChannel = ChatObject.isChannel(this.currentChat);
                boolean z = this.inScheduleMode;
                int i5 = this.lastLoadIndex;
                this.lastLoadIndex = i5 + 1;
                messagesController.loadMessages(j, i2, i3, 0, true, 0, i4, 3, 0, isChannel, z, i5);
            } else {
                MessagesController messagesController2 = getMessagesController();
                long j2 = this.dialog_id;
                int i6 = AndroidUtilities.isTablet() ? 30 : 20;
                int i7 = this.classGuid;
                boolean isChannel2 = ChatObject.isChannel(this.currentChat);
                boolean z2 = this.inScheduleMode;
                int i8 = this.lastLoadIndex;
                this.lastLoadIndex = i8 + 1;
                messagesController2.loadMessages(j2, i6, 0, 0, true, 0, i7, 2, 0, isChannel2, z2, i8);
            }
        } else {
            listViewShowEmptyView(false, false);
        }
        ChatActivityAdapter chatActivityAdapter2 = this.chatAdapter;
        if (chatActivityAdapter2 != null) {
            chatActivityAdapter2.notifyDataSetChanged();
        }
        if (this.currentEncryptedChat == null && (user = this.currentUser) != null && user.bot && this.botUser == null) {
            this.botUser = "";
            updateBottomOverlay();
        }
    }

    public boolean processSwitchButton(TLRPC.TL_keyboardButtonSwitchInline button) {
        if (this.inlineReturn == 0 || button.same_peer || this.parentLayout == null) {
            return false;
        }
        String query = "@" + this.currentUser.username + " " + button.query;
        if (this.inlineReturn == this.dialog_id) {
            this.inlineReturn = 0;
            this.chatActivityEnterView.setFieldText(query);
        } else {
            getMediaDataController().saveDraft(this.inlineReturn, query, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.Message) null, false);
            if (this.parentLayout.fragmentsStack.size() > 1) {
                BaseFragment prevFragment = this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 2);
                if (!(prevFragment instanceof ChatActivity) || ((ChatActivity) prevFragment).dialog_id != this.inlineReturn) {
                    Bundle bundle = new Bundle();
                    long j = this.inlineReturn;
                    int lower_part = (int) j;
                    int high_part = (int) (j >> 32);
                    if (lower_part == 0) {
                        bundle.putInt("enc_id", high_part);
                    } else if (lower_part > 0) {
                        bundle.putInt("user_id", lower_part);
                    } else if (lower_part < 0) {
                        bundle.putInt("chat_id", -lower_part);
                    }
                    presentFragment(new ChatActivity(bundle), true);
                } else {
                    finishFragment();
                }
            }
        }
        return true;
    }

    private void replaceMessageObjects(ArrayList<MessageObject> messageObjects, int loadIndex, boolean remove) {
        ChatActivityAdapter chatActivityAdapter;
        MessageObject.GroupedMessages groupedMessages;
        int idx;
        ArrayList<MessageObject> arrayList = messageObjects;
        LongSparseArray<MessageObject.GroupedMessages> newGroups = null;
        int a = 0;
        while (a < messageObjects.size()) {
            MessageObject messageObject = arrayList.get(a);
            MessageObject old = this.messagesDict[loadIndex].get(messageObject.getId());
            MessageObject messageObject2 = this.pinnedMessageObject;
            if (messageObject2 != null && messageObject2.getId() == messageObject.getId()) {
                this.pinnedMessageObject = messageObject;
                updatePinnedMessageView(true);
            }
            if (old != null && (!remove || old.messageOwner.date == messageObject.messageOwner.date)) {
                if (remove) {
                    arrayList.remove(a);
                    a--;
                }
                addToPolls(messageObject, old);
                if (messageObject.type >= 0) {
                    if (old.replyMessageObject != null) {
                        messageObject.replyMessageObject = old.replyMessageObject;
                        if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionGameScore) {
                            messageObject.generateGameMessageText((TLRPC.User) null);
                        } else if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionPaymentSent) {
                            messageObject.generatePaymentSentMessageText((TLRPC.User) null);
                        }
                    }
                    if (!old.isEditing()) {
                        if (old.getFileName().equals(messageObject.getFileName())) {
                            messageObject.messageOwner.attachPath = old.messageOwner.attachPath;
                            messageObject.attachPathExists = old.attachPathExists;
                            messageObject.mediaExists = old.mediaExists;
                        } else {
                            messageObject.checkMediaExistance();
                        }
                    }
                    this.messagesDict[loadIndex].put(old.getId(), messageObject);
                } else {
                    this.messagesDict[loadIndex].remove(old.getId());
                }
                int index = this.messages.indexOf(old);
                if (index >= 0) {
                    ArrayList<MessageObject> dayArr = this.messagesByDays.get(old.dateKey);
                    int index2 = -1;
                    if (dayArr != null) {
                        index2 = dayArr.indexOf(old);
                    }
                    if (!(old.getGroupId() == 0 || (groupedMessages = this.groupedMessagesMap.get(old.getGroupId())) == null || (idx = groupedMessages.messages.indexOf(old)) < 0)) {
                        if (old.getGroupId() != messageObject.getGroupId()) {
                            this.groupedMessagesMap.put(messageObject.getGroupId(), groupedMessages);
                        }
                        if (messageObject.photoThumbs == null || messageObject.photoThumbs.isEmpty()) {
                            if (newGroups == null) {
                                newGroups = new LongSparseArray<>();
                            }
                            newGroups.put(groupedMessages.groupId, groupedMessages);
                            if (idx > 0 && idx < groupedMessages.messages.size() - 1) {
                                MessageObject.GroupedMessages slicedGroup = new MessageObject.GroupedMessages();
                                slicedGroup.groupId = Utilities.random.nextLong();
                                slicedGroup.messages.addAll(groupedMessages.messages.subList(idx + 1, groupedMessages.messages.size()));
                                for (int b = 0; b < slicedGroup.messages.size(); b++) {
                                    slicedGroup.messages.get(b).localGroupId = slicedGroup.groupId;
                                    groupedMessages.messages.remove(idx + 1);
                                }
                                newGroups.put(slicedGroup.groupId, slicedGroup);
                                this.groupedMessagesMap.put(slicedGroup.groupId, slicedGroup);
                            }
                            groupedMessages.messages.remove(idx);
                        } else {
                            groupedMessages.messages.set(idx, messageObject);
                            MessageObject.GroupedMessagePosition oldPosition = groupedMessages.positions.remove(old);
                            if (oldPosition != null) {
                                groupedMessages.positions.put(messageObject, oldPosition);
                            }
                            if (newGroups == null) {
                                newGroups = new LongSparseArray<>();
                            }
                            newGroups.put(groupedMessages.groupId, groupedMessages);
                        }
                    }
                    if (messageObject.type >= 0) {
                        this.messages.set(index, messageObject);
                        ChatActivityAdapter chatActivityAdapter2 = this.chatAdapter;
                        if (chatActivityAdapter2 != null) {
                            chatActivityAdapter2.updateRowAtPosition(chatActivityAdapter2.messagesStartRow + index);
                        }
                        if (index2 >= 0) {
                            dayArr.set(index2, messageObject);
                        }
                    } else {
                        this.messages.remove(index);
                        ChatActivityAdapter chatActivityAdapter3 = this.chatAdapter;
                        if (chatActivityAdapter3 != null) {
                            chatActivityAdapter3.notifyItemRemoved(chatActivityAdapter3.messagesStartRow + index);
                        }
                        if (index2 >= 0) {
                            dayArr.remove(index2);
                            if (dayArr.isEmpty()) {
                                this.messagesByDays.remove(old.dateKey);
                                this.messages.remove(index);
                                ChatActivityAdapter chatActivityAdapter4 = this.chatAdapter;
                                chatActivityAdapter4.notifyItemRemoved(chatActivityAdapter4.messagesStartRow);
                            }
                        }
                    }
                }
            }
            a++;
        }
        if (newGroups != null) {
            for (int b2 = 0; b2 < newGroups.size(); b2++) {
                MessageObject.GroupedMessages groupedMessages2 = newGroups.valueAt(b2);
                if (groupedMessages2.messages.isEmpty()) {
                    this.groupedMessagesMap.remove(groupedMessages2.groupId);
                } else {
                    groupedMessages2.calculate();
                    int index3 = this.messages.indexOf(groupedMessages2.messages.get(groupedMessages2.messages.size() - 1));
                    if (index3 >= 0 && (chatActivityAdapter = this.chatAdapter) != null) {
                        chatActivityAdapter.notifyItemRangeChanged(chatActivityAdapter.messagesStartRow + index3, groupedMessages2.messages.size());
                    }
                }
            }
        }
    }

    private void migrateToNewChat(MessageObject obj) {
        if (this.parentLayout != null) {
            int channelId = obj.messageOwner.action.channel_id;
            BaseFragment lastFragment = this.parentLayout.fragmentsStack.size() > 0 ? this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1) : null;
            int index = this.parentLayout.fragmentsStack.indexOf(this);
            ActionBarLayout actionBarLayout = this.parentLayout;
            if (index <= 0 || (lastFragment instanceof ChatActivity) || (lastFragment instanceof ProfileActivity) || !this.currentChat.creator) {
                AndroidUtilities.runOnUIThread(new Runnable(lastFragment, obj, actionBarLayout) {
                    private final /* synthetic */ BaseFragment f$1;
                    private final /* synthetic */ MessageObject f$2;
                    private final /* synthetic */ ActionBarLayout f$3;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                    }

                    public final void run() {
                        ChatActivity.this.lambda$migrateToNewChat$72$ChatActivity(this.f$1, this.f$2, this.f$3);
                    }
                });
            } else {
                int N = actionBarLayout.fragmentsStack.size() - 1;
                for (int a = index; a < N; a++) {
                    BaseFragment fragment = actionBarLayout.fragmentsStack.get(a);
                    if (fragment instanceof ChatActivity) {
                        Bundle bundle = new Bundle();
                        bundle.putInt("chat_id", channelId);
                        actionBarLayout.addFragmentToStack(new ChatActivity(bundle), a);
                        fragment.removeSelfFromStack();
                    } else if (fragment instanceof ProfileActivity) {
                        Bundle args = new Bundle();
                        args.putInt("chat_id", channelId);
                        actionBarLayout.addFragmentToStack(new ProfileActivity(args), a);
                        fragment.removeSelfFromStack();
                    } else if (fragment instanceof ChatEditActivity) {
                        Bundle args2 = new Bundle();
                        args2.putInt("chat_id", channelId);
                        actionBarLayout.addFragmentToStack(new ChatEditActivity(args2), a);
                        fragment.removeSelfFromStack();
                    } else if (fragment instanceof ChatUsersActivity) {
                        if (!((ChatUsersActivity) fragment).hasSelectType()) {
                            Bundle args3 = fragment.getArguments();
                            args3.putInt("chat_id", channelId);
                            actionBarLayout.addFragmentToStack(new ChatUsersActivity(args3), a);
                        }
                        fragment.removeSelfFromStack();
                    }
                }
            }
            AndroidUtilities.runOnUIThread(new Runnable(channelId) {
                private final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    ChatActivity.this.lambda$migrateToNewChat$73$ChatActivity(this.f$1);
                }
            }, 1000);
        }
    }

    public /* synthetic */ void lambda$migrateToNewChat$72$ChatActivity(BaseFragment lastFragment, MessageObject obj, ActionBarLayout actionBarLayout) {
        if (lastFragment != null) {
            getNotificationCenter().removeObserver(lastFragment, NotificationCenter.closeChats);
        }
        getNotificationCenter().postNotificationName(NotificationCenter.closeChats, new Object[0]);
        Bundle bundle = new Bundle();
        bundle.putInt("chat_id", obj.messageOwner.action.channel_id);
        actionBarLayout.presentFragment(new ChatActivity(bundle), true);
    }

    public /* synthetic */ void lambda$migrateToNewChat$73$ChatActivity(int channelId) {
        getMessagesController().loadFullChat(channelId, 0, true);
    }

    private void addToPolls(MessageObject obj, MessageObject old) {
        long pollId = obj.getPollId();
        if (pollId != 0) {
            ArrayList<MessageObject> arrayList = this.polls.get(pollId);
            if (arrayList == null) {
                arrayList = new ArrayList<>();
                this.polls.put(pollId, arrayList);
            }
            arrayList.add(obj);
            if (old != null) {
                arrayList.remove(old);
            }
        }
    }

    /* access modifiers changed from: private */
    public void updateSearchButtons(int mask, int num, int count) {
        ImageView imageView = this.searchUpButton;
        if (imageView != null) {
            imageView.setEnabled((mask & 1) != 0);
            this.searchDownButton.setEnabled((mask & 2) != 0);
            ImageView imageView2 = this.searchUpButton;
            float f = 1.0f;
            imageView2.setAlpha(imageView2.isEnabled() ? 1.0f : 0.5f);
            ImageView imageView3 = this.searchDownButton;
            if (!imageView3.isEnabled()) {
                f = 0.5f;
            }
            imageView3.setAlpha(f);
            if (count < 0) {
                this.searchCountText.setText("");
            } else if (count == 0) {
                this.searchCountText.setText(LocaleController.getString("NoResult", R.string.NoResult));
            } else {
                this.searchCountText.setText(LocaleController.formatString("Of", R.string.Of, Integer.valueOf(num + 1), Integer.valueOf(count)));
            }
        }
    }

    public boolean needDelayOpenAnimation() {
        return this.firstLoading;
    }

    /* access modifiers changed from: protected */
    public void onBecomeFullyHidden() {
        UndoView undoView2 = this.undoView;
        if (undoView2 != null) {
            undoView2.hide(true, 0);
        }
    }

    public void onTransitionAnimationStart(boolean isOpen, boolean backward) {
        if (isOpen) {
            getNotificationCenter().setAllowedNotificationsDutingAnimation(new int[]{NotificationCenter.chatInfoDidLoad, NotificationCenter.dialogsNeedReload, NotificationCenter.scheduledMessagesUpdated, NotificationCenter.closeChats, NotificationCenter.messagesDidLoad, NotificationCenter.botKeyboardDidLoad, NotificationCenter.userFullInfoDidLoad, NotificationCenter.needDeleteDialog});
            this.openAnimationEnded = false;
        } else {
            ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
            if (chatActivityEnterView2 != null) {
                chatActivityEnterView2.onBeginHide();
            }
        }
        getNotificationCenter().setAnimationInProgress(true);
    }

    public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
        getNotificationCenter().setAnimationInProgress(false);
        if (isOpen) {
            this.openAnimationEnded = true;
            if (Build.VERSION.SDK_INT >= 21) {
                createChatAttachView();
            }
            if (this.chatActivityEnterView.hasRecordVideo() && !this.chatActivityEnterView.isSendButtonVisible()) {
                boolean isChannel = false;
                TLRPC.Chat chat = this.currentChat;
                if (chat != null) {
                    isChannel = ChatObject.isChannel(chat) && !this.currentChat.megagroup;
                }
                SharedPreferences preferences = MessagesController.getGlobalMainSettings();
                String key = isChannel ? "needShowRoundHintChannel" : "needShowRoundHint";
                if (preferences.getBoolean(key, true) && Utilities.random.nextFloat() < 0.2f) {
                    showVoiceHint(false, this.chatActivityEnterView.isInVideoMode());
                    preferences.edit().putBoolean(key, false).commit();
                }
            }
            if (!backward && this.parentLayout != null) {
                int a = 0;
                int N = this.parentLayout.fragmentsStack.size() - 1;
                while (true) {
                    if (a >= N) {
                        break;
                    }
                    BaseFragment fragment = this.parentLayout.fragmentsStack.get(a);
                    if (fragment != this && (fragment instanceof ChatActivity)) {
                        ChatActivity chatActivity = (ChatActivity) fragment;
                        if (chatActivity.dialog_id == this.dialog_id && chatActivity.inScheduleMode == this.inScheduleMode) {
                            fragment.removeSelfFromStack();
                            break;
                        }
                    }
                    a++;
                }
            }
            if (isFinishing() == 0 && getParentActivity() != null && this.parentLayout != null && !this.parentLayout.fragmentsStack.isEmpty() && this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1) == this) {
                TLRPC.Chat chat2 = this.currentChat;
                if ((chat2 instanceof TLRPC.TL_channelForbidden) || (chat2 instanceof TLRPC.TL_chatForbidden)) {
                    AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
                    builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                    builder.setMessage(LocaleController.getString("ChannelCantOpenNa", R.string.ChannelCantOpenNa));
                    builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), (DialogInterface.OnClickListener) null);
                    AlertDialog create = builder.create();
                    this.closeChatDialog = create;
                    showDialog(create);
                }
            }
        }
    }

    /* access modifiers changed from: protected */
    public void onDialogDismiss(Dialog dialog) {
        Dialog dialog2 = this.closeChatDialog;
        if (dialog2 != null && dialog == dialog2) {
            getMessagesController().deleteDialog(this.dialog_id, 0);
            if (this.parentLayout == null || this.parentLayout.fragmentsStack.isEmpty() || this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1) == this) {
                finishFragment();
                return;
            }
            removeSelfFromStack();
            this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1).finishFragment();
        }
    }

    public boolean extendActionMode(Menu menu) {
        if (!PhotoViewer.hasInstance() || !PhotoViewer.getInstance().isVisible()) {
            if (this.chatActivityEnterView.getSelectionLength() == 0 || menu.findItem(16908321) == null) {
                return true;
            }
        } else if (PhotoViewer.getInstance().getSelectiongLength() == 0 || menu.findItem(16908321) == null) {
            return true;
        }
        if (Build.VERSION.SDK_INT >= 23) {
            menu.removeItem(16908341);
        }
        SpannableStringBuilder stringBuilder = new SpannableStringBuilder(LocaleController.getString("Bold", R.string.Bold));
        stringBuilder.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/rmedium.ttf")), 0, stringBuilder.length(), 33);
        menu.add(R.id.menu_groupbolditalic, R.id.menu_bold, 6, stringBuilder);
        SpannableStringBuilder stringBuilder2 = new SpannableStringBuilder(LocaleController.getString("Italic", R.string.Italic));
        stringBuilder2.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/ritalic.ttf")), 0, stringBuilder2.length(), 33);
        menu.add(R.id.menu_groupbolditalic, R.id.menu_italic, 7, stringBuilder2);
        SpannableStringBuilder stringBuilder3 = new SpannableStringBuilder(LocaleController.getString("Mono", R.string.Mono));
        stringBuilder3.setSpan(new TypefaceSpan(Typeface.MONOSPACE), 0, stringBuilder3.length(), 33);
        menu.add(R.id.menu_groupbolditalic, R.id.menu_mono, 8, stringBuilder3);
        TLRPC.EncryptedChat encryptedChat = this.currentEncryptedChat;
        if (encryptedChat == null || (encryptedChat != null && AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 101)) {
            SpannableStringBuilder stringBuilder4 = new SpannableStringBuilder(LocaleController.getString("Strike", R.string.Strike));
            TextStyleSpan.TextStyleRun run = new TextStyleSpan.TextStyleRun();
            run.flags = 8 | run.flags;
            stringBuilder4.setSpan(new TextStyleSpan(run), 0, stringBuilder4.length(), 33);
            menu.add(R.id.menu_groupbolditalic, R.id.menu_strike, 9, stringBuilder4);
            SpannableStringBuilder stringBuilder5 = new SpannableStringBuilder(LocaleController.getString("Underline", R.string.Underline));
            TextStyleSpan.TextStyleRun run2 = new TextStyleSpan.TextStyleRun();
            run2.flags |= 16;
            stringBuilder5.setSpan(new TextStyleSpan(run2), 0, stringBuilder5.length(), 33);
            menu.add(R.id.menu_groupbolditalic, R.id.menu_underline, 10, stringBuilder5);
        }
        menu.add(R.id.menu_groupbolditalic, R.id.menu_link, 11, LocaleController.getString("CreateLink", R.string.CreateLink));
        menu.add(R.id.menu_groupbolditalic, R.id.menu_regular, 12, LocaleController.getString("Regular", R.string.Regular));
        return true;
    }

    /* access modifiers changed from: private */
    public void updateScheduledInterface(boolean animated) {
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.updateScheduleButton(animated);
        }
    }

    /* access modifiers changed from: private */
    public void updateBottomOverlay() {
        TLRPC.User user;
        TLRPC.ChatFull chatFull;
        if (this.bottomOverlayChatText != null && !this.inScheduleMode) {
            TLRPC.Chat chat = this.currentChat;
            if (chat != null) {
                if (ChatObject.isChannel(chat)) {
                    TLRPC.Chat chat2 = this.currentChat;
                    if (!(chat2 instanceof TLRPC.TL_channelForbidden)) {
                        if (!ChatObject.isNotInChat(chat2)) {
                            if (!getMessagesController().isDialogMuted(this.dialog_id)) {
                                this.bottomOverlayChatText.setText(LocaleController.getString("ChannelMute", R.string.ChannelMute));
                                ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
                                if (chatActivityEnterView2 != null && chatActivityEnterView2.isPopupShowing()) {
                                    this.chatActivityEnterView.hidePopup(false);
                                }
                            } else {
                                this.bottomOverlayChatText.setText(LocaleController.getString("ChannelUnmute", R.string.ChannelUnmute));
                            }
                            showBottomOverlayProgress(false, this.bottomOverlayProgress.getTag() != null);
                        } else if (getMessagesController().isJoiningChannel(this.currentChat.id)) {
                            showBottomOverlayProgress(true, false);
                        } else {
                            this.bottomOverlayChatText.setText(LocaleController.getString("ChannelJoin", R.string.ChannelJoin));
                            showBottomOverlayProgress(false, false);
                        }
                        if (ChatObject.isNotInChat(this.currentChat) || this.currentChat.megagroup || (!this.currentChat.has_link && ((chatFull = this.chatInfo) == null || chatFull.linked_chat_id == 0))) {
                            this.bottomOverlayChatText2.setVisibility(8);
                        } else {
                            this.bottomOverlayChatText2.setText(LocaleController.getString("ChannelDiscuss", R.string.ChannelDiscuss));
                            this.bottomOverlayChatText2.setVisibility(0);
                            this.bottomOverlayChatText2.updateCounter();
                        }
                    }
                }
                TextView textView = this.bottomOverlayChatText;
                if (textView != null) {
                    textView.setText(LocaleController.getString("DeleteThisGroup", R.string.DeleteThisGroup));
                }
                if (!isFinishing() && getParentActivity() != null && this.parentLayout != null && !this.parentLayout.fragmentsStack.isEmpty() && this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1) == this) {
                    AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
                    builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                    builder.setMessage(LocaleController.getString("DeleteThisGroup", R.string.DeleteThisGroup));
                    builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), (DialogInterface.OnClickListener) null);
                    AlertDialog create = builder.create();
                    this.closeChatDialog = create;
                    showDialog(create);
                }
            } else {
                showBottomOverlayProgress(false, false);
                if (this.userBlocked) {
                    if (this.currentUser.bot) {
                        this.bottomOverlayChatText.setText(LocaleController.getString("BotUnblock", R.string.BotUnblock));
                    } else {
                        this.bottomOverlayChatText.setText(LocaleController.getString("Unblock", R.string.Unblock));
                    }
                    if (this.botButtons != null) {
                        this.botButtons = null;
                        if (this.chatActivityEnterView != null) {
                            MessageObject messageObject = this.replyingMessageObject;
                            if (messageObject != null && this.botReplyButtons == messageObject) {
                                this.botReplyButtons = null;
                                hideFieldPanel(false);
                            }
                            this.chatActivityEnterView.setButtons(this.botButtons, false);
                        }
                    }
                } else if (this.botUser == null || !this.currentUser.bot) {
                    this.bottomOverlayChatText.setText(LocaleController.getString("DeleteThisChat", R.string.DeleteThisChat));
                } else {
                    this.bottomOverlayChatText.setText(LocaleController.getString("BotStart", R.string.BotStart));
                    this.chatActivityEnterView.hidePopup(false);
                    if (getParentActivity() != null) {
                        AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
                    }
                }
            }
            if (this.inPreviewMode) {
                this.searchContainer.setVisibility(4);
                this.bottomOverlayChat.setVisibility(4);
                this.chatActivityEnterView.setFieldFocused(false);
                this.chatActivityEnterView.setVisibility(4);
            } else {
                ActionBarMenuItem actionBarMenuItem = this.searchItem;
                if (actionBarMenuItem == null || actionBarMenuItem.getVisibility() != 0) {
                    this.searchContainer.setVisibility(4);
                    if (this.muteItem != null) {
                        TLRPC.Chat chat3 = this.currentChat;
                        if (chat3 == null || !ChatObject.isNotInChat(chat3)) {
                            this.muteItem.setVisibility(0);
                        } else {
                            this.muteItem.setVisibility(8);
                        }
                    }
                    TLRPC.Chat chat4 = this.currentChat;
                    if ((chat4 != null && (ChatObject.isNotInChat(chat4) || !ChatObject.canWriteToChat(this.currentChat))) || ((user = this.currentUser) != null && (UserObject.isDeleted(user) || this.userBlocked))) {
                        if (this.chatActivityEnterView.isEditingMessage()) {
                            this.chatActivityEnterView.setVisibility(0);
                            this.bottomOverlayChat.setVisibility(4);
                            this.chatActivityEnterView.setFieldFocused();
                            AndroidUtilities.runOnUIThread(new Runnable() {
                                public final void run() {
                                    ChatActivity.this.lambda$updateBottomOverlay$74$ChatActivity();
                                }
                            }, 100);
                        } else {
                            this.bottomOverlayChat.setVisibility(0);
                            this.chatActivityEnterView.setFieldFocused(false);
                            this.chatActivityEnterView.setVisibility(4);
                            this.chatActivityEnterView.closeKeyboard();
                            StickersAdapter stickersAdapter2 = this.stickersAdapter;
                            if (stickersAdapter2 != null) {
                                stickersAdapter2.hide();
                            }
                        }
                        ActionBarMenuItem actionBarMenuItem2 = this.attachItem;
                        if (actionBarMenuItem2 != null) {
                            actionBarMenuItem2.setVisibility(8);
                        }
                        ActionBarMenuItem actionBarMenuItem3 = this.editTextItem;
                        if (actionBarMenuItem3 != null) {
                            actionBarMenuItem3.setVisibility(8);
                        }
                        ActionBarMenuItem actionBarMenuItem4 = this.headerItem;
                        if (actionBarMenuItem4 != null) {
                            actionBarMenuItem4.setVisibility(0);
                        }
                    } else if (this.botUser == null || !this.currentUser.bot) {
                        if (this.currentUser == null || !isSysNotifyMessage().booleanValue()) {
                            this.chatActivityEnterView.setVisibility(0);
                        } else {
                            this.chatActivityEnterView.setVisibility(8);
                        }
                        this.bottomOverlayChat.setVisibility(4);
                    } else {
                        this.bottomOverlayChat.setVisibility(0);
                        this.chatActivityEnterView.setVisibility(4);
                    }
                    if (this.topViewWasVisible == 1) {
                        this.chatActivityEnterView.showTopView(false, false);
                        this.topViewWasVisible = 0;
                    }
                } else {
                    this.searchContainer.setVisibility(0);
                    this.bottomOverlayChat.setVisibility(4);
                    this.chatActivityEnterView.setFieldFocused(false);
                    this.chatActivityEnterView.setVisibility(4);
                    if (this.chatActivityEnterView.isTopViewVisible()) {
                        this.topViewWasVisible = 1;
                        this.chatActivityEnterView.hideTopView(false);
                    } else {
                        this.topViewWasVisible = 2;
                    }
                }
            }
            checkRaiseSensors();
        }
    }

    public /* synthetic */ void lambda$updateBottomOverlay$74$ChatActivity() {
        this.chatActivityEnterView.openKeyboard();
    }

    public void showAlert(String name, String message) {
        FrameLayout frameLayout = this.alertView;
        if (frameLayout != null && name != null && message != null) {
            if (frameLayout.getTag() != null) {
                this.alertView.setTag((Object) null);
                AnimatorSet animatorSet = this.alertViewAnimator;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.alertViewAnimator = null;
                }
                this.alertView.setVisibility(0);
                AnimatorSet animatorSet2 = new AnimatorSet();
                this.alertViewAnimator = animatorSet2;
                animatorSet2.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.alertView, View.TRANSLATION_Y, new float[]{0.0f})});
                this.alertViewAnimator.setDuration(200);
                this.alertViewAnimator.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animation)) {
                            AnimatorSet unused = ChatActivity.this.alertViewAnimator = null;
                        }
                    }

                    public void onAnimationCancel(Animator animation) {
                        if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animation)) {
                            AnimatorSet unused = ChatActivity.this.alertViewAnimator = null;
                        }
                    }
                });
                this.alertViewAnimator.start();
            }
            this.alertNameTextView.setText(name);
            this.alertTextView.setText(Emoji.replaceEmoji(message.replace(10, ' '), this.alertTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
            Runnable runnable = this.hideAlertViewRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            AnonymousClass60 r0 = new Runnable() {
                public void run() {
                    if (ChatActivity.this.hideAlertViewRunnable == this && ChatActivity.this.alertView.getTag() == null) {
                        ChatActivity.this.alertView.setTag(1);
                        if (ChatActivity.this.alertViewAnimator != null) {
                            ChatActivity.this.alertViewAnimator.cancel();
                            AnimatorSet unused = ChatActivity.this.alertViewAnimator = null;
                        }
                        AnimatorSet unused2 = ChatActivity.this.alertViewAnimator = new AnimatorSet();
                        ChatActivity.this.alertViewAnimator.playTogether(new Animator[]{ObjectAnimator.ofFloat(ChatActivity.this.alertView, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(50.0f))})});
                        ChatActivity.this.alertViewAnimator.setDuration(200);
                        ChatActivity.this.alertViewAnimator.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animation) {
                                if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animation)) {
                                    ChatActivity.this.alertView.setVisibility(8);
                                    AnimatorSet unused = ChatActivity.this.alertViewAnimator = null;
                                }
                            }

                            public void onAnimationCancel(Animator animation) {
                                if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animation)) {
                                    AnimatorSet unused = ChatActivity.this.alertViewAnimator = null;
                                }
                            }
                        });
                        ChatActivity.this.alertViewAnimator.start();
                    }
                }
            };
            this.hideAlertViewRunnable = r0;
            AndroidUtilities.runOnUIThread(r0, 3000);
        }
    }

    private void hidePinnedMessageView(boolean animated) {
        if (this.pinnedMessageView.getTag() == null) {
            this.pinnedMessageView.setTag(1);
            AnimatorSet animatorSet = this.pinnedMessageViewAnimator;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.pinnedMessageViewAnimator = null;
            }
            if (animated) {
                AnimatorSet animatorSet2 = new AnimatorSet();
                this.pinnedMessageViewAnimator = animatorSet2;
                animatorSet2.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pinnedMessageView, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(50.0f))})});
                this.pinnedMessageViewAnimator.setDuration(200);
                this.pinnedMessageViewAnimator.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animation)) {
                            ChatActivity.this.pinnedMessageView.setVisibility(8);
                            if (ChatActivity.this.pinnedLiveMessage != null) {
                                ChatActivity.this.pinnedLiveMessageView.setTranslationY(0.0f);
                                ChatActivity.this.pinnedLiveUserImageView.setTranslationY(0.0f);
                            }
                            AnimatorSet unused = ChatActivity.this.pinnedMessageViewAnimator = null;
                        }
                    }

                    public void onAnimationCancel(Animator animation) {
                        if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animation)) {
                            AnimatorSet unused = ChatActivity.this.pinnedMessageViewAnimator = null;
                        }
                    }
                });
                this.pinnedMessageViewAnimator.start();
                return;
            }
            this.pinnedMessageView.setTranslationY((float) (-AndroidUtilities.dp(50.0f)));
            this.pinnedMessageView.setVisibility(8);
            if (this.pinnedLiveMessage != null) {
                this.pinnedLiveMessageView.setTranslationY(0.0f);
                this.pinnedLiveUserImageView.setTranslationY(0.0f);
            }
        }
    }

    private void hidePinnedLiveMessageView(boolean animated) {
        this.pinnedLiveMessage = null;
        if (this.pinnedLiveMessageView.getTag() == null) {
            this.pinnedLiveMessageView.setTag(2);
            AnimatorSet animatorSet = this.pinnedMessageViewAnimator;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.pinnedMessageViewAnimator = null;
            }
            if (animated) {
                AnimatorSet animatorSet2 = new AnimatorSet();
                this.pinnedMessageViewAnimator = animatorSet2;
                animatorSet2.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pinnedLiveMessageView, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(50.0f))})});
                this.pinnedMessageViewAnimator.setDuration(200);
                this.pinnedMessageViewAnimator.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animation)) {
                            ChatActivity.this.pinnedLiveMessageView.setVisibility(8);
                            AnimatorSet unused = ChatActivity.this.pinnedMessageViewAnimator = null;
                        }
                    }

                    public void onAnimationCancel(Animator animation) {
                        if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animation)) {
                            AnimatorSet unused = ChatActivity.this.pinnedMessageViewAnimator = null;
                        }
                    }
                });
                this.pinnedMessageViewAnimator.start();
                return;
            }
            this.pinnedLiveMessageView.setTranslationY((float) (-AndroidUtilities.dp(50.0f)));
            this.pinnedLiveMessageView.setVisibility(8);
        }
    }

    /* access modifiers changed from: private */
    public void updatePinnedMessageView(boolean animated) {
        int pinned_msg_id;
        if (this.pinnedMessageView != null && !this.inScheduleMode) {
            TLRPC.ChatFull chatFull = this.chatInfo;
            if (chatFull != null) {
                if (!(this.pinnedMessageObject == null || chatFull.pinned_msg_id == this.pinnedMessageObject.getId())) {
                    this.pinnedMessageObject = null;
                }
                if (this.chatInfo.pinned_msg_id != 0 && this.pinnedMessageObject == null) {
                    this.pinnedMessageObject = this.messagesDict[0].get(this.chatInfo.pinned_msg_id);
                }
                pinned_msg_id = this.chatInfo.pinned_msg_id;
            } else {
                TLRPC.UserFull userFull = this.userInfo;
                if (userFull != null) {
                    if (!(this.pinnedMessageObject == null || userFull.pinned_msg_id == this.pinnedMessageObject.getId())) {
                        this.pinnedMessageObject = null;
                    }
                    if (this.userInfo.pinned_msg_id != 0 && this.pinnedMessageObject == null) {
                        this.pinnedMessageObject = this.messagesDict[0].get(this.userInfo.pinned_msg_id);
                    }
                    pinned_msg_id = this.userInfo.pinned_msg_id;
                } else {
                    pinned_msg_id = 0;
                }
            }
            SharedPreferences preferences = MessagesController.getNotificationsSettings(this.currentAccount);
            if (!((this.chatInfo == null && this.userInfo == null) || pinned_msg_id == 0)) {
                if (pinned_msg_id != preferences.getInt("pin_" + this.dialog_id, 0) && (this.actionBar == null || (!this.actionBar.isActionModeShowed() && !this.actionBar.isSearchFieldVisible()))) {
                    if (this.pinnedMessageObject != null) {
                        if (this.pinnedMessageView.getTag() != null) {
                            this.pinnedMessageView.setTag((Object) null);
                            AnimatorSet animatorSet = this.pinnedMessageViewAnimator;
                            if (animatorSet != null) {
                                animatorSet.cancel();
                                this.pinnedMessageViewAnimator = null;
                            }
                            if (animated) {
                                this.pinnedMessageView.setVisibility(0);
                                AnimatorSet animatorSet2 = new AnimatorSet();
                                this.pinnedMessageViewAnimator = animatorSet2;
                                animatorSet2.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pinnedMessageView, View.TRANSLATION_Y, new float[]{0.0f})});
                                this.pinnedMessageViewAnimator.setDuration(200);
                                this.pinnedMessageViewAnimator.addListener(new AnimatorListenerAdapter() {
                                    public void onAnimationEnd(Animator animation) {
                                        if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animation)) {
                                            AnimatorSet unused = ChatActivity.this.pinnedMessageViewAnimator = null;
                                            if (ChatActivity.this.pinnedLiveMessage != null && ChatActivity.this.pinnedLiveMessageView.getTranslationY() != ((float) AndroidUtilities.dp(48.0f))) {
                                                ChatActivity.this.pinnedLiveMessageView.setTranslationY((float) AndroidUtilities.dp(48.0f));
                                                ChatActivity.this.pinnedLiveUserImageView.setTranslationY((float) AndroidUtilities.dp(48.0f));
                                            }
                                        }
                                    }

                                    public void onAnimationCancel(Animator animation) {
                                        if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animation)) {
                                            AnimatorSet unused = ChatActivity.this.pinnedMessageViewAnimator = null;
                                        }
                                    }
                                });
                                this.pinnedMessageViewAnimator.start();
                            } else {
                                this.pinnedMessageView.setTranslationY(0.0f);
                                this.pinnedMessageView.setVisibility(0);
                                if (!(this.pinnedLiveMessage == null || this.pinnedLiveMessageView.getTranslationY() == ((float) AndroidUtilities.dp(48.0f)))) {
                                    this.pinnedLiveMessageView.setTranslationY((float) AndroidUtilities.dp(48.0f));
                                    this.pinnedLiveUserImageView.setTranslationY((float) AndroidUtilities.dp(48.0f));
                                }
                            }
                        }
                        FrameLayout.LayoutParams layoutParams1 = (FrameLayout.LayoutParams) this.pinnedMessageNameTextView.getLayoutParams();
                        FrameLayout.LayoutParams layoutParams2 = (FrameLayout.LayoutParams) this.pinnedMessageTextView.getLayoutParams();
                        int cacheType = 1;
                        int size = 0;
                        TLRPC.PhotoSize photoSize = FileLoader.getClosestPhotoSizeWithSize(this.pinnedMessageObject.photoThumbs2, AndroidUtilities.dp(320.0f));
                        TLRPC.PhotoSize thumbPhotoSize = FileLoader.getClosestPhotoSizeWithSize(this.pinnedMessageObject.photoThumbs2, AndroidUtilities.dp(40.0f));
                        TLObject photoSizeObject = this.pinnedMessageObject.photoThumbsObject2;
                        if (photoSize == null) {
                            if (this.pinnedMessageObject.mediaExists) {
                                photoSize = FileLoader.getClosestPhotoSizeWithSize(this.pinnedMessageObject.photoThumbs, AndroidUtilities.getPhotoSize());
                                if (photoSize != null) {
                                    size = photoSize.size;
                                }
                                cacheType = 0;
                            } else {
                                photoSize = FileLoader.getClosestPhotoSizeWithSize(this.pinnedMessageObject.photoThumbs, AndroidUtilities.dp(320.0f));
                            }
                            thumbPhotoSize = FileLoader.getClosestPhotoSizeWithSize(this.pinnedMessageObject.photoThumbs, AndroidUtilities.dp(40.0f));
                            photoSizeObject = this.pinnedMessageObject.photoThumbsObject;
                        }
                        if (photoSize == thumbPhotoSize) {
                            thumbPhotoSize = null;
                        }
                        if (photoSize == null || (photoSize instanceof TLRPC.TL_photoSizeEmpty) || (photoSize.location instanceof TLRPC.TL_fileLocationUnavailable) || this.pinnedMessageObject.isAnyKindOfSticker()) {
                            this.pinnedMessageImageView.setImageBitmap((Bitmap) null);
                            this.pinnedImageLocation = null;
                            this.pinnedImageLocationObject = null;
                            this.pinnedMessageImageView.setVisibility(4);
                            int dp = AndroidUtilities.dp(18.0f);
                            layoutParams2.leftMargin = dp;
                            layoutParams1.leftMargin = dp;
                        } else {
                            if (this.pinnedMessageObject.isRoundVideo()) {
                                this.pinnedMessageImageView.setRoundRadius(AndroidUtilities.dp(16.0f));
                            } else {
                                this.pinnedMessageImageView.setRoundRadius(0);
                            }
                            this.pinnedImageSize = size;
                            this.pinnedImageCacheType = cacheType;
                            this.pinnedImageLocation = photoSize;
                            this.pinnedImageThumbLocation = thumbPhotoSize;
                            this.pinnedImageLocationObject = photoSizeObject;
                            this.pinnedMessageImageView.setImage(ImageLocation.getForObject(photoSize, photoSizeObject), "50_50", ImageLocation.getForObject(thumbPhotoSize, photoSizeObject), "50_50_b", (String) null, size, cacheType, this.pinnedMessageObject);
                            this.pinnedMessageImageView.setVisibility(0);
                            int dp2 = AndroidUtilities.dp(55.0f);
                            layoutParams2.leftMargin = dp2;
                            layoutParams1.leftMargin = dp2;
                        }
                        this.pinnedMessageNameTextView.setLayoutParams(layoutParams1);
                        this.pinnedMessageTextView.setLayoutParams(layoutParams2);
                        if (this.pinnedMessageObject.type == 17) {
                            this.pinnedMessageNameTextView.setText(LocaleController.getString("PinnedPoll", R.string.PinnedPoll));
                        } else {
                            this.pinnedMessageNameTextView.setText(LocaleController.getString("PinnedMessage", R.string.PinnedMessage));
                        }
                        if (this.pinnedMessageObject.type == 14) {
                            this.pinnedMessageTextView.setText(String.format("%s - %s", new Object[]{this.pinnedMessageObject.getMusicAuthor(), this.pinnedMessageObject.getMusicTitle()}));
                        } else if (this.pinnedMessageObject.type == 207) {
                            this.pinnedLineView.setVisibility(8);
                            TLRPC.TL_dataJSON tL_dataJSON = ((TLRPC.TL_messageMediaShare) this.pinnedMessageObject.messageOwner.media).data;
                        } else if (this.pinnedMessageObject.type == 17) {
                            String mess = ((TLRPC.TL_messageMediaPoll) this.pinnedMessageObject.messageOwner.media).poll.question;
                            if (mess.length() > 150) {
                                mess = mess.substring(0, 150);
                            }
                            this.pinnedMessageTextView.setText(mess.replace(10, ' '));
                        } else if (this.pinnedMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaGame) {
                            this.pinnedMessageTextView.setText(Emoji.replaceEmoji(this.pinnedMessageObject.messageOwner.media.game.title, this.pinnedMessageTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                        } else if (!TextUtils.isEmpty(this.pinnedMessageObject.caption)) {
                            String mess2 = this.pinnedMessageObject.caption.toString();
                            if (mess2.length() > 150) {
                                mess2 = mess2.substring(0, 150);
                            }
                            String mess3 = mess2.replace(10, ' ');
                            SimpleTextView simpleTextView = this.pinnedMessageTextView;
                            simpleTextView.setText(Emoji.replaceEmoji(mess3, simpleTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                        } else if (this.pinnedMessageObject.messageText != null) {
                            String mess4 = this.pinnedMessageObject.messageText.toString();
                            if (mess4.length() > 150) {
                                mess4 = mess4.substring(0, 150);
                            }
                            String mess5 = mess4.replace(10, ' ');
                            SimpleTextView simpleTextView2 = this.pinnedMessageTextView;
                            simpleTextView2.setText(Emoji.replaceEmoji(mess5, simpleTextView2.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                        }
                    } else {
                        this.pinnedImageLocation = null;
                        this.pinnedImageLocationObject = null;
                        hidePinnedMessageView(animated);
                        if (this.loadingPinnedMessage != pinned_msg_id) {
                            this.loadingPinnedMessage = pinned_msg_id;
                            getMediaDataController().loadPinnedMessage(this.dialog_id, ChatObject.isChannel(this.currentChat) ? this.currentChat.id : 0, pinned_msg_id, true);
                        }
                    }
                    checkListViewPaddings();
                }
            }
            hidePinnedMessageView(animated);
            checkListViewPaddings();
        }
    }

    private void updatePinnedLiveMessageView(boolean animated, int iMsgId, boolean blnShow) {
        if (this.pinnedLiveMessageView != null && !this.inScheduleMode) {
            if (this.pinnedLiveMessage == null) {
                this.pinnedLiveMessage = this.messagesDict[0].get(iMsgId);
            }
            if (!blnShow) {
                hidePinnedLiveMessageView(animated);
            } else if (this.pinnedLiveMessage != null) {
                if (this.pinnedLiveMessageView.getTag() != null) {
                    this.pinnedLiveMessageView.setTag((Object) null);
                    AnimatorSet animatorSet = this.pinnedMessageViewAnimator;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.pinnedMessageViewAnimator = null;
                    }
                    if (animated) {
                        this.pinnedLiveMessageView.setVisibility(0);
                        AnimatorSet animatorSet2 = new AnimatorSet();
                        this.pinnedMessageViewAnimator = animatorSet2;
                        animatorSet2.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pinnedLiveMessageView, View.TRANSLATION_Y, new float[]{48.0f})});
                        this.pinnedMessageViewAnimator.setDuration(200);
                        this.pinnedMessageViewAnimator.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animation) {
                                if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animation)) {
                                    AnimatorSet unused = ChatActivity.this.pinnedMessageViewAnimator = null;
                                }
                            }

                            public void onAnimationCancel(Animator animation) {
                                if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animation)) {
                                    AnimatorSet unused = ChatActivity.this.pinnedMessageViewAnimator = null;
                                }
                            }
                        });
                        this.pinnedMessageViewAnimator.start();
                    } else {
                        SharedPreferences preferences = MessagesController.getNotificationsSettings(this.currentAccount);
                        if (this.pinnedMessageObject != null) {
                            if (preferences.getInt("pin_" + this.dialog_id, 0) != this.pinnedMessageObject.messageOwner.id) {
                                this.pinnedLiveMessageView.setTranslationY((float) AndroidUtilities.dp(48.0f));
                                this.pinnedLiveMessageView.setVisibility(0);
                            }
                        }
                        this.pinnedLiveMessageView.setTranslationY((float) AndroidUtilities.dp(0.0f));
                        this.pinnedLiveMessageView.setVisibility(0);
                    }
                }
                FrameLayout.LayoutParams layoutParams1 = (FrameLayout.LayoutParams) this.pinnedLiveMessageNameTextView.getLayoutParams();
                FrameLayout.LayoutParams layoutParams2 = (FrameLayout.LayoutParams) this.pinnedLiveMessageTextView.getLayoutParams();
                int dp = AndroidUtilities.dp(55.0f);
                layoutParams2.leftMargin = dp;
                layoutParams1.leftMargin = dp;
                this.pinnedLiveMessageNameTextView.setLayoutParams(layoutParams1);
                this.pinnedLiveMessageTextView.setLayoutParams(layoutParams2);
                if (this.pinnedLiveMessage.type == 207) {
                    TLRPC.TL_dataJSON tL_dataJSON = ((TLRPC.TL_messageMediaShare) this.pinnedLiveMessage.messageOwner.media).data;
                }
            } else {
                hidePinnedLiveMessageView(animated);
            }
            checkListViewPaddings();
        }
    }

    private void updateTopPanel(boolean animated) {
        boolean show;
        int i;
        int i2;
        if (this.topChatPanelView != null && !this.inScheduleMode) {
            SharedPreferences preferences = MessagesController.getNotificationsSettings(this.currentAccount);
            long did = this.dialog_id;
            TLRPC.EncryptedChat encryptedChat = this.currentEncryptedChat;
            if (encryptedChat != null) {
                show = encryptedChat.admin_id != getUserConfig().getClientUserId() && !getContactsController().isLoadingContacts() && getContactsController().contactsDict.get(Integer.valueOf(this.currentUser.id)) == null;
                did = (long) this.currentUser.id;
                int vis = preferences.getInt("dialog_bar_vis3" + did, 0);
                if (show && (vis == 1 || vis == 3)) {
                    show = false;
                }
            } else {
                StringBuilder sb = new StringBuilder();
                sb.append("dialog_bar_vis3");
                sb.append(did);
                show = preferences.getInt(sb.toString(), 0) == 2;
            }
            boolean showShare = preferences.getBoolean("dialog_bar_share" + did, false);
            boolean showReport = preferences.getBoolean("dialog_bar_report" + did, false);
            boolean showBlock = preferences.getBoolean("dialog_bar_block" + did, false);
            boolean showAdd = preferences.getBoolean("dialog_bar_add" + did, false);
            boolean showGeo = preferences.getBoolean("dialog_bar_location" + did, false);
            if (showReport || showBlock || showGeo) {
                this.reportSpamButton.setVisibility(0);
            } else {
                this.reportSpamButton.setVisibility(8);
            }
            TLRPC.User user = this.currentUser != null ? getMessagesController().getUser(Integer.valueOf(this.currentUser.id)) : null;
            if (user != null) {
                if (!user.contact && showAdd) {
                    this.addContactItem.setVisibility(0);
                    this.addToContactsButton.setVisibility(0);
                    this.addContactItem.setText(LocaleController.getString("AddToContacts", R.string.AddToContacts));
                    if (this.reportSpamButton.getVisibility() == 0) {
                        this.addToContactsButton.setText(LocaleController.getString("AddContactChat", R.string.AddContactChat));
                    } else {
                        this.addToContactsButton.setText(LocaleController.formatString("AddContactFullChat", R.string.AddContactFullChat, UserObject.getFirstName(user)).toUpperCase());
                    }
                    this.addToContactsButton.setTag((Object) null);
                    this.addToContactsButton.setVisibility(0);
                } else if (showShare) {
                    this.addContactItem.setVisibility(0);
                    this.addToContactsButton.setVisibility(0);
                    this.addContactItem.setText(LocaleController.getString("ShareMyContactInfo", R.string.ShareMyContactInfo));
                    this.addToContactsButton.setText(LocaleController.getString("ShareMyPhone", R.string.ShareMyPhone).toUpperCase());
                    this.addToContactsButton.setTag(1);
                    this.addToContactsButton.setVisibility(0);
                } else {
                    if (user.contact || show) {
                        i2 = 8;
                        this.addContactItem.setVisibility(8);
                    } else {
                        this.addContactItem.setVisibility(0);
                        this.addContactItem.setText(LocaleController.getString("ShareMyContactInfo", R.string.ShareMyContactInfo));
                        this.addToContactsButton.setTag(2);
                        i2 = 8;
                    }
                    this.addToContactsButton.setVisibility(i2);
                }
                this.reportSpamButton.setText(LocaleController.getString("ReportSpamUser", R.string.ReportSpamUser));
                i = 8;
            } else {
                if (showGeo) {
                    this.reportSpamButton.setText(LocaleController.getString("ReportSpamLocation", R.string.ReportSpamLocation));
                    this.reportSpamButton.setTag(R.id.object_tag, 1);
                    this.reportSpamButton.setTextColor(Theme.getColor(Theme.key_chat_addContact));
                    this.reportSpamButton.setTag(Theme.key_chat_addContact);
                } else {
                    this.reportSpamButton.setText(LocaleController.getString("ReportSpamAndLeave", R.string.ReportSpamAndLeave));
                    this.reportSpamButton.setTag(R.id.object_tag, (Object) null);
                    this.reportSpamButton.setTextColor(Theme.getColor(Theme.key_chat_reportSpam));
                    this.reportSpamButton.setTag(Theme.key_chat_reportSpam);
                }
                ChatActionBarMenuSubItem chatActionBarMenuSubItem = this.addContactItem;
                if (chatActionBarMenuSubItem != null) {
                    i = 8;
                    chatActionBarMenuSubItem.setVisibility(8);
                } else {
                    i = 8;
                }
                this.addToContactsButton.setVisibility(i);
            }
            if (this.userBlocked || (this.addToContactsButton.getVisibility() == i && this.reportSpamButton.getVisibility() == i)) {
                show = false;
            }
            if (!show) {
                if (this.topChatPanelView.getTag() == null) {
                    if (BuildVars.LOGS_ENABLED) {
                        FileLog.d("hide spam button");
                    }
                    this.topChatPanelView.setTag(1);
                    AnimatorSet animatorSet = this.reportSpamViewAnimator;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.reportSpamViewAnimator = null;
                    }
                    if (animated) {
                        AnimatorSet animatorSet2 = new AnimatorSet();
                        this.reportSpamViewAnimator = animatorSet2;
                        animatorSet2.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.topChatPanelView, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(50.0f))})});
                        this.reportSpamViewAnimator.setDuration(200);
                        this.reportSpamViewAnimator.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animation) {
                                if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animation)) {
                                    ChatActivity.this.topChatPanelView.setVisibility(8);
                                    AnimatorSet unused = ChatActivity.this.reportSpamViewAnimator = null;
                                }
                            }

                            public void onAnimationCancel(Animator animation) {
                                if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animation)) {
                                    AnimatorSet unused = ChatActivity.this.reportSpamViewAnimator = null;
                                }
                            }
                        });
                        this.reportSpamViewAnimator.start();
                    } else {
                        this.topChatPanelView.setTranslationY((float) (-AndroidUtilities.dp(50.0f)));
                    }
                }
            } else if (this.topChatPanelView.getTag() != null) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("show spam button");
                }
                this.topChatPanelView.setTag((Object) null);
                this.topChatPanelView.setVisibility(0);
                AnimatorSet animatorSet3 = this.reportSpamViewAnimator;
                if (animatorSet3 != null) {
                    animatorSet3.cancel();
                    this.reportSpamViewAnimator = null;
                }
                if (animated) {
                    AnimatorSet animatorSet4 = new AnimatorSet();
                    this.reportSpamViewAnimator = animatorSet4;
                    SharedPreferences sharedPreferences = preferences;
                    animatorSet4.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.topChatPanelView, View.TRANSLATION_Y, new float[]{0.0f})});
                    this.reportSpamViewAnimator.setDuration(200);
                    this.reportSpamViewAnimator.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animation) {
                            if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animation)) {
                                AnimatorSet unused = ChatActivity.this.reportSpamViewAnimator = null;
                            }
                        }

                        public void onAnimationCancel(Animator animation) {
                            if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animation)) {
                                AnimatorSet unused = ChatActivity.this.reportSpamViewAnimator = null;
                            }
                        }
                    });
                    this.reportSpamViewAnimator.start();
                } else {
                    this.topChatPanelView.setTranslationY(0.0f);
                }
            }
            checkListViewPaddings();
        }
    }

    /* access modifiers changed from: private */
    public void checkListViewPaddingsInternal() {
        int pos;
        GridLayoutManagerFixed gridLayoutManagerFixed = this.chatLayoutManager;
        if (gridLayoutManagerFixed != null) {
            try {
                int firstVisPos = gridLayoutManagerFixed.findFirstVisibleItemPosition();
                int lastVisPos = -1;
                if (!this.wasManualScroll && this.unreadMessageObject != null && (pos = this.messages.indexOf(this.unreadMessageObject)) >= 0) {
                    lastVisPos = pos + this.chatAdapter.messagesStartRow;
                    firstVisPos = -1;
                }
                int top = 0;
                if (firstVisPos != -1) {
                    View firstVisView = this.chatLayoutManager.findViewByPosition(firstVisPos);
                    top = firstVisView == null ? 0 : (this.chatListView.getMeasuredHeight() - firstVisView.getBottom()) - this.chatListView.getPaddingBottom();
                }
                if (this.chatListView.getPaddingTop() != AndroidUtilities.dp(52.0f) && ((this.pinnedMessageView != null && this.pinnedMessageView.getTag() == null) || (this.topChatPanelView != null && this.topChatPanelView.getTag() == null))) {
                    this.chatListView.setPadding(0, AndroidUtilities.dp(52.0f), 0, AndroidUtilities.dp(3.0f));
                    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) this.floatingDateView.getLayoutParams();
                    layoutParams.topMargin = AndroidUtilities.dp(52.0f);
                    this.floatingDateView.setLayoutParams(layoutParams);
                    this.chatListView.setTopGlowOffset(AndroidUtilities.dp(48.0f));
                } else if (this.chatListView.getPaddingTop() == AndroidUtilities.dp(4.0f) || ((this.pinnedMessageView != null && this.pinnedMessageView.getTag() == null) || (this.topChatPanelView != null && this.topChatPanelView.getTag() == null))) {
                    firstVisPos = -1;
                } else {
                    this.chatListView.setPadding(0, AndroidUtilities.dp(4.0f), 0, AndroidUtilities.dp(3.0f));
                    FrameLayout.LayoutParams layoutParams2 = (FrameLayout.LayoutParams) this.floatingDateView.getLayoutParams();
                    layoutParams2.topMargin = AndroidUtilities.dp(4.0f);
                    this.floatingDateView.setLayoutParams(layoutParams2);
                    this.chatListView.setTopGlowOffset(0);
                }
                if (firstVisPos != -1) {
                    this.chatLayoutManager.scrollToPositionWithOffset(firstVisPos, top);
                } else if (lastVisPos != -1) {
                    this.chatLayoutManager.scrollToPositionWithOffset(lastVisPos, ((this.chatListView.getMeasuredHeight() - this.chatListView.getPaddingBottom()) - this.chatListView.getPaddingTop()) - AndroidUtilities.dp(29.0f));
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }
    }

    private void checkListViewPaddings() {
        MessageObject messageObject;
        if (this.wasManualScroll || (messageObject = this.unreadMessageObject) == null) {
            AndroidUtilities.runOnUIThread(new Runnable() {
                public final void run() {
                    ChatActivity.this.checkListViewPaddingsInternal();
                }
            });
        } else if (this.messages.indexOf(messageObject) >= 0) {
            this.fixPaddingsInLayout = true;
            if (this.fragmentView != null) {
                this.fragmentView.requestLayout();
            }
        }
    }

    /* access modifiers changed from: private */
    public void checkRaiseSensors() {
        FrameLayout frameLayout;
        FrameLayout frameLayout2;
        FrameLayout frameLayout3;
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 == null || !chatActivityEnterView2.isStickersExpanded()) {
            TLRPC.Chat chat = this.currentChat;
            if (chat != null && !ChatObject.canSendMedia(chat)) {
                MediaController.getInstance().setAllowStartRecord(false);
            } else if (ApplicationLoader.mainInterfacePaused || (((frameLayout = this.bottomOverlayChat) != null && frameLayout.getVisibility() == 0) || (((frameLayout2 = this.bottomOverlay) != null && frameLayout2.getVisibility() == 0) || ((frameLayout3 = this.searchContainer) != null && frameLayout3.getVisibility() == 0)))) {
                MediaController.getInstance().setAllowStartRecord(false);
            } else {
                MediaController.getInstance().setAllowStartRecord(true);
            }
        } else {
            MediaController.getInstance().setAllowStartRecord(false);
        }
    }

    public void dismissCurrentDialog() {
        ChatAttachAlert chatAttachAlert2;
        if (this.chatAttachAlert == null || this.visibleDialog != (chatAttachAlert2 = this.chatAttachAlert)) {
            super.dismissCurrentDialog();
            return;
        }
        chatAttachAlert2.closeCamera(false);
        this.chatAttachAlert.dismissInternal();
        this.chatAttachAlert.hideCamera(true);
    }

    /* access modifiers changed from: protected */
    public void setInPreviewMode(boolean value) {
        super.setInPreviewMode(value);
        ChatActionBarHelper chatActionBarHelper = this.actionBarHelper;
        if (chatActionBarHelper != null) {
            chatActionBarHelper.setInPreviewMode(value);
        }
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.setVisibility(!value ? 0 : 4);
        }
        if (this.actionBar != null) {
            this.actionBar.setBackButtonImage(!value ? R.mipmap.ic_back : 0);
            float f = 1.0f;
            this.headerItem.setAlpha(!value ? 1.0f : 0.0f);
            ActionBarMenuItem actionBarMenuItem = this.attachItem;
            if (value) {
                f = 0.0f;
            }
            actionBarMenuItem.setAlpha(f);
        }
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            int count = recyclerListView.getChildCount();
            for (int a = 0; a < count; a++) {
                View view = this.chatListView.getChildAt(a);
                MessageObject message = null;
                if (view instanceof ChatMessageCell) {
                    message = ((ChatMessageCell) view).getMessageObject();
                } else if (view instanceof ChatActionCell) {
                    message = ((ChatActionCell) view).getMessageObject();
                }
                if (message != null && message.messageOwner != null && message.messageOwner.media_unread && message.messageOwner.mentioned) {
                    if (!message.isVoice() && !message.isRoundVideo()) {
                        int i = this.newMentionsCount - 1;
                        this.newMentionsCount = i;
                        if (i <= 0) {
                            this.newMentionsCount = 0;
                            this.hasAllMentionsLocal = true;
                            showMentionDownButton(false, true);
                        } else {
                            this.mentiondownButtonCounter.setText(String.format("%d", new Object[]{Integer.valueOf(i)}));
                        }
                        getMessagesController().markMentionMessageAsRead(message.getId(), ChatObject.isChannel(this.currentChat) ? this.currentChat.id : 0, this.dialog_id);
                        message.setContentIsRead();
                    }
                    if (view instanceof ChatMessageCell) {
                        ((ChatMessageCell) view).setHighlighted(false);
                        ((ChatMessageCell) view).setHighlightedAnimated();
                    }
                }
            }
        }
        updateBottomOverlay();
        updateSecretStatus();
    }

    public void onResume() {
        ChatActivityEnterView chatActivityEnterView2;
        MessageObject messageObject;
        int yOffset;
        BackupImageView backupImageView;
        BackupImageView backupImageView2;
        super.onResume();
        AndroidUtilities.requestAdjustResize(getParentActivity(), this.classGuid);
        MediaController.getInstance().startRaiseToEarSensors(this);
        checkRaiseSensors();
        ChatAttachAlert chatAttachAlert2 = this.chatAttachAlert;
        if (chatAttachAlert2 != null) {
            chatAttachAlert2.onResume();
        }
        SizeNotifierFrameLayout sizeNotifierFrameLayout = this.contentView;
        if (sizeNotifierFrameLayout != null) {
            sizeNotifierFrameLayout.onResume();
        }
        if (this.firstOpen && getMessagesController().isProxyDialog(this.dialog_id, true)) {
            SharedPreferences preferences = MessagesController.getGlobalNotificationsSettings();
            if (preferences.getLong("proxychannel", 0) != this.dialog_id) {
                preferences.edit().putLong("proxychannel", this.dialog_id).commit();
                AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
                builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                builder.setMessage(LocaleController.getString("UseProxySponsorInfo", R.string.UseProxySponsorInfo));
                builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), (DialogInterface.OnClickListener) null);
                showDialog(builder.create());
            }
        }
        checkActionBarMenu();
        TLRPC.PhotoSize photoSize = this.replyImageLocation;
        if (!(photoSize == null || (backupImageView2 = this.replyImageView) == null)) {
            backupImageView2.setImage(ImageLocation.getForObject(photoSize, this.replyImageLocationObject), "50_50", ImageLocation.getForObject(this.replyImageThumbLocation, this.replyImageLocationObject), "50_50_b", (String) null, this.replyImageSize, this.replyImageCacheType, this.replyingMessageObject);
        }
        TLRPC.PhotoSize photoSize2 = this.pinnedImageLocation;
        if (!(photoSize2 == null || (backupImageView = this.pinnedMessageImageView) == null)) {
            backupImageView.setImage(ImageLocation.getForObject(photoSize2, this.pinnedImageLocationObject), "50_50", ImageLocation.getForObject(this.pinnedImageThumbLocation, this.pinnedImageLocationObject), "50_50_b", (String) null, this.pinnedImageSize, this.pinnedImageCacheType, this.pinnedMessageObject);
        }
        if (!this.inScheduleMode) {
            getNotificationsController().setOpenedDialogId(this.dialog_id);
        }
        getMessagesController().setLastVisibleDialogId(this.dialog_id, this.inScheduleMode, true);
        if (this.scrollToTopOnResume) {
            if (!this.scrollToTopUnReadOnResume || (messageObject = this.scrollToMessage) == null) {
                moveScrollToLastMessage();
            } else if (this.chatListView != null) {
                boolean bottom = true;
                int i = this.scrollToMessagePosition;
                if (i == -9000) {
                    yOffset = getScrollOffsetForMessage(messageObject);
                    bottom = false;
                } else if (i == -10000) {
                    yOffset = -AndroidUtilities.dp(11.0f);
                    bottom = false;
                } else {
                    yOffset = this.scrollToMessagePosition;
                }
                this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(this.scrollToMessage), yOffset, bottom);
            }
            this.scrollToTopUnReadOnResume = false;
            this.scrollToTopOnResume = false;
            this.scrollToMessage = null;
        }
        this.paused = false;
        this.pausedOnLastMessage = false;
        checkScrollForLoad(false);
        if (this.wasPaused) {
            this.wasPaused = false;
            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
            if (chatActivityAdapter != null) {
                chatActivityAdapter.notifyDataSetChanged();
            }
        }
        applyDraftMaybe(false);
        FrameLayout frameLayout = this.bottomOverlayChat;
        if (!(frameLayout == null || frameLayout.getVisibility() == 0 || this.actionBar.isSearchFieldVisible())) {
            this.chatActivityEnterView.setFieldFocused(true);
        }
        ChatActivityEnterView chatActivityEnterView3 = this.chatActivityEnterView;
        if (chatActivityEnterView3 != null) {
            chatActivityEnterView3.onResume();
        }
        if (this.currentUser != null) {
            this.chatEnterTime = System.currentTimeMillis();
            this.chatLeaveTime = 0;
        }
        if (this.startVideoEdit != null) {
            AndroidUtilities.runOnUIThread(new Runnable() {
                public final void run() {
                    ChatActivity.this.lambda$onResume$75$ChatActivity();
                }
            });
        }
        if (this.chatListView != null && ((chatActivityEnterView2 = this.chatActivityEnterView) == null || !chatActivityEnterView2.isEditingMessage())) {
            this.chatListView.setOnItemLongClickListener(this.onItemLongClickListener);
            this.chatListView.setOnItemClickListener(this.onItemClickListener);
            this.chatListView.setLongClickable(true);
        }
        checkBotCommands();
        ChatActionBarHelper chatActionBarHelper = this.actionBarHelper;
        if (chatActionBarHelper != null) {
            chatActionBarHelper.updateTitle();
        }
    }

    public /* synthetic */ void lambda$onResume$75$ChatActivity() {
        openVideoEditor(this.startVideoEdit, (String) null);
        this.startVideoEdit = null;
    }

    public void finishFragment() {
        super.finishFragment();
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            actionBarPopupWindow.dismiss();
        }
    }

    /* JADX WARNING: type inference failed for: r14v10, types: [androidx.recyclerview.widget.RecyclerView$ViewHolder] */
    /* JADX WARNING: Code restructure failed: missing block: B:64:0x016f, code lost:
        if (r1.messageOwner.from_scheduled != false) goto L_0x0174;
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void onPause() {
        /*
            r19 = this;
            r0 = r19
            super.onPause()
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow r1 = r0.scrimPopupWindow
            if (r1 == 0) goto L_0x000c
            r1.dismiss()
        L_0x000c:
            im.bclpbkiauv.messenger.MessagesController r1 = r19.getMessagesController()
            long r2 = r0.dialog_id
            r1.markDialogAsReadNow(r2)
            im.bclpbkiauv.messenger.MediaController r1 = im.bclpbkiauv.messenger.MediaController.getInstance()
            r2 = 1
            r1.stopRaiseToEarSensors(r0, r2)
            r0.paused = r2
            r0.wasPaused = r2
            boolean r1 = r0.inScheduleMode
            if (r1 != 0) goto L_0x002e
            im.bclpbkiauv.messenger.NotificationsController r1 = r19.getNotificationsController()
            r3 = 0
            r1.setOpenedDialogId(r3)
        L_0x002e:
            im.bclpbkiauv.messenger.MessagesController r1 = r19.getMessagesController()
            long r3 = r0.dialog_id
            boolean r5 = r0.inScheduleMode
            r6 = 0
            r1.setLastVisibleDialogId(r3, r5, r6)
            r1 = 0
            r3 = 0
            r4 = 1
            boolean r5 = r0.ignoreAttachOnPause
            if (r5 != 0) goto L_0x0097
            im.bclpbkiauv.ui.components.ChatActivityEnterView r5 = r0.chatActivityEnterView
            if (r5 == 0) goto L_0x0097
            android.widget.FrameLayout r5 = r0.bottomOverlayChat
            int r5 = r5.getVisibility()
            if (r5 == 0) goto L_0x0097
            im.bclpbkiauv.ui.components.ChatActivityEnterView r5 = r0.chatActivityEnterView
            r5.onPause()
            im.bclpbkiauv.messenger.MessageObject r3 = r0.replyingMessageObject
            im.bclpbkiauv.ui.components.ChatActivityEnterView r5 = r0.chatActivityEnterView
            boolean r5 = r5.isEditingMessage()
            if (r5 != 0) goto L_0x008c
            im.bclpbkiauv.ui.components.ChatActivityEnterView r5 = r0.chatActivityEnterView
            java.lang.CharSequence r5 = r5.getFieldText()
            boolean r7 = android.text.TextUtils.isEmpty(r5)
            if (r7 != 0) goto L_0x008c
            java.lang.String r7 = r5.toString()
            java.lang.String r8 = " "
            boolean r7 = r7.endsWith(r8)
            if (r7 == 0) goto L_0x0082
            java.lang.CharSequence r5 = im.bclpbkiauv.messenger.AndroidUtilities.getTrimmedString(r5)
            android.text.SpannableStringBuilder r7 = new android.text.SpannableStringBuilder
            r7.<init>(r5)
            r7.append(r8)
            r1 = r7
            goto L_0x008c
        L_0x0082:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r7 = r0.chatActivityEnterView
            java.lang.CharSequence r7 = r7.getFieldText()
            java.lang.CharSequence r1 = im.bclpbkiauv.messenger.AndroidUtilities.getTrimmedString(r7)
        L_0x008c:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r5 = r0.chatActivityEnterView
            boolean r4 = r5.isMessageWebPageSearchEnabled()
            im.bclpbkiauv.ui.components.ChatActivityEnterView r5 = r0.chatActivityEnterView
            r5.setFieldFocused(r6)
        L_0x0097:
            im.bclpbkiauv.ui.components.ChatAttachAlert r5 = r0.chatAttachAlert
            if (r5 == 0) goto L_0x00a5
            boolean r7 = r0.ignoreAttachOnPause
            if (r7 != 0) goto L_0x00a3
            r5.onPause()
            goto L_0x00a5
        L_0x00a3:
            r0.ignoreAttachOnPause = r6
        L_0x00a5:
            im.bclpbkiauv.ui.components.SizeNotifierFrameLayout r5 = r0.contentView
            if (r5 == 0) goto L_0x00ac
            r5.onPause()
        L_0x00ac:
            boolean r5 = r0.inScheduleMode
            if (r5 != 0) goto L_0x0276
            java.lang.CharSequence[] r5 = new java.lang.CharSequence[r2]
            r5[r6] = r1
            im.bclpbkiauv.messenger.MediaDataController r7 = r19.getMediaDataController()
            java.util.ArrayList r7 = r7.getEntities(r5)
            im.bclpbkiauv.messenger.MediaDataController r8 = r19.getMediaDataController()
            long r9 = r0.dialog_id
            r11 = r5[r6]
            if (r3 == 0) goto L_0x00c9
            im.bclpbkiauv.tgnet.TLRPC$Message r12 = r3.messageOwner
            goto L_0x00ca
        L_0x00c9:
            r12 = 0
        L_0x00ca:
            r13 = r12
            r14 = r4 ^ 1
            r12 = r7
            r8.saveDraft(r9, r11, r12, r13, r14)
            im.bclpbkiauv.messenger.MessagesController r8 = r19.getMessagesController()
            long r9 = r0.dialog_id
            r8.cancelTyping(r6, r9)
            boolean r8 = r0.pausedOnLastMessage
            if (r8 != 0) goto L_0x025d
            int r8 = r0.currentAccount
            android.content.SharedPreferences r8 = im.bclpbkiauv.messenger.MessagesController.getNotificationsSettings(r8)
            android.content.SharedPreferences$Editor r8 = r8.edit()
            r9 = 0
            r10 = 0
            androidx.recyclerview.widget.GridLayoutManagerFixed r11 = r0.chatLayoutManager
            if (r11 == 0) goto L_0x01fd
            int r11 = r11.findFirstVisibleItemPosition()
            if (r11 == 0) goto L_0x01fa
            im.bclpbkiauv.ui.components.RecyclerListView r12 = r0.chatListView
            androidx.recyclerview.widget.RecyclerView$ViewHolder r12 = r12.findViewHolderForAdapterPosition(r11)
            im.bclpbkiauv.ui.components.RecyclerListView$Holder r12 = (im.bclpbkiauv.ui.components.RecyclerListView.Holder) r12
            if (r12 == 0) goto L_0x01f7
            r13 = 0
            android.view.View r14 = r12.itemView
            boolean r14 = r14 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r14 == 0) goto L_0x0112
            android.view.View r14 = r12.itemView
            im.bclpbkiauv.ui.cells.ChatMessageCell r14 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r14
            im.bclpbkiauv.messenger.MessageObject r14 = r14.getMessageObject()
            int r13 = r14.getId()
            goto L_0x0124
        L_0x0112:
            android.view.View r14 = r12.itemView
            boolean r14 = r14 instanceof im.bclpbkiauv.ui.cells.ChatActionCell
            if (r14 == 0) goto L_0x0124
            android.view.View r14 = r12.itemView
            im.bclpbkiauv.ui.cells.ChatActionCell r14 = (im.bclpbkiauv.ui.cells.ChatActionCell) r14
            im.bclpbkiauv.messenger.MessageObject r14 = r14.getMessageObject()
            int r13 = r14.getId()
        L_0x0124:
            if (r13 != 0) goto L_0x0131
            im.bclpbkiauv.ui.components.RecyclerListView r14 = r0.chatListView
            int r15 = r11 + 1
            androidx.recyclerview.widget.RecyclerView$ViewHolder r14 = r14.findViewHolderForAdapterPosition(r15)
            r12 = r14
            im.bclpbkiauv.ui.components.RecyclerListView$Holder r12 = (im.bclpbkiauv.ui.components.RecyclerListView.Holder) r12
        L_0x0131:
            r14 = 0
            r15 = 0
            int r16 = r11 + -1
            r6 = r16
        L_0x0137:
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r0.chatAdapter
            int r2 = r2.messagesStartRow
            if (r6 < r2) goto L_0x018d
            im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter r2 = r0.chatAdapter
            int r2 = r2.messagesStartRow
            int r2 = r6 - r2
            if (r2 < 0) goto L_0x0183
            r17 = r1
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r0.messages
            int r1 = r1.size()
            if (r2 < r1) goto L_0x0154
            goto L_0x0187
        L_0x0154:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r0.messages
            java.lang.Object r1 = r1.get(r2)
            im.bclpbkiauv.messenger.MessageObject r1 = (im.bclpbkiauv.messenger.MessageObject) r1
            int r18 = r1.getId()
            if (r18 != 0) goto L_0x0163
            goto L_0x0187
        L_0x0163:
            boolean r18 = r1.isOut()
            if (r18 == 0) goto L_0x0172
            r18 = r2
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r1.messageOwner
            boolean r2 = r2.from_scheduled
            if (r2 == 0) goto L_0x017c
            goto L_0x0174
        L_0x0172:
            r18 = r2
        L_0x0174:
            boolean r2 = r1.isUnread()
            if (r2 == 0) goto L_0x017c
            r14 = 1
            r9 = 0
        L_0x017c:
            r2 = 2
            if (r15 <= r2) goto L_0x0180
            goto L_0x018f
        L_0x0180:
            int r15 = r15 + 1
            goto L_0x0187
        L_0x0183:
            r17 = r1
            r18 = r2
        L_0x0187:
            int r6 = r6 + -1
            r1 = r17
            r2 = 1
            goto L_0x0137
        L_0x018d:
            r17 = r1
        L_0x018f:
            if (r12 == 0) goto L_0x01ff
            if (r14 != 0) goto L_0x01ff
            android.view.View r1 = r12.itemView
            boolean r1 = r1 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r1 == 0) goto L_0x01a7
            android.view.View r1 = r12.itemView
            im.bclpbkiauv.ui.cells.ChatMessageCell r1 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r1
            im.bclpbkiauv.messenger.MessageObject r1 = r1.getMessageObject()
            int r1 = r1.getId()
            r9 = r1
            goto L_0x01ba
        L_0x01a7:
            android.view.View r1 = r12.itemView
            boolean r1 = r1 instanceof im.bclpbkiauv.ui.cells.ChatActionCell
            if (r1 == 0) goto L_0x01ba
            android.view.View r1 = r12.itemView
            im.bclpbkiauv.ui.cells.ChatActionCell r1 = (im.bclpbkiauv.ui.cells.ChatActionCell) r1
            im.bclpbkiauv.messenger.MessageObject r1 = r1.getMessageObject()
            int r1 = r1.getId()
            r9 = r1
        L_0x01ba:
            if (r9 <= 0) goto L_0x01c0
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r1 = r0.currentEncryptedChat
            if (r1 == 0) goto L_0x01c6
        L_0x01c0:
            if (r9 >= 0) goto L_0x01f5
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r1 = r0.currentEncryptedChat
            if (r1 == 0) goto L_0x01f5
        L_0x01c6:
            android.view.View r1 = r12.itemView
            int r1 = r1.getBottom()
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r0.chatListView
            int r2 = r2.getMeasuredHeight()
            int r10 = r1 - r2
            boolean r1 = im.bclpbkiauv.messenger.BuildVars.LOGS_ENABLED
            if (r1 == 0) goto L_0x01ff
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = "save offset = "
            r1.append(r2)
            r1.append(r10)
            java.lang.String r2 = " for mid "
            r1.append(r2)
            r1.append(r9)
            java.lang.String r1 = r1.toString()
            im.bclpbkiauv.messenger.FileLog.d(r1)
            goto L_0x01ff
        L_0x01f5:
            r9 = 0
            goto L_0x01ff
        L_0x01f7:
            r17 = r1
            goto L_0x01ff
        L_0x01fa:
            r17 = r1
            goto L_0x01ff
        L_0x01fd:
            r17 = r1
        L_0x01ff:
            java.lang.String r1 = "diditemo"
            java.lang.String r2 = "diditem"
            if (r9 == 0) goto L_0x022e
            java.lang.StringBuilder r6 = new java.lang.StringBuilder
            r6.<init>()
            r6.append(r2)
            long r11 = r0.dialog_id
            r6.append(r11)
            java.lang.String r2 = r6.toString()
            r8.putInt(r2, r9)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r1)
            long r11 = r0.dialog_id
            r2.append(r11)
            java.lang.String r1 = r2.toString()
            r8.putInt(r1, r10)
            goto L_0x0259
        L_0x022e:
            r6 = 1
            r0.pausedOnLastMessage = r6
            java.lang.StringBuilder r6 = new java.lang.StringBuilder
            r6.<init>()
            r6.append(r2)
            long r11 = r0.dialog_id
            r6.append(r11)
            java.lang.String r2 = r6.toString()
            r8.remove(r2)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r1)
            long r11 = r0.dialog_id
            r2.append(r11)
            java.lang.String r1 = r2.toString()
            r8.remove(r1)
        L_0x0259:
            r8.commit()
            goto L_0x025f
        L_0x025d:
            r17 = r1
        L_0x025f:
            im.bclpbkiauv.tgnet.TLRPC$User r1 = r0.currentUser
            if (r1 == 0) goto L_0x026c
            long r1 = java.lang.System.currentTimeMillis()
            r0.chatLeaveTime = r1
            r19.updateInformationForScreenshotDetector()
        L_0x026c:
            im.bclpbkiauv.ui.components.UndoView r1 = r0.undoView
            if (r1 == 0) goto L_0x0278
            r2 = 0
            r6 = 1
            r1.hide(r6, r2)
            goto L_0x0278
        L_0x0276:
            r17 = r1
        L_0x0278:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.onPause():void");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v7, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v10, resolved type: android.text.SpannableStringBuilder} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v11, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v12, resolved type: java.lang.String} */
    /* JADX WARNING: Multi-variable type inference failed */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void applyDraftMaybe(boolean r15) {
        /*
            r14 = this;
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r14.chatActivityEnterView
            if (r0 == 0) goto L_0x01cd
            boolean r0 = r14.inScheduleMode
            if (r0 == 0) goto L_0x000a
            goto L_0x01cd
        L_0x000a:
            im.bclpbkiauv.messenger.MediaDataController r0 = r14.getMediaDataController()
            long r1 = r14.dialog_id
            im.bclpbkiauv.tgnet.TLRPC$DraftMessage r0 = r0.getDraft(r1)
            r1 = 0
            if (r0 == 0) goto L_0x0026
            int r2 = r0.reply_to_msg_id
            if (r2 == 0) goto L_0x0026
            im.bclpbkiauv.messenger.MediaDataController r2 = r14.getMediaDataController()
            long r3 = r14.dialog_id
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r2.getDraftMessage(r3)
            goto L_0x0027
        L_0x0026:
            r2 = r1
        L_0x0027:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r3 = r14.chatActivityEnterView
            java.lang.CharSequence r3 = r3.getFieldText()
            r4 = 0
            java.lang.String r5 = ""
            r6 = 1
            if (r3 != 0) goto L_0x01a6
            if (r0 == 0) goto L_0x01b2
            im.bclpbkiauv.ui.components.ChatActivityEnterView r3 = r14.chatActivityEnterView
            boolean r7 = r0.no_webpage
            r7 = r7 ^ r6
            r3.setWebPage(r1, r7)
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$MessageEntity> r1 = r0.entities
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x017a
            java.lang.String r1 = r0.message
            android.text.SpannableStringBuilder r1 = android.text.SpannableStringBuilder.valueOf(r1)
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$MessageEntity> r3 = r0.entities
            im.bclpbkiauv.messenger.MediaDataController.sortEntities(r3)
            r3 = 0
        L_0x0051:
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$MessageEntity> r7 = r0.entities
            int r7 = r7.size()
            if (r3 >= r7) goto L_0x0178
            java.util.ArrayList<im.bclpbkiauv.tgnet.TLRPC$MessageEntity> r7 = r0.entities
            java.lang.Object r7 = r7.get(r3)
            im.bclpbkiauv.tgnet.TLRPC$MessageEntity r7 = (im.bclpbkiauv.tgnet.TLRPC.MessageEntity) r7
            boolean r8 = r7 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_inputMessageEntityMentionName
            r9 = 33
            if (r8 != 0) goto L_0x0127
            boolean r8 = r7 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageEntityMentionName
            if (r8 == 0) goto L_0x006d
            goto L_0x0127
        L_0x006d:
            boolean r8 = r7 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageEntityCode
            if (r8 != 0) goto L_0x010c
            boolean r8 = r7 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageEntityPre
            if (r8 == 0) goto L_0x0077
            goto L_0x010c
        L_0x0077:
            boolean r8 = r7 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageEntityBold
            if (r8 == 0) goto L_0x0096
            im.bclpbkiauv.ui.components.TextStyleSpan$TextStyleRun r8 = new im.bclpbkiauv.ui.components.TextStyleSpan$TextStyleRun
            r8.<init>()
            int r9 = r8.flags
            r9 = r9 | r6
            r8.flags = r9
            im.bclpbkiauv.ui.components.TextStyleSpan r9 = new im.bclpbkiauv.ui.components.TextStyleSpan
            r9.<init>(r8)
            int r10 = r7.offset
            int r11 = r7.offset
            int r12 = r7.length
            int r11 = r11 + r12
            im.bclpbkiauv.messenger.MediaDataController.addStyleToText(r9, r10, r11, r1, r6)
            goto L_0x0174
        L_0x0096:
            boolean r8 = r7 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageEntityItalic
            if (r8 == 0) goto L_0x00b6
            im.bclpbkiauv.ui.components.TextStyleSpan$TextStyleRun r8 = new im.bclpbkiauv.ui.components.TextStyleSpan$TextStyleRun
            r8.<init>()
            int r9 = r8.flags
            r9 = r9 | 2
            r8.flags = r9
            im.bclpbkiauv.ui.components.TextStyleSpan r9 = new im.bclpbkiauv.ui.components.TextStyleSpan
            r9.<init>(r8)
            int r10 = r7.offset
            int r11 = r7.offset
            int r12 = r7.length
            int r11 = r11 + r12
            im.bclpbkiauv.messenger.MediaDataController.addStyleToText(r9, r10, r11, r1, r6)
            goto L_0x0174
        L_0x00b6:
            boolean r8 = r7 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageEntityStrike
            if (r8 == 0) goto L_0x00d6
            im.bclpbkiauv.ui.components.TextStyleSpan$TextStyleRun r8 = new im.bclpbkiauv.ui.components.TextStyleSpan$TextStyleRun
            r8.<init>()
            int r9 = r8.flags
            r9 = r9 | 8
            r8.flags = r9
            im.bclpbkiauv.ui.components.TextStyleSpan r9 = new im.bclpbkiauv.ui.components.TextStyleSpan
            r9.<init>(r8)
            int r10 = r7.offset
            int r11 = r7.offset
            int r12 = r7.length
            int r11 = r11 + r12
            im.bclpbkiauv.messenger.MediaDataController.addStyleToText(r9, r10, r11, r1, r6)
            goto L_0x0174
        L_0x00d6:
            boolean r8 = r7 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageEntityUnderline
            if (r8 == 0) goto L_0x00f5
            im.bclpbkiauv.ui.components.TextStyleSpan$TextStyleRun r8 = new im.bclpbkiauv.ui.components.TextStyleSpan$TextStyleRun
            r8.<init>()
            int r9 = r8.flags
            r9 = r9 | 16
            r8.flags = r9
            im.bclpbkiauv.ui.components.TextStyleSpan r9 = new im.bclpbkiauv.ui.components.TextStyleSpan
            r9.<init>(r8)
            int r10 = r7.offset
            int r11 = r7.offset
            int r12 = r7.length
            int r11 = r11 + r12
            im.bclpbkiauv.messenger.MediaDataController.addStyleToText(r9, r10, r11, r1, r6)
            goto L_0x010b
        L_0x00f5:
            boolean r8 = r7 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageEntityTextUrl
            if (r8 == 0) goto L_0x010b
            im.bclpbkiauv.ui.components.URLSpanReplacement r8 = new im.bclpbkiauv.ui.components.URLSpanReplacement
            java.lang.String r10 = r7.url
            r8.<init>(r10)
            int r10 = r7.offset
            int r11 = r7.offset
            int r12 = r7.length
            int r11 = r11 + r12
            r1.setSpan(r8, r10, r11, r9)
            goto L_0x0174
        L_0x010b:
            goto L_0x0174
        L_0x010c:
            im.bclpbkiauv.ui.components.TextStyleSpan$TextStyleRun r8 = new im.bclpbkiauv.ui.components.TextStyleSpan$TextStyleRun
            r8.<init>()
            int r9 = r8.flags
            r9 = r9 | 4
            r8.flags = r9
            im.bclpbkiauv.ui.components.TextStyleSpan r9 = new im.bclpbkiauv.ui.components.TextStyleSpan
            r9.<init>(r8)
            int r10 = r7.offset
            int r11 = r7.offset
            int r12 = r7.length
            int r11 = r11 + r12
            im.bclpbkiauv.messenger.MediaDataController.addStyleToText(r9, r10, r11, r1, r6)
            goto L_0x0174
        L_0x0127:
            boolean r8 = r7 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_inputMessageEntityMentionName
            if (r8 == 0) goto L_0x0133
            r8 = r7
            im.bclpbkiauv.tgnet.TLRPC$TL_inputMessageEntityMentionName r8 = (im.bclpbkiauv.tgnet.TLRPC.TL_inputMessageEntityMentionName) r8
            im.bclpbkiauv.tgnet.TLRPC$InputUser r8 = r8.user_id
            int r8 = r8.user_id
            goto L_0x0138
        L_0x0133:
            r8 = r7
            im.bclpbkiauv.tgnet.TLRPC$TL_messageEntityMentionName r8 = (im.bclpbkiauv.tgnet.TLRPC.TL_messageEntityMentionName) r8
            int r8 = r8.user_id
        L_0x0138:
            int r10 = r7.offset
            int r11 = r7.length
            int r10 = r10 + r11
            int r11 = r1.length()
            if (r10 >= r11) goto L_0x0155
            int r10 = r7.offset
            int r11 = r7.length
            int r10 = r10 + r11
            char r10 = r1.charAt(r10)
            r11 = 32
            if (r10 != r11) goto L_0x0155
            int r10 = r7.length
            int r10 = r10 + r6
            r7.length = r10
        L_0x0155:
            im.bclpbkiauv.ui.components.URLSpanUserMention r10 = new im.bclpbkiauv.ui.components.URLSpanUserMention
            java.lang.StringBuilder r11 = new java.lang.StringBuilder
            r11.<init>()
            r11.append(r5)
            r11.append(r8)
            java.lang.String r11 = r11.toString()
            r10.<init>(r11, r6)
            int r11 = r7.offset
            int r12 = r7.offset
            int r13 = r7.length
            int r12 = r12 + r13
            r1.setSpan(r10, r11, r12, r9)
        L_0x0174:
            int r3 = r3 + 1
            goto L_0x0051
        L_0x0178:
            goto L_0x017c
        L_0x017a:
            java.lang.String r1 = r0.message
        L_0x017c:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r3 = r14.chatActivityEnterView
            r3.setFieldText(r1)
            android.os.Bundle r3 = r14.getArguments()
            java.lang.String r5 = "hasUrl"
            boolean r3 = r3.getBoolean(r5, r4)
            if (r3 == 0) goto L_0x01a5
            im.bclpbkiauv.ui.components.ChatActivityEnterView r3 = r14.chatActivityEnterView
            java.lang.String r5 = r0.message
            r7 = 10
            int r5 = r5.indexOf(r7)
            int r5 = r5 + r6
            r3.setSelection(r5)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$5hFBwCXZGkVi0O7PAWAneU-BvzA r3 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$5hFBwCXZGkVi0O7PAWAneU-BvzA
            r3.<init>()
            r5 = 700(0x2bc, double:3.46E-321)
            im.bclpbkiauv.messenger.AndroidUtilities.runOnUIThread(r3, r5)
        L_0x01a5:
            goto L_0x01b2
        L_0x01a6:
            if (r15 == 0) goto L_0x01b2
            if (r0 != 0) goto L_0x01b2
            im.bclpbkiauv.ui.components.ChatActivityEnterView r1 = r14.chatActivityEnterView
            r1.setFieldText(r5)
            r14.hideFieldPanel(r6)
        L_0x01b2:
            im.bclpbkiauv.messenger.MessageObject r1 = r14.replyingMessageObject
            if (r1 != 0) goto L_0x01cc
            if (r2 == 0) goto L_0x01cc
            im.bclpbkiauv.messenger.MessageObject r1 = new im.bclpbkiauv.messenger.MessageObject
            int r3 = r14.currentAccount
            im.bclpbkiauv.messenger.MessagesController r5 = r14.getMessagesController()
            java.util.concurrent.ConcurrentHashMap r5 = r5.getUsers()
            r1.<init>((int) r3, (im.bclpbkiauv.tgnet.TLRPC.Message) r2, (java.util.AbstractMap<java.lang.Integer, im.bclpbkiauv.tgnet.TLRPC.User>) r5, (boolean) r4)
            r14.replyingMessageObject = r1
            r14.showFieldPanelForReply(r1)
        L_0x01cc:
            return
        L_0x01cd:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.applyDraftMaybe(boolean):void");
    }

    public /* synthetic */ void lambda$applyDraftMaybe$76$ChatActivity() {
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.setFieldFocused(true);
            this.chatActivityEnterView.openKeyboard();
        }
    }

    private void updateInformationForScreenshotDetector() {
        if (this.currentUser != null) {
            if (this.currentEncryptedChat != null) {
                ArrayList<Long> visibleMessages = new ArrayList<>();
                RecyclerListView recyclerListView = this.chatListView;
                if (recyclerListView != null) {
                    int count = recyclerListView.getChildCount();
                    for (int a = 0; a < count; a++) {
                        View view = this.chatListView.getChildAt(a);
                        MessageObject object = null;
                        if (view instanceof ChatMessageCell) {
                            object = ((ChatMessageCell) view).getMessageObject();
                        }
                        if (!(object == null || object.getId() >= 0 || object.messageOwner.random_id == 0)) {
                            visibleMessages.add(Long.valueOf(object.messageOwner.random_id));
                        }
                    }
                }
                MediaController.getInstance().setLastVisibleMessageIds(this.currentAccount, this.chatEnterTime, this.chatLeaveTime, this.currentUser, this.currentEncryptedChat, visibleMessages, 0);
                return;
            }
            SecretMediaViewer viewer = SecretMediaViewer.getInstance();
            MessageObject messageObject = viewer.getCurrentMessageObject();
            if (messageObject != null && !messageObject.isOut()) {
                MediaController.getInstance().setLastVisibleMessageIds(this.currentAccount, viewer.getOpenTime(), viewer.getCloseTime(), this.currentUser, (TLRPC.EncryptedChat) null, (ArrayList<Long>) null, messageObject.getId());
            }
        }
    }

    private boolean fixLayoutInternal() {
        MessageObject.GroupedMessages groupedMessages;
        if (AndroidUtilities.isTablet() || ApplicationLoader.applicationContext.getResources().getConfiguration().orientation != 2) {
            this.selectedMessagesCountTextView.setTextSize(20);
        } else {
            this.selectedMessagesCountTextView.setTextSize(18);
        }
        HashMap<Long, MessageObject.GroupedMessages> newGroups = null;
        int count = this.chatListView.getChildCount();
        for (int a = 0; a < count; a++) {
            View child = this.chatListView.getChildAt(a);
            if ((child instanceof ChatMessageCell) && (groupedMessages = ((ChatMessageCell) child).getCurrentMessagesGroup()) != null && groupedMessages.hasSibling) {
                if (newGroups == null) {
                    newGroups = new HashMap<>();
                }
                if (!newGroups.containsKey(Long.valueOf(groupedMessages.groupId))) {
                    newGroups.put(Long.valueOf(groupedMessages.groupId), groupedMessages);
                    int idx = this.messages.indexOf(groupedMessages.messages.get(groupedMessages.messages.size() - 1));
                    if (idx >= 0) {
                        ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
                        chatActivityAdapter.notifyItemRangeChanged(chatActivityAdapter.messagesStartRow + idx, groupedMessages.messages.size());
                    }
                }
            }
        }
        if (AndroidUtilities.isTablet() == 0) {
            return true;
        }
        if (!AndroidUtilities.isSmallTablet() || ApplicationLoader.applicationContext.getResources().getConfiguration().orientation != 1) {
            this.actionBar.setBackButtonImage(R.mipmap.ic_back);
            FragmentContextView fragmentContextView2 = this.fragmentContextView;
            if (!(fragmentContextView2 == null || fragmentContextView2.getParent() == null)) {
                this.fragmentView.setPadding(0, 0, 0, 0);
                ((ViewGroup) this.fragmentView).removeView(this.fragmentContextView);
            }
        } else {
            this.actionBar.setBackButtonImage(R.mipmap.ic_back);
            FragmentContextView fragmentContextView3 = this.fragmentContextView;
            if (fragmentContextView3 != null && fragmentContextView3.getParent() == null) {
                ((ViewGroup) this.fragmentView).addView(this.fragmentContextView, LayoutHelper.createFrame(-1.0f, 39.0f, 51, 0.0f, -36.0f, 0.0f, 0.0f));
            }
        }
        return false;
    }

    private void fixLayout() {
    }

    /* JADX WARNING: Code restructure failed: missing block: B:12:0x0025, code lost:
        r5 = r0.noSoundHintView.getMessageCell();
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public boolean maybePlayVisibleVideo() {
        /*
            r16 = this;
            r0 = r16
            im.bclpbkiauv.ui.components.RecyclerListView r1 = r0.chatListView
            r2 = 0
            if (r1 != 0) goto L_0x0008
            return r2
        L_0x0008:
            im.bclpbkiauv.messenger.MediaController r1 = im.bclpbkiauv.messenger.MediaController.getInstance()
            im.bclpbkiauv.messenger.MessageObject r1 = r1.getPlayingMessageObject()
            if (r1 == 0) goto L_0x0019
            boolean r3 = r1.isVideo()
            if (r3 != 0) goto L_0x0019
            return r2
        L_0x0019:
            r3 = 0
            r4 = 0
            im.bclpbkiauv.ui.components.HintView r5 = r0.noSoundHintView
            if (r5 == 0) goto L_0x004f
            java.lang.Object r5 = r5.getTag()
            if (r5 == 0) goto L_0x004f
            im.bclpbkiauv.ui.components.HintView r5 = r0.noSoundHintView
            im.bclpbkiauv.ui.cells.ChatMessageCell r5 = r5.getMessageCell()
            im.bclpbkiauv.messenger.ImageReceiver r7 = r5.getPhotoImage()
            im.bclpbkiauv.ui.components.AnimatedFileDrawable r4 = r7.getAnimation()
            if (r4 == 0) goto L_0x004f
            im.bclpbkiauv.messenger.MessageObject r3 = r5.getMessageObject()
            int r8 = r5.getTop()
            int r9 = r7.getImageY2()
            int r8 = r8 + r9
            im.bclpbkiauv.ui.components.RecyclerListView r9 = r0.chatListView
            int r9 = r9.getMeasuredHeight()
            if (r8 <= r9) goto L_0x004c
            r8 = 1
            goto L_0x004d
        L_0x004c:
            r8 = 0
        L_0x004d:
            r0.scrollToVideo = r8
        L_0x004f:
            if (r3 != 0) goto L_0x00c2
            im.bclpbkiauv.ui.components.RecyclerListView r5 = r0.chatListView
            int r5 = r5.getChildCount()
            r7 = 0
        L_0x0058:
            if (r7 >= r5) goto L_0x00c2
            im.bclpbkiauv.ui.components.RecyclerListView r8 = r0.chatListView
            android.view.View r8 = r8.getChildAt(r7)
            boolean r9 = r8 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r9 != 0) goto L_0x0065
            goto L_0x00bf
        L_0x0065:
            r9 = r8
            im.bclpbkiauv.ui.cells.ChatMessageCell r9 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r9
            im.bclpbkiauv.messenger.MessageObject r10 = r9.getMessageObject()
            boolean r11 = r10.isRoundVideo()
            boolean r12 = r10.isVideo()
            if (r12 != 0) goto L_0x0079
            if (r11 != 0) goto L_0x0079
            goto L_0x00bf
        L_0x0079:
            im.bclpbkiauv.messenger.ImageReceiver r12 = r9.getPhotoImage()
            im.bclpbkiauv.ui.components.AnimatedFileDrawable r13 = r12.getAnimation()
            if (r13 != 0) goto L_0x0084
            goto L_0x00bf
        L_0x0084:
            int r14 = r8.getTop()
            int r15 = r12.getImageY()
            int r14 = r14 + r15
            int r15 = r12.getImageHeight()
            int r15 = r15 + r14
            if (r15 < 0) goto L_0x00bf
            im.bclpbkiauv.ui.components.RecyclerListView r6 = r0.chatListView
            int r6 = r6.getMeasuredHeight()
            if (r14 <= r6) goto L_0x009d
            goto L_0x00bf
        L_0x009d:
            if (r3 == 0) goto L_0x00a2
            if (r14 >= 0) goto L_0x00a2
            goto L_0x00c2
        L_0x00a2:
            r3 = r10
            r4 = r13
            if (r14 < 0) goto L_0x00b1
            im.bclpbkiauv.ui.components.RecyclerListView r6 = r0.chatListView
            int r6 = r6.getMeasuredHeight()
            if (r15 <= r6) goto L_0x00af
            goto L_0x00b1
        L_0x00af:
            r6 = 0
            goto L_0x00b2
        L_0x00b1:
            r6 = 1
        L_0x00b2:
            r0.scrollToVideo = r6
            if (r14 < 0) goto L_0x00bf
            im.bclpbkiauv.ui.components.RecyclerListView r6 = r0.chatListView
            int r6 = r6.getMeasuredHeight()
            if (r15 > r6) goto L_0x00bf
            goto L_0x00c2
        L_0x00bf:
            int r7 = r7 + 1
            goto L_0x0058
        L_0x00c2:
            if (r3 == 0) goto L_0x0124
            im.bclpbkiauv.messenger.MediaController r5 = im.bclpbkiauv.messenger.MediaController.getInstance()
            boolean r5 = r5.isPlayingMessage(r3)
            if (r5 == 0) goto L_0x00cf
            return r2
        L_0x00cf:
            im.bclpbkiauv.ui.components.HintView r5 = r0.noSoundHintView
            if (r5 == 0) goto L_0x00d6
            r5.hide()
        L_0x00d6:
            im.bclpbkiauv.ui.components.HintView r5 = r0.forwardHintView
            if (r5 == 0) goto L_0x00dd
            r5.hide()
        L_0x00dd:
            boolean r5 = r3.isRoundVideo()
            if (r5 == 0) goto L_0x00fb
            im.bclpbkiauv.messenger.MediaController r5 = im.bclpbkiauv.messenger.MediaController.getInstance()
            boolean r5 = r5.playMessage(r3)
            im.bclpbkiauv.messenger.MediaController r6 = im.bclpbkiauv.messenger.MediaController.getInstance()
            if (r5 == 0) goto L_0x00f6
            java.util.ArrayList r7 = r0.createVoiceMessagesPlaylist(r3, r2)
            goto L_0x00f7
        L_0x00f6:
            r7 = 0
        L_0x00f7:
            r6.setVoiceMessagesPlaylist(r7, r2)
            return r5
        L_0x00fb:
            r2 = 1
            im.bclpbkiauv.messenger.SharedConfig.setNoSoundHintShowed(r2)
            float r2 = r4.getCurrentProgress()
            r3.audioProgress = r2
            int r2 = r4.getCurrentProgressMs()
            r3.audioProgressMs = r2
            r4.stop()
            boolean r2 = im.bclpbkiauv.ui.PhotoViewer.isPlayingMessageInPip(r3)
            if (r2 == 0) goto L_0x011b
            im.bclpbkiauv.ui.PhotoViewer r2 = im.bclpbkiauv.ui.PhotoViewer.getPipInstance()
            r2.destroyPhotoViewer()
        L_0x011b:
            im.bclpbkiauv.messenger.MediaController r2 = im.bclpbkiauv.messenger.MediaController.getInstance()
            boolean r2 = r2.playMessage(r3)
            return r2
        L_0x0124:
            return r2
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.maybePlayVisibleVideo():boolean");
    }

    public void onConfigurationChanged(Configuration newConfig) {
        MessageObject message;
        if (this.visibleDialog instanceof DatePickerDialog) {
            this.visibleDialog.dismiss();
        }
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            actionBarPopupWindow.dismiss();
        }
        if (AndroidUtilities.isTablet()) {
            return;
        }
        if (newConfig.orientation == 2) {
            if ((!PhotoViewer.hasInstance() || !PhotoViewer.getInstance().isVisible()) && (message = MediaController.getInstance().getPlayingMessageObject()) != null && message.isVideo()) {
                PhotoViewer.getInstance().setParentActivity(getParentActivity());
                getFileLoader().setLoadingVideoForPlayer(message.getDocument(), false);
                MediaController.getInstance().cleanupPlayer(true, true, false, true);
                if (PhotoViewer.getInstance().openPhoto(message, message.type != 0 ? this.dialog_id : 0, message.type != 0 ? this.mergeDialogId : 0, this.photoViewerProvider, false)) {
                    PhotoViewer.getInstance().setParentChatActivity(this);
                }
                HintView hintView = this.noSoundHintView;
                if (hintView != null) {
                    hintView.hide();
                }
                HintView hintView2 = this.forwardHintView;
                if (hintView2 != null) {
                    hintView2.hide();
                }
                HintView hintView3 = this.slowModeHint;
                if (hintView3 != null) {
                    hintView3.hide();
                }
                MediaController.getInstance().resetGoingToShowMessageObject();
            }
        } else if (PhotoViewer.hasInstance() && PhotoViewer.getInstance().isOpenedFullScreenVideo()) {
            PhotoViewer.getInstance().injectVideoPlayerToMediaController();
            PhotoViewer.getInstance().closePhoto(false, true);
        }
    }

    /* access modifiers changed from: private */
    public void createDeleteMessagesAlert(MessageObject finalSelectedObject, MessageObject.GroupedMessages selectedGroup) {
        createDeleteMessagesAlert(finalSelectedObject, selectedGroup, 1);
    }

    private void createDeleteMessagesAlert(MessageObject finalSelectedObject, MessageObject.GroupedMessages finalSelectedGroup, int loadParticipant) {
        AlertsCreator.createDeleteMessagesAlert(this, this.currentUser, this.currentChat, this.currentEncryptedChat, this.chatInfo, this.mergeDialogId, finalSelectedObject, this.selectedMessagesIds, finalSelectedGroup, this.inScheduleMode, loadParticipant, new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$createDeleteMessagesAlert$77$ChatActivity();
            }
        });
    }

    public /* synthetic */ void lambda$createDeleteMessagesAlert$77$ChatActivity() {
        hideActionMode();
        updatePinnedMessageView(true);
    }

    /* access modifiers changed from: private */
    public void hideActionMode() {
        if (this.actionBar.isActionModeShowed()) {
            if (this.actionBar != null) {
                this.actionBar.hideActionMode();
                this.actionBar.setBackButtonImage(R.mipmap.ic_back);
            }
            this.cantDeleteMessagesCount = 0;
            this.canEditMessagesCount = 0;
            this.cantForwardMessagesCount = 0;
            this.cantCopyMessageCount = 0;
            ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
            if (chatActivityEnterView2 != null) {
                EditTextCaption editTextCaption = chatActivityEnterView2.getEditField();
                editTextCaption.requestFocus();
                editTextCaption.setAllowDrawCursor(true);
            }
        }
    }

    /* access modifiers changed from: private */
    public void createMenu(View v, boolean single, boolean listView, float x, float y) {
        createMenu(v, single, listView, x, y, true);
    }

    private CharSequence getMessageCaption(MessageObject messageObject, MessageObject.GroupedMessages group) {
        if (messageObject.caption != null) {
            return messageObject.caption;
        }
        if (group == null) {
            return null;
        }
        CharSequence caption = null;
        int N = group.messages.size();
        for (int a = 0; a < N; a++) {
            MessageObject message = group.messages.get(a);
            if (message.caption != null) {
                if (caption != null) {
                    return null;
                }
                caption = message.caption;
            }
        }
        return caption;
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:277:0x06a3  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void createMenu(android.view.View r34, boolean r35, boolean r36, float r37, float r38, boolean r39) {
        /*
            r33 = this;
            r7 = r33
            r8 = r34
            im.bclpbkiauv.ui.actionbar.ActionBar r0 = r7.actionBar
            boolean r0 = r0.isActionModeShowed()
            if (r0 == 0) goto L_0x000d
            return
        L_0x000d:
            r0 = 0
            boolean r1 = r8 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r1 == 0) goto L_0x001b
            r1 = r8
            im.bclpbkiauv.ui.cells.ChatMessageCell r1 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r1
            im.bclpbkiauv.messenger.MessageObject r0 = r1.getMessageObject()
            r9 = r0
            goto L_0x0029
        L_0x001b:
            boolean r1 = r8 instanceof im.bclpbkiauv.ui.cells.ChatActionCell
            if (r1 == 0) goto L_0x0028
            r1 = r8
            im.bclpbkiauv.ui.cells.ChatActionCell r1 = (im.bclpbkiauv.ui.cells.ChatActionCell) r1
            im.bclpbkiauv.messenger.MessageObject r0 = r1.getMessageObject()
            r9 = r0
            goto L_0x0029
        L_0x0028:
            r9 = r0
        L_0x0029:
            if (r9 != 0) goto L_0x002c
            return
        L_0x002c:
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r9.messageOwner
            if (r0 == 0) goto L_0x003f
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r0 = r0.action
            if (r0 == 0) goto L_0x003f
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r0 = r0.action
            boolean r0 = r0 instanceof im.bclpbkiauv.tgnet.TLRPCRedpacket.CL_messagesActionReceivedRpkTransfer
            if (r0 == 0) goto L_0x003f
            return
        L_0x003f:
            int r10 = r7.getMessageType(r9)
            if (r35 == 0) goto L_0x005e
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r0 = r0.action
            boolean r0 = r0 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionPinMessage
            if (r0 == 0) goto L_0x005e
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r9.messageOwner
            int r1 = r0.reply_to_msg_id
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r9.messageOwner
            int r2 = r0.id
            r3 = 1
            r4 = 0
            r5 = 0
            r0 = r33
            r0.scrollToMessageId(r1, r2, r3, r4, r5)
            return
        L_0x005e:
            r0 = 0
            r7.selectedObject = r0
            r7.selectedObjectGroup = r0
            r7.forwardingMessage = r0
            r7.forwardingMessageGroup = r0
            r7.selectedObjectToEditCaption = r0
            r1 = 1
        L_0x006a:
            if (r1 < 0) goto L_0x0084
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r2 = r7.selectedMessagesCanCopyIds
            r2 = r2[r1]
            r2.clear()
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r2 = r7.selectedMessagesCanStarIds
            r2 = r2[r1]
            r2.clear()
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r2 = r7.selectedMessagesIds
            r2 = r2[r1]
            r2.clear()
            int r1 = r1 + -1
            goto L_0x006a
        L_0x0084:
            r33.hideActionMode()
            r11 = 1
            r7.updatePinnedMessageView(r11)
            if (r39 == 0) goto L_0x0093
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = r7.getValidGroupedMessage(r9)
            r12 = r1
            goto L_0x0095
        L_0x0093:
            r1 = 0
            r12 = r1
        L_0x0095:
            r1 = 1
            boolean r2 = r7.inScheduleMode
            if (r2 == 0) goto L_0x009c
            r2 = 0
            goto L_0x00c4
        L_0x009c:
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r7.currentChat
            if (r2 == 0) goto L_0x00b6
            long r2 = r9.getDialogId()
            long r4 = r7.mergeDialogId
            int r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r6 == 0) goto L_0x00b4
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r7.currentChat
            boolean r2 = im.bclpbkiauv.messenger.ChatObject.canPinMessages(r2)
            if (r2 == 0) goto L_0x00b4
            r2 = 1
            goto L_0x00b5
        L_0x00b4:
            r2 = 0
        L_0x00b5:
            goto L_0x00c4
        L_0x00b6:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r2 = r7.currentEncryptedChat
            if (r2 != 0) goto L_0x00c3
            im.bclpbkiauv.tgnet.TLRPC$UserFull r2 = r7.userInfo
            if (r2 == 0) goto L_0x00c1
            boolean r2 = r2.can_pin_message
            goto L_0x00c4
        L_0x00c1:
            r2 = 0
            goto L_0x00c4
        L_0x00c3:
            r2 = 0
        L_0x00c4:
            if (r2 == 0) goto L_0x00dc
            int r3 = r9.getId()
            if (r3 <= 0) goto L_0x00dc
            im.bclpbkiauv.tgnet.TLRPC$Message r3 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r3 = r3.action
            if (r3 == 0) goto L_0x00da
            im.bclpbkiauv.tgnet.TLRPC$Message r3 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r3 = r3.action
            boolean r3 = r3 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionEmpty
            if (r3 == 0) goto L_0x00dc
        L_0x00da:
            r3 = 1
            goto L_0x00dd
        L_0x00dc:
            r3 = 0
        L_0x00dd:
            r14 = r3
            long r2 = r9.getDialogId()
            long r4 = r7.mergeDialogId
            int r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r6 == 0) goto L_0x0104
            if (r14 == 0) goto L_0x0104
            im.bclpbkiauv.tgnet.TLRPC$ChatFull r2 = r7.chatInfo
            if (r2 == 0) goto L_0x00f6
            int r2 = r2.pinned_msg_id
            int r3 = r9.getId()
            if (r2 == r3) goto L_0x0102
        L_0x00f6:
            im.bclpbkiauv.tgnet.TLRPC$UserFull r2 = r7.userInfo
            if (r2 == 0) goto L_0x0104
            int r2 = r2.pinned_msg_id
            int r3 = r9.getId()
            if (r2 != r3) goto L_0x0104
        L_0x0102:
            r2 = 1
            goto L_0x0105
        L_0x0104:
            r2 = 0
        L_0x0105:
            r15 = r2
            im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r7.currentChat
            boolean r2 = r9.canEditMessage(r2)
            if (r2 == 0) goto L_0x0122
            im.bclpbkiauv.ui.components.ChatActivityEnterView r2 = r7.chatActivityEnterView
            boolean r2 = r2.hasAudioToSend()
            if (r2 != 0) goto L_0x0122
            long r2 = r9.getDialogId()
            long r4 = r7.mergeDialogId
            int r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r6 == 0) goto L_0x0122
            r2 = 1
            goto L_0x0123
        L_0x0122:
            r2 = 0
        L_0x0123:
            r6 = 2
            if (r2 == 0) goto L_0x015c
            if (r12 == 0) goto L_0x015c
            r3 = 0
            r4 = 0
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r5 = r12.messages
            int r5 = r5.size()
        L_0x0130:
            if (r4 >= r5) goto L_0x0154
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r0 = r12.messages
            java.lang.Object r0 = r0.get(r4)
            im.bclpbkiauv.messenger.MessageObject r0 = (im.bclpbkiauv.messenger.MessageObject) r0
            if (r4 == 0) goto L_0x0144
            java.lang.CharSequence r13 = r0.caption
            boolean r13 = android.text.TextUtils.isEmpty(r13)
            if (r13 != 0) goto L_0x0150
        L_0x0144:
            r7.selectedObjectToEditCaption = r0
            java.lang.CharSequence r13 = r0.caption
            boolean r13 = android.text.TextUtils.isEmpty(r13)
            if (r13 != 0) goto L_0x0150
            int r3 = r3 + 1
        L_0x0150:
            int r4 = r4 + 1
            r0 = 0
            goto L_0x0130
        L_0x0154:
            if (r3 >= r6) goto L_0x0158
            r0 = 1
            goto L_0x0159
        L_0x0158:
            r0 = 0
        L_0x0159:
            r2 = r0
            r13 = r2
            goto L_0x015d
        L_0x015c:
            r13 = r2
        L_0x015d:
            boolean r0 = r7.inScheduleMode
            if (r0 != 0) goto L_0x01c9
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r7.currentEncryptedChat
            if (r0 == 0) goto L_0x016f
            int r0 = r0.layer
            int r0 = im.bclpbkiauv.messenger.AndroidUtilities.getPeerLayerVersion(r0)
            r2 = 46
            if (r0 < r2) goto L_0x01c9
        L_0x016f:
            if (r10 != r11) goto L_0x0181
            long r2 = r9.getDialogId()
            long r4 = r7.mergeDialogId
            int r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r0 == 0) goto L_0x01c9
            boolean r0 = r9.needDrawBluredPreview()
            if (r0 != 0) goto L_0x01c9
        L_0x0181:
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r0 = r0.action
            boolean r0 = r0 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionSecureValuesSent
            if (r0 != 0) goto L_0x01c9
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r7.currentEncryptedChat
            if (r0 != 0) goto L_0x0193
            int r0 = r9.getId()
            if (r0 < 0) goto L_0x01c9
        L_0x0193:
            android.widget.FrameLayout r0 = r7.bottomOverlayChat
            if (r0 == 0) goto L_0x019d
            int r0 = r0.getVisibility()
            if (r0 == 0) goto L_0x01c9
        L_0x019d:
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x01c6
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.isNotInChat(r0)
            if (r0 != 0) goto L_0x01c9
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x01bd
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.canPost(r0)
            if (r0 != 0) goto L_0x01bd
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x01c9
        L_0x01bd:
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.canSendMessages(r0)
            if (r0 != 0) goto L_0x01c6
            goto L_0x01c9
        L_0x01c6:
            r18 = r1
            goto L_0x01cc
        L_0x01c9:
            r1 = 0
            r18 = r1
        L_0x01cc:
            if (r35 != 0) goto L_0x03ce
            if (r10 < r6) goto L_0x03ce
            r0 = 20
            if (r10 != r0) goto L_0x01d8
            r11 = r36
            goto L_0x03d0
        L_0x01d8:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r7.chatActivityEnterView
            if (r0 == 0) goto L_0x01eb
            boolean r0 = r0.isRecordingAudioVideo()
            if (r0 != 0) goto L_0x01ea
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r7.chatActivityEnterView
            boolean r0 = r0.isRecordLocked()
            if (r0 == 0) goto L_0x01eb
        L_0x01ea:
            return
        L_0x01eb:
            im.bclpbkiauv.ui.actionbar.ActionBar r0 = r7.actionBar
            im.bclpbkiauv.ui.actionbar.ActionBarMenu r0 = r0.createActionMode()
            r1 = 12
            im.bclpbkiauv.ui.actionbar.ActionBarMenuItem r1 = r0.getItem(r1)
            if (r1 == 0) goto L_0x01fd
            r2 = 0
            r1.setVisibility(r2)
        L_0x01fd:
            java.lang.Boolean r2 = r33.isSysNotifyMessage()
            boolean r2 = r2.booleanValue()
            if (r2 == 0) goto L_0x020f
            android.widget.FrameLayout r2 = r7.bottomMessagesActionContainer
            r3 = 8
            r2.setVisibility(r3)
            goto L_0x0215
        L_0x020f:
            android.widget.FrameLayout r2 = r7.bottomMessagesActionContainer
            r3 = 0
            r2.setVisibility(r3)
        L_0x0215:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r2 = r7.chatActivityEnterView
            int r2 = r2.getMeasuredHeight()
            r3 = 1112276992(0x424c0000, float:51.0)
            int r3 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r3)
            int r2 = r2 - r3
            im.bclpbkiauv.ui.components.ChatActivityEnterView r3 = r7.chatActivityEnterView
            int r3 = r3.getVisibility()
            if (r3 != 0) goto L_0x02a5
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            im.bclpbkiauv.ui.components.ChatActivityEnterView r4 = r7.chatActivityEnterView
            r3.add(r4)
            android.widget.FrameLayout r4 = r7.mentionContainer
            if (r4 == 0) goto L_0x0243
            int r4 = r4.getVisibility()
            if (r4 != 0) goto L_0x0243
            android.widget.FrameLayout r4 = r7.mentionContainer
            r3.add(r4)
        L_0x0243:
            android.widget.FrameLayout r4 = r7.stickersPanel
            if (r4 == 0) goto L_0x0252
            int r4 = r4.getVisibility()
            if (r4 != 0) goto L_0x0252
            android.widget.FrameLayout r4 = r7.stickersPanel
            r3.add(r4)
        L_0x0252:
            im.bclpbkiauv.ui.actionbar.ActionBar r4 = r7.actionBar
            android.widget.FrameLayout r5 = r7.bottomMessagesActionContainer
            r21 = 0
            r6 = 0
            android.view.View[] r11 = new android.view.View[r6]
            java.lang.Object[] r6 = r3.toArray(r11)
            r22 = r6
            android.view.View[] r22 = (android.view.View[]) r22
            r6 = 3
            boolean[] r6 = new boolean[r6]
            r6 = {0, 1, 1} // fill-array
            im.bclpbkiauv.ui.components.RecyclerListView r11 = r7.chatListView
            r19 = r4
            r20 = r5
            r23 = r6
            r24 = r11
            r25 = r2
            r19.showActionMode(r20, r21, r22, r23, r24, r25)
            im.bclpbkiauv.ui.actionbar.Theme$ThemeInfo r4 = im.bclpbkiauv.ui.actionbar.Theme.getCurrentTheme()
            boolean r4 = r4.isDark()
            if (r4 != 0) goto L_0x028a
            im.bclpbkiauv.ui.actionbar.ActionBar r4 = r7.actionBar
            r5 = 2131230844(0x7f08007c, float:1.8077752E38)
            r4.setBackButtonImage(r5)
        L_0x028a:
            androidx.fragment.app.FragmentActivity r4 = r33.getParentActivity()
            if (r4 == 0) goto L_0x0299
            androidx.fragment.app.FragmentActivity r4 = r33.getParentActivity()
            im.bclpbkiauv.ui.LaunchActivity r4 = (im.bclpbkiauv.ui.LaunchActivity) r4
            r4.hideVisibleActionMode()
        L_0x0299:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r4 = r7.chatActivityEnterView
            im.bclpbkiauv.ui.components.EditTextCaption r4 = r4.getEditField()
            r5 = 0
            r4.setAllowDrawCursor(r5)
            goto L_0x034c
        L_0x02a5:
            android.widget.FrameLayout r3 = r7.bottomOverlayChat
            int r3 = r3.getVisibility()
            if (r3 != 0) goto L_0x02e4
            im.bclpbkiauv.ui.actionbar.ActionBar r3 = r7.actionBar
            android.widget.FrameLayout r4 = r7.bottomMessagesActionContainer
            r21 = 0
            r5 = 1
            android.view.View[] r6 = new android.view.View[r5]
            android.widget.FrameLayout r11 = r7.bottomOverlayChat
            r16 = 0
            r6[r16] = r11
            boolean[] r11 = new boolean[r5]
            r11[r16] = r5
            im.bclpbkiauv.ui.components.RecyclerListView r5 = r7.chatListView
            r19 = r3
            r20 = r4
            r22 = r6
            r23 = r11
            r24 = r5
            r25 = r2
            r19.showActionMode(r20, r21, r22, r23, r24, r25)
            im.bclpbkiauv.ui.actionbar.Theme$ThemeInfo r3 = im.bclpbkiauv.ui.actionbar.Theme.getCurrentTheme()
            boolean r3 = r3.isDark()
            if (r3 != 0) goto L_0x034c
            im.bclpbkiauv.ui.actionbar.ActionBar r3 = r7.actionBar
            r4 = 2131230844(0x7f08007c, float:1.8077752E38)
            r3.setBackButtonImage(r4)
            goto L_0x034c
        L_0x02e4:
            android.widget.FrameLayout r3 = r7.searchContainer
            int r3 = r3.getVisibility()
            if (r3 != 0) goto L_0x0323
            im.bclpbkiauv.ui.actionbar.ActionBar r3 = r7.actionBar
            android.widget.FrameLayout r4 = r7.bottomMessagesActionContainer
            r21 = 0
            r5 = 1
            android.view.View[] r6 = new android.view.View[r5]
            android.widget.FrameLayout r11 = r7.searchContainer
            r16 = 0
            r6[r16] = r11
            boolean[] r11 = new boolean[r5]
            r11[r16] = r5
            im.bclpbkiauv.ui.components.RecyclerListView r5 = r7.chatListView
            r19 = r3
            r20 = r4
            r22 = r6
            r23 = r11
            r24 = r5
            r25 = r2
            r19.showActionMode(r20, r21, r22, r23, r24, r25)
            im.bclpbkiauv.ui.actionbar.Theme$ThemeInfo r3 = im.bclpbkiauv.ui.actionbar.Theme.getCurrentTheme()
            boolean r3 = r3.isDark()
            if (r3 != 0) goto L_0x034c
            im.bclpbkiauv.ui.actionbar.ActionBar r3 = r7.actionBar
            r4 = 2131230844(0x7f08007c, float:1.8077752E38)
            r3.setBackButtonImage(r4)
            goto L_0x034c
        L_0x0323:
            im.bclpbkiauv.ui.actionbar.ActionBar r3 = r7.actionBar
            android.widget.FrameLayout r4 = r7.bottomMessagesActionContainer
            r21 = 0
            r22 = 0
            r23 = 0
            im.bclpbkiauv.ui.components.RecyclerListView r5 = r7.chatListView
            r19 = r3
            r20 = r4
            r24 = r5
            r25 = r2
            r19.showActionMode(r20, r21, r22, r23, r24, r25)
            im.bclpbkiauv.ui.actionbar.Theme$ThemeInfo r3 = im.bclpbkiauv.ui.actionbar.Theme.getCurrentTheme()
            boolean r3 = r3.isDark()
            if (r3 != 0) goto L_0x034c
            im.bclpbkiauv.ui.actionbar.ActionBar r3 = r7.actionBar
            r4 = 2131230844(0x7f08007c, float:1.8077752E38)
            r3.setBackButtonImage(r4)
        L_0x034c:
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow r3 = r7.scrimPopupWindow
            if (r3 == 0) goto L_0x0353
            r3.dismiss()
        L_0x0353:
            androidx.recyclerview.widget.GridLayoutManagerFixed r3 = r7.chatLayoutManager
            r4 = 1
            r3.setCanScrollVertically(r4)
            r7.updatePinnedMessageView(r4)
            android.animation.AnimatorSet r3 = new android.animation.AnimatorSet
            r3.<init>()
            java.util.ArrayList r4 = new java.util.ArrayList
            r4.<init>()
            r5 = 0
        L_0x0367:
            java.util.ArrayList<android.view.View> r6 = r7.actionModeViews
            int r6 = r6.size()
            if (r5 >= r6) goto L_0x039d
            java.util.ArrayList<android.view.View> r6 = r7.actionModeViews
            java.lang.Object r6 = r6.get(r5)
            android.view.View r6 = (android.view.View) r6
            int r11 = im.bclpbkiauv.ui.actionbar.ActionBar.getCurrentActionBarHeight()
            r16 = r0
            r0 = 2
            int r11 = r11 / r0
            float r11 = (float) r11
            r6.setPivotY(r11)
            im.bclpbkiauv.messenger.AndroidUtilities.clearDrawableAnimation(r6)
            android.util.Property r11 = android.view.View.SCALE_Y
            r19 = r1
            float[] r1 = new float[r0]
            r1 = {1036831949, 1065353216} // fill-array
            android.animation.ObjectAnimator r0 = android.animation.ObjectAnimator.ofFloat(r6, r11, r1)
            r4.add(r0)
            int r5 = r5 + 1
            r0 = r16
            r1 = r19
            goto L_0x0367
        L_0x039d:
            r16 = r0
            r19 = r1
            r3.playTogether(r4)
            r0 = 250(0xfa, double:1.235E-321)
            r3.setDuration(r0)
            r3.start()
            r11 = r36
            r7.addToSelectedMessages(r9, r11)
            im.bclpbkiauv.ui.components.NumberTextView r0 = r7.selectedMessagesCountTextView
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r1 = r7.selectedMessagesIds
            r5 = 0
            r1 = r1[r5]
            int r1 = r1.size()
            android.util.SparseArray<im.bclpbkiauv.messenger.MessageObject>[] r6 = r7.selectedMessagesIds
            r17 = 1
            r6 = r6[r17]
            int r6 = r6.size()
            int r1 = r1 + r6
            r0.setNumber(r1, r5)
            r33.updateVisibleRows()
            return
        L_0x03ce:
            r11 = r36
        L_0x03d0:
            androidx.fragment.app.FragmentActivity r0 = r33.getParentActivity()
            if (r0 != 0) goto L_0x03d7
            return
        L_0x03d7:
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r6 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r5 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r4 = r0
            if (r10 >= 0) goto L_0x0408
            r0 = -1
            if (r10 != r0) goto L_0x0401
            if (r35 == 0) goto L_0x0401
            boolean r0 = r9.isSending()
            if (r0 != 0) goto L_0x03fc
            boolean r0 = r9.isEditing()
            if (r0 == 0) goto L_0x0401
        L_0x03fc:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r7.currentEncryptedChat
            if (r0 != 0) goto L_0x0401
            goto L_0x0408
        L_0x0401:
            r25 = r12
            r30 = r13
            r13 = 2
            goto L_0x11a0
        L_0x0408:
            r7.selectedObject = r9
            r7.selectedObjectGroup = r12
            r0 = -1
            r2 = 2131690734(0x7f0f04ee, float:1.901052E38)
            java.lang.String r3 = "Copy"
            r19 = 2131231302(0x7f080246, float:1.8078681E38)
            if (r10 != r0) goto L_0x0462
            int r0 = r9.type
            if (r0 == 0) goto L_0x042d
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isAnimatedEmoji()
            if (r0 != 0) goto L_0x042d
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = r7.selectedObjectGroup
            java.lang.CharSequence r0 = r7.getMessageCaption(r0, r1)
            if (r0 == 0) goto L_0x0443
        L_0x042d:
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_COPY1
            r4.add(r0)
            r0 = 2131231301(0x7f080245, float:1.807868E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x0443:
            r0 = 2131690324(0x7f0f0354, float:1.9009688E38)
            java.lang.String r1 = "CancelSending"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_CANCEL_SENDING
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r19)
            r6.add(r0)
            r25 = r12
            r30 = r13
            r13 = 2
            goto L_0x11a0
        L_0x0462:
            r0 = 2131690831(0x7f0f054f, float:1.9010717E38)
            java.lang.String r1 = "Delete"
            if (r10 != 0) goto L_0x049e
            r2 = 2131693527(0x7f0f0fd7, float:1.9016185E38)
            java.lang.String r3 = "Retry"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r5.add(r2)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r2 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SEND_RETRY
            r4.add(r2)
            r2 = 2131231333(0x7f080265, float:1.8078744E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r6.add(r2)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DELETE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r19)
            r6.add(r0)
            r25 = r12
            r30 = r13
            r13 = 2
            goto L_0x11a0
        L_0x049e:
            java.lang.String r2 = "Reply"
            r0 = 1
            if (r10 != r0) goto L_0x05c2
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x057a
            if (r18 == 0) goto L_0x04c2
            r0 = 2131693448(0x7f0f0f88, float:1.9016025E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_REPLAY
            r4.add(r0)
            r0 = 2131231331(0x7f080263, float:1.807874E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x04c2:
            if (r15 == 0) goto L_0x04e0
            r0 = 2131694490(0x7f0f139a, float:1.9018138E38)
            java.lang.String r2 = "UnpinMessage"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_UNPIN
            r4.add(r0)
            r0 = 2131231352(0x7f080278, float:1.8078783E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x04fd
        L_0x04e0:
            if (r14 == 0) goto L_0x04fd
            r0 = 2131693061(0x7f0f0e05, float:1.901524E38)
            java.lang.String r2 = "PinMessage"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_PIN
            r4.add(r0)
            r0 = 2131231329(0x7f080261, float:1.8078736E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x04fd:
            r0 = 2131690991(0x7f0f05ef, float:1.9011041E38)
            java.lang.String r2 = "Edit"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_EDIT
            r4.add(r0)
            r0 = 2131231304(0x7f080248, float:1.8078685E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            int r0 = r0.contentType
            if (r0 != 0) goto L_0x055d
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isMediaEmptyWebpage()
            if (r0 != 0) goto L_0x055d
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            int r0 = r0.getId()
            if (r0 <= 0) goto L_0x055d
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isOut()
            if (r0 != 0) goto L_0x055d
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 != 0) goto L_0x0542
            im.bclpbkiauv.tgnet.TLRPC$User r0 = r7.currentUser
            if (r0 == 0) goto L_0x055d
            boolean r0 = r0.bot
            if (r0 == 0) goto L_0x055d
        L_0x0542:
            r0 = 2131693451(0x7f0f0f8b, float:1.901603E38)
            java.lang.String r2 = "ReportChat"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_REPORT
            r4.add(r0)
            r0 = 2131231332(0x7f080264, float:1.8078742E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x055d:
            r0 = 2131690831(0x7f0f054f, float:1.9010717E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DELETE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r19)
            r6.add(r0)
            r25 = r12
            r30 = r13
            r13 = 2
            goto L_0x11a0
        L_0x057a:
            int r0 = r9.getId()
            if (r0 <= 0) goto L_0x05a5
            if (r18 == 0) goto L_0x05a5
            java.lang.Boolean r0 = r33.isSysNotifyMessage()
            boolean r0 = r0.booleanValue()
            if (r0 != 0) goto L_0x05a5
            r0 = 2131693448(0x7f0f0f88, float:1.9016025E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_REPLAY
            r4.add(r0)
            r0 = 2131231331(0x7f080263, float:1.807874E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x05a5:
            r0 = 2131690831(0x7f0f054f, float:1.9010717E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DELETE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r19)
            r6.add(r0)
            r25 = r12
            r30 = r13
            r13 = 2
            goto L_0x11a0
        L_0x05c2:
            r0 = 20
            if (r10 != r0) goto L_0x0617
            r0 = 2131693527(0x7f0f0fd7, float:1.9016185E38)
            java.lang.String r2 = "Retry"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SEND_RETRY
            r4.add(r0)
            r0 = 2131231333(0x7f080265, float:1.8078744E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            r0 = 2131690734(0x7f0f04ee, float:1.901052E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_COPY1
            r4.add(r0)
            r0 = 2131231301(0x7f080245, float:1.807868E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            r0 = 2131690831(0x7f0f054f, float:1.9010717E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DELETE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r19)
            r6.add(r0)
            r25 = r12
            r30 = r13
            r13 = 2
            goto L_0x11a0
        L_0x0617:
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r7.currentEncryptedChat
            java.lang.String r11 = "SaveToDownloads"
            r24 = 2131231307(0x7f08024b, float:1.8078691E38)
            r25 = r12
            java.lang.String r12 = "SaveToGallery"
            r26 = 2131231303(0x7f080247, float:1.8078683E38)
            r27 = 33554432(0x2000000, float:9.403955E-38)
            r28 = 2131231344(0x7f080270, float:1.8078766E38)
            java.lang.String r8 = "ShareFile"
            if (r0 != 0) goto L_0x0ed7
            boolean r0 = r7.inScheduleMode
            if (r0 == 0) goto L_0x0650
            r0 = 2131692008(0x7f0f09e8, float:1.9013104E38)
            r29 = r1
            java.lang.String r1 = "MessageScheduleSend"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SEND_NOW
            r4.add(r0)
            r0 = 2131231407(0x7f0802af, float:1.8078894E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x0652
        L_0x0650:
            r29 = r1
        L_0x0652:
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r0.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r0 = r0.action
            boolean r0 = r0 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionPhoneCall
            if (r0 == 0) goto L_0x06bf
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r9.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r0 = r0.action
            im.bclpbkiauv.tgnet.TLRPC$TL_messageActionPhoneCall r0 = (im.bclpbkiauv.tgnet.TLRPC.TL_messageActionPhoneCall) r0
            im.bclpbkiauv.tgnet.TLRPC$PhoneCallDiscardReason r1 = r0.reason
            boolean r1 = r1 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_phoneCallDiscardReasonMissed
            if (r1 != 0) goto L_0x0672
            im.bclpbkiauv.tgnet.TLRPC$PhoneCallDiscardReason r1 = r0.reason
            boolean r1 = r1 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_phoneCallDiscardReasonBusy
            if (r1 == 0) goto L_0x066f
            goto L_0x0672
        L_0x066f:
            r30 = r13
            goto L_0x0682
        L_0x0672:
            boolean r1 = r9.isOutOwner()
            if (r1 != 0) goto L_0x0680
            r1 = 2131690284(0x7f0f032c, float:1.9009607E38)
            r30 = r13
            java.lang.String r13 = "CallBack"
            goto L_0x0687
        L_0x0680:
            r30 = r13
        L_0x0682:
            r1 = 2131690283(0x7f0f032b, float:1.9009605E38)
            java.lang.String r13 = "CallAgain"
        L_0x0687:
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r13, r1)
            r5.add(r1)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r1 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.CALL_BACK_OR_CALL_AGAIN
            r4.add(r1)
            r1 = 2131231295(0x7f08023f, float:1.8078667E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r6.add(r1)
            boolean r1 = im.bclpbkiauv.ui.components.voip.VoIPHelper.canRateCall(r0)
            if (r1 == 0) goto L_0x06c1
            r1 = 2131690292(0x7f0f0334, float:1.9009623E38)
            java.lang.String r13 = "CallMessageReportProblem"
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r13, r1)
            r5.add(r1)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r1 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.CALL1
            r4.add(r1)
            r1 = 2131231295(0x7f08023f, float:1.8078667E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r6.add(r1)
            goto L_0x06c1
        L_0x06bf:
            r30 = r13
        L_0x06c1:
            if (r18 == 0) goto L_0x06e8
            int r0 = r9.type
            r1 = 101(0x65, float:1.42E-43)
            if (r0 == r1) goto L_0x06e8
            int r0 = r9.type
            r1 = 102(0x66, float:1.43E-43)
            if (r0 == r1) goto L_0x06e8
            r0 = 2131693448(0x7f0f0f88, float:1.9016025E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_REPLAY
            r4.add(r0)
            r0 = 2131231331(0x7f080263, float:1.807874E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x06e8:
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            int r0 = r0.type
            if (r0 == 0) goto L_0x0700
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isAnimatedEmoji()
            if (r0 != 0) goto L_0x0700
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = r7.selectedObjectGroup
            java.lang.CharSequence r0 = r7.getMessageCaption(r0, r1)
            if (r0 == 0) goto L_0x0719
        L_0x0700:
            r0 = 2131690734(0x7f0f04ee, float:1.901052E38)
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r0)
            r5.add(r1)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_COPY1
            r4.add(r0)
            r0 = 2131231301(0x7f080245, float:1.807868E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r0)
            r6.add(r1)
        L_0x0719:
            boolean r0 = r7.inScheduleMode
            if (r0 != 0) goto L_0x072a
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x072a
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            r0.getDialogId()
        L_0x072a:
            r13 = 2
            if (r10 != r13) goto L_0x07b9
            boolean r0 = r7.inScheduleMode
            if (r0 != 0) goto L_0x0d4a
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            int r0 = r0.type
            r1 = 17
            if (r0 != r1) goto L_0x0d4a
            boolean r0 = r9.isPollClosed()
            if (r0 != 0) goto L_0x0d4a
            boolean r0 = r9.isVoted()
            if (r0 == 0) goto L_0x0760
            r0 = 2131694499(0x7f0f13a3, float:1.9018156E38)
            java.lang.String r1 = "Unvote"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.POLL_CANCEL
            r4.add(r0)
            r0 = 2131231353(0x7f080279, float:1.8078785E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x0760:
            boolean r0 = r9.isForwarded()
            if (r0 != 0) goto L_0x0d4a
            boolean r0 = r9.isOut()
            if (r0 == 0) goto L_0x077a
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x079c
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = r0.megagroup
            if (r0 != 0) goto L_0x079c
        L_0x077a:
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.isChannel(r0)
            if (r0 == 0) goto L_0x0d4a
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = r0.megagroup
            if (r0 != 0) goto L_0x0d4a
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = r0.creator
            if (r0 != 0) goto L_0x079c
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            im.bclpbkiauv.tgnet.TLRPC$TL_chatAdminRights r0 = r0.admin_rights
            if (r0 == 0) goto L_0x0d4a
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            im.bclpbkiauv.tgnet.TLRPC$TL_chatAdminRights r0 = r0.admin_rights
            boolean r0 = r0.edit_messages
            if (r0 == 0) goto L_0x0d4a
        L_0x079c:
            r0 = 2131694063(0x7f0f11ef, float:1.9017272E38)
            java.lang.String r1 = "StopPoll"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.POLL_STOP
            r4.add(r0)
            r0 = 2131231330(0x7f080262, float:1.8078738E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x0d4a
        L_0x07b9:
            r0 = 3
            if (r10 != r0) goto L_0x07f3
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r0.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r0 = r0.media
            boolean r0 = r0 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageMediaWebPage
            if (r0 == 0) goto L_0x0d4a
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r0.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r0 = r0.media
            im.bclpbkiauv.tgnet.TLRPC$WebPage r0 = r0.webpage
            im.bclpbkiauv.tgnet.TLRPC$Document r0 = r0.document
            boolean r0 = im.bclpbkiauv.messenger.MessageObject.isNewGifDocument((im.bclpbkiauv.tgnet.TLRPC.Document) r0)
            if (r0 == 0) goto L_0x0d4a
            r0 = 2131693689(0x7f0f1079, float:1.9016513E38)
            java.lang.String r1 = "SaveToGIFs"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.GIF_SAVE
            r4.add(r0)
            r0 = 2131231308(0x7f08024c, float:1.8078693E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x0d4a
        L_0x07f3:
            r0 = 4
            if (r10 != r0) goto L_0x0a18
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isVideo()
            if (r0 == 0) goto L_0x087c
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.needDrawBluredPreview()
            if (r0 != 0) goto L_0x0d4a
            r0 = 2131693690(0x7f0f107a, float:1.9016515E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r12, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.PIC_SAVE_TO_GALLERY1
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r24)
            r6.add(r0)
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x0864
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x0864
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            int r0 = r0.flags
            r0 = r0 & r27
            if (r0 == 0) goto L_0x084c
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r0)
            if (r0 == 0) goto L_0x0d4a
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x084c:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0864:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x087c:
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isMusic()
            if (r0 == 0) goto L_0x08fc
            r0 = 2131693692(0x7f0f107c, float:1.901652E38)
            java.lang.String r1 = "SaveToMusic"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DOWNLOAD
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r26)
            r6.add(r0)
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x08e4
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x08e4
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            int r0 = r0.flags
            r0 = r0 & r27
            if (r0 == 0) goto L_0x08cc
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r0)
            if (r0 == 0) goto L_0x0d4a
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x08cc:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x08e4:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x08fc:
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r0 = r0.getDocument()
            if (r0 == 0) goto L_0x09cd
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r0 = r0.getDocument()
            boolean r0 = im.bclpbkiauv.messenger.MessageObject.isNewGifDocument((im.bclpbkiauv.tgnet.TLRPC.Document) r0)
            if (r0 == 0) goto L_0x0957
            im.bclpbkiauv.messenger.MediaDataController r0 = r33.getMediaDataController()
            im.bclpbkiauv.messenger.MessageObject r1 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r1 = r1.getDocument()
            boolean r0 = r0.hasRecentGifNoChangeINdex(r1)
            if (r0 == 0) goto L_0x093c
            r0 = 2131693429(0x7f0f0f75, float:1.9015986E38)
            java.lang.String r1 = "RemoveFromGIFs"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.GIF_REMOVE
            r4.add(r0)
            r0 = 2131231308(0x7f08024c, float:1.8078693E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x0957
        L_0x093c:
            r0 = 2131693689(0x7f0f1079, float:1.9016513E38)
            java.lang.String r1 = "SaveToGIFs"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.GIF_SAVE
            r4.add(r0)
            r0 = 2131231308(0x7f08024c, float:1.8078693E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x0957:
            r0 = 2131693688(0x7f0f1078, float:1.9016511E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r11, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DOWNLOAD
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r26)
            r6.add(r0)
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x09b5
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x09b5
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            int r0 = r0.flags
            r0 = r0 & r27
            if (r0 == 0) goto L_0x099d
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r0)
            if (r0 == 0) goto L_0x0d4a
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x099d:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x09b5:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x09cd:
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.needDrawBluredPreview()
            if (r0 != 0) goto L_0x09eb
            r0 = 2131693690(0x7f0f107a, float:1.9016515E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r12, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.PIC_SAVE_TO_GALLERY1
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r24)
            r6.add(r0)
        L_0x09eb:
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r9.messageOwner
            java.io.File r0 = im.bclpbkiauv.messenger.FileLoader.getPathToMessage(r0)
            java.lang.String r0 = r0.toString()
            java.lang.String r1 = com.king.zxing.util.CodeUtils.parseCode(r0)
            if (r1 == 0) goto L_0x0a16
            r2 = 2131692594(0x7f0f0c32, float:1.9014293E38)
            java.lang.String r3 = "ParseQRCode"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r5.add(r2)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r2 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.QR_CODE_PARSE
            r4.add(r2)
            r2 = 2131558469(0x7f0d0045, float:1.8742255E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r6.add(r2)
        L_0x0a16:
            goto L_0x0d4a
        L_0x0a18:
            r0 = 5
            if (r10 != r0) goto L_0x0aac
            r0 = 2131689849(0x7f0f0179, float:1.9008725E38)
            java.lang.String r1 = "ApplyLocalizationFile"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.LANGUAGE_OR_THEME
            r4.add(r0)
            r0 = 2131231314(0x7f080252, float:1.8078706E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            r0 = 2131693688(0x7f0f1078, float:1.9016511E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r11, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DOWNLOAD
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r26)
            r6.add(r0)
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x0a94
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x0a94
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            int r0 = r0.flags
            r0 = r0 & r27
            if (r0 == 0) goto L_0x0a7c
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r0)
            if (r0 == 0) goto L_0x0d4a
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0a7c:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0a94:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0aac:
            r0 = 10
            if (r10 != r0) goto L_0x0b41
            r0 = 2131689853(0x7f0f017d, float:1.9008733E38)
            java.lang.String r1 = "ApplyThemeFile"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.LANGUAGE_OR_THEME
            r4.add(r0)
            r0 = 2131231347(0x7f080273, float:1.8078772E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            r0 = 2131693688(0x7f0f1078, float:1.9016511E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r11, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DOWNLOAD
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r26)
            r6.add(r0)
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x0b29
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x0b29
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            int r0 = r0.flags
            r0 = r0 & r27
            if (r0 == 0) goto L_0x0b11
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r0)
            if (r0 == 0) goto L_0x0d4a
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0b11:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0b29:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0b41:
            r0 = 6
            if (r10 != r0) goto L_0x0bd0
            r0 = 2131693690(0x7f0f107a, float:1.9016515E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r12, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.PIC_SAVE_TO_GALLERY2
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r24)
            r6.add(r0)
            r0 = 2131693688(0x7f0f1078, float:1.9016511E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r11, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DOWNLOAD
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r26)
            r6.add(r0)
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x0bb8
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x0bb8
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            int r0 = r0.flags
            r0 = r0 & r27
            if (r0 == 0) goto L_0x0ba0
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r0)
            if (r0 == 0) goto L_0x0d4a
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0ba0:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0bb8:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0bd0:
            r0 = 7
            if (r10 != r0) goto L_0x0c67
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isMask()
            if (r0 == 0) goto L_0x0bf8
            r0 = 2131689711(0x7f0f00ef, float:1.9008445E38)
            java.lang.String r1 = "AddToMasks"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.STICKER_OR_MASKS
            r4.add(r0)
            r0 = 2131231346(0x7f080272, float:1.807877E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0bf8:
            r0 = 2131689712(0x7f0f00f0, float:1.9008447E38)
            java.lang.String r1 = "AddToStickers"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.STICKER_OR_MASKS
            r4.add(r0)
            r0 = 2131231346(0x7f080272, float:1.807877E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            im.bclpbkiauv.messenger.MediaDataController r0 = r33.getMediaDataController()
            im.bclpbkiauv.messenger.MessageObject r1 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r1 = r1.getDocument()
            boolean r0 = r0.isStickerInFavorites(r1)
            if (r0 != 0) goto L_0x0c4a
            im.bclpbkiauv.messenger.MediaDataController r0 = r33.getMediaDataController()
            boolean r0 = r0.canAddStickerToFavorites()
            if (r0 == 0) goto L_0x0d4a
            r0 = 2131689710(0x7f0f00ee, float:1.9008443E38)
            java.lang.String r1 = "AddToFavorites"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_FAVE_ADD
            r4.add(r0)
            r0 = 2131231305(0x7f080249, float:1.8078687E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0c4a:
            r0 = 2131690852(0x7f0f0564, float:1.901076E38)
            java.lang.String r1 = "DeleteFromFavorites"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_FAVE_REMOVE
            r4.add(r0)
            r0 = 2131231350(0x7f080276, float:1.8078779E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0c67:
            r0 = 8
            if (r10 != r0) goto L_0x0cfd
            im.bclpbkiauv.messenger.MessagesController r0 = r33.getMessagesController()
            im.bclpbkiauv.messenger.MessageObject r1 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r1.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r1 = r1.media
            int r1 = r1.user_id
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            im.bclpbkiauv.tgnet.TLRPC$User r0 = r0.getUser(r1)
            if (r0 == 0) goto L_0x0cba
            int r1 = r0.id
            im.bclpbkiauv.messenger.UserConfig r2 = r33.getUserConfig()
            int r2 = r2.getClientUserId()
            if (r1 == r2) goto L_0x0cba
            im.bclpbkiauv.messenger.ContactsController r1 = r33.getContactsController()
            java.util.concurrent.ConcurrentHashMap<java.lang.Integer, im.bclpbkiauv.tgnet.TLRPC$Contact> r1 = r1.contactsDict
            int r2 = r0.id
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            java.lang.Object r1 = r1.get(r2)
            if (r1 != 0) goto L_0x0cba
            r1 = 2131689675(0x7f0f00cb, float:1.9008372E38)
            java.lang.String r2 = "AddContactTitle"
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r1)
            r5.add(r1)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r1 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.CONTACT_ADD
            r4.add(r1)
            r1 = 2131231291(0x7f08023b, float:1.8078659E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r6.add(r1)
        L_0x0cba:
            im.bclpbkiauv.messenger.MessageObject r1 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r1.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r1 = r1.media
            java.lang.String r1 = r1.phone_number
            boolean r1 = android.text.TextUtils.isEmpty(r1)
            if (r1 != 0) goto L_0x0d49
            r1 = 2131690734(0x7f0f04ee, float:1.901052E38)
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
            r5.add(r1)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r1 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_COPY2
            r4.add(r1)
            r1 = 2131231301(0x7f080245, float:1.807868E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r6.add(r1)
            r1 = 2131690282(0x7f0f032a, float:1.9009603E38)
            java.lang.String r2 = "Call"
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r1)
            r5.add(r1)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r1 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.CALL2
            r4.add(r1)
            r1 = 2131231295(0x7f08023f, float:1.8078667E38)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r6.add(r1)
            goto L_0x0d49
        L_0x0cfd:
            r0 = 9
            if (r10 != r0) goto L_0x0d49
            im.bclpbkiauv.messenger.MediaDataController r0 = r33.getMediaDataController()
            im.bclpbkiauv.messenger.MessageObject r1 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r1 = r1.getDocument()
            boolean r0 = r0.isStickerInFavorites(r1)
            if (r0 != 0) goto L_0x0d2d
            r0 = 2131689710(0x7f0f00ee, float:1.9008443E38)
            java.lang.String r1 = "AddToFavorites"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_FAVE_ADD
            r4.add(r0)
            r0 = 2131231305(0x7f080249, float:1.8078687E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0d2d:
            r0 = 2131690852(0x7f0f0564, float:1.901076E38)
            java.lang.String r1 = "DeleteFromFavorites"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_FAVE_REMOVE
            r4.add(r0)
            r0 = 2131231350(0x7f080276, float:1.8078779E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x0d4a
        L_0x0d49:
        L_0x0d4a:
            boolean r0 = r7.inScheduleMode
            if (r0 != 0) goto L_0x0dfb
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.needDrawBluredPreview()
            if (r0 != 0) goto L_0x0dfb
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isLiveLocation()
            if (r0 != 0) goto L_0x0dfb
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            int r0 = r0.type
            r1 = 16
            if (r0 == r1) goto L_0x0dfb
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            int r0 = r0.type
            r1 = 101(0x65, float:1.42E-43)
            if (r0 == r1) goto L_0x0dfb
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            int r0 = r0.type
            r1 = 102(0x66, float:1.43E-43)
            if (r0 == r1) goto L_0x0dfb
            java.io.PrintStream r0 = java.lang.System.out
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = "APP_ALLOW_REPOST_VIDEO======"
            r1.append(r2)
            im.bclpbkiauv.messenger.MessageObject r2 = r7.selectedObject
            int r2 = r2.type
            r1.append(r2)
            java.lang.String r1 = r1.toString()
            r0.println(r1)
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x0de0
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x0de0
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            int r0 = r0.flags
            r0 = r0 & r27
            if (r0 == 0) goto L_0x0dc4
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r0)
            if (r0 == 0) goto L_0x0dfb
            r0 = 2131691348(0x7f0f0754, float:1.9011765E38)
            java.lang.String r1 = "Forward"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_FORWARD
            r4.add(r0)
            r0 = 2131231306(0x7f08024a, float:1.807869E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x0dfb
        L_0x0dc4:
            r0 = 2131691348(0x7f0f0754, float:1.9011765E38)
            java.lang.String r1 = "Forward"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_FORWARD
            r4.add(r0)
            r0 = 2131231306(0x7f08024a, float:1.807869E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x0dfb
        L_0x0de0:
            r0 = 2131691348(0x7f0f0754, float:1.9011765E38)
            java.lang.String r1 = "Forward"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_FORWARD
            r4.add(r0)
            r0 = 2131231306(0x7f08024a, float:1.807869E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x0dfb:
            if (r15 == 0) goto L_0x0e19
            r0 = 2131694490(0x7f0f139a, float:1.9018138E38)
            java.lang.String r1 = "UnpinMessage"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_UNPIN
            r4.add(r0)
            r0 = 2131231352(0x7f080278, float:1.8078783E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x0e36
        L_0x0e19:
            if (r14 == 0) goto L_0x0e36
            r0 = 2131693061(0x7f0f0e05, float:1.901524E38)
            java.lang.String r1 = "PinMessage"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_PIN
            r4.add(r0)
            r0 = 2131231329(0x7f080261, float:1.8078736E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x0e36:
            if (r30 == 0) goto L_0x0e53
            r0 = 2131690991(0x7f0f05ef, float:1.9011041E38)
            java.lang.String r1 = "Edit"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_EDIT
            r4.add(r0)
            r0 = 2131231304(0x7f080248, float:1.8078685E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x0e53:
            boolean r0 = r7.inScheduleMode
            if (r0 == 0) goto L_0x0e7c
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r7.currentChat
            boolean r0 = r0.canEditMessageScheduleTime(r1)
            if (r0 == 0) goto L_0x0e7c
            r0 = 2131692007(0x7f0f09e7, float:1.9013102E38)
            java.lang.String r1 = "MessageScheduleEditTime"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SCHEDULE_EDIT_TIME
            r4.add(r0)
            r0 = 2131231341(0x7f08026d, float:1.807876E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x0e7c:
            boolean r0 = r7.inScheduleMode
            if (r0 != 0) goto L_0x0ebd
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            int r0 = r0.contentType
            if (r0 != 0) goto L_0x0ebd
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            int r0 = r0.getId()
            if (r0 <= 0) goto L_0x0ebd
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isOut()
            if (r0 != 0) goto L_0x0ebd
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 != 0) goto L_0x0ea2
            im.bclpbkiauv.tgnet.TLRPC$User r0 = r7.currentUser
            if (r0 == 0) goto L_0x0ebd
            boolean r0 = r0.bot
            if (r0 == 0) goto L_0x0ebd
        L_0x0ea2:
            r0 = 2131693451(0x7f0f0f8b, float:1.901603E38)
            java.lang.String r1 = "ReportChat"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_REPORT
            r4.add(r0)
            r0 = 2131231332(0x7f080264, float:1.8078742E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x0ebd:
            r1 = r29
            r0 = 2131690831(0x7f0f054f, float:1.9010717E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DELETE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r19)
            r6.add(r0)
            goto L_0x11a0
        L_0x0ed7:
            r30 = r13
            r13 = 2
            if (r18 == 0) goto L_0x0ef5
            r0 = 2131693448(0x7f0f0f88, float:1.9016025E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_REPLAY
            r4.add(r0)
            r0 = 2131231331(0x7f080263, float:1.807874E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
        L_0x0ef5:
            r0 = 4
            if (r10 != r0) goto L_0x1094
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isVideo()
            if (r0 == 0) goto L_0x0f76
            r0 = 2131693690(0x7f0f107a, float:1.9016515E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r12, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.PIC_SAVE_TO_GALLERY1
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r24)
            r6.add(r0)
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x0f5e
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x0f5e
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            int r0 = r0.flags
            r0 = r0 & r27
            if (r0 == 0) goto L_0x0f46
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r0)
            if (r0 == 0) goto L_0x118a
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x118a
        L_0x0f46:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x118a
        L_0x0f5e:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x118a
        L_0x0f76:
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isMusic()
            if (r0 == 0) goto L_0x0ff6
            r0 = 2131693692(0x7f0f107c, float:1.901652E38)
            java.lang.String r2 = "SaveToMusic"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DOWNLOAD
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r26)
            r6.add(r0)
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x0fde
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x0fde
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            int r0 = r0.flags
            r0 = r0 & r27
            if (r0 == 0) goto L_0x0fc6
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r0)
            if (r0 == 0) goto L_0x118a
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x118a
        L_0x0fc6:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x118a
        L_0x0fde:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x118a
        L_0x0ff6:
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            boolean r0 = r0.isVideo()
            if (r0 != 0) goto L_0x107c
            im.bclpbkiauv.messenger.MessageObject r0 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r0 = r0.getDocument()
            if (r0 == 0) goto L_0x107c
            r0 = 2131693688(0x7f0f1078, float:1.9016511E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r11, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DOWNLOAD
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r26)
            r6.add(r0)
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            if (r0 == 0) goto L_0x1064
            boolean r0 = r0.megagroup
            if (r0 == 0) goto L_0x1064
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            int r0 = r0.flags
            r0 = r0 & r27
            if (r0 == 0) goto L_0x104c
            im.bclpbkiauv.tgnet.TLRPC$Chat r0 = r7.currentChat
            boolean r0 = im.bclpbkiauv.messenger.ChatObject.hasAdminRights(r0)
            if (r0 == 0) goto L_0x118a
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x118a
        L_0x104c:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x118a
        L_0x1064:
            r0 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_SHARE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r28)
            r6.add(r0)
            goto L_0x118a
        L_0x107c:
            r0 = 2131693690(0x7f0f107a, float:1.9016515E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r12, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.PIC_SAVE_TO_GALLERY1
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r24)
            r6.add(r0)
            goto L_0x118a
        L_0x1094:
            r0 = 5
            if (r10 != r0) goto L_0x10b4
            r0 = 2131689849(0x7f0f0179, float:1.9008725E38)
            java.lang.String r2 = "ApplyLocalizationFile"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.LANGUAGE_OR_THEME
            r4.add(r0)
            r0 = 2131231314(0x7f080252, float:1.8078706E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x118a
        L_0x10b4:
            r0 = 10
            if (r10 != r0) goto L_0x10d5
            r0 = 2131689853(0x7f0f017d, float:1.9008733E38)
            java.lang.String r2 = "ApplyThemeFile"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.LANGUAGE_OR_THEME
            r4.add(r0)
            r0 = 2131231347(0x7f080273, float:1.8078772E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x118a
        L_0x10d5:
            r0 = 7
            if (r10 != r0) goto L_0x10f5
            r0 = 2131689712(0x7f0f00f0, float:1.9008447E38)
            java.lang.String r2 = "AddToStickers"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.STICKER_OR_MASKS
            r4.add(r0)
            r0 = 2131231346(0x7f080272, float:1.807877E38)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r6.add(r0)
            goto L_0x118a
        L_0x10f5:
            r0 = 8
            if (r10 != r0) goto L_0x118a
            im.bclpbkiauv.messenger.MessagesController r0 = r33.getMessagesController()
            im.bclpbkiauv.messenger.MessageObject r2 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r2.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r2 = r2.media
            int r2 = r2.user_id
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            im.bclpbkiauv.tgnet.TLRPC$User r0 = r0.getUser(r2)
            if (r0 == 0) goto L_0x1148
            int r2 = r0.id
            im.bclpbkiauv.messenger.UserConfig r8 = r33.getUserConfig()
            int r8 = r8.getClientUserId()
            if (r2 == r8) goto L_0x1148
            im.bclpbkiauv.messenger.ContactsController r2 = r33.getContactsController()
            java.util.concurrent.ConcurrentHashMap<java.lang.Integer, im.bclpbkiauv.tgnet.TLRPC$Contact> r2 = r2.contactsDict
            int r8 = r0.id
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            java.lang.Object r2 = r2.get(r8)
            if (r2 != 0) goto L_0x1148
            r2 = 2131689675(0x7f0f00cb, float:1.9008372E38)
            java.lang.String r8 = "AddContactTitle"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r8, r2)
            r5.add(r2)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r2 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.CONTACT_ADD
            r4.add(r2)
            r2 = 2131231291(0x7f08023b, float:1.8078659E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r6.add(r2)
        L_0x1148:
            im.bclpbkiauv.messenger.MessageObject r2 = r7.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r2.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r2 = r2.media
            java.lang.String r2 = r2.phone_number
            boolean r2 = android.text.TextUtils.isEmpty(r2)
            if (r2 != 0) goto L_0x118a
            r2 = 2131690734(0x7f0f04ee, float:1.901052E38)
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r5.add(r2)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r2 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_COPY2
            r4.add(r2)
            r2 = 2131231301(0x7f080245, float:1.807868E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r6.add(r2)
            r2 = 2131690282(0x7f0f032a, float:1.9009603E38)
            java.lang.String r3 = "Call"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r5.add(r2)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r2 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.CALL2
            r4.add(r2)
            r2 = 2131231295(0x7f08023f, float:1.8078667E38)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r6.add(r2)
        L_0x118a:
            r0 = 2131690831(0x7f0f054f, float:1.9010717E38)
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r5.add(r0)
            im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum r0 = im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum.MSG_DELETE
            r4.add(r0)
            java.lang.Integer r0 = java.lang.Integer.valueOf(r19)
            r6.add(r0)
        L_0x11a0:
            boolean r0 = r4.isEmpty()
            if (r0 == 0) goto L_0x11a7
            return
        L_0x11a7:
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow r0 = r7.scrimPopupWindow
            if (r0 == 0) goto L_0x11b2
            r0.dismiss()
            r0 = 0
            r7.scrimPopupWindow = r0
            return
        L_0x11b2:
            android.graphics.Rect r0 = new android.graphics.Rect
            r0.<init>()
            r8 = r0
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow$ActionBarPopupWindowLayout r0 = new im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow$ActionBarPopupWindowLayout
            androidx.fragment.app.FragmentActivity r1 = r33.getParentActivity()
            r0.<init>(r1)
            r11 = r0
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$09bgNzJNPPlBeF3mA7aJwzN2R_E r0 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$09bgNzJNPPlBeF3mA7aJwzN2R_E
            r12 = r34
            r0.<init>(r12, r8)
            r11.setOnTouchListener(r0)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$Sv99ptMyc2XPbQUH6htmzIBUMxI r0 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$Sv99ptMyc2XPbQUH6htmzIBUMxI
            r0.<init>()
            r11.setDispatchKeyEventListener(r0)
            android.graphics.Rect r0 = new android.graphics.Rect
            r0.<init>()
            r3 = r0
            androidx.fragment.app.FragmentActivity r0 = r33.getParentActivity()
            android.content.res.Resources r0 = r0.getResources()
            r1 = 2131231457(0x7f0802e1, float:1.8078996E38)
            android.graphics.drawable.Drawable r0 = r0.getDrawable(r1)
            android.graphics.drawable.Drawable r2 = r0.mutate()
            android.graphics.PorterDuffColorFilter r0 = new android.graphics.PorterDuffColorFilter
            java.lang.String r1 = "dialogBackground"
            int r1 = im.bclpbkiauv.ui.actionbar.Theme.getColor(r1)
            android.graphics.PorterDuff$Mode r13 = android.graphics.PorterDuff.Mode.MULTIPLY
            r0.<init>(r1, r13)
            r2.setColorFilter(r0)
            r2.getPadding(r3)
            r11.setBackgroundDrawable(r2)
            android.widget.LinearLayout r0 = new android.widget.LinearLayout
            androidx.fragment.app.FragmentActivity r1 = r33.getParentActivity()
            r0.<init>(r1)
            r13 = r0
            int r0 = android.os.Build.VERSION.SDK_INT
            r1 = 21
            if (r0 < r1) goto L_0x123f
            im.bclpbkiauv.ui.ChatActivity$67 r16 = new im.bclpbkiauv.ui.ChatActivity$67
            androidx.fragment.app.FragmentActivity r19 = r33.getParentActivity()
            r20 = 0
            r21 = 0
            r22 = 2131755556(0x7f100224, float:1.9141995E38)
            r0 = r16
            r1 = r33
            r23 = r2
            r2 = r19
            r31 = r3
            r3 = r20
            r32 = r4
            r4 = r21
            r19 = r5
            r5 = r22
            r20 = r8
            r21 = r9
            r9 = 2
            r8 = r6
            r6 = r13
            r0.<init>(r2, r3, r4, r5, r6)
            goto L_0x1256
        L_0x123f:
            r23 = r2
            r31 = r3
            r32 = r4
            r19 = r5
            r20 = r8
            r21 = r9
            r9 = 2
            r8 = r6
            android.widget.ScrollView r0 = new android.widget.ScrollView
            androidx.fragment.app.FragmentActivity r1 = r33.getParentActivity()
            r0.<init>(r1)
        L_0x1256:
            r1 = 0
            r0.setClipToPadding(r1)
            r1 = -1073741824(0xffffffffc0000000, float:-2.0)
            r2 = -2
            android.widget.FrameLayout$LayoutParams r1 = im.bclpbkiauv.ui.components.LayoutHelper.createFrame(r2, r1)
            r11.addView(r0, r1)
            r1 = 1128792064(0x43480000, float:200.0)
            int r1 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r1)
            r13.setMinimumWidth(r1)
            r1 = 1
            r13.setOrientation(r1)
            r1 = 0
            int r3 = r19.size()
        L_0x1276:
            if (r1 >= r3) goto L_0x12a9
            im.bclpbkiauv.ui.actionbar.ActionBarMenuSubItem r4 = new im.bclpbkiauv.ui.actionbar.ActionBarMenuSubItem
            androidx.fragment.app.FragmentActivity r5 = r33.getParentActivity()
            r4.<init>(r5)
            r5 = r19
            java.lang.Object r6 = r5.get(r1)
            java.lang.CharSequence r6 = (java.lang.CharSequence) r6
            java.lang.Object r16 = r8.get(r1)
            java.lang.Integer r16 = (java.lang.Integer) r16
            int r9 = r16.intValue()
            r4.setTextAndIcon(r6, r9)
            r13.addView(r4)
            r6 = r1
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$GjojPbEUOKo8n_V1xu58NsXTFlI r9 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$GjojPbEUOKo8n_V1xu58NsXTFlI
            r2 = r32
            r9.<init>(r6, r2)
            r4.setOnClickListener(r9)
            int r1 = r1 + 1
            r2 = -2
            r9 = 2
            goto L_0x1276
        L_0x12a9:
            r5 = r19
            r2 = r32
            r1 = 51
            r3 = -2
            android.widget.FrameLayout$LayoutParams r1 = im.bclpbkiauv.ui.components.LayoutHelper.createScroll(r3, r3, r1)
            r0.addView(r13, r1)
            im.bclpbkiauv.ui.ChatActivity$68 r1 = new im.bclpbkiauv.ui.ChatActivity$68
            r1.<init>(r11, r3, r3)
            r7.scrimPopupWindow = r1
            r3 = 220(0xdc, float:3.08E-43)
            r1.setDismissAnimationDuration(r3)
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow r1 = r7.scrimPopupWindow
            r3 = 1
            r1.setOutsideTouchable(r3)
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow r1 = r7.scrimPopupWindow
            r1.setClippingEnabled(r3)
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow r1 = r7.scrimPopupWindow
            r4 = 2131755241(0x7f1000e9, float:1.9141356E38)
            r1.setAnimationStyle(r4)
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow r1 = r7.scrimPopupWindow
            r1.setFocusable(r3)
            r1 = 1148846080(0x447a0000, float:1000.0)
            int r1 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r1)
            r3 = -2147483648(0xffffffff80000000, float:-0.0)
            int r1 = android.view.View.MeasureSpec.makeMeasureSpec(r1, r3)
            r3 = 1148846080(0x447a0000, float:1000.0)
            int r3 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r3)
            r4 = -2147483648(0xffffffff80000000, float:-0.0)
            int r3 = android.view.View.MeasureSpec.makeMeasureSpec(r3, r4)
            r11.measure(r1, r3)
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow r1 = r7.scrimPopupWindow
            r3 = 2
            r1.setInputMethodMode(r3)
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow r1 = r7.scrimPopupWindow
            r3 = 0
            r1.setSoftInputMode(r3)
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow r1 = r7.scrimPopupWindow
            android.view.View r1 = r1.getContentView()
            r3 = 1
            r1.setFocusableInTouchMode(r3)
            int r1 = r34.getLeft()
            r3 = r37
            int r4 = (int) r3
            int r1 = r1 + r4
            int r4 = r11.getMeasuredWidth()
            int r1 = r1 - r4
            r4 = r31
            int r6 = r4.left
            int r1 = r1 + r6
            r6 = 1105199104(0x41e00000, float:28.0)
            int r6 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r6)
            int r1 = r1 - r6
            r6 = 1086324736(0x40c00000, float:6.0)
            int r6 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r6)
            if (r1 >= r6) goto L_0x1334
            r6 = 1086324736(0x40c00000, float:6.0)
            int r1 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r6)
            goto L_0x135b
        L_0x1334:
            im.bclpbkiauv.ui.components.RecyclerListView r6 = r7.chatListView
            int r6 = r6.getMeasuredWidth()
            r9 = 1086324736(0x40c00000, float:6.0)
            int r9 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r9)
            int r6 = r6 - r9
            int r9 = r11.getMeasuredWidth()
            int r6 = r6 - r9
            if (r1 <= r6) goto L_0x135b
            im.bclpbkiauv.ui.components.RecyclerListView r6 = r7.chatListView
            int r6 = r6.getMeasuredWidth()
            r9 = 1086324736(0x40c00000, float:6.0)
            int r9 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r9)
            int r6 = r6 - r9
            int r9 = r11.getMeasuredWidth()
            int r1 = r6 - r9
        L_0x135b:
            boolean r6 = im.bclpbkiauv.messenger.AndroidUtilities.isTablet()
            if (r6 == 0) goto L_0x136e
            r6 = 2
            int[] r9 = new int[r6]
            android.view.View r6 = r7.fragmentView
            r6.getLocationInWindow(r9)
            r6 = 0
            r16 = r9[r6]
            int r1 = r1 + r16
        L_0x136e:
            im.bclpbkiauv.ui.components.SizeNotifierFrameLayout r6 = r7.contentView
            int r6 = r6.getHeight()
            int r9 = r11.getMeasuredHeight()
            r16 = r0
            im.bclpbkiauv.ui.components.SizeNotifierFrameLayout r0 = r7.contentView
            int r0 = r0.getKeyboardHeight()
            r19 = 1101004800(0x41a00000, float:20.0)
            r32 = r2
            int r2 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r19)
            if (r0 <= r2) goto L_0x138b
            int r6 = r6 + r0
        L_0x138b:
            if (r9 >= r6) goto L_0x13f0
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r7.chatListView
            float r2 = r2.getY()
            r19 = r0
            int r0 = r34.getTop()
            float r0 = (float) r0
            float r2 = r2 + r0
            float r2 = r2 + r38
            int r0 = (int) r2
            int r2 = r4.top
            int r2 = r9 - r2
            int r3 = r4.bottom
            int r2 = r2 - r3
            r3 = 1131413504(0x43700000, float:240.0)
            int r3 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r3)
            if (r2 <= r3) goto L_0x13b5
            r2 = 1131413504(0x43700000, float:240.0)
            int r2 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r2)
            int r2 = r2 - r9
            int r0 = r0 + r2
        L_0x13b5:
            float r2 = (float) r0
            im.bclpbkiauv.ui.components.RecyclerListView r3 = r7.chatListView
            float r3 = r3.getY()
            r22 = 1103101952(0x41c00000, float:24.0)
            r31 = r4
            int r4 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r22)
            float r4 = (float) r4
            float r3 = r3 + r4
            int r2 = (r2 > r3 ? 1 : (r2 == r3 ? 0 : -1))
            if (r2 >= 0) goto L_0x13da
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r7.chatListView
            float r2 = r2.getY()
            r3 = 1103101952(0x41c00000, float:24.0)
            int r3 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r3)
            float r3 = (float) r3
            float r2 = r2 + r3
            int r0 = (int) r2
            goto L_0x13f6
        L_0x13da:
            int r2 = r6 - r9
            r3 = 1090519040(0x41000000, float:8.0)
            int r3 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r3)
            int r2 = r2 - r3
            if (r0 <= r2) goto L_0x13f6
            int r2 = r6 - r9
            r3 = 1090519040(0x41000000, float:8.0)
            int r3 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r3)
            int r0 = r2 - r3
            goto L_0x13f6
        L_0x13f0:
            r19 = r0
            r31 = r4
            int r0 = im.bclpbkiauv.messenger.AndroidUtilities.statusBarHeight
        L_0x13f6:
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow r2 = r7.scrimPopupWindow
            im.bclpbkiauv.ui.components.RecyclerListView r3 = r7.chatListView
            r4 = 51
            r2.showAtLocation(r3, r4, r1, r0)
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r7.chatListView
            r2.stopScroll()
            androidx.recyclerview.widget.GridLayoutManagerFixed r2 = r7.chatLayoutManager
            r3 = 0
            r2.setCanScrollVertically(r3)
            r7.scrimView = r12
            boolean r2 = r12 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
            if (r2 == 0) goto L_0x141a
            r2 = r12
            im.bclpbkiauv.ui.cells.ChatMessageCell r2 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r2
            r3 = 1
            r2.setInvalidatesParent(r3)
            r7.restartSticker(r2)
        L_0x141a:
            im.bclpbkiauv.ui.components.SizeNotifierFrameLayout r2 = r7.contentView
            r2.invalidate()
            im.bclpbkiauv.ui.components.RecyclerListView r2 = r7.chatListView
            r2.invalidate()
            android.animation.AnimatorSet r2 = r7.scrimAnimatorSet
            if (r2 == 0) goto L_0x142b
            r2.cancel()
        L_0x142b:
            android.animation.AnimatorSet r2 = new android.animation.AnimatorSet
            r2.<init>()
            r7.scrimAnimatorSet = r2
            java.util.ArrayList r2 = new java.util.ArrayList
            r2.<init>()
            android.graphics.Paint r3 = r7.scrimPaint
            android.util.Property<android.graphics.Paint, java.lang.Integer> r4 = im.bclpbkiauv.ui.components.AnimationProperties.PAINT_ALPHA
            r22 = r0
            r0 = 2
            int[] r0 = new int[r0]
            r0 = {0, 50} // fill-array
            android.animation.ObjectAnimator r0 = android.animation.ObjectAnimator.ofInt(r3, r4, r0)
            r2.add(r0)
            android.widget.FrameLayout r0 = r7.pagedownButton
            java.lang.Object r0 = r0.getTag()
            if (r0 == 0) goto L_0x1468
            android.widget.FrameLayout r0 = r7.pagedownButton
            android.util.Property r3 = android.view.View.ALPHA
            r24 = r1
            r4 = 1
            float[] r1 = new float[r4]
            r4 = 0
            r17 = 0
            r1[r17] = r4
            android.animation.ObjectAnimator r0 = android.animation.ObjectAnimator.ofFloat(r0, r3, r1)
            r2.add(r0)
            goto L_0x146a
        L_0x1468:
            r24 = r1
        L_0x146a:
            android.widget.FrameLayout r0 = r7.mentiondownButton
            java.lang.Object r0 = r0.getTag()
            if (r0 == 0) goto L_0x1485
            android.widget.FrameLayout r0 = r7.mentiondownButton
            android.util.Property r1 = android.view.View.ALPHA
            r3 = 1
            float[] r3 = new float[r3]
            r4 = 0
            r17 = 0
            r3[r17] = r4
            android.animation.ObjectAnimator r0 = android.animation.ObjectAnimator.ofFloat(r0, r1, r3)
            r2.add(r0)
        L_0x1485:
            android.animation.AnimatorSet r0 = r7.scrimAnimatorSet
            r0.playTogether(r2)
            android.animation.AnimatorSet r0 = r7.scrimAnimatorSet
            r3 = 150(0x96, double:7.4E-322)
            r0.setDuration(r3)
            android.animation.AnimatorSet r0 = r7.scrimAnimatorSet
            r0.start()
            im.bclpbkiauv.ui.components.HintView r0 = r7.forwardHintView
            if (r0 == 0) goto L_0x149d
            r0.hide()
        L_0x149d:
            im.bclpbkiauv.ui.components.HintView r0 = r7.noSoundHintView
            if (r0 == 0) goto L_0x14a4
            r0.hide()
        L_0x14a4:
            im.bclpbkiauv.ui.components.HintView r0 = r7.slowModeHint
            if (r0 == 0) goto L_0x14ab
            r0.hide()
        L_0x14ab:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r7.chatActivityEnterView
            if (r0 == 0) goto L_0x14b7
            im.bclpbkiauv.ui.components.EditTextCaption r0 = r0.getEditField()
            r1 = 0
            r0.setAllowDrawCursor(r1)
        L_0x14b7:
            int r0 = android.os.Build.VERSION.SDK_INT
            r1 = 19
            if (r0 < r1) goto L_0x14cd
            androidx.fragment.app.FragmentActivity r0 = r33.getParentActivity()
            android.view.Window r0 = r0.getWindow()
            android.view.View r0 = r0.getDecorView()
            r1 = 4
            r0.setImportantForAccessibility(r1)
        L_0x14cd:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.createMenu(android.view.View, boolean, boolean, float, float, boolean):void");
    }

    public /* synthetic */ boolean lambda$createMenu$78$ChatActivity(View v, Rect rect, View view, MotionEvent event) {
        ActionBarPopupWindow actionBarPopupWindow;
        if (event.getActionMasked() == 0) {
            ActionBarPopupWindow actionBarPopupWindow2 = this.scrimPopupWindow;
            if (actionBarPopupWindow2 == null || !actionBarPopupWindow2.isShowing()) {
                return false;
            }
            v.getHitRect(rect);
            if (rect.contains((int) event.getX(), (int) event.getY())) {
                return false;
            }
            this.scrimPopupWindow.dismiss();
            return false;
        } else if (event.getActionMasked() != 4 || (actionBarPopupWindow = this.scrimPopupWindow) == null || !actionBarPopupWindow.isShowing()) {
            return false;
        } else {
            this.scrimPopupWindow.dismiss();
            return false;
        }
    }

    public /* synthetic */ void lambda$createMenu$79$ChatActivity(KeyEvent keyEvent) {
        ActionBarPopupWindow actionBarPopupWindow;
        if (keyEvent.getKeyCode() == 4 && keyEvent.getRepeatCount() == 0 && (actionBarPopupWindow = this.scrimPopupWindow) != null && actionBarPopupWindow.isShowing()) {
            this.scrimPopupWindow.dismiss();
        }
    }

    public /* synthetic */ void lambda$createMenu$80$ChatActivity(int i, ArrayList options, View v1) {
        if (this.selectedObject != null && i >= 0 && i < options.size()) {
            processSelectedOption((Constants.ChatSelectionPopMenuEnum) options.get(i));
            ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
            if (actionBarPopupWindow != null) {
                actionBarPopupWindow.dismiss();
            }
        }
    }

    /* access modifiers changed from: private */
    public void startEditingMessageObject(MessageObject messageObject) {
        if (messageObject != null && getParentActivity() != null) {
            if (this.searchItem != null && this.actionBar.isSearchFieldVisible()) {
                this.actionBar.closeSearchField();
                this.chatActivityEnterView.setFieldFocused();
            }
            this.mentionsAdapter.setNeedBotContext(false);
            this.chatActivityEnterView.setVisibility(0);
            showFieldPanelForEdit(true, messageObject);
            updateBottomOverlay();
            checkEditTimer();
            this.chatActivityEnterView.setAllowStickersAndGifs(false, false);
            updatePinnedMessageView(true);
            updateVisibleRows();
            if (!messageObject.scheduled) {
                TLRPC.TL_messages_getMessageEditData req = new TLRPC.TL_messages_getMessageEditData();
                req.peer = getMessagesController().getInputPeer((int) this.dialog_id);
                req.id = messageObject.getId();
                this.editingMessageObjectReqId = getConnectionsManager().sendRequest(req, new RequestDelegate() {
                    public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                        ChatActivity.this.lambda$startEditingMessageObject$82$ChatActivity(tLObject, tL_error);
                    }
                });
                return;
            }
            this.chatActivityEnterView.showEditDoneProgress(false, true);
        }
    }

    public /* synthetic */ void lambda$startEditingMessageObject$82$ChatActivity(TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new Runnable(response) {
            private final /* synthetic */ TLObject f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                ChatActivity.this.lambda$null$81$ChatActivity(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$null$81$ChatActivity(TLObject response) {
        this.editingMessageObjectReqId = 0;
        if (response != null) {
            ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
            if (chatActivityEnterView2 != null) {
                chatActivityEnterView2.showEditDoneProgress(false, true);
            }
        } else if (getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
            builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
            builder.setMessage(LocaleController.getString("EditMessageError", R.string.EditMessageError));
            builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), (DialogInterface.OnClickListener) null);
            showDialog(builder.create());
            ChatActivityEnterView chatActivityEnterView3 = this.chatActivityEnterView;
            if (chatActivityEnterView3 != null) {
                chatActivityEnterView3.setEditingMessageObject((MessageObject) null, false);
                hideFieldPanel(true);
            }
        }
    }

    /* access modifiers changed from: private */
    public void restartSticker(ChatMessageCell cell) {
        RLottieDrawable drawable;
        MessageObject message = cell.getMessageObject();
        TLRPC.Document document = message.getDocument();
        if ((message.isAnimatedEmoji() || (MessageObject.isAnimatedStickerDocument(document) && !SharedConfig.loopStickers)) && (drawable = cell.getPhotoImage().getLottieAnimation()) != null) {
            drawable.restart();
            if (message.isAnimatedEmoji() && "❤".equals(message.getStickerEmoji())) {
                HashMap<Integer, Integer> pattern = new HashMap<>();
                pattern.put(1, 1);
                pattern.put(13, 0);
                pattern.put(59, 1);
                pattern.put(71, 0);
                pattern.put(128, 1);
                pattern.put(140, 0);
                drawable.setVibrationPattern(pattern);
            }
        }
    }

    /* access modifiers changed from: private */
    public String getMessageContent(MessageObject messageObject, int previousUid, boolean name) {
        TLRPC.Chat chat;
        String str = "";
        if (name && previousUid != messageObject.messageOwner.from_id) {
            if (messageObject.messageOwner.from_id > 0) {
                TLRPC.User user = getMessagesController().getUser(Integer.valueOf(messageObject.messageOwner.from_id));
                if (user != null) {
                    str = ContactsController.formatName(user.first_name, user.last_name) + ":\n";
                }
            } else if (messageObject.messageOwner.from_id < 0 && (chat = getMessagesController().getChat(Integer.valueOf(-messageObject.messageOwner.from_id))) != null) {
                str = chat.title + ":\n";
            }
        }
        if ((messageObject.type == 0 || messageObject.isAnimatedEmoji()) && messageObject.messageOwner.message != null) {
            return str + messageObject.messageOwner.message;
        } else if (messageObject.messageOwner.media == null || messageObject.messageOwner.message == null) {
            return str + messageObject.messageText;
        } else {
            return str + messageObject.messageOwner.message;
        }
    }

    private void saveMessageToGallery(MessageObject messageObject) {
        String path = messageObject.messageOwner.attachPath;
        if (!TextUtils.isEmpty(path) && !new File(path).exists()) {
            path = null;
        }
        if (TextUtils.isEmpty(path)) {
            path = FileLoader.getPathToMessage(messageObject.messageOwner).toString();
        }
        MediaController.saveFile(path, getParentActivity(), messageObject.isVideo() ? 1 : 0, (String) null, (String) null);
    }

    public void parseQRCodeResult(String result, boolean forceJumpOutBrowser) {
        String result2;
        String result3;
        String result4;
        if (result == null) {
            result2 = "";
        } else {
            result2 = result;
        }
        String preStr = getMessagesController().sharePrefix + "&Key=";
        String originResult = result2;
        boolean z = false;
        if (!result2.startsWith(preStr) && !result2.startsWith("https://m12345.com") && !result2.startsWith("http://m12345.com") && !result2.startsWith("m12345.com") && !result2.startsWith("m12345.com")) {
            if (!result2.startsWith("https://m12345.com/authtoken/")) {
                if (!URLUtil.isNetworkUrl(result2)) {
                    presentFragment(new QrScanResultActivity(result2), true);
                } else if (SharedConfig.customTabs) {
                    presentFragment(new WebviewActivity(result2, (String) null));
                } else {
                    FragmentActivity parentActivity = getParentActivity();
                    if (this.inlineReturn == 0) {
                        z = true;
                    }
                    Browser.openUrl((Context) parentActivity, result2, z);
                }
            }
            String str = preStr;
            Object obj = "https://m12345.com";
            Object obj2 = "http://m12345.com";
        } else if (result2.startsWith(preStr)) {
            String result5 = result2.substring(preStr.length()).replace("%3D", "=");
            byte[] decode = Base64.decode(result5, 0);
            String ret = new String(decode);
            String[] split = ret.split("#");
            String pUid = split[0].split("=")[1];
            String hash = split[1].split("=")[1];
            if (ret.contains("Uname")) {
                getMessagesController().openByUserName(split[2].split("=")[1], (BaseFragment) this, 1, true);
                result4 = result5;
            } else {
                TLRPC.User user = new TLRPC.TL_user();
                try {
                    user.id = Integer.parseInt(pUid);
                    result4 = result5;
                    byte[] bArr = decode;
                    try {
                        user.access_hash = Long.parseLong(hash);
                        getUserInfo(user);
                    } catch (NumberFormatException e) {
                        e = e;
                    }
                } catch (NumberFormatException e2) {
                    e = e2;
                    result4 = result5;
                    byte[] bArr2 = decode;
                    FileLog.e("parse qr code err:" + e);
                    String str2 = result4;
                    String str3 = preStr;
                    String result6 = "https://m12345.com";
                    Object obj3 = "http://m12345.com";
                }
            }
            String str22 = result4;
            String str32 = preStr;
            String result62 = "https://m12345.com";
            Object obj32 = "http://m12345.com";
        } else {
            if (result2.startsWith("http://m12345.com")) {
                result3 = result2.substring("http://m12345.com".length());
            } else if (result2.startsWith("https://m12345.com")) {
                result3 = result2.substring("https://m12345.com".length());
            } else if (result2.startsWith("m12345.com")) {
                result3 = result2.substring("m12345.com".length());
            } else {
                result3 = result2.substring("m12345.com".length());
            }
            boolean isGroup = result3.startsWith("/g/");
            boolean isUser = result3.startsWith("/u/");
            if (isGroup || isUser) {
                String result7 = result3.substring(result3.lastIndexOf("/") + 1);
                String ret2 = new String(Base64.decode(result7, 0));
                if (isGroup) {
                    getMessagesController().openByUserName(ret2.substring(ret2.lastIndexOf("/") + 1), (BaseFragment) this, 1, true);
                    String str4 = preStr;
                    Object obj4 = "https://m12345.com";
                    Object obj5 = "http://m12345.com";
                } else {
                    String[] split2 = ret2.substring(0, ret2.length() - 4).split("&", 2);
                    String uid = split2[0];
                    String uhash = split2[1];
                    TLRPC.User tL_user = new TLRPC.TL_user();
                    try {
                        String str5 = preStr;
                        TLRPC.User user2 = tL_user;
                        try {
                            user2.id = Integer.parseInt(uid);
                            Object obj6 = "https://m12345.com";
                            Object obj7 = "http://m12345.com";
                            try {
                                user2.access_hash = Long.parseLong(uhash);
                                getUserInfo(user2);
                            } catch (NumberFormatException e3) {
                                e = e3;
                            }
                        } catch (NumberFormatException e4) {
                            e = e4;
                            Object obj8 = "https://m12345.com";
                            Object obj9 = "http://m12345.com";
                            FileLog.e("parse qr code err:" + e);
                            String str6 = result7;
                            return;
                        }
                    } catch (NumberFormatException e5) {
                        e = e5;
                        String str7 = preStr;
                        Object obj10 = "http://m12345.com";
                        TLRPC.User user3 = tL_user;
                        Object obj11 = "https://m12345.com";
                        FileLog.e("parse qr code err:" + e);
                        String str62 = result7;
                        return;
                    }
                }
                String str622 = result7;
                return;
            }
            if (result3.contains("joinchat/")) {
                isGroup = true;
            }
            String result8 = result3.substring(result3.lastIndexOf("/") + 1);
            if (!isGroup) {
                getMessagesController().openByUserName(result8, (BaseFragment) this, 1, true);
            } else {
                Browser.openUrl((Context) getParentActivity(), originResult, this.inlineReturn == 0);
            }
            String str8 = preStr;
            Object obj12 = "https://m12345.com";
            Object obj13 = "http://m12345.com";
        }
    }

    private void getUserInfo(TLRPC.User user) {
        TLRPC.TL_users_getFullUser req = new TLRPC.TL_users_getFullUser();
        req.id = getMessagesController().getInputUser(user);
        getConnectionsManager().bindRequestToGuid(getConnectionsManager().sendRequest(req, new RequestDelegate() {
            public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                ChatActivity.this.lambda$getUserInfo$84$ChatActivity(tLObject, tL_error);
            }
        }), this.classGuid);
    }

    public /* synthetic */ void lambda$getUserInfo$84$ChatActivity(TLObject response, TLRPC.TL_error error) {
        if (error == null) {
            AndroidUtilities.runOnUIThread(new Runnable(response) {
                private final /* synthetic */ TLObject f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    ChatActivity.this.lambda$null$83$ChatActivity(this.f$1);
                }
            });
        }
    }

    public /* synthetic */ void lambda$null$83$ChatActivity(TLObject response) {
        TLRPC.UserFull userFull = (TLRPC.UserFull) response;
        getMessagesController().putUser(userFull.user, false);
        if (userFull.user.self || userFull.user.contact) {
            Bundle bundle = new Bundle();
            bundle.putInt("user_id", userFull.user.id);
            presentFragment(new NewProfileActivity(bundle));
            return;
        }
        Bundle bundle2 = new Bundle();
        bundle2.putInt("from_type", 1);
        presentFragment(new AddContactsInfoActivity(bundle2, userFull.user));
    }

    /* JADX WARNING: Code restructure failed: missing block: B:143:0x056c, code lost:
        r1 = r8.currentChat;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void processSelectedOption(im.bclpbkiauv.ui.constants.Constants.ChatSelectionPopMenuEnum r28) {
        /*
            r27 = this;
            r8 = r27
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            if (r0 == 0) goto L_0x0877
            androidx.fragment.app.FragmentActivity r0 = r27.getParentActivity()
            if (r0 != 0) goto L_0x000e
            goto L_0x0877
        L_0x000e:
            int[] r0 = im.bclpbkiauv.ui.ChatActivity.AnonymousClass76.$SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum
            int r1 = r28.ordinal()
            r0 = r0[r1]
            r1 = 500(0x1f4, float:7.0E-43)
            java.lang.String r2 = ""
            r3 = 1000(0x3e8, double:4.94E-321)
            r5 = 2131692462(0x7f0f0bae, float:1.9014025E38)
            java.lang.String r6 = "OK"
            r7 = 2
            r9 = 2131690308(0x7f0f0344, float:1.9009656E38)
            java.lang.String r10 = "Cancel"
            r12 = 3
            java.lang.String r14 = "android.permission.WRITE_EXTERNAL_STORAGE"
            r15 = 1
            r13 = 0
            switch(r0) {
                case 1: goto L_0x0825;
                case 2: goto L_0x080f;
                case 3: goto L_0x07d7;
                case 4: goto L_0x07bc;
                case 5: goto L_0x07af;
                case 6: goto L_0x0763;
                case 7: goto L_0x0706;
                case 8: goto L_0x061a;
                case 9: goto L_0x058d;
                case 10: goto L_0x0586;
                case 11: goto L_0x0557;
                case 12: goto L_0x04cd;
                case 13: goto L_0x04b4;
                case 14: goto L_0x04a7;
                case 15: goto L_0x0491;
                case 16: goto L_0x03a4;
                case 17: goto L_0x0362;
                case 18: goto L_0x0342;
                case 19: goto L_0x0280;
                case 20: goto L_0x0247;
                case 21: goto L_0x0236;
                case 22: goto L_0x0219;
                case 23: goto L_0x01fd;
                case 24: goto L_0x01d7;
                case 25: goto L_0x01c6;
                case 26: goto L_0x017a;
                case 27: goto L_0x014f;
                case 28: goto L_0x010b;
                case 29: goto L_0x00e2;
                case 30: goto L_0x0048;
                case 31: goto L_0x00c4;
                case 32: goto L_0x0038;
                case 33: goto L_0x0031;
                default: goto L_0x002f;
            }
        L_0x002f:
            goto L_0x086f
        L_0x0031:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            r8.translateCancel(r0)
            goto L_0x086f
        L_0x0038:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            int r1 = r0.type
            if (r1 != r7) goto L_0x0043
            r8.convertAudioFile(r0)
            goto L_0x086f
        L_0x0043:
            r8.translateStart(r0)
            goto L_0x086f
        L_0x0048:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            android.view.View r0 = r0.getSendButton()
            boolean r0 = r8.checkSlowMode(r0)
            if (r0 != 0) goto L_0x00c4
            im.bclpbkiauv.messenger.MediaController r0 = r27.getMediaController()
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            boolean r0 = r0.isPlayingMessage(r1)
            if (r0 == 0) goto L_0x0067
            im.bclpbkiauv.messenger.MediaController r0 = r27.getMediaController()
            r0.cleanupPlayer(r15, r15)
        L_0x0067:
            im.bclpbkiauv.tgnet.TLRPC$TL_messages_sendScheduledMessages r0 = new im.bclpbkiauv.tgnet.TLRPC$TL_messages_sendScheduledMessages
            r0.<init>()
            int r1 = r8.currentAccount
            im.bclpbkiauv.messenger.MessagesController r1 = im.bclpbkiauv.messenger.MessagesController.getInstance(r1)
            long r2 = r8.dialog_id
            int r3 = (int) r2
            im.bclpbkiauv.tgnet.TLRPC$InputPeer r1 = r1.getInputPeer(r3)
            r0.peer = r1
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = r8.selectedObjectGroup
            if (r1 == 0) goto L_0x00a5
            r1 = 0
        L_0x0080:
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r2 = r8.selectedObjectGroup
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r2.messages
            int r2 = r2.size()
            if (r1 >= r2) goto L_0x00a4
            java.util.ArrayList<java.lang.Integer> r2 = r0.id
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r3 = r8.selectedObjectGroup
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r3.messages
            java.lang.Object r3 = r3.get(r1)
            im.bclpbkiauv.messenger.MessageObject r3 = (im.bclpbkiauv.messenger.MessageObject) r3
            int r3 = r3.getId()
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            r2.add(r3)
            int r1 = r1 + 1
            goto L_0x0080
        L_0x00a4:
            goto L_0x00b4
        L_0x00a5:
            java.util.ArrayList<java.lang.Integer> r1 = r0.id
            im.bclpbkiauv.messenger.MessageObject r2 = r8.selectedObject
            int r2 = r2.getId()
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r1.add(r2)
        L_0x00b4:
            int r1 = r8.currentAccount
            im.bclpbkiauv.tgnet.ConnectionsManager r1 = im.bclpbkiauv.tgnet.ConnectionsManager.getInstance(r1)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$ALuvFvLE00ZQt06H8st-et5ezPg r2 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$ALuvFvLE00ZQt06H8st-et5ezPg
            r2.<init>(r0)
            r1.sendRequest(r0, r2)
            goto L_0x086f
        L_0x00c4:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = r8.selectedObjectGroup
            androidx.fragment.app.FragmentActivity r2 = r27.getParentActivity()
            im.bclpbkiauv.tgnet.TLRPC$User r3 = r8.currentUser
            boolean r3 = im.bclpbkiauv.messenger.UserObject.isUserSelf(r3)
            im.bclpbkiauv.tgnet.TLRPC$Message r4 = r0.messageOwner
            int r4 = r4.date
            long r4 = (long) r4
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$o5elRSXmg3g_79zs6F1fG_roQUY r6 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$o5elRSXmg3g_79zs6F1fG_roQUY
            r6.<init>(r1, r0)
            r7 = 0
            im.bclpbkiauv.ui.components.AlertsCreator.createScheduleDatePickerDialog(r2, r3, r4, r6, r7)
            goto L_0x086f
        L_0x00e2:
            r0 = 0
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r1.messageOwner
            java.io.File r1 = im.bclpbkiauv.messenger.FileLoader.getPathToMessage(r1)
            java.lang.String r0 = r1.toString()
            java.lang.String r9 = com.king.zxing.util.CodeUtils.parseQRCode(r0)
            int r2 = r8.currentAccount
            r4 = 0
            r5 = 0
            r6 = 0
            long r11 = r8.inlineReturn
            r16 = 0
            int r1 = (r11 > r16 ? 1 : (r11 == r16 ? 0 : -1))
            if (r1 != 0) goto L_0x0102
            r7 = 1
            goto L_0x0103
        L_0x0102:
            r7 = 0
        L_0x0103:
            r1 = r27
            r3 = r9
            im.bclpbkiauv.ui.utils.QrCodeParseUtil.tryParseQrCode(r1, r2, r3, r4, r5, r6, r7)
            goto L_0x086f
        L_0x010b:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.ui.actionbar.AlertDialog$Builder r1 = new im.bclpbkiauv.ui.actionbar.AlertDialog$Builder
            androidx.fragment.app.FragmentActivity r2 = r27.getParentActivity()
            r1.<init>((android.content.Context) r2)
            r2 = 2131694065(0x7f0f11f1, float:1.9017276E38)
            java.lang.String r3 = "StopPollAlertTitle"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r1.setTitle(r2)
            r2 = 2131694064(0x7f0f11f0, float:1.9017274E38)
            java.lang.String r3 = "StopPollAlertText"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r1.setMessage(r2)
            r2 = 2131694054(0x7f0f11e6, float:1.9017254E38)
            java.lang.String r3 = "Stop"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$LoLdYvltqD_xoLaR6P-30hlyV4E r3 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$LoLdYvltqD_xoLaR6P-30hlyV4E
            r3.<init>(r0)
            r1.setPositiveButton(r2, r3)
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r10, r9)
            r1.setNegativeButton(r2, r13)
            im.bclpbkiauv.ui.actionbar.AlertDialog r2 = r1.create()
            r8.showDialog(r2)
            goto L_0x086f
        L_0x014f:
            im.bclpbkiauv.ui.actionbar.AlertDialog[] r0 = new im.bclpbkiauv.ui.actionbar.AlertDialog[r15]
            im.bclpbkiauv.ui.actionbar.AlertDialog r1 = new im.bclpbkiauv.ui.actionbar.AlertDialog
            androidx.fragment.app.FragmentActivity r2 = r27.getParentActivity()
            r1.<init>(r2, r12)
            r2 = 0
            r0[r2] = r1
            im.bclpbkiauv.messenger.SendMessagesHelper r1 = r27.getSendMessagesHelper()
            im.bclpbkiauv.messenger.MessageObject r2 = r8.selectedObject
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$jSigiJknzI3qXql6k9Bm2m1gE7g r3 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$jSigiJknzI3qXql6k9Bm2m1gE7g
            r3.<init>(r0)
            int r1 = r1.sendVote(r2, r13, r3)
            if (r1 == 0) goto L_0x086f
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$dB-KXHSBnmnbUFcXfTeZbaQmO4Y r2 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$dB-KXHSBnmnbUFcXfTeZbaQmO4Y
            r2.<init>(r0, r1)
            r3 = 500(0x1f4, double:2.47E-321)
            im.bclpbkiauv.messenger.AndroidUtilities.runOnUIThread(r2, r3)
            goto L_0x086f
        L_0x017a:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            boolean r0 = r0.isEditing()
            if (r0 != 0) goto L_0x01bb
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            boolean r0 = r0.isSending()
            if (r0 == 0) goto L_0x018f
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r0 = r8.selectedObjectGroup
            if (r0 != 0) goto L_0x018f
            goto L_0x01bb
        L_0x018f:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            boolean r0 = r0.isSending()
            if (r0 == 0) goto L_0x086f
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r0 = r8.selectedObjectGroup
            if (r0 == 0) goto L_0x086f
            r0 = 0
        L_0x019c:
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = r8.selectedObjectGroup
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r1.messages
            int r1 = r1.size()
            if (r0 >= r1) goto L_0x01b9
            im.bclpbkiauv.messenger.SendMessagesHelper r1 = r27.getSendMessagesHelper()
            java.util.ArrayList r2 = new java.util.ArrayList
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r3 = r8.selectedObjectGroup
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r3.messages
            r2.<init>(r3)
            r1.cancelSendingMessage((java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject>) r2)
            int r0 = r0 + 1
            goto L_0x019c
        L_0x01b9:
            goto L_0x086f
        L_0x01bb:
            im.bclpbkiauv.messenger.SendMessagesHelper r0 = r27.getSendMessagesHelper()
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            r0.cancelSendingMessage((im.bclpbkiauv.messenger.MessageObject) r1)
            goto L_0x086f
        L_0x01c6:
            androidx.fragment.app.FragmentActivity r0 = r27.getParentActivity()
            long r1 = r8.dialog_id
            im.bclpbkiauv.messenger.MessageObject r3 = r8.selectedObject
            int r3 = r3.getId()
            im.bclpbkiauv.ui.components.AlertsCreator.createReportAlert(r0, r1, r3, r8)
            goto L_0x086f
        L_0x01d7:
            im.bclpbkiauv.tgnet.TLRPC$TL_channels_exportMessageLinkV2 r0 = new im.bclpbkiauv.tgnet.TLRPC$TL_channels_exportMessageLinkV2
            r0.<init>()
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            int r1 = r1.getId()
            r0.id = r1
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r8.currentChat
            im.bclpbkiauv.tgnet.TLRPC$InputChannel r1 = im.bclpbkiauv.messenger.MessagesController.getInputChannel((im.bclpbkiauv.tgnet.TLRPC.Chat) r1)
            r0.channel = r1
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r8.currentChat
            boolean r1 = r1.megagroup
            r0.isGroup = r1
            im.bclpbkiauv.tgnet.ConnectionsManager r1 = r27.getConnectionsManager()
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$HVuEkgcqZIw5BzUveYh2R7W_SFE r2 = im.bclpbkiauv.ui.$$Lambda$ChatActivity$HVuEkgcqZIw5BzUveYh2R7W_SFE.INSTANCE
            r1.sendRequest(r0, r2)
            goto L_0x086f
        L_0x01fd:
            im.bclpbkiauv.messenger.MediaDataController r14 = r27.getMediaDataController()
            r15 = 2
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r17 = r0.getDocument()
            long r1 = java.lang.System.currentTimeMillis()
            long r1 = r1 / r3
            int r2 = (int) r1
            r19 = 1
            r16 = r0
            r18 = r2
            r14.addRecentSticker(r15, r16, r17, r18, r19)
            goto L_0x086f
        L_0x0219:
            im.bclpbkiauv.messenger.MediaDataController r20 = r27.getMediaDataController()
            r21 = 2
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r23 = r0.getDocument()
            long r1 = java.lang.System.currentTimeMillis()
            long r1 = r1 / r3
            int r2 = (int) r1
            r25 = 0
            r22 = r0
            r24 = r2
            r20.addRecentSticker(r21, r22, r23, r24, r25)
            goto L_0x086f
        L_0x0236:
            androidx.fragment.app.FragmentActivity r0 = r27.getParentActivity()
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r1.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r1 = r1.action
            im.bclpbkiauv.tgnet.TLRPC$TL_messageActionPhoneCall r1 = (im.bclpbkiauv.tgnet.TLRPC.TL_messageActionPhoneCall) r1
            im.bclpbkiauv.ui.components.voip.VoIPHelper.showRateAlert(r0, r1)
            goto L_0x086f
        L_0x0247:
            android.content.Intent r0 = new android.content.Intent     // Catch:{ Exception -> 0x027a }
            java.lang.String r2 = "android.intent.action.DIAL"
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x027a }
            r3.<init>()     // Catch:{ Exception -> 0x027a }
            java.lang.String r4 = "tel:"
            r3.append(r4)     // Catch:{ Exception -> 0x027a }
            im.bclpbkiauv.messenger.MessageObject r4 = r8.selectedObject     // Catch:{ Exception -> 0x027a }
            im.bclpbkiauv.tgnet.TLRPC$Message r4 = r4.messageOwner     // Catch:{ Exception -> 0x027a }
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r4 = r4.media     // Catch:{ Exception -> 0x027a }
            java.lang.String r4 = r4.phone_number     // Catch:{ Exception -> 0x027a }
            r3.append(r4)     // Catch:{ Exception -> 0x027a }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x027a }
            android.net.Uri r3 = android.net.Uri.parse(r3)     // Catch:{ Exception -> 0x027a }
            r0.<init>(r2, r3)     // Catch:{ Exception -> 0x027a }
            r2 = 268435456(0x10000000, float:2.5243549E-29)
            r0.addFlags(r2)     // Catch:{ Exception -> 0x027a }
            androidx.fragment.app.FragmentActivity r2 = r27.getParentActivity()     // Catch:{ Exception -> 0x027a }
            r2.startActivityForResult(r0, r1)     // Catch:{ Exception -> 0x027a }
            goto L_0x086f
        L_0x027a:
            r0 = move-exception
            im.bclpbkiauv.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x086f
        L_0x0280:
            im.bclpbkiauv.tgnet.TLRPC$User r0 = r8.currentUser
            if (r0 == 0) goto L_0x086f
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r0.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r0 = r0.action
            boolean r0 = r0 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_messageActionPhoneCall
            if (r0 == 0) goto L_0x086f
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r0.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageAction r0 = r0.action
            im.bclpbkiauv.tgnet.TLRPC$TL_messageActionPhoneCall r0 = (im.bclpbkiauv.tgnet.TLRPC.TL_messageActionPhoneCall) r0
            r1 = 2
            int r2 = r0.flags
            r3 = 4
            r2 = r2 & r3
            if (r2 == 0) goto L_0x029f
            r1 = 2
            goto L_0x02a0
        L_0x029f:
            r1 = 1
        L_0x02a0:
            byte r2 = im.bclpbkiauv.messenger.ApplicationLoader.mbytAVideoCallBusy
            if (r2 != 0) goto L_0x0328
            int r2 = r8.currentAccount
            im.bclpbkiauv.messenger.MessagesController r2 = im.bclpbkiauv.messenger.MessagesController.getInstance(r2)
            android.os.Bundle r3 = r8.arguments
            java.lang.String r4 = "user_id"
            r5 = 0
            int r3 = r3.getInt(r4, r5)
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            im.bclpbkiauv.tgnet.TLRPC$User r2 = r2.getUser(r3)
            boolean r3 = r2.mutual_contact
            if (r3 == 0) goto L_0x031a
            int r3 = r8.currentAccount
            im.bclpbkiauv.tgnet.ConnectionsManager r3 = im.bclpbkiauv.tgnet.ConnectionsManager.getInstance(r3)
            int r3 = r3.getConnectionState()
            if (r3 == r7) goto L_0x030c
            if (r3 != r15) goto L_0x02cf
            goto L_0x030c
        L_0x02cf:
            android.content.Intent r5 = new android.content.Intent
            r5.<init>()
            androidx.fragment.app.FragmentActivity r6 = r27.getParentActivity()
            java.lang.Class<im.bclpbkiauv.ui.hui.visualcall.VisualCallActivity> r7 = im.bclpbkiauv.ui.hui.visualcall.VisualCallActivity.class
            r5.setClass(r6, r7)
            java.lang.String r6 = "CallType"
            r5.putExtra(r6, r1)
            java.util.ArrayList r6 = new java.util.ArrayList
            r6.<init>()
            android.os.Bundle r7 = r8.arguments
            r9 = 0
            int r4 = r7.getInt(r4, r9)
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r6.add(r4)
            java.lang.String r4 = "ArrayUser"
            r5.putExtra(r4, r6)
            java.util.ArrayList r4 = new java.util.ArrayList
            r4.<init>()
            java.lang.String r7 = "channel"
            r5.putExtra(r7, r4)
            androidx.fragment.app.FragmentActivity r4 = r27.getParentActivity()
            r4.startActivity(r5)
            goto L_0x0319
        L_0x030c:
            r4 = 2131695607(0x7f0f17f7, float:1.9020404E38)
            java.lang.String r5 = "visual_call_no_network"
            java.lang.String r4 = im.bclpbkiauv.messenger.LocaleController.getString(r5, r4)
            im.bclpbkiauv.ui.components.toast.ToastUtils.show((java.lang.CharSequence) r4)
        L_0x0319:
            goto L_0x0332
        L_0x031a:
            r3 = 2131695606(0x7f0f17f6, float:1.9020402E38)
            java.lang.String r4 = "visual_call_no_friend_tip"
            java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r3)
            im.bclpbkiauv.ui.components.toast.ToastUtils.show((java.lang.CharSequence) r3)
            goto L_0x0332
        L_0x0328:
            byte r2 = im.bclpbkiauv.messenger.ApplicationLoader.mbytAVideoCallBusy
            if (r2 == r12) goto L_0x0333
            byte r2 = im.bclpbkiauv.messenger.ApplicationLoader.mbytAVideoCallBusy
            r3 = 4
            if (r2 != r3) goto L_0x0332
            goto L_0x0333
        L_0x0332:
            goto L_0x0340
        L_0x0333:
            r2 = 2131695586(0x7f0f17e2, float:1.902036E38)
            java.lang.String r3 = "visual_call_busing_tip"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            im.bclpbkiauv.ui.components.toast.ToastUtils.show((java.lang.CharSequence) r2)
        L_0x0340:
            goto L_0x086f
        L_0x0342:
            im.bclpbkiauv.messenger.MessagesController r0 = r27.getMessagesController()
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r1.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r1 = r1.media
            int r1 = r1.user_id
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            im.bclpbkiauv.tgnet.TLRPC$User r0 = r0.getUser(r1)
            if (r0 == 0) goto L_0x086f
            im.bclpbkiauv.ui.hui.contacts.AddContactsInfoActivity r1 = new im.bclpbkiauv.ui.hui.contacts.AddContactsInfoActivity
            r1.<init>(r13, r0)
            r8.presentFragment(r1)
            goto L_0x086f
        L_0x0362:
            im.bclpbkiauv.ui.actionbar.AlertDialog$Builder r0 = new im.bclpbkiauv.ui.actionbar.AlertDialog$Builder
            androidx.fragment.app.FragmentActivity r1 = r27.getParentActivity()
            r0.<init>((android.content.Context) r1)
            r1 = 2131694492(0x7f0f139c, float:1.9018142E38)
            java.lang.String r2 = "UnpinMessageAlertTitle"
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r1)
            r0.setTitle(r1)
            r1 = 2131694491(0x7f0f139b, float:1.901814E38)
            java.lang.String r2 = "UnpinMessageAlert"
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r1)
            r0.setMessage(r1)
            r1 = 2131694490(0x7f0f139a, float:1.9018138E38)
            java.lang.String r2 = "UnpinMessage"
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r2, r1)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$ZU7UGP28Zv9Qn44JPrj8uWh0fEc r2 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$ZU7UGP28Zv9Qn44JPrj8uWh0fEc
            r2.<init>()
            r0.setPositiveButton(r1, r2)
            java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r10, r9)
            r0.setNegativeButton(r1, r13)
            im.bclpbkiauv.ui.actionbar.AlertDialog r1 = r0.create()
            r8.showDialog(r1)
            goto L_0x086f
        L_0x03a4:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            int r0 = r0.getId()
            im.bclpbkiauv.ui.actionbar.AlertDialog$Builder r1 = new im.bclpbkiauv.ui.actionbar.AlertDialog$Builder
            androidx.fragment.app.FragmentActivity r3 = r27.getParentActivity()
            r1.<init>((android.content.Context) r3)
            r3 = 2131693065(0x7f0f0e09, float:1.9015248E38)
            java.lang.String r4 = "PinMessageAlertTitle"
            java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r3)
            r1.setTitle(r3)
            im.bclpbkiauv.tgnet.TLRPC$User r3 = r8.currentUser
            if (r3 == 0) goto L_0x03d6
            r2 = 2131693064(0x7f0f0e08, float:1.9015246E38)
            java.lang.String r3 = "PinMessageAlertChat"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r1.setMessage(r2)
            boolean[] r2 = new boolean[r15]
            r3 = 0
            r2[r3] = r3
            goto L_0x0474
        L_0x03d6:
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r8.currentChat
            boolean r3 = im.bclpbkiauv.messenger.ChatObject.isChannel(r3)
            if (r3 == 0) goto L_0x03e4
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r8.currentChat
            boolean r3 = r3.megagroup
            if (r3 != 0) goto L_0x03ee
        L_0x03e4:
            im.bclpbkiauv.tgnet.TLRPC$Chat r3 = r8.currentChat
            if (r3 == 0) goto L_0x0463
            boolean r3 = im.bclpbkiauv.messenger.ChatObject.isChannel(r3)
            if (r3 != 0) goto L_0x0463
        L_0x03ee:
            r3 = 2131693062(0x7f0f0e06, float:1.9015242E38)
            java.lang.String r4 = "PinMessageAlert"
            java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r3)
            r1.setMessage(r3)
            boolean[] r3 = new boolean[r15]
            r4 = 0
            r3[r4] = r15
            android.widget.FrameLayout r4 = new android.widget.FrameLayout
            androidx.fragment.app.FragmentActivity r7 = r27.getParentActivity()
            r4.<init>(r7)
            im.bclpbkiauv.ui.cells.CheckBoxCell r7 = new im.bclpbkiauv.ui.cells.CheckBoxCell
            androidx.fragment.app.FragmentActivity r11 = r27.getParentActivity()
            r7.<init>(r11, r15)
            r11 = 0
            android.graphics.drawable.Drawable r12 = im.bclpbkiauv.ui.actionbar.Theme.getSelectorDrawable(r11)
            r7.setBackgroundDrawable(r12)
            r12 = 2131693066(0x7f0f0e0a, float:1.901525E38)
            java.lang.Object[] r14 = new java.lang.Object[r11]
            java.lang.String r13 = "PinNotify"
            java.lang.String r12 = im.bclpbkiauv.messenger.LocaleController.formatString(r13, r12, r14)
            r7.setText(r12, r2, r15, r11)
            boolean r2 = im.bclpbkiauv.messenger.LocaleController.isRTL
            r11 = 1090519040(0x41000000, float:8.0)
            if (r2 == 0) goto L_0x0432
            int r2 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r11)
            goto L_0x0433
        L_0x0432:
            r2 = 0
        L_0x0433:
            boolean r12 = im.bclpbkiauv.messenger.LocaleController.isRTL
            if (r12 == 0) goto L_0x0439
            r11 = 0
            goto L_0x043d
        L_0x0439:
            int r11 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r11)
        L_0x043d:
            r12 = 0
            r7.setPadding(r2, r12, r11, r12)
            r20 = -1082130432(0xffffffffbf800000, float:-1.0)
            r21 = 1111490560(0x42400000, float:48.0)
            r22 = 51
            r23 = 1090519040(0x41000000, float:8.0)
            r24 = 0
            r25 = 1090519040(0x41000000, float:8.0)
            r26 = 0
            android.widget.FrameLayout$LayoutParams r2 = im.bclpbkiauv.ui.components.LayoutHelper.createFrame(r20, r21, r22, r23, r24, r25, r26)
            r4.addView(r7, r2)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$dOETJKUxsNL5kfJCRj8ReTBtvEs r2 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$dOETJKUxsNL5kfJCRj8ReTBtvEs
            r2.<init>(r3)
            r7.setOnClickListener(r2)
            r1.setView(r4)
            r2 = r3
            goto L_0x0474
        L_0x0463:
            r2 = 2131693063(0x7f0f0e07, float:1.9015244E38)
            java.lang.String r3 = "PinMessageAlertChannel"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r1.setMessage(r2)
            boolean[] r2 = new boolean[r15]
            r3 = 0
            r2[r3] = r3
        L_0x0474:
            java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r6, r5)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$VxnDDU_tEUyPoP_aJcNASGsEj_o r4 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$VxnDDU_tEUyPoP_aJcNASGsEj_o
            r4.<init>(r0, r2)
            r1.setPositiveButton(r3, r4)
            java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r10, r9)
            r4 = 0
            r1.setNegativeButton(r3, r4)
            im.bclpbkiauv.ui.actionbar.AlertDialog r3 = r1.create()
            r8.showDialog(r3)
            goto L_0x086f
        L_0x0491:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObjectToEditCaption
            if (r0 == 0) goto L_0x0499
            r8.startEditingMessageObject(r0)
            goto L_0x049e
        L_0x0499:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            r8.startEditingMessageObject(r0)
        L_0x049e:
            r1 = 0
            r8.selectedObject = r1
            r8.selectedObjectGroup = r1
            r8.selectedObjectToEditCaption = r1
            goto L_0x086f
        L_0x04a7:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r0 = r8.chatActivityEnterView
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r1 = r1.getDocument()
            r0.removeRecentGif(r1)
            goto L_0x086f
        L_0x04b4:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r0 = r0.getDocument()
            im.bclpbkiauv.messenger.MessagesController r1 = r27.getMessagesController()
            im.bclpbkiauv.messenger.MessageObject r2 = r8.selectedObject
            r1.saveGif(r2, r0)
            r27.showGifHint()
            im.bclpbkiauv.ui.components.ChatActivityEnterView r1 = r8.chatActivityEnterView
            r1.addRecentGif(r0)
            goto L_0x086f
        L_0x04cd:
            int r0 = android.os.Build.VERSION.SDK_INT
            r1 = 23
            if (r0 < r1) goto L_0x04f1
            androidx.fragment.app.FragmentActivity r0 = r27.getParentActivity()
            int r0 = r0.checkSelfPermission(r14)
            if (r0 == 0) goto L_0x04f1
            androidx.fragment.app.FragmentActivity r0 = r27.getParentActivity()
            java.lang.String[] r1 = new java.lang.String[]{r14}
            r2 = 4
            r0.requestPermissions(r1, r2)
            r1 = 0
            r8.selectedObject = r1
            r8.selectedObjectGroup = r1
            r8.selectedObjectToEditCaption = r1
            return
        L_0x04f1:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r0 = r0.getDocument()
            java.lang.String r0 = im.bclpbkiauv.messenger.FileLoader.getDocumentFileName(r0)
            boolean r1 = android.text.TextUtils.isEmpty(r0)
            if (r1 == 0) goto L_0x0507
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            java.lang.String r0 = r1.getFileName()
        L_0x0507:
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r1.messageOwner
            java.lang.String r1 = r1.attachPath
            if (r1 == 0) goto L_0x0521
            int r3 = r1.length()
            if (r3 <= 0) goto L_0x0521
            java.io.File r3 = new java.io.File
            r3.<init>(r1)
            boolean r4 = r3.exists()
            if (r4 != 0) goto L_0x0521
            r1 = 0
        L_0x0521:
            if (r1 == 0) goto L_0x0529
            int r3 = r1.length()
            if (r3 != 0) goto L_0x0535
        L_0x0529:
            im.bclpbkiauv.messenger.MessageObject r3 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r3 = r3.messageOwner
            java.io.File r3 = im.bclpbkiauv.messenger.FileLoader.getPathToMessage(r3)
            java.lang.String r1 = r3.toString()
        L_0x0535:
            androidx.fragment.app.FragmentActivity r3 = r27.getParentActivity()
            im.bclpbkiauv.messenger.MessageObject r4 = r8.selectedObject
            boolean r4 = r4.isMusic()
            if (r4 == 0) goto L_0x0542
            r7 = 3
        L_0x0542:
            im.bclpbkiauv.messenger.MessageObject r4 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r4 = r4.getDocument()
            if (r4 == 0) goto L_0x0552
            im.bclpbkiauv.messenger.MessageObject r2 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r2 = r2.getDocument()
            java.lang.String r2 = r2.mime_type
        L_0x0552:
            im.bclpbkiauv.messenger.MediaController.saveFile(r1, r3, r7, r0, r2)
            goto L_0x086f
        L_0x0557:
            im.bclpbkiauv.ui.components.StickersAlert r0 = new im.bclpbkiauv.ui.components.StickersAlert
            androidx.fragment.app.FragmentActivity r2 = r27.getParentActivity()
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$InputStickerSet r4 = r1.getInputStickerSet()
            r5 = 0
            android.widget.FrameLayout r1 = r8.bottomOverlayChat
            int r1 = r1.getVisibility()
            if (r1 == 0) goto L_0x057a
            im.bclpbkiauv.tgnet.TLRPC$Chat r1 = r8.currentChat
            if (r1 == 0) goto L_0x0576
            boolean r1 = im.bclpbkiauv.messenger.ChatObject.canSendStickers(r1)
            if (r1 == 0) goto L_0x057a
        L_0x0576:
            im.bclpbkiauv.ui.components.ChatActivityEnterView r1 = r8.chatActivityEnterView
            r6 = r1
            goto L_0x057b
        L_0x057a:
            r6 = 0
        L_0x057b:
            r1 = r0
            r3 = r27
            r1.<init>(r2, r3, r4, r5, r6)
            r8.showDialog(r0)
            goto L_0x086f
        L_0x0586:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            r8.showFieldPanelForReply(r0)
            goto L_0x086f
        L_0x058d:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r0.messageOwner
            java.lang.String r0 = r0.attachPath
            if (r0 == 0) goto L_0x05a7
            int r2 = r0.length()
            if (r2 <= 0) goto L_0x05a7
            java.io.File r2 = new java.io.File
            r2.<init>(r0)
            boolean r3 = r2.exists()
            if (r3 != 0) goto L_0x05a7
            r0 = 0
        L_0x05a7:
            if (r0 == 0) goto L_0x05b2
            int r2 = r0.length()
            if (r2 != 0) goto L_0x05b0
            goto L_0x05b2
        L_0x05b0:
            r2 = r0
            goto L_0x05bf
        L_0x05b2:
            im.bclpbkiauv.messenger.MessageObject r2 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r2.messageOwner
            java.io.File r2 = im.bclpbkiauv.messenger.FileLoader.getPathToMessage(r2)
            java.lang.String r0 = r2.toString()
            r2 = r0
        L_0x05bf:
            android.content.Intent r0 = new android.content.Intent
            java.lang.String r3 = "android.intent.action.SEND"
            r0.<init>(r3)
            r3 = r0
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Document r0 = r0.getDocument()
            java.lang.String r0 = r0.mime_type
            r3.setType(r0)
            java.io.File r0 = new java.io.File
            r0.<init>(r2)
            r4 = r0
            int r0 = android.os.Build.VERSION.SDK_INT
            r5 = 24
            java.lang.String r6 = "android.intent.extra.STREAM"
            if (r0 < r5) goto L_0x05fa
            androidx.fragment.app.FragmentActivity r0 = r27.getParentActivity()     // Catch:{ Exception -> 0x05f1 }
            java.lang.String r5 = "im.bclpbkiauv.messenger.provider"
            android.net.Uri r0 = androidx.core.content.FileProvider.getUriForFile(r0, r5, r4)     // Catch:{ Exception -> 0x05f1 }
            r3.putExtra(r6, r0)     // Catch:{ Exception -> 0x05f1 }
            r3.setFlags(r15)     // Catch:{ Exception -> 0x05f1 }
            goto L_0x05f9
        L_0x05f1:
            r0 = move-exception
            android.net.Uri r5 = android.net.Uri.fromFile(r4)
            r3.putExtra(r6, r5)
        L_0x05f9:
            goto L_0x0601
        L_0x05fa:
            android.net.Uri r0 = android.net.Uri.fromFile(r4)
            r3.putExtra(r6, r0)
        L_0x0601:
            androidx.fragment.app.FragmentActivity r0 = r27.getParentActivity()     // Catch:{ all -> 0x0617 }
            java.lang.String r5 = "ShareFile"
            r6 = 2131693926(0x7f0f1166, float:1.9016994E38)
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.getString(r5, r6)     // Catch:{ all -> 0x0617 }
            android.content.Intent r5 = android.content.Intent.createChooser(r3, r5)     // Catch:{ all -> 0x0617 }
            r0.startActivityForResult(r5, r1)     // Catch:{ all -> 0x0617 }
            goto L_0x086f
        L_0x0617:
            r0 = move-exception
            goto L_0x086f
        L_0x061a:
            r0 = 0
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r1.messageOwner
            java.lang.String r1 = r1.attachPath
            boolean r1 = android.text.TextUtils.isEmpty(r1)
            if (r1 != 0) goto L_0x0639
            java.io.File r1 = new java.io.File
            im.bclpbkiauv.messenger.MessageObject r2 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r2 = r2.messageOwner
            java.lang.String r2 = r2.attachPath
            r1.<init>(r2)
            boolean r2 = r1.exists()
            if (r2 == 0) goto L_0x0639
            r0 = r1
        L_0x0639:
            if (r0 != 0) goto L_0x064a
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r1.messageOwner
            java.io.File r1 = im.bclpbkiauv.messenger.FileLoader.getPathToMessage(r1)
            boolean r2 = r1.exists()
            if (r2 == 0) goto L_0x064a
            r0 = r1
        L_0x064a:
            if (r0 == 0) goto L_0x086f
            java.lang.String r1 = r0.getName()
            java.lang.String r1 = r1.toLowerCase()
            java.lang.String r2 = "attheme"
            boolean r1 = r1.endsWith(r2)
            r2 = 2131689824(0x7f0f0160, float:1.9008674E38)
            java.lang.String r3 = "AppName"
            if (r1 == 0) goto L_0x06b5
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            java.lang.String r1 = r1.getDocumentName()
            r4 = 0
            im.bclpbkiauv.ui.actionbar.Theme$ThemeInfo r1 = im.bclpbkiauv.ui.actionbar.Theme.applyThemeFile(r0, r1, r4, r15)
            if (r1 == 0) goto L_0x0677
            im.bclpbkiauv.ui.ThemePreviewActivity r2 = new im.bclpbkiauv.ui.ThemePreviewActivity
            r2.<init>(r1)
            r8.presentFragment(r2)
            goto L_0x06b3
        L_0x0677:
            r4 = -1
            r8.scrollToPositionOnRecreate = r4
            androidx.fragment.app.FragmentActivity r4 = r27.getParentActivity()
            if (r4 != 0) goto L_0x0688
            r2 = 0
            r8.selectedObject = r2
            r8.selectedObjectGroup = r2
            r8.selectedObjectToEditCaption = r2
            return
        L_0x0688:
            im.bclpbkiauv.ui.actionbar.AlertDialog$Builder r4 = new im.bclpbkiauv.ui.actionbar.AlertDialog$Builder
            androidx.fragment.app.FragmentActivity r7 = r27.getParentActivity()
            r4.<init>((android.content.Context) r7)
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r4.setTitle(r2)
            r2 = 2131691647(0x7f0f087f, float:1.9012372E38)
            java.lang.String r3 = "IncorrectTheme"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r4.setMessage(r2)
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r6, r5)
            r3 = 0
            r4.setPositiveButton(r2, r3)
            im.bclpbkiauv.ui.actionbar.AlertDialog r2 = r4.create()
            r8.showDialog(r2)
        L_0x06b3:
            goto L_0x086f
        L_0x06b5:
            im.bclpbkiauv.messenger.LocaleController r1 = im.bclpbkiauv.messenger.LocaleController.getInstance()
            int r4 = r8.currentAccount
            boolean r1 = r1.applyLanguageFile(r0, r4)
            if (r1 == 0) goto L_0x06cb
            im.bclpbkiauv.ui.LanguageSelectActivity r1 = new im.bclpbkiauv.ui.LanguageSelectActivity
            r1.<init>()
            r8.presentFragment(r1)
            goto L_0x086f
        L_0x06cb:
            androidx.fragment.app.FragmentActivity r1 = r27.getParentActivity()
            if (r1 != 0) goto L_0x06d9
            r1 = 0
            r8.selectedObject = r1
            r8.selectedObjectGroup = r1
            r8.selectedObjectToEditCaption = r1
            return
        L_0x06d9:
            im.bclpbkiauv.ui.actionbar.AlertDialog$Builder r1 = new im.bclpbkiauv.ui.actionbar.AlertDialog$Builder
            androidx.fragment.app.FragmentActivity r4 = r27.getParentActivity()
            r1.<init>((android.content.Context) r4)
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r1.setTitle(r2)
            r2 = 2131691645(0x7f0f087d, float:1.9012368E38)
            java.lang.String r3 = "IncorrectLocalization"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r2)
            r1.setMessage(r2)
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.getString(r6, r5)
            r3 = 0
            r1.setPositiveButton(r2, r3)
            im.bclpbkiauv.ui.actionbar.AlertDialog r2 = r1.create()
            r8.showDialog(r2)
            goto L_0x086f
        L_0x0706:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r0.messageOwner
            java.lang.String r0 = r0.attachPath
            if (r0 == 0) goto L_0x0720
            int r1 = r0.length()
            if (r1 <= 0) goto L_0x0720
            java.io.File r1 = new java.io.File
            r1.<init>(r0)
            boolean r2 = r1.exists()
            if (r2 != 0) goto L_0x0720
            r0 = 0
        L_0x0720:
            if (r0 == 0) goto L_0x0728
            int r1 = r0.length()
            if (r1 != 0) goto L_0x0734
        L_0x0728:
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r1 = r1.messageOwner
            java.io.File r1 = im.bclpbkiauv.messenger.FileLoader.getPathToMessage(r1)
            java.lang.String r0 = r1.toString()
        L_0x0734:
            int r1 = android.os.Build.VERSION.SDK_INT
            r2 = 23
            if (r1 < r2) goto L_0x0758
            androidx.fragment.app.FragmentActivity r1 = r27.getParentActivity()
            int r1 = r1.checkSelfPermission(r14)
            if (r1 == 0) goto L_0x0758
            androidx.fragment.app.FragmentActivity r1 = r27.getParentActivity()
            java.lang.String[] r2 = new java.lang.String[]{r14}
            r3 = 4
            r1.requestPermissions(r2, r3)
            r1 = 0
            r8.selectedObject = r1
            r8.selectedObjectGroup = r1
            r8.selectedObjectToEditCaption = r1
            return
        L_0x0758:
            r1 = 0
            androidx.fragment.app.FragmentActivity r2 = r27.getParentActivity()
            r3 = 0
            im.bclpbkiauv.messenger.MediaController.saveFile(r0, r2, r3, r1, r1)
            goto L_0x086f
        L_0x0763:
            int r0 = android.os.Build.VERSION.SDK_INT
            r1 = 23
            if (r0 < r1) goto L_0x0787
            androidx.fragment.app.FragmentActivity r0 = r27.getParentActivity()
            int r0 = r0.checkSelfPermission(r14)
            if (r0 == 0) goto L_0x0787
            androidx.fragment.app.FragmentActivity r0 = r27.getParentActivity()
            java.lang.String[] r1 = new java.lang.String[]{r14}
            r2 = 4
            r0.requestPermissions(r1, r2)
            r1 = 0
            r8.selectedObject = r1
            r8.selectedObjectGroup = r1
            r8.selectedObjectToEditCaption = r1
            return
        L_0x0787:
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r0 = r8.selectedObjectGroup
            if (r0 == 0) goto L_0x07a8
            r0 = 0
        L_0x078c:
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = r8.selectedObjectGroup
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r1.messages
            int r1 = r1.size()
            if (r0 >= r1) goto L_0x07a6
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = r8.selectedObjectGroup
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r1.messages
            java.lang.Object r1 = r1.get(r0)
            im.bclpbkiauv.messenger.MessageObject r1 = (im.bclpbkiauv.messenger.MessageObject) r1
            r8.saveMessageToGallery(r1)
            int r0 = r0 + 1
            goto L_0x078c
        L_0x07a6:
            goto L_0x086f
        L_0x07a8:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            r8.saveMessageToGallery(r0)
            goto L_0x086f
        L_0x07af:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.tgnet.TLRPC$Message r0 = r0.messageOwner
            im.bclpbkiauv.tgnet.TLRPC$MessageMedia r0 = r0.media
            java.lang.String r0 = r0.phone_number
            im.bclpbkiauv.messenger.AndroidUtilities.addToClipboard(r0)
            goto L_0x086f
        L_0x07bc:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = r8.selectedObjectGroup
            java.lang.CharSequence r0 = r8.getMessageCaption(r0, r1)
            if (r0 == 0) goto L_0x07cb
            im.bclpbkiauv.messenger.AndroidUtilities.addToClipboard(r0)
            goto L_0x086f
        L_0x07cb:
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            r2 = 0
            java.lang.String r1 = r8.getMessageContent(r1, r2, r2)
            im.bclpbkiauv.messenger.AndroidUtilities.addToClipboard(r1)
            goto L_0x086f
        L_0x07d7:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            r8.forwardingMessage = r0
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r0 = r8.selectedObjectGroup
            r8.forwardingMessageGroup = r0
            android.os.Bundle r0 = new android.os.Bundle
            r0.<init>()
            java.lang.String r1 = "onlySelect"
            r0.putBoolean(r1, r15)
            java.lang.String r1 = "dialogsType"
            r0.putInt(r1, r12)
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = r8.forwardingMessageGroup
            if (r1 != 0) goto L_0x07f3
            goto L_0x07f9
        L_0x07f3:
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r1 = r1.messages
            int r15 = r1.size()
        L_0x07f9:
            java.lang.String r1 = "messagesCount"
            r0.putInt(r1, r15)
            im.bclpbkiauv.ui.DialogsActivity r1 = new im.bclpbkiauv.ui.DialogsActivity
            r1.<init>(r0)
            im.bclpbkiauv.messenger.MessageObject r2 = r8.selectedObject
            im.bclpbkiauv.ui.DialogsActivity.setTempForwardMessageObject(r2)
            r1.setDelegate(r8)
            r8.presentFragment(r1)
            goto L_0x086f
        L_0x080f:
            androidx.fragment.app.FragmentActivity r0 = r27.getParentActivity()
            if (r0 != 0) goto L_0x081d
            r1 = 0
            r8.selectedObject = r1
            r8.selectedObjectToEditCaption = r1
            r8.selectedObjectGroup = r1
            return
        L_0x081d:
            im.bclpbkiauv.messenger.MessageObject r0 = r8.selectedObject
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r1 = r8.selectedObjectGroup
            r8.createDeleteMessagesAlert(r0, r1)
            goto L_0x086f
        L_0x0825:
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r0 = r8.selectedObjectGroup
            if (r0 == 0) goto L_0x0858
            r0 = 1
            r1 = 0
        L_0x082b:
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r2 = r8.selectedObjectGroup
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r2 = r2.messages
            int r2 = r2.size()
            if (r1 >= r2) goto L_0x084e
            im.bclpbkiauv.messenger.SendMessagesHelper r2 = r27.getSendMessagesHelper()
            im.bclpbkiauv.messenger.MessageObject$GroupedMessages r3 = r8.selectedObjectGroup
            java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r3.messages
            java.lang.Object r3 = r3.get(r1)
            im.bclpbkiauv.messenger.MessageObject r3 = (im.bclpbkiauv.messenger.MessageObject) r3
            r4 = 0
            boolean r2 = r2.retrySendMessage(r3, r4)
            if (r2 != 0) goto L_0x084b
            r0 = 0
        L_0x084b:
            int r1 = r1 + 1
            goto L_0x082b
        L_0x084e:
            if (r0 == 0) goto L_0x0857
            boolean r1 = r8.inScheduleMode
            if (r1 != 0) goto L_0x0857
            r27.moveScrollToLastMessage()
        L_0x0857:
            goto L_0x086f
        L_0x0858:
            im.bclpbkiauv.messenger.SendMessagesHelper r0 = r27.getSendMessagesHelper()
            im.bclpbkiauv.messenger.MessageObject r1 = r8.selectedObject
            r2 = 0
            boolean r0 = r0.retrySendMessage(r1, r2)
            if (r0 == 0) goto L_0x086f
            r27.updateVisibleRows()
            boolean r0 = r8.inScheduleMode
            if (r0 != 0) goto L_0x086f
            r27.moveScrollToLastMessage()
        L_0x086f:
            r1 = 0
            r8.selectedObject = r1
            r8.selectedObjectGroup = r1
            r8.selectedObjectToEditCaption = r1
            return
        L_0x0877:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.processSelectedOption(im.bclpbkiauv.ui.constants.Constants$ChatSelectionPopMenuEnum):void");
    }

    /* renamed from: im.bclpbkiauv.ui.ChatActivity$76  reason: invalid class name */
    static /* synthetic */ class AnonymousClass76 {
        static final /* synthetic */ int[] $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum;

        static {
            int[] iArr = new int[Constants.ChatSelectionPopMenuEnum.values().length];
            $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum = iArr;
            try {
                iArr[Constants.ChatSelectionPopMenuEnum.MSG_SEND_RETRY.ordinal()] = 1;
            } catch (NoSuchFieldError e) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_DELETE.ordinal()] = 2;
            } catch (NoSuchFieldError e2) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_FORWARD.ordinal()] = 3;
            } catch (NoSuchFieldError e3) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_COPY1.ordinal()] = 4;
            } catch (NoSuchFieldError e4) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_COPY2.ordinal()] = 5;
            } catch (NoSuchFieldError e5) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.PIC_SAVE_TO_GALLERY1.ordinal()] = 6;
            } catch (NoSuchFieldError e6) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.PIC_SAVE_TO_GALLERY2.ordinal()] = 7;
            } catch (NoSuchFieldError e7) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.LANGUAGE_OR_THEME.ordinal()] = 8;
            } catch (NoSuchFieldError e8) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_SHARE.ordinal()] = 9;
            } catch (NoSuchFieldError e9) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_REPLAY.ordinal()] = 10;
            } catch (NoSuchFieldError e10) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.STICKER_OR_MASKS.ordinal()] = 11;
            } catch (NoSuchFieldError e11) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_DOWNLOAD.ordinal()] = 12;
            } catch (NoSuchFieldError e12) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.GIF_SAVE.ordinal()] = 13;
            } catch (NoSuchFieldError e13) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.GIF_REMOVE.ordinal()] = 14;
            } catch (NoSuchFieldError e14) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_EDIT.ordinal()] = 15;
            } catch (NoSuchFieldError e15) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_PIN.ordinal()] = 16;
            } catch (NoSuchFieldError e16) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_UNPIN.ordinal()] = 17;
            } catch (NoSuchFieldError e17) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.CONTACT_ADD.ordinal()] = 18;
            } catch (NoSuchFieldError e18) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.CALL_BACK_OR_CALL_AGAIN.ordinal()] = 19;
            } catch (NoSuchFieldError e19) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.CALL2.ordinal()] = 20;
            } catch (NoSuchFieldError e20) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.CALL1.ordinal()] = 21;
            } catch (NoSuchFieldError e21) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_FAVE_ADD.ordinal()] = 22;
            } catch (NoSuchFieldError e22) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_FAVE_REMOVE.ordinal()] = 23;
            } catch (NoSuchFieldError e23) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_COPY_LINK.ordinal()] = 24;
            } catch (NoSuchFieldError e24) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_REPORT.ordinal()] = 25;
            } catch (NoSuchFieldError e25) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_CANCEL_SENDING.ordinal()] = 26;
            } catch (NoSuchFieldError e26) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.POLL_CANCEL.ordinal()] = 27;
            } catch (NoSuchFieldError e27) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.POLL_STOP.ordinal()] = 28;
            } catch (NoSuchFieldError e28) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.QR_CODE_PARSE.ordinal()] = 29;
            } catch (NoSuchFieldError e29) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_SEND_NOW.ordinal()] = 30;
            } catch (NoSuchFieldError e30) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.MSG_SCHEDULE_EDIT_TIME.ordinal()] = 31;
            } catch (NoSuchFieldError e31) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.TRANSLATE.ordinal()] = 32;
            } catch (NoSuchFieldError e32) {
            }
            try {
                $SwitchMap$im$bclpbkiauv$ui$constants$Constants$ChatSelectionPopMenuEnum[Constants.ChatSelectionPopMenuEnum.TRANSLATE_CANCEL.ordinal()] = 33;
            } catch (NoSuchFieldError e33) {
            }
        }
    }

    static /* synthetic */ void lambda$processSelectedOption$85(boolean[] checks, View v) {
        checks[0] = !checks[0];
        ((CheckBoxCell) v).setChecked(checks[0], true);
    }

    public /* synthetic */ void lambda$processSelectedOption$86$ChatActivity(int mid, boolean[] checks, DialogInterface dialogInterface, int i) {
        getMessagesController().pinMessage(this.currentChat, this.currentUser, mid, checks[0]);
    }

    public /* synthetic */ void lambda$processSelectedOption$87$ChatActivity(DialogInterface dialogInterface, int i) {
        getMessagesController().pinMessage(this.currentChat, this.currentUser, 0, false);
    }

    static /* synthetic */ void lambda$null$88(TLObject response) {
        if (response != null) {
            TLRPC.TL_exportedMessageLink exportedMessageLink = (TLRPC.TL_exportedMessageLink) response;
            try {
                ((ClipboardManager) ApplicationLoader.applicationContext.getSystemService("clipboard")).setPrimaryClip(ClipData.newPlainText("label", exportedMessageLink.link));
                if (exportedMessageLink.link.contains("/c/")) {
                    ToastUtils.show((int) R.string.LinkCopiedPrivate);
                } else {
                    ToastUtils.show((int) R.string.LinkCopied);
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }
    }

    static /* synthetic */ void lambda$processSelectedOption$90(AlertDialog[] progressDialog) {
        try {
            progressDialog[0].dismiss();
        } catch (Throwable th) {
        }
        progressDialog[0] = null;
    }

    public /* synthetic */ void lambda$processSelectedOption$92$ChatActivity(AlertDialog[] progressDialog, int requestId) {
        if (progressDialog[0] != null) {
            progressDialog[0].setOnCancelListener(new DialogInterface.OnCancelListener(requestId) {
                private final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void onCancel(DialogInterface dialogInterface) {
                    ChatActivity.this.lambda$null$91$ChatActivity(this.f$1, dialogInterface);
                }
            });
            showDialog(progressDialog[0]);
        }
    }

    public /* synthetic */ void lambda$null$91$ChatActivity(int requestId, DialogInterface dialog) {
        getConnectionsManager().cancelRequest(requestId, true);
    }

    public /* synthetic */ void lambda$processSelectedOption$98$ChatActivity(MessageObject object, DialogInterface dialogInterface, int i) {
        AlertDialog[] progressDialog = {new AlertDialog(getParentActivity(), 3)};
        TLRPC.TL_messages_editMessage req = new TLRPC.TL_messages_editMessage();
        TLRPC.TL_messageMediaPoll mediaPoll = (TLRPC.TL_messageMediaPoll) object.messageOwner.media;
        TLRPC.TL_inputMediaPoll poll = new TLRPC.TL_inputMediaPoll();
        poll.poll = new TLRPC.TL_poll();
        poll.poll.id = mediaPoll.poll.id;
        poll.poll.question = mediaPoll.poll.question;
        poll.poll.answers = mediaPoll.poll.answers;
        poll.poll.closed = true;
        req.media = poll;
        req.peer = getMessagesController().getInputPeer((int) this.dialog_id);
        req.id = object.getId();
        req.flags |= 16384;
        AndroidUtilities.runOnUIThread(new Runnable(progressDialog, getConnectionsManager().sendRequest(req, new RequestDelegate(progressDialog, req) {
            private final /* synthetic */ AlertDialog[] f$1;
            private final /* synthetic */ TLRPC.TL_messages_editMessage f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                ChatActivity.this.lambda$null$95$ChatActivity(this.f$1, this.f$2, tLObject, tL_error);
            }
        })) {
            private final /* synthetic */ AlertDialog[] f$1;
            private final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                ChatActivity.this.lambda$null$97$ChatActivity(this.f$1, this.f$2);
            }
        }, 500);
    }

    public /* synthetic */ void lambda$null$95$ChatActivity(AlertDialog[] progressDialog, TLRPC.TL_messages_editMessage req, TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new Runnable(progressDialog) {
            private final /* synthetic */ AlertDialog[] f$0;

            {
                this.f$0 = r1;
            }

            public final void run() {
                ChatActivity.lambda$null$93(this.f$0);
            }
        });
        if (error == null) {
            getMessagesController().processUpdates((TLRPC.Updates) response, false);
        } else {
            AndroidUtilities.runOnUIThread(new Runnable(error, req) {
                private final /* synthetic */ TLRPC.TL_error f$1;
                private final /* synthetic */ TLRPC.TL_messages_editMessage f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    ChatActivity.this.lambda$null$94$ChatActivity(this.f$1, this.f$2);
                }
            });
        }
    }

    static /* synthetic */ void lambda$null$93(AlertDialog[] progressDialog) {
        try {
            progressDialog[0].dismiss();
        } catch (Throwable th) {
        }
        progressDialog[0] = null;
    }

    public /* synthetic */ void lambda$null$94$ChatActivity(TLRPC.TL_error error, TLRPC.TL_messages_editMessage req) {
        AlertsCreator.processError(this.currentAccount, error, this, req, new Object[0]);
    }

    public /* synthetic */ void lambda$null$97$ChatActivity(AlertDialog[] progressDialog, int requestId) {
        if (progressDialog[0] != null) {
            progressDialog[0].setOnCancelListener(new DialogInterface.OnCancelListener(requestId) {
                private final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void onCancel(DialogInterface dialogInterface) {
                    ChatActivity.this.lambda$null$96$ChatActivity(this.f$1, dialogInterface);
                }
            });
            showDialog(progressDialog[0]);
        }
    }

    public /* synthetic */ void lambda$null$96$ChatActivity(int requestId, DialogInterface dialog) {
        getConnectionsManager().cancelRequest(requestId, true);
    }

    public /* synthetic */ void lambda$processSelectedOption$101$ChatActivity(TLRPC.TL_messages_sendScheduledMessages req, TLObject response, TLRPC.TL_error error) {
        if (error == null) {
            MessagesController.getInstance(this.currentAccount).processUpdates((TLRPC.Updates) response, false);
            AndroidUtilities.runOnUIThread(new Runnable(req) {
                private final /* synthetic */ TLRPC.TL_messages_sendScheduledMessages f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    ChatActivity.this.lambda$null$99$ChatActivity(this.f$1);
                }
            });
        } else if (error.text != null) {
            AndroidUtilities.runOnUIThread(new Runnable(error) {
                private final /* synthetic */ TLRPC.TL_error f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    ChatActivity.this.lambda$null$100$ChatActivity(this.f$1);
                }
            });
        }
    }

    public /* synthetic */ void lambda$null$99$ChatActivity(TLRPC.TL_messages_sendScheduledMessages req) {
        NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.messagesDeleted, req.id, Integer.valueOf((int) (-this.dialog_id)), true);
    }

    public /* synthetic */ void lambda$null$100$ChatActivity(TLRPC.TL_error error) {
        if (error.text.startsWith("SLOWMODE_WAIT_")) {
            AlertsCreator.showSimpleToast(this, LocaleController.getString("SlowmodeSendError", R.string.SlowmodeSendError));
        } else if (error.text.equals("CHAT_SEND_MEDIA_FORBIDDEN")) {
            AlertsCreator.showSimpleToast(this, LocaleController.getString("AttachMediaRestrictedForever", R.string.AttachMediaRestrictedForever));
        } else {
            AlertsCreator.showSimpleToast(this, error.text);
        }
    }

    public /* synthetic */ void lambda$processSelectedOption$102$ChatActivity(MessageObject.GroupedMessages group, MessageObject message, boolean notify, int scheduleDate) {
        if (group != null) {
            SendMessagesHelper.getInstance(this.currentAccount).editMessage(group.messages.get(0), (String) null, false, this, (ArrayList<TLRPC.MessageEntity>) null, scheduleDate, (Runnable) null);
        } else {
            SendMessagesHelper.getInstance(this.currentAccount).editMessage(message, (String) null, false, this, (ArrayList<TLRPC.MessageEntity>) null, scheduleDate, (Runnable) null);
        }
    }

    private void translateStart(MessageObject message) {
    }

    /* access modifiers changed from: private */
    public void translateCancel(MessageObject message) {
    }

    private void convertAudioFile(final MessageObject message) {
        message.messageOwner.trans = "   ";
        message.messageOwner.istransing = true;
        updateVisibleRows();
        Disposable subscribe = Observable.create(new ObservableOnSubscribe<String>() {
            public void subscribe(final ObservableEmitter<String> e) throws Exception {
                File cacheFile = FileLoader.getPathToMessage(message.messageOwner);
                String fileName1 = cacheFile.getName();
                String path = cacheFile.getPath();
                final String convertPath = AudioFileUtils.getAudioEditStorageDirectory() + File.separator + (fileName1.substring(0, fileName1.lastIndexOf(46)) + AudioEditConstant.SUFFIX_PCM);
                if (AudioFileUtils.checkFileExist(convertPath)) {
                    e.onNext(convertPath);
                    return;
                }
                AudioFileUtils.confirmFolderExist(new File(convertPath).getParent());
                DecodeEngine.getInstance().convertMusicFileToPcmFile(path, convertPath, new DecodeOperateInterface() {
                    public void updateDecodeProgress(int decodeProgress) {
                    }

                    public void decodeSuccess() {
                        Log.e("TAG", "解碼完成 Path == " + convertPath);
                        e.onNext(convertPath);
                    }

                    public void decodeFail() {
                        Log.e("TAG", "文件解析失败 Path == " + convertPath);
                        e.onError(new Throwable("文件解析失败"));
                    }
                });
            }
        }).subscribeOn(Schedulers.io()).subscribe(new Consumer(message) {
            private final /* synthetic */ MessageObject f$1;

            {
                this.f$1 = r2;
            }

            public final void accept(Object obj) {
                ChatActivity.this.lambda$convertAudioFile$103$ChatActivity(this.f$1, (String) obj);
            }
        }, $$Lambda$ChatActivity$uEwGMdyqmvmBM0E4BGnLhVwa0.INSTANCE);
        if (subscribe != null) {
            translateAddTaskDisposable(String.valueOf(message.getId()), subscribe);
        }
    }

    public /* synthetic */ void lambda$convertAudioFile$103$ChatActivity(MessageObject message, String path) throws Exception {
        if (!TextUtils.isEmpty(path) && AudioFileUtils.checkFileExist(path)) {
            translateAccessToken(message, path);
        }
    }

    private void translateAddTaskDisposable(String tag, Disposable disposable) {
        if (this.mTaskDisposable.get(tag) != null) {
            this.mTaskDisposable.get(tag).add(disposable);
            return;
        }
        CompositeDisposable compositeDisposable = new CompositeDisposable();
        compositeDisposable.add(disposable);
        this.mTaskDisposable.put(tag, compositeDisposable);
    }

    private void translateUnSubscribeAllAudioTask() {
        RxHelper.getInstance().lambda$sendSimpleRequest$0$RxHelper(this.TAG);
        this.mTaskDisposable.clear();
        HashMap<String, CompositeDisposable> hashMap = this.mTaskDisposable;
        if (hashMap != null && hashMap.size() > 0) {
            Iterator<Map.Entry<String, CompositeDisposable>> iterator = this.mTaskDisposable.entrySet().iterator();
            while (iterator.hasNext()) {
                CompositeDisposable value = iterator.next().getValue();
                if (value != null) {
                    value.clear();
                    iterator.remove();
                }
            }
            this.mTaskDisposable.clear();
            this.mTaskDisposable = null;
        }
    }

    private void translateAccessToken(final MessageObject message, final String path) {
        RxHelper.getInstance().sendSimpleRequest(this.TAG, ApiTranslateAudioFactory.getInstance().getApiTranslate().accessToken("https://openapi.baidu.com/oauth/2.0/token", "client_credentials", "5elX69KjdF5FkuwcYSOdNTYs", "pE5eNoBQIFVcd9IEuyIhvopfgS1RSj5C"), new Consumer<ResponseAccessTokenBean>() {
            public void accept(ResponseAccessTokenBean tokenBean) throws Exception {
                if (tokenBean != null && !TextUtils.isEmpty(tokenBean.getAccess_token())) {
                    ChatActivity.this.translateAudio(message, tokenBean.getAccess_token(), path);
                }
            }
        }, new Consumer<Throwable>() {
            public void accept(Throwable throwable) throws Exception {
                ToastUtils.show((CharSequence) "翻译失败");
            }
        });
    }

    /* access modifiers changed from: private */
    public void translateAudio(final MessageObject message, String token, String path) {
        final File file = new File(path);
        RxHelper.getInstance().sendSimpleRequest(this.TAG, ApiTranslateAudioFactory.getInstance().getApiTranslate().translate("https://vop.baidu.com/pro_api", RequestBody.create(MediaType.parse("audio/pcm;rate=16000"), file), "baidu_workshop", token, 80001, file.length()), new Consumer<ResponseBaiduTranslateBean>() {
            public void accept(ResponseBaiduTranslateBean translateBean) throws Exception {
                if (translateBean != null && translateBean.getResult() != null && translateBean.getResult().length > 0) {
                    AudioFileUtils.deleteFileSafely(file);
                    int channelId = 0;
                    try {
                        long messageId = (long) message.getId();
                        if (0 == 0) {
                            channelId = message.getChannelId();
                        }
                        if (message.getChannelId() != 0) {
                            messageId |= ((long) channelId) << 32;
                        }
                        StringBuilder responseresultBuilder = new StringBuilder();
                        for (String responseresult : translateBean.getResult()) {
                            responseresultBuilder.append(responseresult);
                        }
                        if (!TextUtils.isEmpty(responseresultBuilder.toString())) {
                            SQLitePreparedStatement sqLitePreparedStatement1 = ChatActivity.this.getMessagesStorage().getDatabase().executeFast("UPDATE messages SET trans_dst = ? WHERE mid = ? ");
                            sqLitePreparedStatement1.bindString(1, responseresultBuilder.toString());
                            sqLitePreparedStatement1.bindLong(2, messageId);
                            sqLitePreparedStatement1.step();
                            sqLitePreparedStatement1.dispose();
                            message.messageOwner.trans = responseresultBuilder.toString();
                            message.messageOwner.istransing = false;
                        } else {
                            ToastUtils.show((CharSequence) "翻译失败");
                            ChatActivity.this.translateCancel(message);
                        }
                    } catch (SQLiteException e) {
                        e.printStackTrace();
                    }
                    AndroidUtilities.runOnUIThread(new Runnable() {
                        public void run() {
                            ChatActivity.this.updateVisibleRows();
                        }
                    });
                }
            }
        }, new Consumer<Throwable>() {
            public void accept(Throwable throwable) throws Exception {
                ToastUtils.show((CharSequence) throwable.getMessage());
            }
        });
    }

    public void didSelectDialogs(DialogsActivity fragment, ArrayList<Long> dids, CharSequence message, boolean param) {
        ArrayList<Long> arrayList = dids;
        if (this.forwardingMessage != null || this.selectedMessagesIds[0].size() != 0 || this.selectedMessagesIds[1].size() != 0) {
            ArrayList<MessageObject> fmessages = new ArrayList<>();
            MessageObject messageObject = this.forwardingMessage;
            if (messageObject != null) {
                MessageObject.GroupedMessages groupedMessages = this.forwardingMessageGroup;
                if (groupedMessages != null) {
                    fmessages.addAll(groupedMessages.messages);
                } else {
                    fmessages.add(messageObject);
                }
                this.forwardingMessage = null;
                this.forwardingMessageGroup = null;
            } else {
                for (int a = 1; a >= 0; a--) {
                    ArrayList<Integer> ids = new ArrayList<>();
                    for (int b = 0; b < this.selectedMessagesIds[a].size(); b++) {
                        ids.add(Integer.valueOf(this.selectedMessagesIds[a].keyAt(b)));
                    }
                    Collections.sort(ids);
                    for (int b2 = 0; b2 < ids.size(); b2++) {
                        MessageObject messageObject2 = this.selectedMessagesIds[a].get(ids.get(b2).intValue());
                        if (messageObject2 != null) {
                            if (messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaShare) {
                                TLRPC.TL_messageMediaShare tL_messageMediaShare = (TLRPC.TL_messageMediaShare) messageObject2.messageOwner.media;
                            }
                            fmessages.add(messageObject2);
                        }
                    }
                    this.selectedMessagesCanCopyIds[a].clear();
                    this.selectedMessagesCanStarIds[a].clear();
                    this.selectedMessagesIds[a].clear();
                }
                hideActionMode();
                updatePinnedMessageView(true);
            }
            if (dids.size() > 1 || arrayList.get(0).longValue() == ((long) getUserConfig().getClientUserId())) {
                DialogsActivity dialogsActivity = fragment;
            } else if (message != null) {
                DialogsActivity dialogsActivity2 = fragment;
            } else {
                long did = arrayList.get(0).longValue();
                if (did != this.dialog_id) {
                    int lower_part = (int) did;
                    int high_part = (int) (did >> 32);
                    Bundle args = new Bundle();
                    args.putBoolean("scrollToTopOnResume", this.scrollToTopOnResume);
                    if (lower_part == 0) {
                        args.putInt("enc_id", high_part);
                    } else if (lower_part > 0) {
                        args.putInt("user_id", lower_part);
                    } else if (lower_part < 0) {
                        args.putInt("chat_id", -lower_part);
                    }
                    if (lower_part == 0) {
                        DialogsActivity dialogsActivity3 = fragment;
                    } else if (!getMessagesController().checkCanOpenChat(args, fragment)) {
                        return;
                    }
                    ChatActivity chatActivity = new ChatActivity(args);
                    if (presentFragment(chatActivity, true)) {
                        chatActivity.showFieldPanelForForward(true, fmessages);
                        if (!AndroidUtilities.isTablet()) {
                            removeSelfFromStack();
                            return;
                        }
                        return;
                    }
                    fragment.finishFragment();
                    return;
                }
                DialogsActivity dialogsActivity4 = fragment;
                fragment.finishFragment();
                moveScrollToLastMessage();
                showFieldPanelForForward(true, fmessages);
                if (AndroidUtilities.isTablet()) {
                    hideActionMode();
                    updatePinnedMessageView(true);
                }
                updateVisibleRows();
                return;
            }
            for (int a2 = 0; a2 < dids.size(); a2++) {
                long did2 = arrayList.get(a2).longValue();
                if (message != null) {
                    getSendMessagesHelper().sendMessage(message.toString(), did2, (MessageObject) null, (TLRPC.WebPage) null, true, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                }
                getSendMessagesHelper().sendMessage(fmessages, did2, true, 0);
            }
            fragment.finishFragment();
        }
    }

    public boolean checkRecordLocked() {
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 == null || !chatActivityEnterView2.isRecordLocked()) {
            return false;
        }
        AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
        if (this.chatActivityEnterView.isInVideoMode()) {
            builder.setTitle(LocaleController.getString("DiscardVideoMessageTitle", R.string.DiscardVideoMessageTitle));
            builder.setMessage(LocaleController.getString("DiscardVideoMessageDescription", R.string.DiscardVideoMessageDescription));
        } else {
            builder.setTitle(LocaleController.getString("DiscardVoiceMessageTitle", R.string.DiscardVoiceMessageTitle));
            builder.setMessage(LocaleController.getString("DiscardVoiceMessageDescription", R.string.DiscardVoiceMessageDescription));
        }
        builder.setPositiveButton(LocaleController.getString("DiscardVoiceMessageAction", R.string.DiscardVoiceMessageAction), new DialogInterface.OnClickListener() {
            public final void onClick(DialogInterface dialogInterface, int i) {
                ChatActivity.this.lambda$checkRecordLocked$105$ChatActivity(dialogInterface, i);
            }
        });
        builder.setNegativeButton(LocaleController.getString("Continue", R.string.Continue), (DialogInterface.OnClickListener) null);
        showDialog(builder.create());
        return true;
    }

    public /* synthetic */ void lambda$checkRecordLocked$105$ChatActivity(DialogInterface dialog, int which) {
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null) {
            chatActivityEnterView2.cancelRecordingAudioVideo();
        }
    }

    public boolean onBackPressed() {
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            actionBarPopupWindow.dismiss();
            return false;
        } else if (checkRecordLocked()) {
            return false;
        } else {
            if (this.actionBar == null || !this.actionBar.isActionModeShowed()) {
                ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
                if (chatActivityEnterView2 == null || !chatActivityEnterView2.isPopupShowing()) {
                    return true;
                }
                this.chatActivityEnterView.hidePopup(true);
                return false;
            }
            for (int a = 1; a >= 0; a--) {
                this.selectedMessagesIds[a].clear();
                this.selectedMessagesCanCopyIds[a].clear();
                this.selectedMessagesCanStarIds[a].clear();
            }
            hideActionMode();
            updatePinnedMessageView(true);
            updateVisibleRows();
            return false;
        }
    }

    /* access modifiers changed from: private */
    public void updateVisibleRows() {
        int a;
        int pos;
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            int lastVisibleItem = -1;
            if (!this.wasManualScroll && this.unreadMessageObject != null && recyclerListView.getMeasuredHeight() != 0 && (pos = this.messages.indexOf(this.unreadMessageObject)) >= 0) {
                lastVisibleItem = this.chatAdapter.messagesStartRow + pos;
            }
            int count = this.chatListView.getChildCount();
            ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
            MessageObject editingMessageObject2 = chatActivityEnterView2 != null ? chatActivityEnterView2.getEditingMessageObject() : null;
            int a2 = 0;
            while (a2 < count) {
                View view = this.chatListView.getChildAt(a2);
                if (view instanceof ChatMessageCell) {
                    ChatMessageCell cell = (ChatMessageCell) view;
                    MessageObject messageObject = cell.getMessageObject();
                    boolean disableSelection = false;
                    boolean selected = false;
                    if (this.actionBar.isActionModeShowed()) {
                        cell.setCheckBoxVisible(true, true);
                        a = a2;
                        int idx = messageObject.getDialogId() == this.dialog_id ? 0 : 1;
                        if (messageObject == editingMessageObject2 || this.selectedMessagesIds[idx].indexOfKey(messageObject.getId()) >= 0) {
                            setCellSelectionBackground(messageObject, cell, idx, true);
                            selected = true;
                        } else {
                            cell.setDrawSelectionBackground(false);
                            cell.setChecked(false, false, true);
                        }
                        disableSelection = true;
                    } else {
                        a = a2;
                        cell.setDrawSelectionBackground(false);
                        cell.setCheckBoxVisible(false, true);
                        cell.setChecked(false, false, true);
                    }
                    cell.setMessageObject(cell.getMessageObject(), cell.getCurrentMessagesGroup(), cell.isPinnedBottom(), cell.isPinnedTop());
                    if (cell != this.scrimView) {
                        cell.setCheckPressed(!disableSelection, disableSelection && selected);
                    }
                    cell.setHighlighted((this.highlightMessageId == Integer.MAX_VALUE || messageObject == null || messageObject.getId() != this.highlightMessageId) ? false : true);
                    if (this.highlightMessageId != Integer.MAX_VALUE) {
                        startMessageUnselect();
                    }
                    FrameLayout frameLayout = this.searchContainer;
                    if (frameLayout != null && frameLayout.getVisibility() == 0) {
                        if (getMediaDataController().isMessageFound(messageObject.getId(), messageObject.getDialogId() == this.mergeDialogId) && getMediaDataController().getLastSearchQuery() != null) {
                            cell.setHighlightedText(getMediaDataController().getLastSearchQuery());
                        }
                    }
                    cell.setHighlightedText((String) null);
                } else {
                    a = a2;
                    if ((view instanceof ChatActionCell) != 0) {
                        ChatActionCell cell2 = (ChatActionCell) view;
                        cell2.setMessageObject(cell2.getMessageObject());
                    }
                }
                a2 = a + 1;
            }
            int i = a2;
            this.chatListView.invalidate();
            if (lastVisibleItem != -1) {
                this.chatLayoutManager.scrollToPositionWithOffset(lastVisibleItem, ((this.chatListView.getMeasuredHeight() - this.chatListView.getPaddingBottom()) - this.chatListView.getPaddingTop()) - AndroidUtilities.dp(29.0f));
            }
        }
    }

    /* access modifiers changed from: private */
    public void checkEditTimer() {
        MessageObject messageObject;
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (chatActivityEnterView2 != null && (messageObject = chatActivityEnterView2.getEditingMessageObject()) != null && !messageObject.scheduled) {
            TLRPC.User user = this.currentUser;
            if (user == null || !user.self) {
                int dt = messageObject.canEditMessageAnytime(this.currentChat) ? 360 : (getMessagesController().maxEditTime + 300) - Math.abs(getConnectionsManager().getCurrentTime() - messageObject.messageOwner.date);
                if (dt > 0) {
                    if (dt <= 300) {
                        this.replyObjectTextView.setText(LocaleController.formatString("TimeToEdit", R.string.TimeToEdit, String.format("%d:%02d", new Object[]{Integer.valueOf(dt / 60), Integer.valueOf(dt % 60)})));
                    }
                    AndroidUtilities.runOnUIThread(new Runnable() {
                        public final void run() {
                            ChatActivity.this.checkEditTimer();
                        }
                    }, 1000);
                    return;
                }
                this.chatActivityEnterView.onEditTimeExpired();
                this.replyObjectTextView.setText(LocaleController.formatString("TimeToEditExpired", R.string.TimeToEditExpired, new Object[0]));
            }
        }
    }

    /* access modifiers changed from: private */
    public ArrayList<MessageObject> createVoiceMessagesPlaylist(MessageObject startMessageObject, boolean playingUnreadMedia) {
        ArrayList<MessageObject> messageObjects = new ArrayList<>();
        messageObjects.add(startMessageObject);
        int messageId = startMessageObject.getId();
        long dialogId = startMessageObject.getDialogId();
        if (messageId != 0) {
            for (int a = this.messages.size() - 1; a >= 0; a--) {
                MessageObject messageObject = this.messages.get(a);
                if ((messageObject.getDialogId() != this.mergeDialogId || startMessageObject.getDialogId() == this.mergeDialogId) && (((this.currentEncryptedChat == null && messageObject.getId() > messageId) || (this.currentEncryptedChat != null && messageObject.getId() < messageId)) && ((messageObject.isVoice() || messageObject.isRoundVideo()) && (!playingUnreadMedia || (messageObject.isContentUnread() && !messageObject.isOut()))))) {
                    messageObjects.add(messageObject);
                }
            }
        }
        return messageObjects;
    }

    /* access modifiers changed from: private */
    public void alertUserOpenError(MessageObject message) {
        if (getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
            builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
            builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), (DialogInterface.OnClickListener) null);
            if (message.type == 3) {
                builder.setMessage(LocaleController.getString("NoPlayerInstalled", R.string.NoPlayerInstalled));
            } else {
                builder.setMessage(LocaleController.formatString("NoHandleAppInstalled", R.string.NoHandleAppInstalled, message.getDocument().mime_type));
            }
            showDialog(builder.create());
        }
    }

    /* access modifiers changed from: private */
    public void openSearchWithText(String text) {
        if (!this.actionBar.isSearchFieldVisible()) {
            this.headerItem.setVisibility(8);
            this.attachItem.setVisibility(8);
            this.editTextItem.setVisibility(8);
            this.searchItem.setVisibility(0);
            updateSearchButtons(0, 0, -1);
            updateBottomOverlay();
        }
        boolean z = text == null;
        this.openSearchKeyboard = z;
        this.searchItem.openSearch(z);
        if (text != null) {
            this.searchItem.setSearchFieldText(text, false);
            getMediaDataController().searchMessagesInChat(text, this.dialog_id, this.mergeDialogId, this.classGuid, 0, this.searchingUserMessages);
        }
        updatePinnedMessageView(true);
    }

    public void didSelectLocation(TLRPC.MessageMedia location, int locationType, boolean notify, int scheduleDate) {
        getSendMessagesHelper().sendMessage(location, this.dialog_id, this.replyingMessageObject, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, notify, scheduleDate);
        if (!this.inScheduleMode) {
            moveScrollToLastMessage();
        }
        afterMessageSend();
        if (this.paused) {
            this.scrollToTopOnResume = true;
        }
    }

    public boolean isEditingMessageMedia() {
        ChatAttachAlert chatAttachAlert2 = this.chatAttachAlert;
        return (chatAttachAlert2 == null || chatAttachAlert2.getEditingMessageObject() == null) ? false : true;
    }

    public boolean isSecretChat() {
        return this.currentEncryptedChat != null;
    }

    /* JADX WARNING: Code restructure failed: missing block: B:2:0x0004, code lost:
        r0 = r1.bottomOverlayChat;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public boolean canScheduleMessage() {
        /*
            r1 = this;
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r1.currentEncryptedChat
            if (r0 != 0) goto L_0x0010
            android.widget.FrameLayout r0 = r1.bottomOverlayChat
            if (r0 == 0) goto L_0x000e
            int r0 = r0.getVisibility()
            if (r0 == 0) goto L_0x0010
        L_0x000e:
            r0 = 1
            goto L_0x0011
        L_0x0010:
            r0 = 0
        L_0x0011:
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.canScheduleMessage():boolean");
    }

    public boolean isInScheduleMode() {
        return this.inScheduleMode;
    }

    public TLRPC.User getCurrentUser() {
        return this.currentUser;
    }

    public TLRPC.Chat getCurrentChat() {
        return this.currentChat;
    }

    /* JADX WARNING: Code restructure failed: missing block: B:2:0x0006, code lost:
        r0 = r2.currentEncryptedChat;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public boolean allowGroupPhotos() {
        /*
            r2 = this;
            boolean r0 = r2.isEditingMessageMedia()
            if (r0 != 0) goto L_0x0016
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r2.currentEncryptedChat
            if (r0 == 0) goto L_0x0014
            int r0 = r0.layer
            int r0 = im.bclpbkiauv.messenger.AndroidUtilities.getPeerLayerVersion(r0)
            r1 = 73
            if (r0 < r1) goto L_0x0016
        L_0x0014:
            r0 = 1
            goto L_0x0017
        L_0x0016:
            r0 = 0
        L_0x0017:
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.allowGroupPhotos():boolean");
    }

    public TLRPC.EncryptedChat getCurrentEncryptedChat() {
        return this.currentEncryptedChat;
    }

    public TLRPC.ChatFull getCurrentChatInfo() {
        return this.chatInfo;
    }

    public TLRPC.UserFull getCurrentUserInfo() {
        return this.userInfo;
    }

    public void sendMedia(MediaController.PhotoEntry photoEntry, VideoEditedInfo videoEditedInfo, boolean notify, int scheduleDate) {
        MediaController.PhotoEntry photoEntry2 = photoEntry;
        VideoEditedInfo videoEditedInfo2 = videoEditedInfo;
        if (photoEntry2 != null) {
            fillEditingMediaWithCaption(photoEntry2.caption, photoEntry2.entities);
            if (photoEntry2.isVideo) {
                if (videoEditedInfo2 != null) {
                    SendMessagesHelper.prepareSendingVideo(getAccountInstance(), photoEntry2.path, videoEditedInfo2.estimatedSize, videoEditedInfo2.estimatedDuration, videoEditedInfo2.resultWidth, videoEditedInfo2.resultHeight, videoEditedInfo, this.dialog_id, this.replyingMessageObject, photoEntry2.caption, photoEntry2.entities, photoEntry2.ttl, this.editingMessageObject, notify, scheduleDate);
                } else {
                    SendMessagesHelper.prepareSendingVideo(getAccountInstance(), photoEntry2.path, 0, 0, 0, 0, (VideoEditedInfo) null, this.dialog_id, this.replyingMessageObject, photoEntry2.caption, photoEntry2.entities, photoEntry2.ttl, this.editingMessageObject, notify, scheduleDate);
                }
                afterMessageSend();
            } else if (photoEntry2.imagePath != null) {
                SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), photoEntry2.imagePath, (Uri) null, this.dialog_id, this.replyingMessageObject, photoEntry2.caption, photoEntry2.entities, photoEntry2.stickers, (InputContentInfoCompat) null, photoEntry2.ttl, this.editingMessageObject, notify, scheduleDate);
                afterMessageSend();
            } else if (photoEntry2.path != null) {
                SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), photoEntry2.path, (Uri) null, this.dialog_id, this.replyingMessageObject, photoEntry2.caption, photoEntry2.entities, photoEntry2.stickers, (InputContentInfoCompat) null, photoEntry2.ttl, this.editingMessageObject, notify, scheduleDate);
                afterMessageSend();
            }
        }
    }

    public void showOpenGameAlert(TLRPC.TL_game game, MessageObject messageObject, String urlStr, boolean ask, int uid) {
        String name;
        TLRPC.TL_game tL_game = game;
        TLRPC.User user = getMessagesController().getUser(Integer.valueOf(uid));
        if (ask) {
            AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
            builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
            if (user != null) {
                name = ContactsController.formatName(user.first_name, user.last_name);
            } else {
                name = "";
            }
            builder.setMessage(LocaleController.formatString("BotPermissionGameAlert", R.string.BotPermissionGameAlert, name));
            builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener(game, messageObject, urlStr, uid) {
                private final /* synthetic */ TLRPC.TL_game f$1;
                private final /* synthetic */ MessageObject f$2;
                private final /* synthetic */ String f$3;
                private final /* synthetic */ int f$4;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                }

                public final void onClick(DialogInterface dialogInterface, int i) {
                    ChatActivity.this.lambda$showOpenGameAlert$106$ChatActivity(this.f$1, this.f$2, this.f$3, this.f$4, dialogInterface, i);
                }
            });
            builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), (DialogInterface.OnClickListener) null);
            showDialog(builder.create());
            MessageObject messageObject2 = messageObject;
            return;
        }
        String str = "";
        if (Build.VERSION.SDK_INT < 21 || AndroidUtilities.isTablet() || !WebviewActivity.supportWebview()) {
            FragmentActivity parentActivity = getParentActivity();
            String str2 = tL_game.short_name;
            if (!(user == null || user.username == null)) {
                str = user.username;
            }
            WebviewActivity.openGameInBrowser(urlStr, messageObject, parentActivity, str2, str);
        } else if (this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1) == this) {
            if (user != null && !TextUtils.isEmpty(user.username)) {
                str = user.username;
            }
            presentFragment(new WebviewActivity(urlStr, str, tL_game.title, tL_game.short_name, messageObject));
            MessageObject messageObject3 = messageObject;
            String str3 = urlStr;
        } else {
            MessageObject messageObject4 = messageObject;
            String str4 = urlStr;
        }
    }

    public /* synthetic */ void lambda$showOpenGameAlert$106$ChatActivity(TLRPC.TL_game game, MessageObject messageObject, String urlStr, int uid, DialogInterface dialogInterface, int i) {
        showOpenGameAlert(game, messageObject, urlStr, false, uid);
        SharedPreferences.Editor edit2 = MessagesController.getNotificationsSettings(this.currentAccount).edit();
        edit2.putBoolean("askgame_" + uid, false).commit();
    }

    public void showOpenUrlAlert(String url, boolean ask) {
        boolean z = true;
        if (Browser.isInternalUrl(url, (boolean[]) null) || !ask) {
            FragmentActivity parentActivity = getParentActivity();
            if (this.inlineReturn != 0) {
                z = false;
            }
            Browser.openUrl((Context) parentActivity, url, z);
        } else if (getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder((Context) getParentActivity());
            builder.setTitle(LocaleController.getString("OpenUrlTitle", R.string.OpenUrlTitle));
            String format = LocaleController.getString("OpenUrlAlert2", R.string.OpenUrlAlert2);
            int index = format.indexOf("%");
            SpannableStringBuilder stringBuilder = new SpannableStringBuilder(String.format(format, new Object[]{url}));
            if (index >= 0) {
                stringBuilder.setSpan(new URLSpan(url), index, url.length() + index, 33);
            }
            builder.setMessage(stringBuilder);
            builder.setMessageTextViewClickable(false);
            builder.setPositiveButton(LocaleController.getString("Open", R.string.Open), new DialogInterface.OnClickListener(url) {
                private final /* synthetic */ String f$1;

                {
                    this.f$1 = r2;
                }

                public final void onClick(DialogInterface dialogInterface, int i) {
                    ChatActivity.this.lambda$showOpenUrlAlert$107$ChatActivity(this.f$1, dialogInterface, i);
                }
            });
            builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), (DialogInterface.OnClickListener) null);
            showDialog(builder.create());
        }
    }

    public /* synthetic */ void lambda$showOpenUrlAlert$107$ChatActivity(String url, DialogInterface dialogInterface, int i) {
        Browser.openUrl((Context) getParentActivity(), url, this.inlineReturn == 0);
    }

    /* JADX WARNING: type inference failed for: r2v0 */
    /* JADX WARNING: type inference failed for: r4v0 */
    /* JADX WARNING: type inference failed for: r4v1, types: [boolean] */
    /* JADX WARNING: type inference failed for: r4v4 */
    /* JADX WARNING: type inference failed for: r2v8 */
    /* JADX WARNING: Incorrect type for immutable var: ssa=int, code=?, for r2v1, types: [int, boolean] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void showRequestUrlAlert(im.bclpbkiauv.tgnet.TLRPC.TL_urlAuthResultRequest r18, im.bclpbkiauv.tgnet.TLRPC.TL_messages_requestUrlAuth r19, java.lang.String r20) {
        /*
            r17 = this;
            r6 = r18
            r7 = r20
            androidx.fragment.app.FragmentActivity r0 = r17.getParentActivity()
            if (r0 != 0) goto L_0x000b
            return
        L_0x000b:
            im.bclpbkiauv.ui.actionbar.AlertDialog$Builder r0 = new im.bclpbkiauv.ui.actionbar.AlertDialog$Builder
            androidx.fragment.app.FragmentActivity r1 = r17.getParentActivity()
            r0.<init>((android.content.Context) r1)
            r8 = r0
            r0 = 2131692503(0x7f0f0bd7, float:1.9014108E38)
            java.lang.String r1 = "OpenUrlTitle"
            java.lang.String r0 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            r8.setTitle(r0)
            r0 = 2131692500(0x7f0f0bd4, float:1.9014102E38)
            java.lang.String r1 = "OpenUrlAlert2"
            java.lang.String r9 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            java.lang.String r0 = "%"
            int r0 = r9.indexOf(r0)
            android.text.SpannableStringBuilder r1 = new android.text.SpannableStringBuilder
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]
            r4 = 0
            r3[r4] = r7
            java.lang.String r3 = java.lang.String.format(r9, r3)
            r1.<init>(r3)
            r3 = 33
            if (r0 < 0) goto L_0x0050
            android.text.style.URLSpan r5 = new android.text.style.URLSpan
            r5.<init>(r7)
            int r10 = r20.length()
            int r10 = r10 + r0
            r1.setSpan(r5, r0, r10, r3)
        L_0x0050:
            r8.setMessage(r1)
            r8.setMessageTextViewClickable(r4)
            r5 = 2131690308(0x7f0f0344, float:1.9009656E38)
            java.lang.String r10 = "Cancel"
            java.lang.String r5 = im.bclpbkiauv.messenger.LocaleController.getString(r10, r5)
            r10 = 0
            r8.setNegativeButton(r5, r10)
            r5 = 2
            im.bclpbkiauv.ui.cells.CheckBoxCell[] r10 = new im.bclpbkiauv.ui.cells.CheckBoxCell[r5]
            android.widget.LinearLayout r11 = new android.widget.LinearLayout
            androidx.fragment.app.FragmentActivity r12 = r17.getParentActivity()
            r11.<init>(r12)
            r11.setOrientation(r2)
            im.bclpbkiauv.messenger.UserConfig r12 = r17.getUserConfig()
            im.bclpbkiauv.tgnet.TLRPC$User r12 = r12.getCurrentUser()
            r13 = 0
            r14 = r1
            r16 = r13
            r13 = r0
            r0 = r16
        L_0x0081:
            boolean r1 = r6.request_write_access
            if (r1 == 0) goto L_0x0087
            r1 = 2
            goto L_0x0088
        L_0x0087:
            r1 = 1
        L_0x0088:
            if (r0 >= r1) goto L_0x0158
            im.bclpbkiauv.ui.cells.CheckBoxCell r1 = new im.bclpbkiauv.ui.cells.CheckBoxCell
            androidx.fragment.app.FragmentActivity r15 = r17.getParentActivity()
            r1.<init>(r15, r2)
            r10[r0] = r1
            r1 = r10[r0]
            android.graphics.drawable.Drawable r15 = im.bclpbkiauv.ui.actionbar.Theme.getSelectorDrawable(r4)
            r1.setBackgroundDrawable(r15)
            r1 = r10[r0]
            r1.setMultiline(r2)
            r1 = r10[r0]
            java.lang.Integer r15 = java.lang.Integer.valueOf(r0)
            r1.setTag(r15)
            java.lang.String r1 = ""
            if (r0 != 0) goto L_0x00f3
            r15 = 2131692501(0x7f0f0bd5, float:1.9014104E38)
            java.lang.Object[] r3 = new java.lang.Object[r5]
            java.lang.String r5 = r6.domain
            r3[r4] = r5
            java.lang.String r5 = r12.first_name
            java.lang.String r4 = r12.last_name
            java.lang.String r4 = im.bclpbkiauv.messenger.ContactsController.formatName(r5, r4)
            r3[r2] = r4
            java.lang.String r4 = "OpenUrlOption1"
            java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.formatString(r4, r15, r3)
            android.text.SpannableStringBuilder r3 = im.bclpbkiauv.messenger.AndroidUtilities.replaceTags(r3)
            java.lang.String r4 = r6.domain
            int r4 = android.text.TextUtils.indexOf(r3, r4)
            if (r4 < 0) goto L_0x00e7
            android.text.style.URLSpan r5 = new android.text.style.URLSpan
            r5.<init>(r1)
            java.lang.String r13 = r6.domain
            int r13 = r13.length()
            int r13 = r13 + r4
            r15 = 33
            r3.setSpan(r5, r4, r13, r15)
            goto L_0x00e9
        L_0x00e7:
            r15 = 33
        L_0x00e9:
            r5 = r10[r0]
            r13 = 0
            r5.setText(r3, r1, r2, r13)
            r14 = r3
            r13 = r4
            r5 = 1
            goto L_0x0117
        L_0x00f3:
            r3 = 0
            r15 = 33
            if (r0 != r2) goto L_0x0116
            r4 = r10[r0]
            r5 = 2131692502(0x7f0f0bd6, float:1.9014106E38)
            java.lang.Object[] r15 = new java.lang.Object[r2]
            im.bclpbkiauv.tgnet.TLRPC$User r2 = r6.bot
            java.lang.String r2 = im.bclpbkiauv.messenger.UserObject.getFirstName(r2)
            r15[r3] = r2
            java.lang.String r2 = "OpenUrlOption2"
            java.lang.String r2 = im.bclpbkiauv.messenger.LocaleController.formatString(r2, r5, r15)
            android.text.SpannableStringBuilder r2 = im.bclpbkiauv.messenger.AndroidUtilities.replaceTags(r2)
            r5 = 1
            r4.setText(r2, r1, r5, r3)
            goto L_0x0117
        L_0x0116:
            r5 = 1
        L_0x0117:
            r1 = r10[r0]
            boolean r2 = im.bclpbkiauv.messenger.LocaleController.isRTL
            r3 = 1098907648(0x41800000, float:16.0)
            r4 = 1090519040(0x41000000, float:8.0)
            if (r2 == 0) goto L_0x0126
            int r2 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r3)
            goto L_0x012a
        L_0x0126:
            int r2 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r4)
        L_0x012a:
            boolean r15 = im.bclpbkiauv.messenger.LocaleController.isRTL
            if (r15 == 0) goto L_0x0133
            int r3 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r4)
            goto L_0x0137
        L_0x0133:
            int r3 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r3)
        L_0x0137:
            r4 = 0
            r1.setPadding(r2, r4, r3, r4)
            r1 = r10[r0]
            r2 = -1
            r3 = -2
            android.widget.LinearLayout$LayoutParams r2 = im.bclpbkiauv.ui.components.LayoutHelper.createLinear((int) r2, (int) r3)
            r11.addView(r1, r2)
            r1 = r10[r0]
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$c-eJKq7Z5mOsvFngahAHEB4EhsY r2 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$c-eJKq7Z5mOsvFngahAHEB4EhsY
            r2.<init>(r10)
            r1.setOnClickListener(r2)
            int r0 = r0 + 1
            r2 = 1
            r3 = 33
            r5 = 2
            goto L_0x0081
        L_0x0158:
            r0 = 12
            r8.setCustomViewOffset(r0)
            r8.setView(r11)
            r0 = 2131692487(0x7f0f0bc7, float:1.9014075E38)
            java.lang.String r1 = "Open"
            java.lang.String r15 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r0)
            im.bclpbkiauv.ui.-$$Lambda$ChatActivity$w18rkvsSgGe1uuZPEI-cabaHeEU r5 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$w18rkvsSgGe1uuZPEI-cabaHeEU
            r0 = r5
            r1 = r17
            r2 = r10
            r3 = r20
            r4 = r19
            r6 = r5
            r5 = r18
            r0.<init>(r2, r3, r4, r5)
            r8.setPositiveButton(r15, r6)
            im.bclpbkiauv.ui.actionbar.AlertDialog r0 = r8.create()
            r1.showDialog(r0)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.showRequestUrlAlert(im.bclpbkiauv.tgnet.TLRPC$TL_urlAuthResultRequest, im.bclpbkiauv.tgnet.TLRPC$TL_messages_requestUrlAuth, java.lang.String):void");
    }

    static /* synthetic */ void lambda$showRequestUrlAlert$108(CheckBoxCell[] cells, View v) {
        if (v.isEnabled()) {
            Integer num = (Integer) v.getTag();
            cells[num.intValue()].setChecked(!cells[num.intValue()].isChecked(), true);
            if (num.intValue() == 0 && cells[1] != null) {
                if (cells[num.intValue()].isChecked()) {
                    cells[1].setEnabled(true);
                    return;
                }
                cells[1].setChecked(false, true);
                cells[1].setEnabled(false);
            }
        }
    }

    public /* synthetic */ void lambda$showRequestUrlAlert$113$ChatActivity(CheckBoxCell[] cells, String url, TLRPC.TL_messages_requestUrlAuth buttonReq, TLRPC.TL_urlAuthResultRequest request, DialogInterface dialogInterface, int i) {
        if (!cells[0].isChecked()) {
            Browser.openUrl((Context) getParentActivity(), url, false);
            return;
        }
        AlertDialog[] progressDialog = {new AlertDialog(getParentActivity(), 3)};
        TLRPC.TL_messages_acceptUrlAuth req = new TLRPC.TL_messages_acceptUrlAuth();
        req.button_id = buttonReq.button_id;
        req.msg_id = buttonReq.msg_id;
        req.peer = buttonReq.peer;
        if (request.request_write_access) {
            req.write_allowed = cells[1].isChecked();
        }
        try {
            progressDialog[0].dismiss();
        } catch (Throwable th) {
        }
        progressDialog[0] = null;
        AndroidUtilities.runOnUIThread(new Runnable(progressDialog, getConnectionsManager().sendRequest(req, new RequestDelegate(url) {
            private final /* synthetic */ String f$1;

            {
                this.f$1 = r2;
            }

            public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                ChatActivity.this.lambda$null$110$ChatActivity(this.f$1, tLObject, tL_error);
            }
        })) {
            private final /* synthetic */ AlertDialog[] f$1;
            private final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                ChatActivity.this.lambda$null$112$ChatActivity(this.f$1, this.f$2);
            }
        }, 500);
    }

    public /* synthetic */ void lambda$null$110$ChatActivity(String url, TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new Runnable(response, url) {
            private final /* synthetic */ TLObject f$1;
            private final /* synthetic */ String f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                ChatActivity.this.lambda$null$109$ChatActivity(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$null$109$ChatActivity(TLObject response, String url) {
        if (response instanceof TLRPC.TL_urlAuthResultAccepted) {
            Browser.openUrl((Context) getParentActivity(), ((TLRPC.TL_urlAuthResultAccepted) response).url, false);
        } else if (response instanceof TLRPC.TL_urlAuthResultDefault) {
            Browser.openUrl((Context) getParentActivity(), url, false);
        }
    }

    public /* synthetic */ void lambda$null$112$ChatActivity(AlertDialog[] progressDialog, int requestId) {
        if (progressDialog[0] != null) {
            progressDialog[0].setOnCancelListener(new DialogInterface.OnCancelListener(requestId) {
                private final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void onCancel(DialogInterface dialogInterface) {
                    ChatActivity.this.lambda$null$111$ChatActivity(this.f$1, dialogInterface);
                }
            });
            showDialog(progressDialog[0]);
        }
    }

    public /* synthetic */ void lambda$null$111$ChatActivity(int requestId, DialogInterface dialog) {
        getConnectionsManager().cancelRequest(requestId, true);
    }

    private void removeMessageObject(MessageObject messageObject) {
        int index = this.messages.indexOf(messageObject);
        if (index != -1) {
            this.messages.remove(index);
            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
            if (chatActivityAdapter != null) {
                chatActivityAdapter.notifyItemRemoved(chatActivityAdapter.messagesStartRow + index);
            }
        }
    }

    public void viewContacts(int user_id) {
        TLRPC.User user;
        if (user_id != 0 && (user = getMessagesController().getUser(Integer.valueOf(user_id))) != null) {
            if (user.self || user.contact) {
                Bundle bundle = new Bundle();
                bundle.putInt("user_id", user.id);
                presentFragment(new NewProfileActivity(bundle));
                return;
            }
            Bundle bundle2 = new Bundle();
            bundle2.putInt("from_type", 6);
            presentFragment(new AddContactsInfoActivity(bundle2, user));
        }
    }

    /* access modifiers changed from: private */
    public void setCellSelectionBackground(MessageObject message, ChatMessageCell messageCell, int idx, boolean animated) {
        MessageObject.GroupedMessages groupedMessages = getValidGroupedMessage(message);
        if (groupedMessages != null) {
            boolean hasUnselected = false;
            int a = 0;
            while (true) {
                if (a >= groupedMessages.messages.size()) {
                    break;
                } else if (this.selectedMessagesIds[idx].indexOfKey(groupedMessages.messages.get(a).getId()) < 0) {
                    hasUnselected = true;
                    break;
                } else {
                    a++;
                }
            }
            if (!hasUnselected) {
                groupedMessages = null;
            }
        }
        boolean hasUnselected2 = false;
        messageCell.setDrawSelectionBackground(groupedMessages == null);
        if (groupedMessages == null) {
            hasUnselected2 = true;
        }
        messageCell.setChecked(true, hasUnselected2, animated);
    }

    private void setItemAnimationsEnabled(boolean enabled) {
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:7:0x0015, code lost:
        r1 = r2.scrimPopupWindow;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void updateMessageListAccessibilityVisibility() {
        /*
            r2 = this;
            im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r0 = r2.currentEncryptedChat
            if (r0 == 0) goto L_0x0005
            return
        L_0x0005:
            int r0 = android.os.Build.VERSION.SDK_INT
            r1 = 19
            if (r0 < r1) goto L_0x0026
            im.bclpbkiauv.ui.components.RecyclerListView r0 = r2.chatListView
            android.widget.FrameLayout r1 = r2.mentionContainer
            int r1 = r1.getVisibility()
            if (r1 == 0) goto L_0x0022
            im.bclpbkiauv.ui.actionbar.ActionBarPopupWindow r1 = r2.scrimPopupWindow
            if (r1 == 0) goto L_0x0020
            boolean r1 = r1.isShowing()
            if (r1 == 0) goto L_0x0020
            goto L_0x0022
        L_0x0020:
            r1 = 0
            goto L_0x0023
        L_0x0022:
            r1 = 4
        L_0x0023:
            r0.setImportantForAccessibility(r1)
        L_0x0026:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.updateMessageListAccessibilityVisibility():void");
    }

    /* access modifiers changed from: private */
    public void getAccountInfo(boolean isRpk) {
        TLRPCWallet.TL_getPaymentAccountInfo req = new TLRPCWallet.TL_getPaymentAccountInfo();
        XAlertDialog proView = new XAlertDialog(getParentActivity(), 5);
        int reqId2 = getConnectionsManager().sendRequest(req, new RequestDelegate(proView, isRpk) {
            private final /* synthetic */ XAlertDialog f$1;
            private final /* synthetic */ boolean f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                ChatActivity.this.lambda$getAccountInfo$120$ChatActivity(this.f$1, this.f$2, tLObject, tL_error);
            }
        });
        getConnectionsManager().bindRequestToGuid(reqId2, this.classGuid);
        proView.setOnCancelListener(new DialogInterface.OnCancelListener(reqId2) {
            private final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void onCancel(DialogInterface dialogInterface) {
                ChatActivity.this.lambda$getAccountInfo$121$ChatActivity(this.f$1, dialogInterface);
            }
        });
        proView.show();
    }

    public /* synthetic */ void lambda$getAccountInfo$120$ChatActivity(XAlertDialog proView, boolean isRpk, TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new Runnable(error, proView, response, isRpk) {
            private final /* synthetic */ TLRPC.TL_error f$1;
            private final /* synthetic */ XAlertDialog f$2;
            private final /* synthetic */ TLObject f$3;
            private final /* synthetic */ boolean f$4;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
            }

            public final void run() {
                ChatActivity.this.lambda$null$119$ChatActivity(this.f$1, this.f$2, this.f$3, this.f$4);
            }
        });
    }

    public /* synthetic */ void lambda$null$119$ChatActivity(TLRPC.TL_error error, XAlertDialog proView, TLObject response, boolean isRpk) {
        TLRPC.TL_error tL_error = error;
        TLObject tLObject = response;
        if (tL_error != null) {
            proView.dismiss();
            WalletDialogUtil.showConfirmBtnWalletDialog(this, WalletErrorUtil.getErrorDescription(tL_error.text));
        } else if (tLObject instanceof TLRPCWallet.TL_paymentAccountInfoNotExist) {
            proView.dismiss();
            String string = LocaleController.getString("AccountInfoNotCompleted", R.string.AccountInfoNotCompleted);
            Object[] objArr = new Object[2];
            objArr[0] = isRpk ? LocaleController.getString("ReceiveRedPacket", R.string.ReceiveRedPacket) : LocaleController.getString("Transfer", R.string.Transfer);
            objArr[1] = isRpk ? LocaleController.getString("ReceiveRedPacket", R.string.ReceiveRedPacket) : LocaleController.getString("Transfer", R.string.Transfer);
            WalletDialogUtil.showWalletDialog(this, "", String.format(string, objArr), LocaleController.getString("Close", R.string.Close), LocaleController.getString("GoToWalletCenter", R.string.GoToWalletCenter), (DialogInterface.OnClickListener) null, new DialogInterface.OnClickListener() {
                public final void onClick(DialogInterface dialogInterface, int i) {
                    ChatActivity.this.lambda$null$114$ChatActivity(dialogInterface, i);
                }
            }, (DialogInterface.OnDismissListener) null);
        } else {
            TLApiModel<WalletAccountInfo> model = TLJsonResolve.parse(tLObject, (Class<?>) WalletAccountInfo.class);
            if (model.isSuccess()) {
                WalletAccountInfo accountInfo = (WalletAccountInfo) model.model;
                WalletConfigBean.setWalletAccountInfo(accountInfo);
                WalletConfigBean.setConfigValue(((WalletAccountInfo) model.model).getRiskList());
                if (accountInfo.isLocked()) {
                    proView.dismiss();
                    WalletDialogUtil.showWalletDialog(this, "", LocaleController.getString("PleaseContractServerToFindPayPasswordOrTryIt24HoursLater", R.string.PleaseContractServerToFindPayPasswordOrTryIt24HoursLater), LocaleController.getString("Close", R.string.Close), LocaleController.getString("ContactCustomerService", R.string.ContactCustomerService), (DialogInterface.OnClickListener) null, new DialogInterface.OnClickListener() {
                        public final void onClick(DialogInterface dialogInterface, int i) {
                            ChatActivity.this.lambda$null$115$ChatActivity(dialogInterface, i);
                        }
                    }, (DialogInterface.OnDismissListener) null);
                } else if (!accountInfo.hasNormalAuth()) {
                    proView.dismiss();
                    String string2 = LocaleController.getString(R.string.BankCardNotBindTips);
                    Object[] objArr2 = new Object[1];
                    objArr2[0] = isRpk ? LocaleController.getString(R.string.redpacket_send) : LocaleController.getString("Transfer", R.string.Transfer);
                    WalletDialogUtil.showWalletDialog(this, "", String.format(string2, objArr2), LocaleController.getString("Close", R.string.Close), LocaleController.getString("GoToBind", R.string.GoToBind), (DialogInterface.OnClickListener) null, $$Lambda$ChatActivity$5FyUiuNTEj7fOuxg7I1hU0g8o9A.INSTANCE, (DialogInterface.OnDismissListener) null);
                } else if (!accountInfo.hasBindBank()) {
                    proView.dismiss();
                    String string3 = LocaleController.getString(R.string.BankCardNotBindTips);
                    Object[] objArr3 = new Object[1];
                    objArr3[0] = isRpk ? LocaleController.getString(R.string.redpacket_send) : LocaleController.getString("Transfer", R.string.Transfer);
                    WalletDialogUtil.showWalletDialog(this, "", String.format(string3, objArr3), LocaleController.getString("Close", R.string.Close), LocaleController.getString("GoToBind", R.string.GoToBind), (DialogInterface.OnClickListener) null, $$Lambda$ChatActivity$0y0LpacPRAAXKqvOaUaTFquXM5o.INSTANCE, (DialogInterface.OnDismissListener) null);
                } else if (!accountInfo.hasPaypassword()) {
                    proView.dismiss();
                    String string4 = LocaleController.getString(R.string.PayPasswordNotSetTips);
                    Object[] objArr4 = new Object[1];
                    objArr4[0] = isRpk ? LocaleController.getString(R.string.redpacket_send) : LocaleController.getString("Transfer", R.string.Transfer);
                    WalletDialogUtil.showWalletDialog(this, "", String.format(string4, objArr4), LocaleController.getString("Close", R.string.Close), LocaleController.getString("redpacket_goto_set", R.string.redpacket_goto_set), (DialogInterface.OnClickListener) null, new DialogInterface.OnClickListener() {
                        public final void onClick(DialogInterface dialogInterface, int i) {
                            ChatActivity.this.lambda$null$118$ChatActivity(dialogInterface, i);
                        }
                    }, (DialogInterface.OnDismissListener) null);
                } else {
                    proView.dismiss();
                    if (!isRpk) {
                        Bundle bundle = new Bundle();
                        bundle.putInt("user_id", this.currentUser.id);
                        TransferSendActivity transferSendActivity = new TransferSendActivity(bundle);
                        transferSendActivity.setAccountInfo(accountInfo);
                        presentFragment(transferSendActivity);
                    } else if (this.currentUser != null) {
                        Bundle bundle2 = new Bundle();
                        bundle2.putInt("user_id", this.currentUser.id);
                        RedpktSendActivity redpktSendActivity = new RedpktSendActivity(bundle2);
                        redpktSendActivity.setAccountInfo(accountInfo);
                        presentFragment(redpktSendActivity);
                    } else if (this.currentChat != null) {
                        RedpktGroupSendActivity groupSendActivity = new RedpktGroupSendActivity((Bundle) null);
                        groupSendActivity.setToChat(this.currentChat);
                        groupSendActivity.setParticipants(this.chatInfo);
                        groupSendActivity.setAccountInfo(accountInfo);
                        presentFragment(groupSendActivity);
                    }
                }
            } else {
                proView.dismiss();
                WalletDialogUtil.showConfirmBtnWalletDialog(this, WalletErrorUtil.getErrorDescription(model.message));
            }
        }
    }

    public /* synthetic */ void lambda$null$114$ChatActivity(DialogInterface dialogInterface, int i) {
        presentFragment(new WalletActivity());
    }

    public /* synthetic */ void lambda$null$115$ChatActivity(DialogInterface dialogInterface, int i) {
        presentFragment(new AboutAppActivity());
    }

    static /* synthetic */ void lambda$null$116(DialogInterface dialogInterface, int i) {
    }

    static /* synthetic */ void lambda$null$117(DialogInterface dialogInterface, int i) {
    }

    public /* synthetic */ void lambda$null$118$ChatActivity(DialogInterface dialogInterface, int i) {
        Bundle args = new Bundle();
        args.putInt("step", 0);
        args.putInt("type", 0);
        presentFragment(new WalletPaymentPasswordActivity(args));
    }

    public /* synthetic */ void lambda$getAccountInfo$121$ChatActivity(int reqId2, DialogInterface hintDialog) {
        getConnectionsManager().cancelRequest(reqId2, true);
    }

    public void performService(BaseFragment fragment) {
        String userString;
        int currentAccount = fragment.getCurrentAccount();
        SharedPreferences preferences = MessagesController.getMainSettings(currentAccount);
        int uid = preferences.getInt("support_id", 0);
        TLRPC.User supportUser = null;
        if (!(uid == 0 || (supportUser = MessagesController.getInstance(currentAccount).getUser(Integer.valueOf(uid))) != null || (userString = preferences.getString("support_user", (String) null)) == null)) {
            try {
                byte[] datacentersBytes = Base64.decode(userString, 0);
                if (datacentersBytes != null) {
                    SerializedData data = new SerializedData(datacentersBytes);
                    supportUser = TLRPC.User.TLdeserialize(data, data.readInt32(false), false);
                    if (supportUser != null && supportUser.id == 333000) {
                        supportUser = null;
                    }
                    data.cleanup();
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                supportUser = null;
            }
        }
        if (supportUser == null) {
            XAlertDialog progressDialog = new XAlertDialog(getParentActivity(), 4);
            progressDialog.show();
            ConnectionsManager.getInstance(currentAccount).sendRequest(new TLRPC.TL_help_getSupport(), new RequestDelegate(preferences, progressDialog, currentAccount, fragment) {
                private final /* synthetic */ SharedPreferences f$0;
                private final /* synthetic */ XAlertDialog f$1;
                private final /* synthetic */ int f$2;
                private final /* synthetic */ BaseFragment f$3;

                {
                    this.f$0 = r1;
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                    ChatActivity.lambda$performService$124(this.f$0, this.f$1, this.f$2, this.f$3, tLObject, tL_error);
                }
            });
            return;
        }
        MessagesController.getInstance(currentAccount).putUser(supportUser, true);
        Bundle args = new Bundle();
        args.putInt("user_id", supportUser.id);
        fragment.presentFragment(new ChatActivity(args));
    }

    static /* synthetic */ void lambda$performService$124(SharedPreferences preferences, XAlertDialog progressDialog, int currentAccount, BaseFragment fragment, TLObject response, TLRPC.TL_error error) {
        if (error == null) {
            AndroidUtilities.runOnUIThread(new Runnable(preferences, (TLRPC.TL_help_support) response, progressDialog, currentAccount, fragment) {
                private final /* synthetic */ SharedPreferences f$0;
                private final /* synthetic */ TLRPC.TL_help_support f$1;
                private final /* synthetic */ XAlertDialog f$2;
                private final /* synthetic */ int f$3;
                private final /* synthetic */ BaseFragment f$4;

                {
                    this.f$0 = r1;
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                }

                public final void run() {
                    ChatActivity.lambda$null$122(this.f$0, this.f$1, this.f$2, this.f$3, this.f$4);
                }
            });
        } else {
            AndroidUtilities.runOnUIThread(new Runnable() {
                public final void run() {
                    ChatActivity.lambda$null$123(XAlertDialog.this);
                }
            });
        }
    }

    static /* synthetic */ void lambda$null$122(SharedPreferences preferences, TLRPC.TL_help_support res, XAlertDialog progressDialog, int currentAccount, BaseFragment fragment) {
        SharedPreferences.Editor editor = preferences.edit();
        editor.putInt("support_id", res.user.id);
        SerializedData data = new SerializedData();
        res.user.serializeToStream(data);
        editor.putString("support_user", Base64.encodeToString(data.toByteArray(), 0));
        editor.commit();
        data.cleanup();
        try {
            progressDialog.dismiss();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        ArrayList<TLRPC.User> users = new ArrayList<>();
        users.add(res.user);
        MessagesStorage.getInstance(currentAccount).putUsersAndChats(users, (ArrayList<TLRPC.Chat>) null, true, true);
        MessagesController.getInstance(currentAccount).putUser(res.user, false);
        Bundle args = new Bundle();
        args.putInt("user_id", res.user.id);
        fragment.presentFragment(new ChatActivity(args));
    }

    static /* synthetic */ void lambda$null$123(XAlertDialog progressDialog) {
        try {
            progressDialog.dismiss();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    public void onRedpkgTransferClick(ChatMessageCell cell, MessageObject messageObject) {
        TLRPCRedpacket.CL_messagesRpkTransferMedia rpkTransferMedia = (TLRPCRedpacket.CL_messagesRpkTransferMedia) messageObject.messageOwner.media;
        if (rpkTransferMedia.trans == 0) {
            RedpacketResponse bean = (RedpacketResponse) TLJsonResolve.parse((TLObject) rpkTransferMedia.data, (Class<?>) RedpacketResponse.class).model;
            if (this.currentUser != null) {
                if (messageObject.isOutOwner()) {
                    int status = Integer.parseInt(bean.getRed().getStatus());
                    if (status == 1 || status == 2) {
                        RedpktDetailActivity redpkgStateActivity = new RedpktDetailActivity();
                        redpkgStateActivity.setBean(bean);
                        presentFragment(redpkgStateActivity);
                        return;
                    }
                    checkUserRedpkgDetail(messageObject, bean);
                    return;
                }
                int status2 = Integer.parseInt(bean.getRed().getStatus());
                if (status2 == 0) {
                    checkUserRedpkgDetail(messageObject, bean);
                } else if (status2 == 1) {
                    RedpktDetailReceiverActivity receiverActivity = new RedpktDetailReceiverActivity();
                    receiverActivity.setBean(bean);
                    presentFragment(receiverActivity);
                } else {
                    showRedPacketDialog(this.currentUser, messageObject, bean, false);
                }
            } else if (this.currentChat != null) {
                RedpacketBean red = bean.getRed();
                boolean isReceived = bean.isReceived();
                int status3 = Integer.parseInt(red.getStatus());
                if (messageObject.isOut()) {
                    if (status3 == 0) {
                        if (isReceived) {
                            RedpktGroupDetailActivity detailActivity = new RedpktGroupDetailActivity();
                            detailActivity.setBean(bean.getRed());
                            detailActivity.setChat(this.currentChat);
                            detailActivity.setMessageId(messageObject.messageOwner.id);
                            presentFragment(detailActivity);
                            return;
                        }
                        checkGroupRedpkgDetail(messageObject, bean);
                    } else if (status3 != 1 && status3 != 2) {
                    } else {
                        if (isReceived || "2".equals(red.getRedType())) {
                            RedpktGroupDetailActivity detailActivity2 = new RedpktGroupDetailActivity();
                            detailActivity2.setBean(bean.getRed());
                            detailActivity2.setChat(this.currentChat);
                            detailActivity2.setMessageId(messageObject.messageOwner.id);
                            presentFragment(detailActivity2);
                            return;
                        }
                        showRedPacketDialog(getUserConfig().getCurrentUser(), messageObject, bean, true);
                    }
                } else if (status3 == 0) {
                    if (isReceived) {
                        RedpktGroupDetailActivity detailActivity3 = new RedpktGroupDetailActivity();
                        detailActivity3.setBean(bean.getRed());
                        detailActivity3.setChat(this.currentChat);
                        detailActivity3.setMessageId(messageObject.messageOwner.id);
                        presentFragment(detailActivity3);
                        return;
                    }
                    checkGroupRedpkgDetail(messageObject, bean);
                } else if (status3 == 1) {
                    if (isReceived) {
                        RedpktGroupDetailActivity detailActivity4 = new RedpktGroupDetailActivity();
                        detailActivity4.setBean(bean.getRed());
                        detailActivity4.setChat(this.currentChat);
                        detailActivity4.setMessageId(messageObject.messageOwner.id);
                        presentFragment(detailActivity4);
                        return;
                    }
                    showRedPacketDialog(MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(Integer.parseInt(red.getInitiatorUserId()))), messageObject, bean, true);
                } else if (status3 != 2) {
                } else {
                    if (isReceived) {
                        RedpktGroupDetailActivity detailActivity5 = new RedpktGroupDetailActivity();
                        detailActivity5.setBean(bean.getRed());
                        detailActivity5.setChat(this.currentChat);
                        detailActivity5.setMessageId(messageObject.messageOwner.id);
                        presentFragment(detailActivity5);
                        return;
                    }
                    showRedPacketDialog(MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(Integer.parseInt(red.getInitiatorUserId()))), messageObject, bean, true);
                }
            }
        } else if (rpkTransferMedia.trans == 1 || rpkTransferMedia.trans == 2) {
            TransferResponse transferRes = (TransferResponse) TLJsonResolve.parse((TLObject) rpkTransferMedia.data, (Class<?>) TransferResponse.class).model;
            if (transferRes.getState() == TransferResponse.Status.RECEIVED || transferRes.getState() == TransferResponse.Status.REFUSED || transferRes.getState() == TransferResponse.Status.TIMEOUT) {
                TransferStatusActivity transferStatusActivity = new TransferStatusActivity();
                transferStatusActivity.setMessage(messageObject.messageOwner);
                transferStatusActivity.setTargetUser(this.currentUser);
                transferStatusActivity.setSender(messageObject.isOutOwner());
                presentFragment(transferStatusActivity);
                return;
            }
            checkUserTransferDetail(messageObject, transferRes);
        }
    }

    public void showRedPacketDialog(TLRPC.User sender, MessageObject messageObject, RedpacketResponse bean, boolean isChat) {
        if (this.mRedPacketDialogView == null) {
            this.mRedPacketDialogView = View.inflate(getParentActivity(), R.layout.dialog_red_packet_layout, (ViewGroup) null);
            this.mRedPacketViewHolder = new RedPacketViewHolder(getParentActivity(), this.mRedPacketDialogView);
            DialogRedpkg dialogRedpkg = new DialogRedpkg(getParentActivity(), this.mRedPacketDialogView, R.style.red_pkg_dialog);
            this.mRedPacketDialog = dialogRedpkg;
            dialogRedpkg.setCancelable(false);
        }
        this.mRedPacketViewHolder.setData(sender, bean, isChat);
        final TLRPC.User user = sender;
        final MessageObject messageObject2 = messageObject;
        final RedpacketResponse redpacketResponse = bean;
        final boolean z = isChat;
        this.mRedPacketViewHolder.setOnRedPacketDialogClickListener(new OnRedPacketDialogClickListener() {
            public void onCloseClick() {
                ChatActivity.this.mRedPacketViewHolder.stopAnim();
                ChatActivity.this.mRedPacketDialog.dismiss();
            }

            public void onOpenClick() {
                ChatActivity.this.getRedpacket(user, messageObject2, redpacketResponse, z);
            }

            public void toDetail(RedpacketResponse ret) {
                if (ChatActivity.this.currentUser != null) {
                    RedpktDetailReceiverActivity receiverActivity = new RedpktDetailReceiverActivity();
                    if (ret != null) {
                        receiverActivity.setBean(ret);
                    } else {
                        receiverActivity.setBean(redpacketResponse);
                    }
                    ChatActivity.this.presentFragment(receiverActivity);
                } else {
                    RedpktGroupDetailActivity detailActivity = new RedpktGroupDetailActivity();
                    if (ret != null) {
                        detailActivity.setBean(ret.getRed());
                    } else {
                        detailActivity.setBean(redpacketResponse.getRed());
                    }
                    detailActivity.setChat(ChatActivity.this.currentChat);
                    detailActivity.setMessageId(messageObject2.messageOwner.id);
                    ChatActivity.this.presentFragment(detailActivity);
                }
                ChatActivity.this.mRedPacketViewHolder.stopAnim();
                ChatActivity.this.mRedPacketDialog.dismiss();
            }
        });
        this.mRedPacketDialog.setOnDismissListener(new DialogInterface.OnDismissListener() {
            public final void onDismiss(DialogInterface dialogInterface) {
                ChatActivity.this.lambda$showRedPacketDialog$125$ChatActivity(dialogInterface);
            }
        });
        this.mRedPacketDialog.show();
    }

    public /* synthetic */ void lambda$showRedPacketDialog$125$ChatActivity(DialogInterface dialog) {
        this.mRedPacketViewHolder.clear();
    }

    /* access modifiers changed from: private */
    public void getRedpacket(TLRPC.User target, MessageObject messageObject, RedpacketResponse bean, boolean isChat) {
        final MessageObject messageObject2 = messageObject;
        if (!this.isAntiShake) {
            this.isAntiShake = true;
            final TLRPCRedpacket.CL_messages_rpkTransferReceive req = new TLRPCRedpacket.CL_messages_rpkTransferReceive();
            req.trans = 0;
            if (isChat) {
                TLRPC.InputPeer inputPeer = new TLRPC.TL_inputPeerChannel();
                inputPeer.channel_id = this.currentChat.id;
                inputPeer.access_hash = this.currentChat.access_hash;
                req.peer = inputPeer;
                TLRPC.User user = target;
            } else {
                req.peer = getMessagesController().getInputPeer(target.id);
            }
            req.id = messageObject2.messageOwner.id;
            req.flags = 3;
            if (isChat) {
                RedpacketBean redInfo = bean.getRed();
                int redType = redInfo.getRedTypeInt();
                if (redType == 1) {
                    int grantType = redInfo.getGrantTypeInt();
                    if (grantType == 0) {
                        req.type = 2;
                    } else if (grantType == 1) {
                        req.type = 1;
                    }
                } else if (redType == 2) {
                    req.type = 3;
                }
            } else {
                req.type = 0;
            }
            RedTransOperation redTransOperation = new RedTransOperation(bean.getRed().getSerialCode(), String.valueOf(getUserConfig().getClientUserId()), StringUtils.getNonceStr(getConnectionsManager().getCurrentTime()), UnifyBean.BUSINESS_KEY_REDPACKET_RECEIVE, "2.0.1");
            TLRPC.Chat chat = this.currentChat;
            if (chat != null) {
                redTransOperation.setGroups(String.valueOf(chat.id));
            }
            TLRPC.TL_dataJSON dataJSON = new TLRPC.TL_dataJSON();
            dataJSON.data = new Gson().toJson((Object) redTransOperation);
            req.data = dataJSON;
            final RedpacketResponse redpacketResponse = bean;
            new Handler().postDelayed(new Runnable() {
                public void run() {
                    ChatActivity.this.getConnectionsManager().sendRequest(req, new RequestDelegate(redpacketResponse, messageObject2) {
                        private final /* synthetic */ RedpacketResponse f$1;
                        private final /* synthetic */ MessageObject f$2;

                        {
                            this.f$1 = r2;
                            this.f$2 = r3;
                        }

                        public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                            ChatActivity.AnonymousClass75.this.lambda$run$1$ChatActivity$75(this.f$1, this.f$2, tLObject, tL_error);
                        }
                    });
                }

                public /* synthetic */ void lambda$run$1$ChatActivity$75(RedpacketResponse bean, MessageObject messageObject, TLObject response, TLRPC.TL_error error) {
                    boolean unused = ChatActivity.this.isAntiShake = false;
                    if (error != null) {
                        WalletDialogUtil.showConfirmBtnWalletDialog(ChatActivity.this, WalletErrorUtil.getErrorDescription(error.text));
                        ChatActivity.this.mRedPacketViewHolder.stopAnim();
                        ChatActivity.this.mRedPacketDialog.dismiss();
                    } else if (response instanceof TLRPC.TL_updates) {
                        TLRPC.TL_updates updates = (TLRPC.TL_updates) response;
                        ChatActivity.this.getMessagesController().processUpdates(updates, false);
                        if (0 < updates.updates.size()) {
                            TLRPC.Update update = (TLRPC.Update) updates.updates.get(0);
                            if (update instanceof TLRPCRedpacket.CL_updateRpkTransfer) {
                                TLApiModel<RedpacketResponse> parse = TLJsonResolve.parse((TLObject) ((TLRPCRedpacket.CL_updateRpkTransfer) update).data, (Class<?>) RedpacketResponse.class);
                                RedpacketResponse ret = (RedpacketResponse) parse.model;
                                if ("20004".equals(parse.code)) {
                                    ChatActivity.this.mRedPacketViewHolder.setPromtText(LocaleController.getString("RedpacketIsGone", R.string.RedpacketIsGone), true);
                                    ChatActivity.this.mRedPacketViewHolder.setRet(ret);
                                } else if ("20005".equals(parse.code)) {
                                    ChatActivity.this.mRedPacketViewHolder.setPromtText(LocaleController.getString("RedpacketHadExpired", R.string.RedpacketHadExpired));
                                } else if ("20008".equals(parse.code)) {
                                    ChatActivity.this.mRedPacketViewHolder.setPromtText(LocaleController.getString("YouCantReceivedRedpacket", R.string.YouCantReceivedRedpacket));
                                } else if ("50000".equals(parse.code)) {
                                    ChatActivity.this.mRedPacketViewHolder.setPromtText(LocaleController.getString("SystemIsBusyAndTryAgainLater", R.string.SystemIsBusyAndTryAgainLater));
                                } else if ("20003".equals(parse.code)) {
                                    ChatActivity.this.mRedPacketViewHolder.setPromtText(LocaleController.getString("YouHadAlreadyReceived", R.string.YouHadAlreadyReceived), true);
                                    ChatActivity.this.mRedPacketViewHolder.setRet(ret);
                                } else if ("50001".equals(parse.code)) {
                                    ChatActivity.this.mRedPacketViewHolder.setPromtText("操作太快，请稍后查看抢红包情况");
                                } else if ("0".equals(parse.code)) {
                                    String status = ret.getRed().getStatus();
                                    int isReceived = ret.getRed().getIsReceived();
                                    boolean received = ret.isReceived();
                                    if (isReceived == 1 || received) {
                                        AndroidUtilities.runOnUIThread(new Runnable(bean, messageObject, ret) {
                                            private final /* synthetic */ RedpacketResponse f$1;
                                            private final /* synthetic */ MessageObject f$2;
                                            private final /* synthetic */ RedpacketResponse f$3;

                                            {
                                                this.f$1 = r2;
                                                this.f$2 = r3;
                                                this.f$3 = r4;
                                            }

                                            public final void run() {
                                                ChatActivity.AnonymousClass75.this.lambda$null$0$ChatActivity$75(this.f$1, this.f$2, this.f$3);
                                            }
                                        });
                                    }
                                } else {
                                    ToastUtils.show((CharSequence) WalletErrorUtil.getErrorDescription(parse.message));
                                }
                            }
                        }
                    }
                }

                public /* synthetic */ void lambda$null$0$ChatActivity$75(RedpacketResponse bean, MessageObject messageObject, RedpacketResponse ret) {
                    if (ChatActivity.this.currentChat != null) {
                        RedpktGroupDetailActivity detailActivity = new RedpktGroupDetailActivity();
                        detailActivity.setBean(bean.getRed());
                        detailActivity.setChat(ChatActivity.this.currentChat);
                        detailActivity.setMessageId(messageObject.messageOwner.id);
                        ChatActivity.this.presentFragment(detailActivity);
                    } else {
                        RedpktDetailReceiverActivity receiverActivity = new RedpktDetailReceiverActivity();
                        receiverActivity.setBean(ret);
                        ChatActivity.this.presentFragment(receiverActivity);
                    }
                    ChatActivity.this.mRedPacketViewHolder.stopAnim();
                    ChatActivity.this.mRedPacketViewHolder.setRet(ret);
                    ChatActivity.this.mRedPacketDialog.dismiss();
                }
            }, 800);
        }
    }

    private void checkGroupRedpkgDetail(MessageObject messageObject, RedpacketResponse bean) {
        TLRPCRedpacket.CL_message_rpkTransferCheck req = new TLRPCRedpacket.CL_message_rpkTransferCheck();
        req.trans = 0;
        if (this.currentChat != null) {
            RedpacketBean redInfo = bean.getRed();
            int redType = redInfo.getRedTypeInt();
            if (redType == 1) {
                int grantType = redInfo.getGrantTypeInt();
                if (grantType == 0) {
                    req.type = 2;
                } else if (grantType == 1) {
                    req.type = 1;
                }
            } else if (redType == 2) {
                req.type = 3;
            }
        } else {
            req.type = 0;
        }
        req.flags = 2;
        TLRPC.InputPeer inputPeer = new TLRPC.TL_inputPeerChannel();
        inputPeer.channel_id = this.currentChat.id;
        inputPeer.access_hash = this.currentChat.access_hash;
        req.peer = inputPeer;
        req.id = messageObject.messageOwner.id;
        String serialCode = bean.getRed().getSerialCode();
        String str = getUserConfig().clientUserId + "";
        TLRPC.Chat chat = this.currentChat;
        RedTransOperation redTransOperation = new RedTransOperation(serialCode, str, chat == null ? "" : String.valueOf(chat.id), "android_" + getUserConfig().clientUserId + getConnectionsManager().getCurrentTime(), UnifyBean.BUSINESS_KEY_REDPACKET_CHECK, "2.0.1");
        TLRPC.TL_dataJSON dataJSON = new TLRPC.TL_dataJSON();
        dataJSON.data = new Gson().toJson((Object) redTransOperation);
        req.data = dataJSON;
        this.redTransAlert = new XAlertDialog(getParentActivity(), 5);
        this.reqId = getConnectionsManager().sendRequest(req, new RequestDelegate(messageObject) {
            private final /* synthetic */ MessageObject f$1;

            {
                this.f$1 = r2;
            }

            public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                ChatActivity.this.lambda$checkGroupRedpkgDetail$136$ChatActivity(this.f$1, tLObject, tL_error);
            }
        });
        getConnectionsManager().bindRequestToGuid(this.reqId, this.classGuid);
        this.redTransAlert.setOnCancelListener(new DialogInterface.OnCancelListener() {
            public final void onCancel(DialogInterface dialogInterface) {
                ChatActivity.this.lambda$checkGroupRedpkgDetail$137$ChatActivity(dialogInterface);
            }
        });
        this.redTransAlert.show();
    }

    public /* synthetic */ void lambda$checkGroupRedpkgDetail$136$ChatActivity(MessageObject messageObject, TLObject response, TLRPC.TL_error error) {
        TLObject tLObject = response;
        TLRPC.TL_error tL_error = error;
        AndroidUtilities.runOnUIThread(new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$null$126$ChatActivity();
            }
        });
        if (tL_error != null) {
            WalletDialogUtil.showConfirmBtnWalletDialog(this, WalletErrorUtil.getErrorDescription(tL_error.text));
        } else if (tLObject instanceof TLRPC.TL_updates) {
            TLRPC.TL_updates updates = (TLRPC.TL_updates) tLObject;
            Iterator it = updates.updates.iterator();
            while (it.hasNext()) {
                TLRPC.Update update = (TLRPC.Update) it.next();
                if (update instanceof TLRPCRedpacket.CL_updateRpkTransfer) {
                    TLApiModel<RedpacketResponse> parse = TLJsonResolve.parse((TLObject) ((TLRPCRedpacket.CL_updateRpkTransfer) update).data, (Class<?>) RedpacketResponse.class);
                    if (parse.isSuccess() || "20004".equals(parse.code) || "20013".equals(parse.code) || "20008".equals(parse.code)) {
                        RedpacketResponse retBean = (RedpacketResponse) parse.model;
                        RedpacketBean red = retBean.getRed();
                        if (red != null) {
                            getMessagesController().processUpdates(updates, false);
                            if (red.getStatus() != null && !TextUtils.isEmpty(red.getStatus())) {
                                TLRPC.User sender = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(Integer.parseInt(red.getInitiatorUserId())));
                                AndroidUtilities.runOnUIThread(new Runnable(red.getIsReceived(), retBean.isReceived(), Integer.parseInt(red.getRedType()), messageObject, retBean, sender) {
                                    private final /* synthetic */ int f$1;
                                    private final /* synthetic */ boolean f$2;
                                    private final /* synthetic */ int f$3;
                                    private final /* synthetic */ MessageObject f$4;
                                    private final /* synthetic */ RedpacketResponse f$5;
                                    private final /* synthetic */ TLRPC.User f$6;

                                    {
                                        this.f$1 = r2;
                                        this.f$2 = r3;
                                        this.f$3 = r4;
                                        this.f$4 = r5;
                                        this.f$5 = r6;
                                        this.f$6 = r7;
                                    }

                                    public final void run() {
                                        ChatActivity.this.lambda$null$127$ChatActivity(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
                                    }
                                });
                                return;
                            }
                            return;
                        }
                        return;
                    } else if ("USER_INFONNOT_CODE".equals(parse.message) || "SYSTEM_ERROR_ACCOUNT_EXCEPTION_CODE".equals(parse.message)) {
                        WalletDialogUtil.showWalletDialog(this, "", LocaleController.formatString("AccountInfoNotCompleted", R.string.AccountInfoNotCompleted, LocaleController.getString("ReceiveRedPacket", R.string.ReceiveRedPacket), LocaleController.getString("ReceiveRedPacket", R.string.ReceiveRedPacket)), LocaleController.getString(R.string.Close), LocaleController.getString(R.string.GoToWalletCenter), (DialogInterface.OnClickListener) null, $$Lambda$ChatActivity$vLsbr0oSlUUPVCGHqlUy1J_yQpU.INSTANCE, (DialogInterface.OnDismissListener) null);
                        return;
                    } else if ("ACCOUNT_HAS_BEEN_FROZEN_CODE".equals(parse.message)) {
                        WalletDialogUtil.showWalletDialog(this, "", LocaleController.getString(R.string.PleaseContractServerToFindPayPasswordOrTryIt24HoursLater), LocaleController.getString(R.string.Close), LocaleController.getString(R.string.ContactCustomerService), (DialogInterface.OnClickListener) null, new DialogInterface.OnClickListener() {
                            public final void onClick(DialogInterface dialogInterface, int i) {
                                ChatActivity.this.lambda$null$131$ChatActivity(dialogInterface, i);
                            }
                        }, (DialogInterface.OnDismissListener) null);
                        return;
                    } else if ("ACCOUNT_UNCERTIFIED_CODE".equals(parse.message) || "EXCLUSIVE_PLEASE_BIND_FIRST_BANKINFO".equals(parse.message)) {
                        WalletDialogUtil.showWalletDialog(this, "", String.format(LocaleController.getString("BankCardNotBindTips", R.string.BankCardNotBindTips), new Object[]{LocaleController.getString("ReceiveRedPacket", R.string.ReceiveRedPacket)}), LocaleController.getString(R.string.Close), LocaleController.getString("GoToBind", R.string.GoToBind), (DialogInterface.OnClickListener) null, $$Lambda$ChatActivity$DynWEEWXjrnAiUp3AdtWetptRF0.INSTANCE, (DialogInterface.OnDismissListener) null);
                        return;
                    } else if ("SYSTEM_ERROR_NOT_SET_PAYWORD_COCE".equals(parse.message)) {
                        WalletDialogUtil.showWalletDialog(this, "", String.format(LocaleController.getString("PayPasswordNotSetTips", R.string.PayPasswordNotSetTips), new Object[]{LocaleController.getString("ReceiveRedPacket", R.string.ReceiveRedPacket)}), LocaleController.getString(R.string.Close), LocaleController.getString(R.string.redpacket_goto_set), (DialogInterface.OnClickListener) null, new DialogInterface.OnClickListener() {
                            public final void onClick(DialogInterface dialogInterface, int i) {
                                ChatActivity.this.lambda$null$135$ChatActivity(dialogInterface, i);
                            }
                        }, (DialogInterface.OnDismissListener) null);
                        return;
                    } else if (BuildVars.RELEASE_VERSION) {
                        WalletErrorUtil.parseErrorDialog((Object) this, LocaleController.getString(R.string.SystemIsBusyAndTryAgainLater));
                        return;
                    } else {
                        WalletErrorUtil.parseErrorDialog((Object) this, parse.code, parse.message);
                        return;
                    }
                }
            }
        }
    }

    public /* synthetic */ void lambda$null$126$ChatActivity() {
        this.redTransAlert.dismiss();
    }

    public /* synthetic */ void lambda$null$127$ChatActivity(int isReceived, boolean received, int redType, MessageObject messageObject, RedpacketResponse retBean, TLRPC.User sender) {
        if (isReceived == 1 || received || (redType == 2 && messageObject.isOutOwner())) {
            RedpktGroupDetailActivity detailActivity = new RedpktGroupDetailActivity();
            detailActivity.setBean(retBean.getRed());
            detailActivity.setChat(this.currentChat);
            detailActivity.setMessageId(messageObject.messageOwner.id);
            presentFragment(detailActivity);
            return;
        }
        showRedPacketDialog(sender, messageObject, retBean, true);
    }

    static /* synthetic */ void lambda$null$128() {
    }

    public /* synthetic */ void lambda$null$130$ChatActivity() {
        presentFragment(new AboutAppActivity());
    }

    public /* synthetic */ void lambda$null$131$ChatActivity(DialogInterface dialogInterface, int i) {
        AndroidUtilities.runOnUIThread(new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$null$130$ChatActivity();
            }
        });
    }

    static /* synthetic */ void lambda$null$132() {
    }

    public /* synthetic */ void lambda$null$135$ChatActivity(DialogInterface dialogInterface, int i) {
        AndroidUtilities.runOnUIThread(new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$null$134$ChatActivity();
            }
        });
    }

    public /* synthetic */ void lambda$null$134$ChatActivity() {
        Bundle args = new Bundle();
        args.putInt("step", 0);
        args.putInt("type", 0);
        presentFragment(new WalletPaymentPasswordActivity(args));
    }

    public /* synthetic */ void lambda$checkGroupRedpkgDetail$137$ChatActivity(DialogInterface hintDialog) {
        getConnectionsManager().cancelRequest(this.reqId, true);
    }

    private void checkUserRedpkgDetail(MessageObject messageObject, RedpacketResponse bean) {
        TLRPCRedpacket.CL_message_rpkTransferCheck req = new TLRPCRedpacket.CL_message_rpkTransferCheck();
        req.trans = 0;
        req.type = 0;
        req.flags = 2;
        req.id = messageObject.messageOwner.id;
        TLRPC.InputPeer inputPeer = new TLRPC.TL_inputPeerUser();
        inputPeer.user_id = this.currentUser.id;
        inputPeer.access_hash = this.currentUser.access_hash;
        req.peer = inputPeer;
        this.redTransAlert = new XAlertDialog(getParentActivity(), 5);
        String serialCode = bean.getRed().getSerialCode();
        String str = getUserConfig().clientUserId + "";
        TLRPC.User user = this.currentUser;
        RedTransOperation redTransOperation = new RedTransOperation(serialCode, str, user == null ? "" : String.valueOf(user.id), StringUtils.getRandomString(20) + getConnectionsManager().getCurrentTime(), UnifyBean.BUSINESS_KEY_REDPACKET_CHECK, "2.0.1");
        TLRPC.TL_dataJSON dataJSON = new TLRPC.TL_dataJSON();
        dataJSON.data = new Gson().toJson((Object) redTransOperation);
        req.data = dataJSON;
        this.reqId = getConnectionsManager().sendRequest(req, new RequestDelegate(messageObject) {
            private final /* synthetic */ MessageObject f$1;

            {
                this.f$1 = r2;
            }

            public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                ChatActivity.this.lambda$checkUserRedpkgDetail$148$ChatActivity(this.f$1, tLObject, tL_error);
            }
        });
        getConnectionsManager().bindRequestToGuid(this.reqId, this.classGuid);
        this.redTransAlert.setOnCancelListener(new DialogInterface.OnCancelListener() {
            public final void onCancel(DialogInterface dialogInterface) {
                ChatActivity.this.lambda$checkUserRedpkgDetail$149$ChatActivity(dialogInterface);
            }
        });
        this.redTransAlert.show();
    }

    public /* synthetic */ void lambda$checkUserRedpkgDetail$148$ChatActivity(MessageObject messageObject, TLObject response, TLRPC.TL_error error) {
        TLObject tLObject = response;
        AndroidUtilities.runOnUIThread(new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$null$138$ChatActivity();
            }
        });
        if (error != null) {
            AlertsCreator.showSimpleToast(this, LocaleController.getString("SystemIsBusyAndTryAgainLater", R.string.SystemIsBusyAndTryAgainLater));
        } else if (tLObject instanceof TLRPC.TL_updates) {
            TLRPC.TL_updates updates = (TLRPC.TL_updates) tLObject;
            Iterator it = updates.updates.iterator();
            while (it.hasNext()) {
                TLRPC.Update update = (TLRPC.Update) it.next();
                if (update instanceof TLRPCRedpacket.CL_updateRpkTransfer) {
                    TLApiModel<RedpacketResponse> parse = TLJsonResolve.parse((TLObject) ((TLRPCRedpacket.CL_updateRpkTransfer) update).data, (Class<?>) RedpacketResponse.class);
                    if (parse.isSuccess() || "20004".equals(parse.code) || "20013".equals(parse.code) || "20008".equals(parse.code)) {
                        RedpacketResponse retBean = (RedpacketResponse) parse.model;
                        RedpacketBean red = retBean.getRed();
                        if (red != null) {
                            getMessagesController().processUpdates(updates, false);
                            if (red.getStatus() != null && !TextUtils.isEmpty(red.getStatus())) {
                                AndroidUtilities.runOnUIThread(new Runnable(red, messageObject, retBean, MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(Integer.parseInt(red.getInitiatorUserId())))) {
                                    private final /* synthetic */ RedpacketBean f$1;
                                    private final /* synthetic */ MessageObject f$2;
                                    private final /* synthetic */ RedpacketResponse f$3;
                                    private final /* synthetic */ TLRPC.User f$4;

                                    {
                                        this.f$1 = r2;
                                        this.f$2 = r3;
                                        this.f$3 = r4;
                                        this.f$4 = r5;
                                    }

                                    public final void run() {
                                        ChatActivity.this.lambda$null$139$ChatActivity(this.f$1, this.f$2, this.f$3, this.f$4);
                                    }
                                });
                                return;
                            }
                            return;
                        }
                        return;
                    } else if ("USER_INFONNOT_CODE".equals(parse.message) || "SYSTEM_ERROR_ACCOUNT_EXCEPTION_CODE".equals(parse.message)) {
                        WalletDialogUtil.showWalletDialog(this, "", LocaleController.formatString("AccountInfoNotCompleted", R.string.AccountInfoNotCompleted, LocaleController.getString("ReceiveRedPacket", R.string.ReceiveRedPacket), LocaleController.getString("ReceiveRedPacket", R.string.ReceiveRedPacket)), LocaleController.getString(R.string.Close), LocaleController.getString(R.string.GoToWalletCenter), (DialogInterface.OnClickListener) null, $$Lambda$ChatActivity$L_pfrlFj_mE3I0WgpvCipC5MU4.INSTANCE, (DialogInterface.OnDismissListener) null);
                        return;
                    } else if ("ACCOUNT_HAS_BEEN_FROZEN_CODE".equals(parse.message)) {
                        WalletDialogUtil.showWalletDialog(this, "", LocaleController.getString(R.string.PleaseContractServerToFindPayPasswordOrTryIt24HoursLater), LocaleController.getString(R.string.Close), LocaleController.getString(R.string.ContactCustomerService), (DialogInterface.OnClickListener) null, new DialogInterface.OnClickListener() {
                            public final void onClick(DialogInterface dialogInterface, int i) {
                                ChatActivity.this.lambda$null$143$ChatActivity(dialogInterface, i);
                            }
                        }, (DialogInterface.OnDismissListener) null);
                        return;
                    } else if ("ACCOUNT_UNCERTIFIED_CODE".equals(parse.message) || "EXCLUSIVE_PLEASE_BIND_FIRST_BANKINFO".equals(parse.message)) {
                        WalletDialogUtil.showWalletDialog(this, "", String.format(LocaleController.getString("BankCardNotBindTips", R.string.BankCardNotBindTips), new Object[]{LocaleController.getString("ReceiveRedPacket", R.string.ReceiveRedPacket)}), LocaleController.getString(R.string.Close), LocaleController.getString("GoToBind", R.string.GoToBind), (DialogInterface.OnClickListener) null, $$Lambda$ChatActivity$x1y0VADKvtj_5tUe_biDrDfeKUU.INSTANCE, (DialogInterface.OnDismissListener) null);
                        return;
                    } else if ("SYSTEM_ERROR_NOT_SET_PAYWORD_COCE".equals(parse.message)) {
                        WalletDialogUtil.showWalletDialog(this, "", String.format(LocaleController.getString("PayPasswordNotSetTips", R.string.PayPasswordNotSetTips), new Object[]{LocaleController.getString("ReceiveRedPacket", R.string.ReceiveRedPacket)}), LocaleController.getString(R.string.Close), LocaleController.getString(R.string.redpacket_goto_set), (DialogInterface.OnClickListener) null, new DialogInterface.OnClickListener() {
                            public final void onClick(DialogInterface dialogInterface, int i) {
                                ChatActivity.this.lambda$null$147$ChatActivity(dialogInterface, i);
                            }
                        }, (DialogInterface.OnDismissListener) null);
                        return;
                    } else if (BuildVars.RELEASE_VERSION) {
                        WalletErrorUtil.parseErrorDialog((Object) this, LocaleController.getString(R.string.SystemIsBusyAndTryAgainLater));
                        return;
                    } else {
                        WalletErrorUtil.parseErrorDialog((Object) this, parse.code, parse.message);
                        return;
                    }
                }
            }
        }
    }

    public /* synthetic */ void lambda$null$138$ChatActivity() {
        this.redTransAlert.dismiss();
    }

    public /* synthetic */ void lambda$null$139$ChatActivity(RedpacketBean red, MessageObject messageObject, RedpacketResponse retBean, TLRPC.User sender) {
        int status = Integer.parseInt(red.getStatus());
        if (messageObject.isOut()) {
            RedpktDetailActivity redpkgStateActivity = new RedpktDetailActivity();
            redpkgStateActivity.setBean(retBean);
            presentFragment(redpkgStateActivity);
        } else if (status == 1) {
            RedpktDetailReceiverActivity receiverActivity = new RedpktDetailReceiverActivity();
            receiverActivity.setBean(retBean);
            presentFragment(receiverActivity);
        } else {
            showRedPacketDialog(sender, messageObject, retBean, false);
        }
    }

    static /* synthetic */ void lambda$null$140() {
    }

    public /* synthetic */ void lambda$null$142$ChatActivity() {
        presentFragment(new AboutAppActivity());
    }

    public /* synthetic */ void lambda$null$143$ChatActivity(DialogInterface dialogInterface, int i) {
        AndroidUtilities.runOnUIThread(new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$null$142$ChatActivity();
            }
        });
    }

    static /* synthetic */ void lambda$null$144() {
    }

    public /* synthetic */ void lambda$null$147$ChatActivity(DialogInterface dialogInterface, int i) {
        AndroidUtilities.runOnUIThread(new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$null$146$ChatActivity();
            }
        });
    }

    public /* synthetic */ void lambda$null$146$ChatActivity() {
        Bundle args = new Bundle();
        args.putInt("step", 0);
        args.putInt("type", 0);
        presentFragment(new WalletPaymentPasswordActivity(args));
    }

    public /* synthetic */ void lambda$checkUserRedpkgDetail$149$ChatActivity(DialogInterface hintDialog) {
        getConnectionsManager().cancelRequest(this.reqId, true);
    }

    private void checkUserTransferDetail(MessageObject messageObject, TransferResponse bean) {
        TLRPCRedpacket.CL_message_rpkTransferCheck req = new TLRPCRedpacket.CL_message_rpkTransferCheck();
        req.trans = 1;
        req.type = 0;
        req.flags = 2;
        req.id = messageObject.messageOwner.id;
        TLRPC.InputPeer inputPeer = new TLRPC.TL_inputPeerUser();
        inputPeer.user_id = this.currentUser.id;
        inputPeer.access_hash = this.currentUser.access_hash;
        req.peer = inputPeer;
        String carry_over_details = ParamsUtil.toUserIdJson(UnifyBean.BUSINESS_KEY_TRANSFER_CHECK, new String[]{"serialCode", "nonceStr"}, bean.getSerialCode(), StringUtils.getRandomString(20) + getConnectionsManager().getCurrentTime());
        TLRPC.TL_dataJSON dataJSON = new TLRPC.TL_dataJSON();
        dataJSON.data = carry_over_details;
        req.data = dataJSON;
        this.redTransAlert = new XAlertDialog(getParentActivity(), 5);
        this.reqId = getConnectionsManager().sendRequest(req, new RequestDelegate(messageObject) {
            private final /* synthetic */ MessageObject f$1;

            {
                this.f$1 = r2;
            }

            public final void run(TLObject tLObject, TLRPC.TL_error tL_error) {
                ChatActivity.this.lambda$checkUserTransferDetail$161$ChatActivity(this.f$1, tLObject, tL_error);
            }
        });
        getConnectionsManager().bindRequestToGuid(this.reqId, this.classGuid);
        this.redTransAlert.setOnCancelListener(new DialogInterface.OnCancelListener() {
            public final void onCancel(DialogInterface dialogInterface) {
                ChatActivity.this.lambda$checkUserTransferDetail$162$ChatActivity(dialogInterface);
            }
        });
        this.redTransAlert.show();
    }

    public /* synthetic */ void lambda$checkUserTransferDetail$161$ChatActivity(MessageObject messageObject, TLObject response, TLRPC.TL_error error) {
        TLObject tLObject = response;
        AndroidUtilities.runOnUIThread(new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$null$150$ChatActivity();
            }
        });
        if (error != null) {
            AlertsCreator.showSimpleToast(this, LocaleController.getString("SystemIsBusyAndTryAgainLater", R.string.SystemIsBusyAndTryAgainLater));
        } else if (tLObject instanceof TLRPC.TL_updates) {
            TLRPC.TL_updates updates = (TLRPC.TL_updates) tLObject;
            Iterator it = updates.updates.iterator();
            while (it.hasNext()) {
                TLRPC.Update update = (TLRPC.Update) it.next();
                if (update instanceof TLRPCRedpacket.CL_updateRpkTransfer) {
                    TLApiModel<TransferResponse> parse = TLJsonResolve.parse((TLObject) ((TLRPCRedpacket.CL_updateRpkTransfer) update).data, (Class<?>) TransferResponse.class);
                    TransferResponse transferRes = (TransferResponse) parse.model;
                    if (parse.isSuccess()) {
                        getMessagesController().processUpdates(updates, false);
                        AndroidUtilities.runOnUIThread(new Runnable(transferRes, messageObject) {
                            private final /* synthetic */ TransferResponse f$1;
                            private final /* synthetic */ MessageObject f$2;

                            {
                                this.f$1 = r2;
                                this.f$2 = r3;
                            }

                            public final void run() {
                                ChatActivity.this.lambda$null$151$ChatActivity(this.f$1, this.f$2);
                            }
                        });
                        return;
                    }
                    MessageObject messageObject2 = messageObject;
                    AndroidUtilities.runOnUIThread(new Runnable() {
                        public final void run() {
                            ChatActivity.this.lambda$null$152$ChatActivity();
                        }
                    });
                    if ("USER_INFONNOT_CODE".equals(parse.message) || "SYSTEM_ERROR_ACCOUNT_EXCEPTION_CODE".equals(parse.message)) {
                        WalletDialogUtil.showWalletDialog(this, "", LocaleController.formatString("AccountInfoNotCompleted", R.string.AccountInfoNotCompleted, LocaleController.getString("ReceiveTransfer", R.string.ReceiveTransfer), LocaleController.getString("ReceiveTransfer", R.string.ReceiveTransfer)), LocaleController.getString(R.string.Close), LocaleController.getString(R.string.GoToWalletCenter), (DialogInterface.OnClickListener) null, $$Lambda$ChatActivity$RNnOSL1ThSFjN8q4o0n5zO3U2fc.INSTANCE, (DialogInterface.OnDismissListener) null);
                        return;
                    } else if ("ACCOUNT_HAS_BEEN_FROZEN_CODE".equals(parse.message)) {
                        WalletDialogUtil.showWalletDialog(this, "", LocaleController.getString(R.string.PleaseContractServerToFindPayPasswordOrTryIt24HoursLater), LocaleController.getString(R.string.Close), LocaleController.getString(R.string.ContactCustomerService), (DialogInterface.OnClickListener) null, new DialogInterface.OnClickListener() {
                            public final void onClick(DialogInterface dialogInterface, int i) {
                                ChatActivity.this.lambda$null$156$ChatActivity(dialogInterface, i);
                            }
                        }, (DialogInterface.OnDismissListener) null);
                        return;
                    } else if ("ACCOUNT_UNCERTIFIED_CODE".equals(parse.message) || "EXCLUSIVE_PLEASE_BIND_FIRST_BANKINFO".equals(parse.message)) {
                        WalletDialogUtil.showWalletDialog(this, "", String.format(LocaleController.getString("BankCardNotBindTips", R.string.BankCardNotBindTips), new Object[]{LocaleController.getString("ReceiveTransfer", R.string.ReceiveTransfer)}), LocaleController.getString(R.string.Close), LocaleController.getString("GoToBind", R.string.GoToBind), (DialogInterface.OnClickListener) null, $$Lambda$ChatActivity$j1ZZJEoKx1PYOAF3KbTmbHMaSzs.INSTANCE, (DialogInterface.OnDismissListener) null);
                        return;
                    } else if ("SYSTEM_ERROR_NOT_SET_PAYWORD_COCE".equals(parse.message)) {
                        WalletDialogUtil.showWalletDialog(this, "", String.format(LocaleController.getString("PayPasswordNotSetTips", R.string.PayPasswordNotSetTips), new Object[]{LocaleController.getString("ReceiveTransfer", R.string.ReceiveTransfer)}), LocaleController.getString(R.string.Close), LocaleController.getString(R.string.redpacket_goto_set), (DialogInterface.OnClickListener) null, new DialogInterface.OnClickListener() {
                            public final void onClick(DialogInterface dialogInterface, int i) {
                                ChatActivity.this.lambda$null$160$ChatActivity(dialogInterface, i);
                            }
                        }, (DialogInterface.OnDismissListener) null);
                        return;
                    } else if (BuildVars.RELEASE_VERSION) {
                        WalletErrorUtil.parseErrorDialog((Object) this, LocaleController.getString("SystemIsBusyAndTryAgainLater", R.string.SystemIsBusyAndTryAgainLater));
                        return;
                    } else {
                        WalletErrorUtil.parseErrorDialog((Object) this, parse.code, parse.message);
                        return;
                    }
                } else {
                    MessageObject messageObject3 = messageObject;
                }
            }
            MessageObject messageObject4 = messageObject;
        } else {
            MessageObject messageObject5 = messageObject;
        }
    }

    public /* synthetic */ void lambda$null$150$ChatActivity() {
        this.redTransAlert.dismiss();
    }

    public /* synthetic */ void lambda$null$151$ChatActivity(TransferResponse transferRes, MessageObject messageObject) {
        TransferStatusActivity transferStatusActivity = new TransferStatusActivity();
        transferStatusActivity.setTransResponse(transferRes);
        transferStatusActivity.setMessage(messageObject.messageOwner);
        transferStatusActivity.setTargetUser(this.currentUser);
        transferStatusActivity.setSender(messageObject.isOutOwner());
        presentFragment(transferStatusActivity);
    }

    public /* synthetic */ void lambda$null$152$ChatActivity() {
        this.redTransAlert.dismiss();
    }

    static /* synthetic */ void lambda$null$153() {
    }

    public /* synthetic */ void lambda$null$155$ChatActivity() {
        presentFragment(new AboutAppActivity());
    }

    public /* synthetic */ void lambda$null$156$ChatActivity(DialogInterface dialogInterface, int i) {
        AndroidUtilities.runOnUIThread(new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$null$155$ChatActivity();
            }
        });
    }

    static /* synthetic */ void lambda$null$157() {
    }

    public /* synthetic */ void lambda$null$160$ChatActivity(DialogInterface dialogInterface, int i) {
        AndroidUtilities.runOnUIThread(new Runnable() {
            public final void run() {
                ChatActivity.this.lambda$null$159$ChatActivity();
            }
        });
    }

    public /* synthetic */ void lambda$null$159$ChatActivity() {
        Bundle args = new Bundle();
        args.putInt("step", 0);
        args.putInt("type", 0);
        presentFragment(new WalletPaymentPasswordActivity(args));
    }

    public /* synthetic */ void lambda$checkUserTransferDetail$162$ChatActivity(DialogInterface hintDialog) {
        getConnectionsManager().cancelRequest(this.reqId, true);
    }

    public String setMoneyFormat(String data) {
        if (!NumberUtil.isNumber(data)) {
            return "";
        }
        if (!data.contains(".")) {
            return MoneyUtil.formatToString(new BigDecimal(String.valueOf(data)).multiply(new BigDecimal("1")).toString(), 0);
        }
        String[] split = data.split("\\.");
        String number1 = split[0];
        String number2 = split[1];
        String res = MoneyUtil.formatToString(new BigDecimal(String.valueOf(number1)).multiply(new BigDecimal("1")).toString(), 0);
        if (number2.length() > 8) {
            number2 = number2.substring(0, 8);
        }
        return res + "." + number2;
    }

    public void sendEditMessageMedia(MessageObject message) {
        TLRPC.TL_inputPeerUser peer = new TLRPC.TL_inputPeerUser();
        TLRPC.User currentUser2 = getUserConfig().getCurrentUser();
        peer.user_id = currentUser2.id;
        peer.access_hash = currentUser2.access_hash;
        getSendMessagesHelper().sendEditMessageMedia(peer, message.messageOwner.id, new TLRPC.TL_inputMediaEmpty());
    }

    public class ChatActivityAdapter extends RecyclerView.Adapter {
        /* access modifiers changed from: private */
        public int botInfoRow = -1;
        /* access modifiers changed from: private */
        public boolean isBot;
        /* access modifiers changed from: private */
        public int loadingDownRow;
        /* access modifiers changed from: private */
        public int loadingUpRow;
        /* access modifiers changed from: private */
        public Context mContext;
        /* access modifiers changed from: private */
        public int messagesEndRow;
        /* access modifiers changed from: private */
        public int messagesStartRow;
        private int rowCount;

        public ChatActivityAdapter(Context context) {
            this.mContext = context;
            this.isBot = ChatActivity.this.currentUser != null && ChatActivity.this.currentUser.bot;
        }

        public void updateRows() {
            this.rowCount = 0;
            if (!ChatActivity.this.messages.isEmpty()) {
                if (!ChatActivity.this.forwardEndReached[0] || (ChatActivity.this.mergeDialogId != 0 && !ChatActivity.this.forwardEndReached[1])) {
                    int i = this.rowCount;
                    this.rowCount = i + 1;
                    this.loadingDownRow = i;
                } else {
                    this.loadingDownRow = -1;
                }
                int i2 = this.rowCount;
                this.messagesStartRow = i2;
                int size = i2 + ChatActivity.this.messages.size();
                this.rowCount = size;
                this.messagesEndRow = size;
                if (ChatActivity.this.currentUser == null || !ChatActivity.this.currentUser.bot || ChatActivity.this.inScheduleMode) {
                    this.botInfoRow = -1;
                } else {
                    int i3 = this.rowCount;
                    this.rowCount = i3 + 1;
                    this.botInfoRow = i3;
                }
                if (!ChatActivity.this.endReached[0] || (ChatActivity.this.mergeDialogId != 0 && !ChatActivity.this.endReached[1])) {
                    int i4 = this.rowCount;
                    this.rowCount = i4 + 1;
                    this.loadingUpRow = i4;
                    return;
                }
                this.loadingUpRow = -1;
                return;
            }
            this.loadingUpRow = -1;
            this.loadingDownRow = -1;
            this.messagesStartRow = -1;
            this.messagesEndRow = -1;
            if (ChatActivity.this.currentUser == null || !ChatActivity.this.currentUser.bot || MessagesController.isSupportUser(ChatActivity.this.currentUser) || ChatActivity.this.inScheduleMode) {
                this.botInfoRow = -1;
                return;
            }
            int i5 = this.rowCount;
            this.rowCount = i5 + 1;
            this.botInfoRow = i5;
        }

        public int getItemCount() {
            if (ChatActivity.this.clearingHistory) {
                return 0;
            }
            return this.rowCount;
        }

        public long getItemId(int i) {
            return -1;
        }

        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v11, resolved type: java.lang.Object} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v10, resolved type: android.view.View} */
        /* JADX WARNING: Multi-variable type inference failed */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public androidx.recyclerview.widget.RecyclerView.ViewHolder onCreateViewHolder(android.view.ViewGroup r6, int r7) {
            /*
                r5 = this;
                r0 = 0
                r1 = 1
                r2 = 0
                if (r7 != 0) goto L_0x0048
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.util.ArrayList r3 = r3.chatMessageCellsCache
                boolean r3 = r3.isEmpty()
                if (r3 != 0) goto L_0x0028
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.util.ArrayList r3 = r3.chatMessageCellsCache
                java.lang.Object r3 = r3.get(r2)
                r0 = r3
                android.view.View r0 = (android.view.View) r0
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.util.ArrayList r3 = r3.chatMessageCellsCache
                r3.remove(r2)
                goto L_0x0032
            L_0x0028:
                im.bclpbkiauv.ui.cells.ChatMessageCell r2 = new im.bclpbkiauv.ui.cells.ChatMessageCell
                android.content.Context r3 = r5.mContext
                im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                r2.<init>(r3, r4)
                r0 = r2
            L_0x0032:
                r2 = r0
                im.bclpbkiauv.ui.cells.ChatMessageCell r2 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r2
                im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter$1 r3 = new im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter$1
                r3.<init>()
                r2.setDelegate(r3)
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$EncryptedChat r3 = r3.currentEncryptedChat
                if (r3 != 0) goto L_0x0046
                r2.setAllowAssistant(r1)
            L_0x0046:
                goto L_0x00b4
            L_0x0048:
                if (r7 != r1) goto L_0x0075
                im.bclpbkiauv.ui.cells.ChatActionCell r1 = new im.bclpbkiauv.ui.cells.ChatActionCell
                android.content.Context r2 = r5.mContext
                r1.<init>(r2)
                r0 = r1
                r1 = r0
                im.bclpbkiauv.ui.cells.ChatActionCell r1 = (im.bclpbkiauv.ui.cells.ChatActionCell) r1
                im.bclpbkiauv.messenger.MessageObject r1 = r1.getMessageObject()
                if (r1 != 0) goto L_0x0069
                android.view.View r1 = new android.view.View
                android.content.Context r2 = r5.mContext
                r1.<init>(r2)
                r0 = r1
                im.bclpbkiauv.ui.components.RecyclerListView$Holder r1 = new im.bclpbkiauv.ui.components.RecyclerListView$Holder
                r1.<init>(r0)
                return r1
            L_0x0069:
                r1 = r0
                im.bclpbkiauv.ui.cells.ChatActionCell r1 = (im.bclpbkiauv.ui.cells.ChatActionCell) r1
                im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter$2 r2 = new im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter$2
                r2.<init>()
                r1.setDelegate(r2)
                goto L_0x00b4
            L_0x0075:
                r1 = 2
                if (r7 != r1) goto L_0x0081
                im.bclpbkiauv.ui.cells.ChatUnreadCell r1 = new im.bclpbkiauv.ui.cells.ChatUnreadCell
                android.content.Context r2 = r5.mContext
                r1.<init>(r2)
                r0 = r1
                goto L_0x00b4
            L_0x0081:
                r1 = 3
                if (r7 != r1) goto L_0x0098
                im.bclpbkiauv.ui.cells.BotHelpCell r1 = new im.bclpbkiauv.ui.cells.BotHelpCell
                android.content.Context r2 = r5.mContext
                r1.<init>(r2)
                r0 = r1
                r1 = r0
                im.bclpbkiauv.ui.cells.BotHelpCell r1 = (im.bclpbkiauv.ui.cells.BotHelpCell) r1
                im.bclpbkiauv.ui.-$$Lambda$ChatActivity$ChatActivityAdapter$KljRbvrWIokZTHvdJahPHNG6hpY r2 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$ChatActivityAdapter$KljRbvrWIokZTHvdJahPHNG6hpY
                r2.<init>()
                r1.setDelegate(r2)
                goto L_0x00b4
            L_0x0098:
                r1 = 4
                if (r7 != r1) goto L_0x00a4
                im.bclpbkiauv.ui.cells.ChatLoadingCell r1 = new im.bclpbkiauv.ui.cells.ChatLoadingCell
                android.content.Context r2 = r5.mContext
                r1.<init>(r2)
                r0 = r1
                goto L_0x00b4
            L_0x00a4:
                r1 = 5
                if (r7 != r1) goto L_0x00b4
                android.content.Context r1 = r5.mContext
                android.view.LayoutInflater r1 = android.view.LayoutInflater.from(r1)
                r3 = 2131493057(0x7f0c00c1, float:1.8609583E38)
                android.view.View r0 = r1.inflate(r3, r6, r2)
            L_0x00b4:
                androidx.recyclerview.widget.RecyclerView$LayoutParams r1 = new androidx.recyclerview.widget.RecyclerView$LayoutParams
                r2 = -1
                r3 = -2
                r1.<init>((int) r2, (int) r3)
                r0.setLayoutParams(r1)
                im.bclpbkiauv.ui.components.RecyclerListView$Holder r1 = new im.bclpbkiauv.ui.components.RecyclerListView$Holder
                r1.<init>(r0)
                return r1
            */
            throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.ChatActivityAdapter.onCreateViewHolder(android.view.ViewGroup, int):androidx.recyclerview.widget.RecyclerView$ViewHolder");
        }

        public /* synthetic */ void lambda$onCreateViewHolder$0$ChatActivity$ChatActivityAdapter(String url) {
            if (url.startsWith("@")) {
                ChatActivity.this.getMessagesController().openByUserName(url.substring(1), ChatActivity.this, 0);
            } else if (url.startsWith("#") || url.startsWith("$")) {
                DialogsActivity fragment = new DialogsActivity((Bundle) null);
                fragment.setSearchString(url);
                ChatActivity.this.presentFragment(fragment);
            } else if (url.startsWith("/")) {
                ChatActivity.this.chatActivityEnterView.setCommand((MessageObject) null, url, false, false);
                if (ChatActivity.this.chatActivityEnterView.getFieldText() == null) {
                    ChatActivity.this.hideFieldPanel(false);
                }
            }
        }

        /* JADX WARNING: Can't fix incorrect switch cases order */
        /* JADX WARNING: Removed duplicated region for block: B:221:0x053e  */
        /* JADX WARNING: Removed duplicated region for block: B:224:0x054f  */
        /* JADX WARNING: Removed duplicated region for block: B:251:0x0663  */
        /* JADX WARNING: Removed duplicated region for block: B:254:0x0674  */
        /* JADX WARNING: Removed duplicated region for block: B:290:0x0825  */
        /* JADX WARNING: Removed duplicated region for block: B:293:0x0836  */
        /* JADX WARNING: Removed duplicated region for block: B:313:0x0905  */
        /* JADX WARNING: Removed duplicated region for block: B:320:0x093b  */
        /* JADX WARNING: Removed duplicated region for block: B:92:0x01b5  */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public void onBindViewHolder(androidx.recyclerview.widget.RecyclerView.ViewHolder r45, int r46) {
            /*
                r44 = this;
                r0 = r44
                r1 = r45
                r2 = r46
                int r3 = r0.botInfoRow
                if (r2 != r3) goto L_0x0035
                android.view.View r3 = r1.itemView
                im.bclpbkiauv.ui.cells.BotHelpCell r3 = (im.bclpbkiauv.ui.cells.BotHelpCell) r3
                im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                android.util.SparseArray r4 = r4.botInfo
                int r4 = r4.size()
                if (r4 == 0) goto L_0x002f
                im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                android.util.SparseArray r4 = r4.botInfo
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$User r5 = r5.currentUser
                int r5 = r5.id
                java.lang.Object r4 = r4.get(r5)
                im.bclpbkiauv.tgnet.TLRPC$BotInfo r4 = (im.bclpbkiauv.tgnet.TLRPC.BotInfo) r4
                java.lang.String r4 = r4.description
                goto L_0x0030
            L_0x002f:
                r4 = 0
            L_0x0030:
                r3.setText(r4)
                goto L_0x0b65
            L_0x0035:
                int r3 = r0.loadingDownRow
                r4 = 1
                if (r2 == r3) goto L_0x0b4e
                int r3 = r0.loadingUpRow
                if (r2 != r3) goto L_0x0041
                r3 = 0
                goto L_0x0b4f
            L_0x0041:
                int r3 = r0.messagesStartRow
                if (r2 < r3) goto L_0x0b4b
                int r3 = r0.messagesEndRow
                if (r2 >= r3) goto L_0x0b4b
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r3.messages
                int r6 = r0.messagesStartRow
                int r6 = r2 - r6
                java.lang.Object r3 = r3.get(r6)
                im.bclpbkiauv.messenger.MessageObject r3 = (im.bclpbkiauv.messenger.MessageObject) r3
                java.lang.CharSequence r6 = r3.messageText
                boolean r6 = android.text.TextUtils.isEmpty(r6)
                r7 = 8
                if (r6 == 0) goto L_0x0067
                android.view.View r4 = r1.itemView
                r4.setVisibility(r7)
                return
            L_0x0067:
                android.view.View r6 = r1.itemView
                int r8 = r0.getItemViewType(r2)
                boolean r9 = r6 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
                if (r9 == 0) goto L_0x0272
                r9 = r6
                im.bclpbkiauv.ui.cells.ChatMessageCell r9 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r9
                im.bclpbkiauv.ui.ChatActivity r11 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$Chat r11 = r11.currentChat
                if (r11 != 0) goto L_0x0087
                im.bclpbkiauv.ui.ChatActivity r11 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$User r11 = r11.currentUser
                boolean r11 = im.bclpbkiauv.messenger.UserObject.isUserSelf(r11)
                if (r11 == 0) goto L_0x0085
                goto L_0x0087
            L_0x0085:
                r11 = 0
                goto L_0x0088
            L_0x0087:
                r11 = 1
            L_0x0088:
                r9.isChat = r11
                im.bclpbkiauv.ui.ChatActivity r11 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$Chat r11 = r11.currentChat
                boolean r11 = im.bclpbkiauv.messenger.ChatObject.isChannel(r11)
                if (r11 == 0) goto L_0x009e
                im.bclpbkiauv.ui.ChatActivity r11 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$Chat r11 = r11.currentChat
                boolean r11 = r11.megagroup
                if (r11 == 0) goto L_0x009e
                r11 = 1
                goto L_0x009f
            L_0x009e:
                r11 = 0
            L_0x009f:
                r9.isMegagroup = r11
                r11 = 0
                r12 = 0
                im.bclpbkiauv.ui.ChatActivity r13 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.messenger.MessageObject$GroupedMessages r13 = r13.getValidGroupedMessage(r3)
                if (r13 == 0) goto L_0x00e5
                java.util.HashMap<im.bclpbkiauv.messenger.MessageObject, im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r14 = r13.positions
                java.lang.Object r14 = r14.get(r3)
                im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition r14 = (im.bclpbkiauv.messenger.MessageObject.GroupedMessagePosition) r14
                if (r14 == 0) goto L_0x00e0
                int r15 = r14.flags
                r15 = r15 & 4
                if (r15 == 0) goto L_0x00c4
                java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r15 = r13.posArray
                int r15 = r15.indexOf(r14)
                int r15 = r15 + r2
                int r15 = r15 + r4
                goto L_0x00c7
            L_0x00c4:
                r12 = 1
                r15 = -100
            L_0x00c7:
                int r4 = r14.flags
                r4 = r4 & r7
                if (r4 == 0) goto L_0x00dc
                java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r4 = r13.posArray
                int r4 = r4.size()
                int r4 = r2 - r4
                java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject$GroupedMessagePosition> r7 = r13.posArray
                int r7 = r7.indexOf(r14)
                int r4 = r4 + r7
                goto L_0x00e4
            L_0x00dc:
                r11 = 1
                r4 = -100
                goto L_0x00e4
            L_0x00e0:
                r15 = -100
                r4 = -100
            L_0x00e4:
                goto L_0x00e9
            L_0x00e5:
                int r4 = r2 + -1
                int r15 = r2 + 1
            L_0x00e9:
                int r7 = r0.getItemViewType(r4)
                int r14 = r0.getItemViewType(r15)
                r17 = 0
                r18 = 0
                boolean r19 = r3.hasReactions()
                if (r19 != 0) goto L_0x016b
                im.bclpbkiauv.tgnet.TLRPC$Message r10 = r3.messageOwner
                im.bclpbkiauv.tgnet.TLRPC$ReplyMarkup r10 = r10.reply_markup
                boolean r10 = r10 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_replyInlineMarkup
                if (r10 != 0) goto L_0x016b
                int r10 = r45.getItemViewType()
                if (r7 != r10) goto L_0x016b
                im.bclpbkiauv.ui.ChatActivity r10 = im.bclpbkiauv.ui.ChatActivity.this
                java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r10 = r10.messages
                int r5 = r0.messagesStartRow
                int r5 = r4 - r5
                java.lang.Object r5 = r10.get(r5)
                im.bclpbkiauv.messenger.MessageObject r5 = (im.bclpbkiauv.messenger.MessageObject) r5
                boolean r10 = r5.isOutOwner()
                boolean r2 = r3.isOutOwner()
                if (r10 != r2) goto L_0x0134
                im.bclpbkiauv.tgnet.TLRPC$Message r2 = r5.messageOwner
                int r2 = r2.date
                im.bclpbkiauv.tgnet.TLRPC$Message r10 = r3.messageOwner
                int r10 = r10.date
                int r2 = r2 - r10
                int r2 = java.lang.Math.abs(r2)
                r10 = 300(0x12c, float:4.2E-43)
                if (r2 > r10) goto L_0x0134
                r2 = 1
                goto L_0x0135
            L_0x0134:
                r2 = 0
            L_0x0135:
                if (r2 == 0) goto L_0x0167
                im.bclpbkiauv.ui.ChatActivity r10 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$Chat r10 = r10.currentChat
                if (r10 == 0) goto L_0x014d
                im.bclpbkiauv.tgnet.TLRPC$Message r10 = r5.messageOwner
                int r10 = r10.from_id
                im.bclpbkiauv.tgnet.TLRPC$Message r11 = r3.messageOwner
                int r11 = r11.from_id
                if (r10 != r11) goto L_0x0149
                r10 = 1
                goto L_0x014a
            L_0x0149:
                r10 = 0
            L_0x014a:
                r2 = r10
                r11 = r2
                goto L_0x0168
            L_0x014d:
                im.bclpbkiauv.ui.ChatActivity r10 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$User r10 = r10.currentUser
                boolean r10 = im.bclpbkiauv.messenger.UserObject.isUserSelf(r10)
                if (r10 == 0) goto L_0x0167
                int r10 = r5.getFromId()
                int r11 = r3.getFromId()
                if (r10 != r11) goto L_0x0163
                r10 = 1
                goto L_0x0164
            L_0x0163:
                r10 = 0
            L_0x0164:
                r2 = r10
                r11 = r2
                goto L_0x0168
            L_0x0167:
                r11 = r2
            L_0x0168:
                r2 = r18
                goto L_0x016f
            L_0x016b:
                r18 = 1
                r2 = r18
            L_0x016f:
                int r5 = r45.getItemViewType()
                if (r14 != r5) goto L_0x01e9
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r5 = r5.messages
                int r10 = r0.messagesStartRow
                int r10 = r15 - r10
                java.lang.Object r5 = r5.get(r10)
                im.bclpbkiauv.messenger.MessageObject r5 = (im.bclpbkiauv.messenger.MessageObject) r5
                boolean r10 = r5.hasReactions()
                if (r10 != 0) goto L_0x01b0
                im.bclpbkiauv.tgnet.TLRPC$Message r10 = r5.messageOwner
                im.bclpbkiauv.tgnet.TLRPC$ReplyMarkup r10 = r10.reply_markup
                boolean r10 = r10 instanceof im.bclpbkiauv.tgnet.TLRPC.TL_replyInlineMarkup
                if (r10 != 0) goto L_0x01b0
                boolean r10 = r5.isOutOwner()
                r18 = r4
                boolean r4 = r3.isOutOwner()
                if (r10 != r4) goto L_0x01b2
                im.bclpbkiauv.tgnet.TLRPC$Message r4 = r5.messageOwner
                int r4 = r4.date
                im.bclpbkiauv.tgnet.TLRPC$Message r10 = r3.messageOwner
                int r10 = r10.date
                int r4 = r4 - r10
                int r4 = java.lang.Math.abs(r4)
                r10 = 300(0x12c, float:4.2E-43)
                if (r4 > r10) goto L_0x01b2
                r4 = 1
                goto L_0x01b3
            L_0x01b0:
                r18 = r4
            L_0x01b2:
                r4 = 0
            L_0x01b3:
                if (r4 == 0) goto L_0x01e5
                im.bclpbkiauv.ui.ChatActivity r10 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$Chat r10 = r10.currentChat
                if (r10 == 0) goto L_0x01cb
                im.bclpbkiauv.tgnet.TLRPC$Message r10 = r5.messageOwner
                int r10 = r10.from_id
                im.bclpbkiauv.tgnet.TLRPC$Message r12 = r3.messageOwner
                int r12 = r12.from_id
                if (r10 != r12) goto L_0x01c7
                r10 = 1
                goto L_0x01c8
            L_0x01c7:
                r10 = 0
            L_0x01c8:
                r4 = r10
                r12 = r4
                goto L_0x01e6
            L_0x01cb:
                im.bclpbkiauv.ui.ChatActivity r10 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$User r10 = r10.currentUser
                boolean r10 = im.bclpbkiauv.messenger.UserObject.isUserSelf(r10)
                if (r10 == 0) goto L_0x01e5
                int r10 = r5.getFromId()
                int r12 = r3.getFromId()
                if (r10 != r12) goto L_0x01e1
                r10 = 1
                goto L_0x01e2
            L_0x01e1:
                r10 = 0
            L_0x01e2:
                r4 = r10
                r12 = r4
                goto L_0x01e6
            L_0x01e5:
                r12 = r4
            L_0x01e6:
                r4 = r17
                goto L_0x01ef
            L_0x01e9:
                r18 = r4
                r17 = 1
                r4 = r17
            L_0x01ef:
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$Chat r5 = r5.currentChat
                boolean r5 = im.bclpbkiauv.messenger.ChatObject.isChannel(r5)
                if (r5 == 0) goto L_0x0217
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$Chat r5 = r5.currentChat
                boolean r5 = r5.megagroup
                if (r5 == 0) goto L_0x0217
                im.bclpbkiauv.tgnet.TLRPC$Message r5 = r3.messageOwner
                int r5 = r5.from_id
                if (r5 > 0) goto L_0x0217
                im.bclpbkiauv.tgnet.TLRPC$Message r5 = r3.messageOwner
                im.bclpbkiauv.tgnet.TLRPC$MessageFwdHeader r5 = r5.fwd_from
                if (r5 == 0) goto L_0x0217
                im.bclpbkiauv.tgnet.TLRPC$Message r5 = r3.messageOwner
                im.bclpbkiauv.tgnet.TLRPC$MessageFwdHeader r5 = r5.fwd_from
                int r5 = r5.channel_post
                if (r5 == 0) goto L_0x0217
                r12 = 0
                r11 = 0
            L_0x0217:
                r5 = 0
                r9.setMessageObject(r3, r13, r5, r5)
                r9.setIsFirstOrLast(r4, r2)
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                int r5 = r5.highlightMessageId
                r10 = 2147483647(0x7fffffff, float:NaN)
                if (r5 == r10) goto L_0x0237
                int r5 = r3.getId()
                im.bclpbkiauv.ui.ChatActivity r10 = im.bclpbkiauv.ui.ChatActivity.this
                int r10 = r10.highlightMessageId
                if (r5 != r10) goto L_0x0237
                r5 = 1
                goto L_0x0238
            L_0x0237:
                r5 = 0
            L_0x0238:
                r9.setHighlighted(r5)
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                int r5 = r5.highlightMessageId
                r10 = 2147483647(0x7fffffff, float:NaN)
                if (r5 == r10) goto L_0x024b
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                r5.startMessageUnselect()
            L_0x024b:
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                java.util.ArrayList r5 = r5.animatingMessageObjects
                int r5 = r5.indexOf(r3)
                r10 = r5
                r17 = r7
                r7 = -1
                if (r5 == r7) goto L_0x0270
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                java.util.ArrayList r5 = r5.animatingMessageObjects
                r5.remove(r10)
                android.view.ViewTreeObserver r5 = r9.getViewTreeObserver()
                im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter$3 r7 = new im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter$3
                r7.<init>(r9)
                r5.addOnPreDrawListener(r7)
            L_0x0270:
                goto L_0x0b65
            L_0x0272:
                r2 = 8
                r7 = -1
                boolean r4 = r6 instanceof im.bclpbkiauv.ui.cells.ChatActionCell
                if (r4 == 0) goto L_0x0286
                r2 = r6
                im.bclpbkiauv.ui.cells.ChatActionCell r2 = (im.bclpbkiauv.ui.cells.ChatActionCell) r2
                r2.setMessageObject(r3)
                r4 = 1065353216(0x3f800000, float:1.0)
                r2.setAlpha(r4)
                goto L_0x0b65
            L_0x0286:
                boolean r4 = r6 instanceof im.bclpbkiauv.ui.cells.ChatUnreadCell
                if (r4 == 0) goto L_0x02a9
                r2 = r6
                im.bclpbkiauv.ui.cells.ChatUnreadCell r2 = (im.bclpbkiauv.ui.cells.ChatUnreadCell) r2
                r4 = 2131694493(0x7f0f139d, float:1.9018144E38)
                java.lang.String r5 = "UnreadMessages"
                java.lang.String r4 = im.bclpbkiauv.messenger.LocaleController.getString(r5, r4)
                r2.setText(r4)
                im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                int r4 = r4.createUnreadMessageAfterId
                if (r4 == 0) goto L_0x02a7
                im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                r5 = 0
                int unused = r4.createUnreadMessageAfterId = r5
            L_0x02a7:
                goto L_0x0b65
            L_0x02a9:
                r4 = 5
                if (r8 != r4) goto L_0x0b44
                r4 = 2131297137(0x7f090371, float:1.821221E38)
                android.view.View r4 = r6.findViewById(r4)
                android.widget.RelativeLayout r4 = (android.widget.RelativeLayout) r4
                r5 = 2131297582(0x7f09052e, float:1.8213113E38)
                android.view.View r5 = r6.findViewById(r5)
                android.widget.TextView r5 = (android.widget.TextView) r5
                r9 = 2131297665(0x7f090581, float:1.8213281E38)
                android.view.View r9 = r6.findViewById(r9)
                android.widget.TextView r9 = (android.widget.TextView) r9
                r10 = 2131296897(0x7f090281, float:1.8211724E38)
                android.view.View r10 = r6.findViewById(r10)
                android.widget.LinearLayout r10 = (android.widget.LinearLayout) r10
                r11 = 2131296773(0x7f090205, float:1.8211472E38)
                android.view.View r11 = r6.findViewById(r11)
                android.widget.ImageView r11 = (android.widget.ImageView) r11
                r12 = 2131297442(0x7f0904a2, float:1.821283E38)
                android.view.View r12 = r6.findViewById(r12)
                android.widget.TextView r12 = (android.widget.TextView) r12
                r13 = 2131297102(0x7f09034e, float:1.821214E38)
                android.view.View r13 = r6.findViewById(r13)
                android.widget.RelativeLayout r13 = (android.widget.RelativeLayout) r13
                r14 = 2131296774(0x7f090206, float:1.8211474E38)
                android.view.View r14 = r6.findViewById(r14)
                android.widget.ImageView r14 = (android.widget.ImageView) r14
                r15 = 2131297443(0x7f0904a3, float:1.8212831E38)
                android.view.View r15 = r6.findViewById(r15)
                android.widget.TextView r15 = (android.widget.TextView) r15
                r7 = 2131297299(0x7f090413, float:1.821254E38)
                android.view.View r7 = r6.findViewById(r7)
                android.widget.Space r7 = (android.widget.Space) r7
                r2 = 2131297591(0x7f090537, float:1.8213131E38)
                android.view.View r2 = r6.findViewById(r2)
                android.widget.TextView r2 = (android.widget.TextView) r2
                r18 = r8
                r8 = 2131297590(0x7f090536, float:1.821313E38)
                android.view.View r8 = r6.findViewById(r8)
                android.widget.TextView r8 = (android.widget.TextView) r8
                r1 = 2131297593(0x7f090539, float:1.8213135E38)
                android.view.View r1 = r6.findViewById(r1)
                android.widget.TextView r1 = (android.widget.TextView) r1
                r21 = r15
                r15 = 2131297592(0x7f090538, float:1.8213133E38)
                android.view.View r15 = r6.findViewById(r15)
                android.widget.TextView r15 = (android.widget.TextView) r15
                r22 = r13
                r13 = 2131297130(0x7f09036a, float:1.8212196E38)
                android.view.View r13 = r6.findViewById(r13)
                android.widget.RelativeLayout r13 = (android.widget.RelativeLayout) r13
                r23 = r13
                r13 = 2131297595(0x7f09053b, float:1.821314E38)
                android.view.View r13 = r6.findViewById(r13)
                android.widget.TextView r13 = (android.widget.TextView) r13
                r24 = r7
                r7 = 2131297594(0x7f09053a, float:1.8213137E38)
                android.view.View r7 = r6.findViewById(r7)
                android.widget.TextView r7 = (android.widget.TextView) r7
                r25 = r7
                r7 = 2131297136(0x7f090370, float:1.8212208E38)
                android.view.View r7 = r6.findViewById(r7)
                android.widget.RelativeLayout r7 = (android.widget.RelativeLayout) r7
                r26 = r7
                r7 = 2131297642(0x7f09056a, float:1.8213235E38)
                android.view.View r7 = r6.findViewById(r7)
                android.widget.TextView r7 = (android.widget.TextView) r7
                r27 = 1092616192(0x41200000, float:10.0)
                r28 = r6
                int r6 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r27)
                float r6 = (float) r6
                r29 = r13
                int r13 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r27)
                float r13 = (float) r13
                java.lang.String r30 = "windowBackgroundGray"
                r31 = r15
                int r15 = im.bclpbkiauv.ui.actionbar.Theme.getColor(r30)
                r30 = r1
                r1 = 0
                android.graphics.drawable.Drawable r6 = im.bclpbkiauv.ui.actionbar.Theme.createRoundRectDrawable(r6, r13, r1, r1, r15)
                r4.setBackground(r6)
                int r6 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r27)
                float r6 = (float) r6
                int r13 = im.bclpbkiauv.messenger.AndroidUtilities.dp(r27)
                float r13 = (float) r13
                java.lang.String r15 = "windowBackgroundWhite"
                int r15 = im.bclpbkiauv.ui.actionbar.Theme.getColor(r15)
                android.graphics.drawable.Drawable r1 = im.bclpbkiauv.ui.actionbar.Theme.createRoundRectDrawable(r1, r1, r6, r13, r15)
                r10.setBackground(r1)
                int r1 = r3.type
                r6 = 104(0x68, float:1.46E-43)
                if (r1 != r6) goto L_0x0b1b
                im.bclpbkiauv.tgnet.TLRPC$Message r1 = r3.messageOwner
                im.bclpbkiauv.tgnet.TLRPC$MessageMedia r1 = r1.media
                im.bclpbkiauv.tgnet.TLRPCRedpacket$CL_messagesPayBillOverMedia r1 = (im.bclpbkiauv.tgnet.TLRPCRedpacket.CL_messagesPayBillOverMedia) r1
                im.bclpbkiauv.tgnet.TLRPC$TL_dataJSON r6 = r1.data
                java.lang.String r6 = im.bclpbkiauv.tgnet.TLJsonResolve.getData(r6)
                java.lang.Class<im.bclpbkiauv.javaBean.PayBillOverBean> r13 = im.bclpbkiauv.javaBean.PayBillOverBean.class
                java.lang.Object r13 = com.blankj.utilcode.util.GsonUtils.fromJson((java.lang.String) r6, r13)
                im.bclpbkiauv.javaBean.PayBillOverBean r13 = (im.bclpbkiauv.javaBean.PayBillOverBean) r13
                java.lang.String r15 = r13.getCreate12HEndTimeFormat()
                r9.setText(r15)
                r15 = 2131692890(0x7f0f0d5a, float:1.9014893E38)
                r27 = r4
                java.lang.String r4 = "PayBillWithdrawInfo"
                java.lang.String r4 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r15)
                r7.setText(r4)
                java.lang.String r4 = ""
                java.lang.String r15 = ""
                r32 = r4
                java.lang.String r4 = r13.coin_code
                r33 = r6
                java.lang.String r6 = "-"
                boolean r4 = r4.contains(r6)
                if (r4 == 0) goto L_0x03f2
                java.lang.String r4 = r13.coin_code
                java.lang.String[] r4 = r4.split(r6)
                r20 = 0
                r32 = r4[r20]
                r16 = 1
                r15 = r4[r16]
                r4 = r32
                goto L_0x03f4
            L_0x03f2:
                java.lang.String r4 = r13.coin_code
            L_0x03f4:
                int r32 = r4.hashCode()
                r34 = r7
                java.lang.String r7 = "LTC"
                r35 = r9
                java.lang.String r9 = "ETH"
                r36 = r10
                java.lang.String r10 = "BTC"
                r37 = r3
                switch(r32) {
                    case 66097: goto L_0x0424;
                    case 68985: goto L_0x041c;
                    case 75707: goto L_0x0414;
                    case 2614190: goto L_0x040a;
                    default: goto L_0x0409;
                }
            L_0x0409:
                goto L_0x042c
            L_0x040a:
                java.lang.String r3 = "USDT"
                boolean r3 = r4.equals(r3)
                if (r3 == 0) goto L_0x0409
                r3 = 2
                goto L_0x042d
            L_0x0414:
                boolean r3 = r4.equals(r7)
                if (r3 == 0) goto L_0x0409
                r3 = 3
                goto L_0x042d
            L_0x041c:
                boolean r3 = r4.equals(r9)
                if (r3 == 0) goto L_0x0409
                r3 = 1
                goto L_0x042d
            L_0x0424:
                boolean r3 = r4.equals(r10)
                if (r3 == 0) goto L_0x0409
                r3 = 0
                goto L_0x042d
            L_0x042c:
                r3 = -1
            L_0x042d:
                if (r3 == 0) goto L_0x0450
                r38 = r4
                r4 = 1
                if (r3 == r4) goto L_0x0449
                r4 = 2
                if (r3 == r4) goto L_0x0442
                r4 = 3
                if (r3 == r4) goto L_0x043b
                goto L_0x0459
            L_0x043b:
                r3 = 2131558709(0x7f0d0135, float:1.8742741E38)
                r11.setImageResource(r3)
                goto L_0x0459
            L_0x0442:
                r3 = 2131558711(0x7f0d0137, float:1.8742746E38)
                r11.setImageResource(r3)
                goto L_0x0459
            L_0x0449:
                r3 = 2131558707(0x7f0d0133, float:1.8742737E38)
                r11.setImageResource(r3)
                goto L_0x0459
            L_0x0450:
                r38 = r4
                r3 = 2131558703(0x7f0d012f, float:1.874273E38)
                r11.setImageResource(r3)
            L_0x0459:
                int r3 = r15.hashCode()
                switch(r3) {
                    case 66097: goto L_0x047b;
                    case 68985: goto L_0x0473;
                    case 75707: goto L_0x046b;
                    case 2614190: goto L_0x0461;
                    default: goto L_0x0460;
                }
            L_0x0460:
                goto L_0x0483
            L_0x0461:
                java.lang.String r3 = "USDT"
                boolean r3 = r15.equals(r3)
                if (r3 == 0) goto L_0x0460
                r3 = 2
                goto L_0x0484
            L_0x046b:
                boolean r3 = r15.equals(r7)
                if (r3 == 0) goto L_0x0460
                r3 = 3
                goto L_0x0484
            L_0x0473:
                boolean r3 = r15.equals(r9)
                if (r3 == 0) goto L_0x0460
                r3 = 1
                goto L_0x0484
            L_0x047b:
                boolean r3 = r15.equals(r10)
                if (r3 == 0) goto L_0x0460
                r3 = 0
                goto L_0x0484
            L_0x0483:
                r3 = -1
            L_0x0484:
                if (r3 == 0) goto L_0x04a5
                r4 = 1
                if (r3 == r4) goto L_0x049e
                r4 = 2
                if (r3 == r4) goto L_0x0497
                r4 = 3
                if (r3 == r4) goto L_0x0490
                goto L_0x04ac
            L_0x0490:
                r3 = 2131558709(0x7f0d0135, float:1.8742741E38)
                r14.setImageResource(r3)
                goto L_0x04ac
            L_0x0497:
                r3 = 2131558711(0x7f0d0137, float:1.8742746E38)
                r14.setImageResource(r3)
                goto L_0x04ac
            L_0x049e:
                r3 = 2131558707(0x7f0d0133, float:1.8742737E38)
                r14.setImageResource(r3)
                goto L_0x04ac
            L_0x04a5:
                r3 = 2131558703(0x7f0d012f, float:1.874273E38)
                r14.setImageResource(r3)
            L_0x04ac:
                java.lang.String r3 = ""
                int r4 = r1.deal_code
                java.lang.String r7 = "2"
                java.lang.String r9 = "1"
                java.lang.String r10 = "PayBillTransactionType"
                r39 = r1
                java.lang.String r1 = "PayBillCurrencyType"
                r40 = r3
                java.lang.String r3 = "+"
                java.lang.String r41 = "0"
                switch(r4) {
                    case 1: goto L_0x0aa3;
                    case 2: goto L_0x0a2a;
                    case 3: goto L_0x0aa3;
                    case 4: goto L_0x0aa3;
                    case 5: goto L_0x09ad;
                    case 6: goto L_0x0aa3;
                    case 7: goto L_0x0a2a;
                    case 8: goto L_0x0881;
                    case 9: goto L_0x0782;
                    case 10: goto L_0x06f5;
                    case 11: goto L_0x05e1;
                    case 12: goto L_0x04d9;
                    default: goto L_0x04c3;
                }
            L_0x04c3:
                r16 = r15
                r7 = r23
                r4 = r30
                r10 = r31
                r1 = r38
                r23 = r14
                r14 = r24
                r43 = r22
                r22 = r11
                r11 = r43
                goto L_0x0b35
            L_0x04d9:
                r3 = 2131692841(0x7f0f0d29, float:1.9014793E38)
                java.lang.String r4 = "PayBillFiatCurrencySellReminder"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r3)
                r5.setText(r3)
                java.lang.StringBuilder r3 = new java.lang.StringBuilder
                r3.<init>()
                r3.append(r6)
                im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                java.lang.String r6 = r13.deal_num
                boolean r6 = android.text.TextUtils.isEmpty(r6)
                if (r6 == 0) goto L_0x04fa
                r6 = r41
                goto L_0x04fc
            L_0x04fa:
                java.lang.String r6 = r13.deal_num
            L_0x04fc:
                java.lang.String r4 = r4.setMoneyFormat(r6)
                r3.append(r4)
                java.lang.String r3 = r3.toString()
                r12.setText(r3)
                r3 = 2131692879(0x7f0f0d4f, float:1.901487E38)
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r10, r3)
                r2.setText(r3)
                java.lang.String r3 = r13.deal_type
                boolean r3 = android.text.TextUtils.isEmpty(r3)
                if (r3 != 0) goto L_0x055b
                java.lang.String r3 = r13.deal_type
                int r4 = r3.hashCode()
                r6 = 49
                if (r4 == r6) goto L_0x0533
                r6 = 50
                if (r4 == r6) goto L_0x052b
            L_0x052a:
                goto L_0x053b
            L_0x052b:
                boolean r3 = r3.equals(r7)
                if (r3 == 0) goto L_0x052a
                r10 = 1
                goto L_0x053c
            L_0x0533:
                boolean r3 = r3.equals(r9)
                if (r3 == 0) goto L_0x052a
                r10 = 0
                goto L_0x053c
            L_0x053b:
                r10 = -1
            L_0x053c:
                if (r10 == 0) goto L_0x054f
                r3 = 1
                if (r10 == r3) goto L_0x0542
                goto L_0x055b
            L_0x0542:
                r3 = 2131692866(0x7f0f0d42, float:1.9014844E38)
                java.lang.String r4 = "PayBillSellLimit"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r3)
                r8.setText(r3)
                goto L_0x055b
            L_0x054f:
                r3 = 2131692865(0x7f0f0d41, float:1.9014842E38)
                java.lang.String r4 = "PayBillSellAtMarketPrice"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r4, r3)
                r8.setText(r3)
            L_0x055b:
                r3 = 2131692826(0x7f0f0d1a, float:1.9014763E38)
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r3)
                r4 = r30
                r4.setText(r1)
                r6 = r31
                r1 = r38
                r6.setText(r1)
                r3 = 2131692877(0x7f0f0d4d, float:1.9014867E38)
                java.lang.String r7 = "PayBillTransactionParty"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r7, r3)
                r7 = r29
                r7.setText(r3)
                java.lang.String r3 = r13.deal_from
                boolean r3 = android.text.TextUtils.isEmpty(r3)
                if (r3 == 0) goto L_0x0590
                r3 = 2131692875(0x7f0f0d4b, float:1.9014862E38)
                java.lang.String r9 = "PayBillTheStrongestCurrencyMerchant"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r9, r3)
                r38 = r1
                goto L_0x05bb
            L_0x0590:
                java.lang.String r3 = r13.deal_from
                int r3 = r3.length()
                r9 = 13
                if (r3 <= r9) goto L_0x05b7
                java.lang.StringBuilder r3 = new java.lang.StringBuilder
                r3.<init>()
                java.lang.String r9 = r13.deal_from
                r10 = 12
                r38 = r1
                r1 = 0
                java.lang.String r9 = r9.substring(r1, r10)
                r3.append(r9)
                java.lang.String r1 = "..."
                r3.append(r1)
                java.lang.String r3 = r3.toString()
                goto L_0x05bb
            L_0x05b7:
                r38 = r1
                java.lang.String r3 = r13.deal_from
            L_0x05bb:
                r1 = r25
                r1.setText(r3)
                r9 = r24
                r10 = 0
                r9.setVisibility(r10)
                r10 = r22
                r1 = 8
                r10.setVisibility(r1)
                r16 = r3
                r1 = r23
                r3 = 0
                r1.setVisibility(r3)
                r29 = r7
                r22 = r11
                r23 = r14
                r7 = r1
                r14 = r9
                r11 = r10
                r10 = r6
                goto L_0x0b35
            L_0x05e1:
                r4 = r30
                r6 = r31
                r30 = r24
                r24 = r15
                r15 = r29
                r29 = r22
                r22 = r11
                r11 = r10
                r10 = r38
                r43 = r23
                r23 = r14
                r14 = r25
                r25 = r43
                r31 = r14
                r14 = 2131692837(0x7f0f0d25, float:1.9014785E38)
                r38 = r15
                java.lang.String r15 = "PayBillFiatCurrencyBuyReminder"
                java.lang.String r14 = im.bclpbkiauv.messenger.LocaleController.getString(r15, r14)
                r5.setText(r14)
                java.lang.StringBuilder r14 = new java.lang.StringBuilder
                r14.<init>()
                r14.append(r3)
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.lang.String r15 = r13.deal_num
                boolean r15 = android.text.TextUtils.isEmpty(r15)
                if (r15 == 0) goto L_0x061f
                r15 = r41
                goto L_0x0621
            L_0x061f:
                java.lang.String r15 = r13.deal_num
            L_0x0621:
                java.lang.String r3 = r3.setMoneyFormat(r15)
                r14.append(r3)
                java.lang.String r3 = r14.toString()
                r12.setText(r3)
                r3 = 2131692879(0x7f0f0d4f, float:1.901487E38)
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r11, r3)
                r2.setText(r3)
                java.lang.String r3 = r13.deal_type
                boolean r3 = android.text.TextUtils.isEmpty(r3)
                if (r3 != 0) goto L_0x0680
                java.lang.String r3 = r13.deal_type
                int r11 = r3.hashCode()
                r14 = 49
                if (r11 == r14) goto L_0x0658
                r14 = 50
                if (r11 == r14) goto L_0x0650
            L_0x064f:
                goto L_0x0660
            L_0x0650:
                boolean r3 = r3.equals(r7)
                if (r3 == 0) goto L_0x064f
                r3 = 1
                goto L_0x0661
            L_0x0658:
                boolean r3 = r3.equals(r9)
                if (r3 == 0) goto L_0x064f
                r3 = 0
                goto L_0x0661
            L_0x0660:
                r3 = -1
            L_0x0661:
                if (r3 == 0) goto L_0x0674
                r7 = 1
                if (r3 == r7) goto L_0x0667
                goto L_0x0680
            L_0x0667:
                r3 = 2131692845(0x7f0f0d2d, float:1.9014802E38)
                java.lang.String r7 = "PayBillLimitBuy"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r7, r3)
                r8.setText(r3)
                goto L_0x0680
            L_0x0674:
                r3 = 2131692846(0x7f0f0d2e, float:1.9014804E38)
                java.lang.String r7 = "PayBillMarketBuy"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r7, r3)
                r8.setText(r3)
            L_0x0680:
                r3 = 2131692826(0x7f0f0d1a, float:1.9014763E38)
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r3)
                r4.setText(r1)
                r6.setText(r10)
                r1 = 2131692877(0x7f0f0d4d, float:1.9014867E38)
                java.lang.String r3 = "PayBillTransactionParty"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
                r14 = r38
                r14.setText(r1)
                java.lang.String r1 = r13.deal_from
                boolean r1 = android.text.TextUtils.isEmpty(r1)
                if (r1 == 0) goto L_0x06ad
                r1 = 2131692875(0x7f0f0d4b, float:1.9014862E38)
                java.lang.String r3 = "PayBillTheStrongestCurrencyMerchant"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
                goto L_0x06d4
            L_0x06ad:
                java.lang.String r1 = r13.deal_from
                int r1 = r1.length()
                r3 = 13
                if (r1 <= r3) goto L_0x06d2
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                java.lang.String r3 = r13.deal_from
                r7 = 12
                r9 = 0
                java.lang.String r3 = r3.substring(r9, r7)
                r1.append(r3)
                java.lang.String r3 = "..."
                r1.append(r3)
                java.lang.String r1 = r1.toString()
                goto L_0x06d4
            L_0x06d2:
                java.lang.String r1 = r13.deal_from
            L_0x06d4:
                r15 = r31
                r15.setText(r1)
                r7 = r30
                r3 = 0
                r7.setVisibility(r3)
                r9 = r29
                r11 = 8
                r9.setVisibility(r11)
                r11 = r25
                r11.setVisibility(r3)
                r10 = r6
                r29 = r14
                r25 = r15
                r14 = r7
                r7 = r11
                r11 = r9
                goto L_0x0b35
            L_0x06f5:
                r9 = r22
                r7 = r24
                r4 = r30
                r6 = r31
                r10 = r38
                r22 = r11
                r24 = r15
                r11 = r23
                r15 = r25
                r23 = r14
                r14 = r29
                r1 = 2131692824(0x7f0f0d18, float:1.901476E38)
                java.lang.String r10 = "PayBillCommissionedReturnReminder"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r10, r1)
                r5.setText(r1)
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                r1.append(r3)
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.lang.String r10 = r13.deal_amount
                boolean r10 = android.text.TextUtils.isEmpty(r10)
                if (r10 == 0) goto L_0x072c
                r10 = r41
                goto L_0x072e
            L_0x072c:
                java.lang.String r10 = r13.deal_amount
            L_0x072e:
                java.lang.String r3 = r3.setMoneyFormat(r10)
                r1.append(r3)
                java.lang.String r1 = r1.toString()
                r12.setText(r1)
                r1 = 2131692858(0x7f0f0d3a, float:1.9014828E38)
                java.lang.String r3 = "PayBillReturnMethod"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
                r2.setText(r1)
                r1 = 2131692860(0x7f0f0d3c, float:1.9014832E38)
                java.lang.String r3 = "PayBillReturnToAssets"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
                r8.setText(r1)
                r1 = 2131692854(0x7f0f0d36, float:1.901482E38)
                java.lang.String r3 = "PayBillReasonForReturn"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
                r4.setText(r1)
                r1 = 2131692848(0x7f0f0d30, float:1.9014808E38)
                java.lang.String r3 = "PayBillOrderCancellation"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
                r6.setText(r1)
                r1 = 0
                r7.setVisibility(r1)
                r1 = 8
                r9.setVisibility(r1)
                r11.setVisibility(r1)
                r10 = r6
                r29 = r14
                r25 = r15
                r14 = r7
                r7 = r11
                r11 = r9
                goto L_0x0b35
            L_0x0782:
                r42 = r23
                r1 = r24
                r4 = r30
                r23 = r14
                r24 = r15
                r15 = r25
                r14 = r29
                r29 = r22
                r22 = r11
                r11 = r10
                r10 = r31
                r30 = r1
                r1 = 2131692833(0x7f0f0d21, float:1.9014777E38)
                java.lang.String r15 = "PayBillEntrustedToBuyOut"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r15, r1)
                r5.setText(r1)
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                r1.append(r6)
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                java.lang.String r15 = r13.deal_num
                boolean r15 = android.text.TextUtils.isEmpty(r15)
                if (r15 == 0) goto L_0x07ba
                r15 = r41
                goto L_0x07bc
            L_0x07ba:
                java.lang.String r15 = r13.deal_num
            L_0x07bc:
                java.lang.String r6 = r6.setMoneyFormat(r15)
                r1.append(r6)
                java.lang.String r1 = r1.toString()
                r12.setText(r1)
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                r1.append(r3)
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.lang.String r6 = r13.gain_amount
                boolean r6 = android.text.TextUtils.isEmpty(r6)
                if (r6 == 0) goto L_0x07df
                r6 = r41
                goto L_0x07e1
            L_0x07df:
                java.lang.String r6 = r13.gain_amount
            L_0x07e1:
                java.lang.String r3 = r3.setMoneyFormat(r6)
                r1.append(r3)
                java.lang.String r1 = r1.toString()
                r15 = r21
                r15.setText(r1)
                r1 = 2131692879(0x7f0f0d4f, float:1.901487E38)
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r11, r1)
                r2.setText(r1)
                java.lang.String r1 = r13.deal_type
                boolean r1 = android.text.TextUtils.isEmpty(r1)
                if (r1 != 0) goto L_0x0842
                java.lang.String r1 = r13.deal_type
                int r3 = r1.hashCode()
                r6 = 49
                if (r3 == r6) goto L_0x081a
                r6 = 50
                if (r3 == r6) goto L_0x0812
            L_0x0811:
                goto L_0x0822
            L_0x0812:
                boolean r1 = r1.equals(r7)
                if (r1 == 0) goto L_0x0811
                r1 = 1
                goto L_0x0823
            L_0x081a:
                boolean r1 = r1.equals(r9)
                if (r1 == 0) goto L_0x0811
                r1 = 0
                goto L_0x0823
            L_0x0822:
                r1 = -1
            L_0x0823:
                if (r1 == 0) goto L_0x0836
                r3 = 1
                if (r1 == r3) goto L_0x0829
                goto L_0x0842
            L_0x0829:
                r1 = 2131692866(0x7f0f0d42, float:1.9014844E38)
                java.lang.String r3 = "PayBillSellLimit"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
                r8.setText(r1)
                goto L_0x0842
            L_0x0836:
                r1 = 2131692865(0x7f0f0d41, float:1.9014842E38)
                java.lang.String r3 = "PayBillSellAtMarketPrice"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
                r8.setText(r1)
            L_0x0842:
                r1 = 2131692834(0x7f0f0d22, float:1.901478E38)
                java.lang.String r3 = "PayBillEntryCurrency"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
                r4.setText(r1)
                r1 = r24
                r10.setText(r1)
                r3 = 2131692852(0x7f0f0d34, float:1.9014816E38)
                java.lang.String r6 = "PayBillPaymentCurrency"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r6, r3)
                r14.setText(r3)
                r3 = r25
                r6 = r38
                r3.setText(r6)
                r7 = r30
                r9 = 8
                r7.setVisibility(r9)
                r9 = r29
                r11 = 0
                r9.setVisibility(r11)
                r1 = r42
                r1.setVisibility(r11)
                r11 = r9
                r29 = r14
                r21 = r15
                r14 = r7
                r7 = r1
                goto L_0x0b35
            L_0x0881:
                r4 = r30
                r1 = r38
                r30 = r24
                r24 = r15
                r15 = r21
                r43 = r11
                r11 = r10
                r10 = r31
                r31 = r25
                r25 = r23
                r23 = r14
                r14 = r29
                r29 = r22
                r22 = r43
                r38 = r14
                r14 = 2131692830(0x7f0f0d1e, float:1.9014771E38)
                r21 = r1
                java.lang.String r1 = "PayBillEntrustedBuyReminder"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r1, r14)
                r5.setText(r1)
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                r1.append(r3)
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.lang.String r14 = r13.gain_amount
                boolean r14 = android.text.TextUtils.isEmpty(r14)
                if (r14 == 0) goto L_0x08c1
                r14 = r41
                goto L_0x08c3
            L_0x08c1:
                java.lang.String r14 = r13.gain_amount
            L_0x08c3:
                java.lang.String r3 = r3.setMoneyFormat(r14)
                r1.append(r3)
                java.lang.String r1 = r1.toString()
                r12.setText(r1)
                r1 = 2131692879(0x7f0f0d4f, float:1.901487E38)
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r11, r1)
                r2.setText(r1)
                java.lang.String r1 = r13.deal_type
                boolean r1 = android.text.TextUtils.isEmpty(r1)
                if (r1 != 0) goto L_0x096c
                java.lang.String r1 = r13.deal_type
                int r3 = r1.hashCode()
                r11 = 49
                if (r3 == r11) goto L_0x08fa
                r11 = 50
                if (r3 == r11) goto L_0x08f2
            L_0x08f1:
                goto L_0x0902
            L_0x08f2:
                boolean r1 = r1.equals(r7)
                if (r1 == 0) goto L_0x08f1
                r1 = 1
                goto L_0x0903
            L_0x08fa:
                boolean r1 = r1.equals(r9)
                if (r1 == 0) goto L_0x08f1
                r1 = 0
                goto L_0x0903
            L_0x0902:
                r1 = -1
            L_0x0903:
                if (r1 == 0) goto L_0x093b
                r3 = 1
                if (r1 == r3) goto L_0x0909
                goto L_0x096c
            L_0x0909:
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                r1.append(r6)
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.lang.String r6 = r13.deal_amount
                boolean r6 = android.text.TextUtils.isEmpty(r6)
                if (r6 == 0) goto L_0x091e
                r6 = r41
                goto L_0x0920
            L_0x091e:
                java.lang.String r6 = r13.deal_amount
            L_0x0920:
                java.lang.String r3 = r3.setMoneyFormat(r6)
                r1.append(r3)
                java.lang.String r1 = r1.toString()
                r15.setText(r1)
                r1 = 2131692845(0x7f0f0d2d, float:1.9014802E38)
                java.lang.String r3 = "PayBillLimitBuy"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
                r8.setText(r1)
                goto L_0x096c
            L_0x093b:
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                r1.append(r6)
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.lang.String r6 = r13.deal_num
                boolean r6 = android.text.TextUtils.isEmpty(r6)
                if (r6 == 0) goto L_0x0950
                r6 = r41
                goto L_0x0952
            L_0x0950:
                java.lang.String r6 = r13.deal_num
            L_0x0952:
                java.lang.String r3 = r3.setMoneyFormat(r6)
                r1.append(r3)
                java.lang.String r1 = r1.toString()
                r15.setText(r1)
                r1 = 2131692846(0x7f0f0d2e, float:1.9014804E38)
                java.lang.String r3 = "PayBillMarketBuy"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
                r8.setText(r1)
            L_0x096c:
                r1 = 2131692834(0x7f0f0d22, float:1.901478E38)
                java.lang.String r3 = "PayBillEntryCurrency"
                java.lang.String r1 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r1)
                r4.setText(r1)
                r1 = r21
                r10.setText(r1)
                r3 = 2131692852(0x7f0f0d34, float:1.9014816E38)
                java.lang.String r6 = "PayBillPaymentCurrency"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r6, r3)
                r7 = r38
                r7.setText(r3)
                r3 = r24
                r9 = r31
                r9.setText(r3)
                r6 = r30
                r11 = 8
                r6.setVisibility(r11)
                r11 = r29
                r14 = 0
                r11.setVisibility(r14)
                r29 = r7
                r7 = r25
                r7.setVisibility(r14)
                r14 = r6
                r25 = r9
                r21 = r15
                goto L_0x0b35
            L_0x09ad:
                r6 = r1
                r16 = r15
                r15 = r21
                r7 = r23
                r9 = r25
                r4 = r30
                r10 = r31
                r1 = r38
                r23 = r14
                r14 = r24
                r43 = r22
                r22 = r11
                r11 = r43
                java.lang.StringBuilder r9 = new java.lang.StringBuilder
                r9.<init>()
                r9.append(r3)
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.lang.String r15 = r13.deal_amount
                boolean r15 = android.text.TextUtils.isEmpty(r15)
                if (r15 == 0) goto L_0x09db
                r15 = r41
                goto L_0x09dd
            L_0x09db:
                java.lang.String r15 = r13.deal_amount
            L_0x09dd:
                java.lang.String r3 = r3.setMoneyFormat(r15)
                r9.append(r3)
                java.lang.String r3 = r9.toString()
                r12.setText(r3)
                r3 = 2131692812(0x7f0f0d0c, float:1.9014735E38)
                java.lang.String r9 = "PayBillBounceReminder"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r9, r3)
                r5.setText(r3)
                r3 = 2131692858(0x7f0f0d3a, float:1.9014828E38)
                java.lang.String r9 = "PayBillReturnMethod"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r9, r3)
                r2.setText(r3)
                r3 = 2131692860(0x7f0f0d3c, float:1.9014832E38)
                java.lang.String r9 = "PayBillReturnToAssets"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r9, r3)
                r8.setText(r3)
                r3 = 2131692826(0x7f0f0d1a, float:1.9014763E38)
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r6, r3)
                r4.setText(r3)
                r10.setText(r1)
                r3 = 0
                r14.setVisibility(r3)
                r3 = 8
                r11.setVisibility(r3)
                r7.setVisibility(r3)
                goto L_0x0b35
            L_0x0a2a:
                r6 = r1
                r16 = r15
                r7 = r23
                r4 = r30
                r10 = r31
                r1 = r38
                r23 = r14
                r14 = r24
                r43 = r22
                r22 = r11
                r11 = r43
                java.lang.StringBuilder r9 = new java.lang.StringBuilder
                r9.<init>()
                r9.append(r3)
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.lang.String r15 = r13.deal_amount
                boolean r15 = android.text.TextUtils.isEmpty(r15)
                if (r15 == 0) goto L_0x0a54
                r15 = r41
                goto L_0x0a56
            L_0x0a54:
                java.lang.String r15 = r13.deal_amount
            L_0x0a56:
                java.lang.String r3 = r3.setMoneyFormat(r15)
                r9.append(r3)
                java.lang.String r3 = r9.toString()
                r12.setText(r3)
                r3 = 2131692880(0x7f0f0d50, float:1.9014873E38)
                java.lang.String r9 = "PayBillTransferInReminder"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r9, r3)
                r5.setText(r3)
                r3 = 2131692884(0x7f0f0d54, float:1.901488E38)
                java.lang.String r9 = "PayBillTransferType"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r9, r3)
                r2.setText(r3)
                r3 = 2131692855(0x7f0f0d37, float:1.9014822E38)
                java.lang.String r9 = "PayBillRechargeTransferIn"
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r9, r3)
                r8.setText(r3)
                r3 = 2131692826(0x7f0f0d1a, float:1.9014763E38)
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r6, r3)
                r4.setText(r3)
                r10.setText(r1)
                r3 = 0
                r14.setVisibility(r3)
                r3 = 8
                r11.setVisibility(r3)
                r7.setVisibility(r3)
                goto L_0x0b35
            L_0x0aa3:
                r3 = r1
                r16 = r15
                r7 = r23
                r4 = r30
                r10 = r31
                r1 = r38
                r23 = r14
                r14 = r24
                r43 = r22
                r22 = r11
                r11 = r43
                java.lang.StringBuilder r9 = new java.lang.StringBuilder
                r9.<init>()
                r9.append(r6)
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                java.lang.String r15 = r13.deal_amount
                boolean r15 = android.text.TextUtils.isEmpty(r15)
                if (r15 == 0) goto L_0x0acd
                r15 = r41
                goto L_0x0acf
            L_0x0acd:
                java.lang.String r15 = r13.deal_amount
            L_0x0acf:
                java.lang.String r6 = r6.setMoneyFormat(r15)
                r9.append(r6)
                java.lang.String r6 = r9.toString()
                r12.setText(r6)
                r6 = 2131692882(0x7f0f0d52, float:1.9014877E38)
                java.lang.String r9 = "PayBillTransferOutReminder"
                java.lang.String r6 = im.bclpbkiauv.messenger.LocaleController.getString(r9, r6)
                r5.setText(r6)
                r6 = 2131692874(0x7f0f0d4a, float:1.901486E38)
                java.lang.String r9 = "PayBillTargetType"
                java.lang.String r6 = im.bclpbkiauv.messenger.LocaleController.getString(r9, r6)
                r2.setText(r6)
                r6 = 2131692889(0x7f0f0d59, float:1.901489E38)
                java.lang.String r9 = "PayBillWithdraw"
                java.lang.String r6 = im.bclpbkiauv.messenger.LocaleController.getString(r9, r6)
                r8.setText(r6)
                r6 = 2131692826(0x7f0f0d1a, float:1.9014763E38)
                java.lang.String r3 = im.bclpbkiauv.messenger.LocaleController.getString(r3, r6)
                r4.setText(r3)
                r10.setText(r1)
                r3 = 0
                r14.setVisibility(r3)
                r3 = 8
                r11.setVisibility(r3)
                r7.setVisibility(r3)
                goto L_0x0b35
            L_0x0b1b:
                r37 = r3
                r27 = r4
                r34 = r7
                r35 = r9
                r36 = r10
                r7 = r23
                r4 = r30
                r10 = r31
                r23 = r14
                r14 = r24
                r43 = r22
                r22 = r11
                r11 = r43
            L_0x0b35:
                im.bclpbkiauv.ui.-$$Lambda$ChatActivity$ChatActivityAdapter$UFmQcWQ7vxQI82MVPb4rccq-v-s r1 = new im.bclpbkiauv.ui.-$$Lambda$ChatActivity$ChatActivityAdapter$UFmQcWQ7vxQI82MVPb4rccq-v-s
                r3 = r37
                r1.<init>(r3)
                r6 = r26
                r6.setOnClickListener(r1)
                r1 = r45
                goto L_0x0b65
            L_0x0b44:
                r28 = r6
                r18 = r8
                r1 = r45
                goto L_0x0b65
            L_0x0b4b:
                r1 = r45
                goto L_0x0b65
            L_0x0b4e:
                r3 = 0
            L_0x0b4f:
                r1 = r45
                android.view.View r2 = r1.itemView
                im.bclpbkiauv.ui.cells.ChatLoadingCell r2 = (im.bclpbkiauv.ui.cells.ChatLoadingCell) r2
                im.bclpbkiauv.ui.ChatActivity r4 = im.bclpbkiauv.ui.ChatActivity.this
                int r4 = r4.loadsCount
                r5 = 1
                if (r4 <= r5) goto L_0x0b60
                r4 = 1
                goto L_0x0b61
            L_0x0b60:
                r4 = 0
            L_0x0b61:
                r2.setProgressVisible(r4)
            L_0x0b65:
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.ChatActivityAdapter.onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder, int):void");
        }

        public /* synthetic */ void lambda$onBindViewHolder$1$ChatActivity$ChatActivityAdapter(MessageObject message, View v) {
            ChatActivity.this.presentFragment(new BillDetailsActivity(message));
        }

        public int getItemViewType(int position) {
            if (position >= this.messagesStartRow && position < this.messagesEndRow) {
                return ChatActivity.this.messages.get(position - this.messagesStartRow).contentType;
            }
            if (position == this.botInfoRow) {
                return 3;
            }
            return 4;
        }

        /* JADX WARNING: Removed duplicated region for block: B:46:0x0103  */
        /* JADX WARNING: Removed duplicated region for block: B:47:0x0105  */
        /* JADX WARNING: Removed duplicated region for block: B:50:0x0111  */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView.ViewHolder r15) {
            /*
                r14 = this;
                android.view.View r0 = r15.itemView
                boolean r0 = r0 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
                r1 = 1
                r2 = 0
                if (r0 == 0) goto L_0x0116
                android.view.View r0 = r15.itemView
                im.bclpbkiauv.ui.cells.ChatMessageCell r0 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r0
                im.bclpbkiauv.messenger.MessageObject r3 = r0.getMessageObject()
                r4 = 0
                r5 = 0
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.ui.actionbar.ActionBar r6 = r6.actionBar
                boolean r6 = r6.isActionModeShowed()
                r7 = 0
                if (r6 == 0) goto L_0x0067
                r0.setCheckBoxVisible(r1, r2)
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.ui.components.ChatActivityEnterView r6 = r6.chatActivityEnterView
                if (r6 == 0) goto L_0x0031
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.ui.components.ChatActivityEnterView r6 = r6.chatActivityEnterView
                im.bclpbkiauv.messenger.MessageObject r6 = r6.getEditingMessageObject()
                goto L_0x0032
            L_0x0031:
                r6 = r7
            L_0x0032:
                long r8 = r3.getDialogId()
                im.bclpbkiauv.ui.ChatActivity r10 = im.bclpbkiauv.ui.ChatActivity.this
                long r10 = r10.dialog_id
                int r12 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1))
                if (r12 != 0) goto L_0x0042
                r8 = 0
                goto L_0x0043
            L_0x0042:
                r8 = 1
            L_0x0043:
                if (r6 == r3) goto L_0x005f
                im.bclpbkiauv.ui.ChatActivity r9 = im.bclpbkiauv.ui.ChatActivity.this
                android.util.SparseArray[] r9 = r9.selectedMessagesIds
                r9 = r9[r8]
                int r10 = r3.getId()
                int r9 = r9.indexOfKey(r10)
                if (r9 < 0) goto L_0x0058
                goto L_0x005f
            L_0x0058:
                r0.setDrawSelectionBackground(r2)
                r0.setChecked(r2, r2, r2)
                goto L_0x0065
            L_0x005f:
                im.bclpbkiauv.ui.ChatActivity r9 = im.bclpbkiauv.ui.ChatActivity.this
                r9.setCellSelectionBackground(r3, r0, r8, r2)
                r4 = 1
            L_0x0065:
                r5 = 1
                goto L_0x0070
            L_0x0067:
                r0.setDrawSelectionBackground(r2)
                r0.setChecked(r2, r2, r2)
                r0.setCheckBoxVisible(r2, r2)
            L_0x0070:
                r6 = r5 ^ 1
                if (r5 == 0) goto L_0x0078
                if (r4 == 0) goto L_0x0078
                r8 = 1
                goto L_0x0079
            L_0x0078:
                r8 = 0
            L_0x0079:
                r0.setCheckPressed(r6, r8)
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                android.widget.FrameLayout r6 = r6.searchContainer
                if (r6 == 0) goto L_0x00cb
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                android.widget.FrameLayout r6 = r6.searchContainer
                int r6 = r6.getVisibility()
                if (r6 != 0) goto L_0x00cb
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.messenger.MediaDataController r6 = r6.getMediaDataController()
                int r8 = r3.getId()
                long r9 = r3.getDialogId()
                im.bclpbkiauv.ui.ChatActivity r11 = im.bclpbkiauv.ui.ChatActivity.this
                long r11 = r11.mergeDialogId
                int r13 = (r9 > r11 ? 1 : (r9 == r11 ? 0 : -1))
                if (r13 != 0) goto L_0x00aa
                r9 = 1
                goto L_0x00ab
            L_0x00aa:
                r9 = 0
            L_0x00ab:
                boolean r6 = r6.isMessageFound(r8, r9)
                if (r6 == 0) goto L_0x00cb
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.messenger.MediaDataController r6 = r6.getMediaDataController()
                java.lang.String r6 = r6.getLastSearchQuery()
                if (r6 == 0) goto L_0x00cb
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.messenger.MediaDataController r6 = r6.getMediaDataController()
                java.lang.String r6 = r6.getLastSearchQuery()
                r0.setHighlightedText(r6)
                goto L_0x00ce
            L_0x00cb:
                r0.setHighlightedText(r7)
            L_0x00ce:
                android.view.ViewTreeObserver r6 = r0.getViewTreeObserver()
                im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter$4 r7 = new im.bclpbkiauv.ui.ChatActivity$ChatActivityAdapter$4
                r7.<init>(r0)
                r6.addOnPreDrawListener(r7)
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                boolean r6 = r6.inPreviewMode
                if (r6 == 0) goto L_0x00e8
                boolean r6 = r0.isHighlighted()
                if (r6 != 0) goto L_0x0116
            L_0x00e8:
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                int r6 = r6.highlightMessageId
                r7 = 2147483647(0x7fffffff, float:NaN)
                if (r6 == r7) goto L_0x0105
                im.bclpbkiauv.messenger.MessageObject r6 = r0.getMessageObject()
                int r6 = r6.getId()
                im.bclpbkiauv.ui.ChatActivity r8 = im.bclpbkiauv.ui.ChatActivity.this
                int r8 = r8.highlightMessageId
                if (r6 != r8) goto L_0x0105
                r6 = 1
                goto L_0x0106
            L_0x0105:
                r6 = 0
            L_0x0106:
                r0.setHighlighted(r6)
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                int r6 = r6.highlightMessageId
                if (r6 == r7) goto L_0x0116
                im.bclpbkiauv.ui.ChatActivity r6 = im.bclpbkiauv.ui.ChatActivity.this
                r6.startMessageUnselect()
            L_0x0116:
                int r0 = r15.getAdapterPosition()
                int r3 = r14.messagesStartRow
                if (r0 < r3) goto L_0x01d6
                int r3 = r14.messagesEndRow
                if (r0 >= r3) goto L_0x01d6
                im.bclpbkiauv.ui.ChatActivity r3 = im.bclpbkiauv.ui.ChatActivity.this
                java.util.ArrayList<im.bclpbkiauv.messenger.MessageObject> r3 = r3.messages
                int r4 = r14.messagesStartRow
                int r4 = r0 - r4
                java.lang.Object r3 = r3.get(r4)
                im.bclpbkiauv.messenger.MessageObject r3 = (im.bclpbkiauv.messenger.MessageObject) r3
                android.view.View r4 = r15.itemView
                if (r3 == 0) goto L_0x01d6
                im.bclpbkiauv.tgnet.TLRPC$Message r5 = r3.messageOwner
                if (r5 == 0) goto L_0x01d6
                im.bclpbkiauv.tgnet.TLRPC$Message r5 = r3.messageOwner
                boolean r5 = r5.media_unread
                if (r5 == 0) goto L_0x01d6
                im.bclpbkiauv.tgnet.TLRPC$Message r5 = r3.messageOwner
                boolean r5 = r5.mentioned
                if (r5 == 0) goto L_0x01d6
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                boolean r5 = r5.inPreviewMode
                if (r5 != 0) goto L_0x01c0
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                boolean r5 = r5.inScheduleMode
                if (r5 != 0) goto L_0x01c0
                boolean r5 = r3.isVoice()
                if (r5 != 0) goto L_0x01c0
                boolean r5 = r3.isRoundVideo()
                if (r5 != 0) goto L_0x01c0
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.ui.ChatActivity.access$16110(r5)
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                int r5 = r5.newMentionsCount
                if (r5 > 0) goto L_0x017d
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                int unused = r5.newMentionsCount = r2
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                boolean unused = r5.hasAllMentionsLocal = r1
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                r5.showMentionDownButton(r2, r1)
                goto L_0x019a
            L_0x017d:
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                android.widget.TextView r5 = r5.mentiondownButtonCounter
                java.lang.Object[] r6 = new java.lang.Object[r1]
                im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                int r7 = r7.newMentionsCount
                java.lang.Integer r7 = java.lang.Integer.valueOf(r7)
                r6[r2] = r7
                java.lang.String r7 = "%d"
                java.lang.String r6 = java.lang.String.format(r7, r6)
                r5.setText(r6)
            L_0x019a:
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.messenger.MessagesController r5 = r5.getMessagesController()
                int r6 = r3.getId()
                im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$Chat r7 = r7.currentChat
                boolean r7 = im.bclpbkiauv.messenger.ChatObject.isChannel(r7)
                if (r7 == 0) goto L_0x01b4
                im.bclpbkiauv.ui.ChatActivity r2 = im.bclpbkiauv.ui.ChatActivity.this
                im.bclpbkiauv.tgnet.TLRPC$Chat r2 = r2.currentChat
                int r2 = r2.id
            L_0x01b4:
                im.bclpbkiauv.ui.ChatActivity r7 = im.bclpbkiauv.ui.ChatActivity.this
                long r7 = r7.dialog_id
                r5.markMentionMessageAsRead(r6, r2, r7)
                r3.setContentIsRead()
            L_0x01c0:
                boolean r2 = r4 instanceof im.bclpbkiauv.ui.cells.ChatMessageCell
                if (r2 == 0) goto L_0x01d6
                r2 = r4
                im.bclpbkiauv.ui.cells.ChatMessageCell r2 = (im.bclpbkiauv.ui.cells.ChatMessageCell) r2
                im.bclpbkiauv.ui.ChatActivity r5 = im.bclpbkiauv.ui.ChatActivity.this
                boolean r5 = r5.inPreviewMode
                if (r5 == 0) goto L_0x01d3
                r2.setHighlighted(r1)
                goto L_0x01d6
            L_0x01d3:
                r2.setHighlightedAnimated()
            L_0x01d6:
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: im.bclpbkiauv.ui.ChatActivity.ChatActivityAdapter.onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder):void");
        }

        public void updateRowAtPosition(int index) {
            int pos;
            if (ChatActivity.this.chatLayoutManager != null) {
                int lastVisibleItem = -1;
                if (!ChatActivity.this.wasManualScroll && ChatActivity.this.unreadMessageObject != null && (pos = ChatActivity.this.messages.indexOf(ChatActivity.this.unreadMessageObject)) >= 0) {
                    lastVisibleItem = this.messagesStartRow + pos;
                }
                notifyItemChanged(index);
                if (lastVisibleItem != -1) {
                    ChatActivity.this.chatLayoutManager.scrollToPositionWithOffset(lastVisibleItem, ((ChatActivity.this.chatListView.getMeasuredHeight() - ChatActivity.this.chatListView.getPaddingBottom()) - ChatActivity.this.chatListView.getPaddingTop()) - AndroidUtilities.dp(29.0f));
                }
            }
        }

        public void updateRowWithMessageObject(MessageObject messageObject, boolean allowInPlace) {
            if (allowInPlace) {
                int count = ChatActivity.this.chatListView.getChildCount();
                for (int a = 0; a < count; a++) {
                    View child = ChatActivity.this.chatListView.getChildAt(a);
                    if (child instanceof ChatMessageCell) {
                        ChatMessageCell cell = (ChatMessageCell) child;
                        if (cell.getMessageObject() == messageObject) {
                            cell.setMessageObject(messageObject, cell.getCurrentMessagesGroup(), cell.isPinnedBottom(), cell.isPinnedTop());
                            return;
                        }
                    }
                }
            }
            int index = ChatActivity.this.messages.indexOf(messageObject);
            if (index != -1) {
                updateRowAtPosition(this.messagesStartRow + index);
            }
        }

        public void notifyDataSetChanged() {
            updateRows();
            try {
                super.notifyDataSetChanged();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemChanged(int position) {
            updateRows();
            try {
                super.notifyItemChanged(position);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemRangeChanged(int positionStart, int itemCount) {
            updateRows();
            try {
                super.notifyItemRangeChanged(positionStart, itemCount);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemInserted(int position) {
            updateRows();
            try {
                super.notifyItemInserted(position);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemMoved(int fromPosition, int toPosition) {
            updateRows();
            try {
                super.notifyItemMoved(fromPosition, toPosition);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemRangeInserted(int positionStart, int itemCount) {
            updateRows();
            try {
                super.notifyItemRangeInserted(positionStart, itemCount);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemRemoved(int position) {
            updateRows();
            try {
                super.notifyItemRemoved(position);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }

        public void notifyItemRangeRemoved(int positionStart, int itemCount) {
            updateRows();
            try {
                super.notifyItemRangeRemoved(positionStart, itemCount);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }
    }

    public ThemeDescription[] getThemeDescriptions() {
        ThemeDescription.ThemeDescriptionDelegate selectedBackgroundDelegate = new ThemeDescription.ThemeDescriptionDelegate() {
            public final void didSetColor() {
                ChatActivity.this.lambda$getThemeDescriptions$163$ChatActivity();
            }
        };
        ThemeDescription[] themeDescriptionArr = new ThemeDescription[392];
        themeDescriptionArr[0] = new ThemeDescription(this.fragmentView, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_wallpaper);
        themeDescriptionArr[1] = new ThemeDescription(this.fragmentView, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_wallpaper_gradient_to);
        themeDescriptionArr[2] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_BACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefault);
        themeDescriptionArr[3] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LISTGLOWCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefault);
        themeDescriptionArr[4] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_ITEMSCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefaultIcon);
        themeDescriptionArr[5] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SELECTORCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefaultSelector);
        themeDescriptionArr[6] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SUBMENUBACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefaultSubmenuBackground);
        themeDescriptionArr[7] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SUBMENUITEM, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefaultSubmenuItem);
        themeDescriptionArr[8] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SUBMENUITEM | ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefaultSubmenuItemIcon);
        themeDescriptionArr[9] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_BACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefault);
        themeDescriptionArr[10] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LISTGLOWCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefault);
        themeDescriptionArr[11] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_ITEMSCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefaultIcon);
        themeDescriptionArr[12] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SELECTORCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefaultSelector);
        themeDescriptionArr[13] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SEARCH, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefaultSearch);
        themeDescriptionArr[14] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SEARCHPLACEHOLDER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarDefaultSearchPlaceholder);
        themeDescriptionArr[15] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_ITEMSCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarActionModeDefaultIcon);
        themeDescriptionArr[16] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_BACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarActionModeDefault);
        themeDescriptionArr[17] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_TOPBACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarActionModeDefaultTop);
        themeDescriptionArr[18] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_SELECTORCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarActionModeDefaultSelector);
        themeDescriptionArr[19] = new ThemeDescription(this.selectedMessagesCountTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_actionBarActionModeDefaultIcon);
        themeDescriptionArr[20] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.avatar_savedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_text);
        themeDescriptionArr[21] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_backgroundRed);
        themeDescriptionArr[22] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_backgroundOrange);
        themeDescriptionArr[23] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_backgroundViolet);
        themeDescriptionArr[24] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_backgroundGreen);
        themeDescriptionArr[25] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_backgroundCyan);
        themeDescriptionArr[26] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_backgroundBlue);
        themeDescriptionArr[27] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_backgroundPink);
        themeDescriptionArr[28] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_nameInMessageRed);
        themeDescriptionArr[29] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_nameInMessageOrange);
        themeDescriptionArr[30] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_nameInMessageViolet);
        themeDescriptionArr[31] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_nameInMessageGreen);
        themeDescriptionArr[32] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_nameInMessageCyan);
        themeDescriptionArr[33] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_nameInMessageBlue);
        themeDescriptionArr[34] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_avatar_nameInMessagePink);
        themeDescriptionArr[35] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, BotHelpCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInDrawable, Theme.chat_msgInMediaDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inBubble);
        themeDescriptionArr[36] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInSelectedDrawable, Theme.chat_msgInMediaSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inBubbleSelected);
        themeDescriptionArr[37] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, BotHelpCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInShadowDrawable, Theme.chat_msgInMediaShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inBubbleShadow);
        themeDescriptionArr[38] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutDrawable, Theme.chat_msgOutMediaDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outBubble);
        themeDescriptionArr[39] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutSelectedDrawable, Theme.chat_msgOutMediaSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outBubbleSelected);
        themeDescriptionArr[40] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutShadowDrawable, Theme.chat_msgOutMediaShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outBubbleShadow);
        RecyclerListView recyclerListView = this.chatListView;
        RecyclerListView recyclerListView2 = recyclerListView;
        themeDescriptionArr[41] = new ThemeDescription(recyclerListView2, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActionCell.class}, Theme.chat_actionTextPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceText);
        RecyclerListView recyclerListView3 = this.chatListView;
        RecyclerListView recyclerListView4 = recyclerListView3;
        themeDescriptionArr[42] = new ThemeDescription(recyclerListView4, ThemeDescription.FLAG_LINKCOLOR, new Class[]{ChatActionCell.class}, Theme.chat_actionTextPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceLink);
        themeDescriptionArr[43] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_shareIconDrawable, Theme.chat_replyIconDrawable, Theme.chat_botInlineDrawable, Theme.chat_botLinkDrawalbe, Theme.chat_goIconDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceIcon);
        themeDescriptionArr[44] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, ChatActionCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceBackground);
        themeDescriptionArr[45] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, ChatActionCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceBackgroundSelected);
        themeDescriptionArr[46] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, BotHelpCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messageTextIn);
        themeDescriptionArr[47] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messageTextOut);
        themeDescriptionArr[48] = new ThemeDescription((View) this.chatListView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{ChatMessageCell.class, BotHelpCell.class}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messageLinkIn, (Object) null);
        themeDescriptionArr[49] = new ThemeDescription((View) this.chatListView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{ChatMessageCell.class}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messageLinkOut, (Object) null);
        themeDescriptionArr[50] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgNoSoundDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaTimeText);
        themeDescriptionArr[51] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutCheckDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outSentCheck);
        themeDescriptionArr[52] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutCheckSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outSentCheckSelected);
        themeDescriptionArr[53] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutCheckReadDrawable, Theme.chat_msgOutHalfCheckDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outSentCheckRead);
        themeDescriptionArr[54] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutCheckReadSelectedDrawable, Theme.chat_msgOutHalfCheckSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outSentCheckReadSelected);
        themeDescriptionArr[55] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutClockDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outSentClock);
        themeDescriptionArr[56] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutSelectedClockDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outSentClockSelected);
        themeDescriptionArr[57] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInClockDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inSentClock);
        themeDescriptionArr[58] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInSelectedClockDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inSentClockSelected);
        themeDescriptionArr[59] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgMediaCheckDrawable, Theme.chat_msgMediaHalfCheckDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaSentCheck);
        themeDescriptionArr[60] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgStickerHalfCheckDrawable, Theme.chat_msgStickerCheckDrawable, Theme.chat_msgStickerClockDrawable, Theme.chat_msgStickerViewsDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceText);
        themeDescriptionArr[61] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgMediaClockDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaSentClock);
        themeDescriptionArr[62] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutViewsDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outViews);
        themeDescriptionArr[63] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutViewsSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outViewsSelected);
        themeDescriptionArr[64] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInViewsDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inViews);
        themeDescriptionArr[65] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInViewsSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inViewsSelected);
        themeDescriptionArr[66] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgMediaViewsDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaViews);
        themeDescriptionArr[67] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutMenuDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outMenu);
        themeDescriptionArr[68] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutMenuSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outMenuSelected);
        themeDescriptionArr[69] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInMenuDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inMenu);
        themeDescriptionArr[70] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInMenuSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inMenuSelected);
        themeDescriptionArr[71] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgMediaMenuDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaMenu);
        themeDescriptionArr[72] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutInstantDrawable, Theme.chat_msgOutCallDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outInstant);
        themeDescriptionArr[73] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgOutCallSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outInstantSelected);
        themeDescriptionArr[74] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInInstantDrawable, Theme.chat_msgInCallDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inInstant);
        themeDescriptionArr[75] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgInCallSelectedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inInstantSelected);
        themeDescriptionArr[76] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgCallUpGreenDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outGreenCall);
        themeDescriptionArr[77] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgCallDownRedDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inRedCall);
        themeDescriptionArr[78] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgCallDownGreenDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inGreenCall);
        themeDescriptionArr[79] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_msgErrorPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_sentError);
        themeDescriptionArr[80] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_msgErrorDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_sentErrorIcon);
        themeDescriptionArr[81] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_selectedBackground);
        themeDescriptionArr[82] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_durationPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_previewDurationText);
        themeDescriptionArr[83] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_gamePaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_previewGameText);
        themeDescriptionArr[84] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inPreviewInstantText);
        themeDescriptionArr[85] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outPreviewInstantText);
        themeDescriptionArr[86] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inPreviewInstantSelectedText);
        themeDescriptionArr[87] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outPreviewInstantSelectedText);
        themeDescriptionArr[88] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_deleteProgressPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_secretTimeText);
        themeDescriptionArr[89] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_stickerNameText);
        themeDescriptionArr[90] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_botButtonPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_botButtonText);
        themeDescriptionArr[91] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_botProgressPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_botProgress);
        themeDescriptionArr[92] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_timeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaTimeBackground);
        themeDescriptionArr[93] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inForwardedNameText);
        themeDescriptionArr[94] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outForwardedNameText);
        themeDescriptionArr[95] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inViaBotNameText);
        themeDescriptionArr[96] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outViaBotNameText);
        themeDescriptionArr[97] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_stickerViaBotNameText);
        themeDescriptionArr[98] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inReplyLine);
        themeDescriptionArr[99] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outReplyLine);
        themeDescriptionArr[100] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_stickerReplyLine);
        themeDescriptionArr[101] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inReplyNameText);
        themeDescriptionArr[102] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outReplyNameText);
        themeDescriptionArr[103] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_stickerReplyNameText);
        themeDescriptionArr[104] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inReplyMessageText);
        themeDescriptionArr[105] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outReplyMessageText);
        themeDescriptionArr[106] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inReplyMediaMessageText);
        themeDescriptionArr[107] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outReplyMediaMessageText);
        themeDescriptionArr[108] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inReplyMediaMessageSelectedText);
        themeDescriptionArr[109] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outReplyMediaMessageSelectedText);
        themeDescriptionArr[110] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_stickerReplyMessageText);
        themeDescriptionArr[111] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inPreviewLine);
        themeDescriptionArr[112] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outPreviewLine);
        themeDescriptionArr[113] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inSiteNameText);
        themeDescriptionArr[114] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outSiteNameText);
        themeDescriptionArr[115] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inContactNameText);
        themeDescriptionArr[116] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outContactNameText);
        themeDescriptionArr[117] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inContactPhoneText);
        themeDescriptionArr[118] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inContactPhoneSelectedText);
        themeDescriptionArr[119] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outContactPhoneText);
        themeDescriptionArr[120] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outContactPhoneSelectedText);
        themeDescriptionArr[121] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaProgress);
        themeDescriptionArr[122] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioProgress);
        themeDescriptionArr[123] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outAudioProgress);
        themeDescriptionArr[124] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioSelectedProgress);
        themeDescriptionArr[125] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outAudioSelectedProgress);
        themeDescriptionArr[126] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaTimeText);
        themeDescriptionArr[127] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inTimeText);
        themeDescriptionArr[128] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outTimeText);
        themeDescriptionArr[129] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inTimeSelectedText);
        themeDescriptionArr[130] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_adminText);
        themeDescriptionArr[131] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_adminSelectedText);
        themeDescriptionArr[132] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outTimeSelectedText);
        themeDescriptionArr[133] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioPerformerText);
        themeDescriptionArr[134] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioPerformerSelectedText);
        themeDescriptionArr[135] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outAudioPerformerText);
        themeDescriptionArr[136] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outAudioPerformerSelectedText);
        themeDescriptionArr[137] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioTitleText);
        themeDescriptionArr[138] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outAudioTitleText);
        themeDescriptionArr[139] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioDurationText);
        themeDescriptionArr[140] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outAudioDurationText);
        themeDescriptionArr[141] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioDurationSelectedText);
        themeDescriptionArr[142] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outAudioDurationSelectedText);
        themeDescriptionArr[143] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioSeekbar);
        themeDescriptionArr[144] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outAudioSeekbar);
        themeDescriptionArr[145] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioSeekbarSelected);
        themeDescriptionArr[146] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outAudioSeekbarSelected);
        themeDescriptionArr[147] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioSeekbarFill);
        themeDescriptionArr[148] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioCacheSeekbar);
        themeDescriptionArr[149] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outAudioSeekbarFill);
        themeDescriptionArr[150] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outAudioCacheSeekbar);
        themeDescriptionArr[151] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inVoiceSeekbar);
        themeDescriptionArr[152] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outVoiceSeekbar);
        themeDescriptionArr[153] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inVoiceSeekbarSelected);
        themeDescriptionArr[154] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outVoiceSeekbarSelected);
        themeDescriptionArr[155] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inVoiceSeekbarFill);
        themeDescriptionArr[156] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outVoiceSeekbarFill);
        themeDescriptionArr[157] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inFileProgress);
        themeDescriptionArr[158] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outFileProgress);
        themeDescriptionArr[159] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inFileProgressSelected);
        themeDescriptionArr[160] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outFileProgressSelected);
        themeDescriptionArr[161] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inFileNameText);
        themeDescriptionArr[162] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outFileNameText);
        themeDescriptionArr[163] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inFileInfoText);
        themeDescriptionArr[164] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outFileInfoText);
        themeDescriptionArr[165] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inFileInfoSelectedText);
        themeDescriptionArr[166] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outFileInfoSelectedText);
        themeDescriptionArr[167] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inFileBackground);
        themeDescriptionArr[168] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outFileBackground);
        themeDescriptionArr[169] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inFileBackgroundSelected);
        themeDescriptionArr[170] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outFileBackgroundSelected);
        themeDescriptionArr[171] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inVenueInfoText);
        themeDescriptionArr[172] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outVenueInfoText);
        themeDescriptionArr[173] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inVenueInfoSelectedText);
        themeDescriptionArr[174] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outVenueInfoSelectedText);
        themeDescriptionArr[175] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaInfoText);
        themeDescriptionArr[176] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_urlPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_linkSelectBackground);
        themeDescriptionArr[177] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_textSearchSelectionPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_textSelectBackground);
        themeDescriptionArr[178] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outLoader);
        themeDescriptionArr[179] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outMediaIcon);
        themeDescriptionArr[180] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outLoaderSelected);
        themeDescriptionArr[181] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outMediaIconSelected);
        themeDescriptionArr[182] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inLoader);
        themeDescriptionArr[183] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inMediaIcon);
        themeDescriptionArr[184] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inLoaderSelected);
        themeDescriptionArr[185] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inMediaIconSelected);
        themeDescriptionArr[186] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[0][0], Theme.chat_photoStatesDrawables[1][0], Theme.chat_photoStatesDrawables[2][0], Theme.chat_photoStatesDrawables[3][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaLoaderPhoto);
        themeDescriptionArr[187] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[0][0], Theme.chat_photoStatesDrawables[1][0], Theme.chat_photoStatesDrawables[2][0], Theme.chat_photoStatesDrawables[3][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaLoaderPhotoIcon);
        themeDescriptionArr[188] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[0][1], Theme.chat_photoStatesDrawables[1][1], Theme.chat_photoStatesDrawables[2][1], Theme.chat_photoStatesDrawables[3][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaLoaderPhotoSelected);
        themeDescriptionArr[189] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[0][1], Theme.chat_photoStatesDrawables[1][1], Theme.chat_photoStatesDrawables[2][1], Theme.chat_photoStatesDrawables[3][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_mediaLoaderPhotoIconSelected);
        themeDescriptionArr[190] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[7][0], Theme.chat_photoStatesDrawables[8][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outLoaderPhoto);
        themeDescriptionArr[191] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[7][0], Theme.chat_photoStatesDrawables[8][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outLoaderPhotoIcon);
        themeDescriptionArr[192] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[7][1], Theme.chat_photoStatesDrawables[8][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outLoaderPhotoSelected);
        themeDescriptionArr[193] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[7][1], Theme.chat_photoStatesDrawables[8][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outLoaderPhotoIconSelected);
        themeDescriptionArr[194] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[10][0], Theme.chat_photoStatesDrawables[11][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inLoaderPhoto);
        themeDescriptionArr[195] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[10][0], Theme.chat_photoStatesDrawables[11][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inLoaderPhotoIcon);
        themeDescriptionArr[196] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[10][1], Theme.chat_photoStatesDrawables[11][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inLoaderPhotoSelected);
        themeDescriptionArr[197] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[10][1], Theme.chat_photoStatesDrawables[11][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inLoaderPhotoIconSelected);
        themeDescriptionArr[198] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[9][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outFileIcon);
        themeDescriptionArr[199] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[9][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outFileSelectedIcon);
        themeDescriptionArr[200] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[12][0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inFileIcon);
        themeDescriptionArr[201] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_photoStatesDrawables[12][1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inFileSelectedIcon);
        themeDescriptionArr[202] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_contactDrawable[0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inContactBackground);
        themeDescriptionArr[203] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_contactDrawable[0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inContactIcon);
        themeDescriptionArr[204] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_contactDrawable[1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outContactBackground);
        themeDescriptionArr[205] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_contactDrawable[1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outContactIcon);
        themeDescriptionArr[206] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_locationDrawable[0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inLocationBackground);
        themeDescriptionArr[207] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_locationDrawable[0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inLocationIcon);
        themeDescriptionArr[208] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_locationDrawable[1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outLocationBackground);
        themeDescriptionArr[209] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, (Paint) null, new Drawable[]{Theme.chat_locationDrawable[1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_outLocationIcon);
        themeDescriptionArr[210] = new ThemeDescription(this.mentionContainer, 0, (Class[]) null, Theme.chat_composeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelBackground);
        themeDescriptionArr[211] = new ThemeDescription(this.mentionContainer, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_composeShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelShadow);
        themeDescriptionArr[212] = new ThemeDescription(this.searchContainer, 0, (Class[]) null, Theme.chat_composeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelBackground);
        themeDescriptionArr[213] = new ThemeDescription(this.searchContainer, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_composeShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelShadow);
        themeDescriptionArr[214] = new ThemeDescription(this.bottomOverlay, 0, (Class[]) null, Theme.chat_composeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelBackground);
        themeDescriptionArr[215] = new ThemeDescription(this.bottomOverlay, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_composeShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelShadow);
        themeDescriptionArr[216] = new ThemeDescription(this.bottomOverlayChat, 0, (Class[]) null, Theme.chat_composeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelBackground);
        themeDescriptionArr[217] = new ThemeDescription(this.bottomOverlayChat, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_composeShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelShadow);
        themeDescriptionArr[218] = new ThemeDescription(this.bottomMessagesActionContainer, 0, (Class[]) null, Theme.chat_composeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelBackground);
        themeDescriptionArr[219] = new ThemeDescription(this.bottomMessagesActionContainer, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_composeShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelShadow);
        themeDescriptionArr[220] = new ThemeDescription(this.chatActivityEnterView, 0, (Class[]) null, Theme.chat_composeBackgroundPaint, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelBackground);
        themeDescriptionArr[221] = new ThemeDescription(this.chatActivityEnterView, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_composeShadowDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelShadow);
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView3 = chatActivityEnterView2;
        themeDescriptionArr[222] = new ThemeDescription((View) chatActivityEnterView3, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"audioVideoButtonContainer"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelBackground);
        ChatActivityEnterView chatActivityEnterView4 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView5 = chatActivityEnterView4;
        themeDescriptionArr[223] = new ThemeDescription((View) chatActivityEnterView5, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelText);
        ChatActivityEnterView chatActivityEnterView6 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView7 = chatActivityEnterView6;
        themeDescriptionArr[224] = new ThemeDescription((View) chatActivityEnterView7, ThemeDescription.FLAG_CURSORCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelCursor);
        ChatActivityEnterView chatActivityEnterView8 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView9 = chatActivityEnterView8;
        themeDescriptionArr[225] = new ThemeDescription((View) chatActivityEnterView9, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordSendText"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_fieldOverlayText);
        ChatActivityEnterView chatActivityEnterView10 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView11 = chatActivityEnterView10;
        themeDescriptionArr[226] = new ThemeDescription((View) chatActivityEnterView11, ThemeDescription.FLAG_HINTTEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelHint);
        ChatActivityEnterView chatActivityEnterView12 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView13 = chatActivityEnterView12;
        themeDescriptionArr[227] = new ThemeDescription((View) chatActivityEnterView13, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"sendButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelSend);
        ChatActivityEnterView chatActivityEnterView14 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView15 = chatActivityEnterView14;
        themeDescriptionArr[228] = new ThemeDescription((View) chatActivityEnterView15, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"sendButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelSendPressed);
        ChatActivityEnterView chatActivityEnterView16 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView17 = chatActivityEnterView16;
        themeDescriptionArr[229] = new ThemeDescription(chatActivityEnterView17, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatActivityEnterView.class}, new String[]{"sendButton"}, (Paint[]) null, (Drawable[]) null, 24, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelSend);
        themeDescriptionArr[230] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"emojiButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelIcons);
        themeDescriptionArr[231] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"botButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelIcons);
        themeDescriptionArr[232] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"notifyButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelIcons);
        ChatActivityEnterView chatActivityEnterView18 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView19 = chatActivityEnterView18;
        themeDescriptionArr[233] = new ThemeDescription((View) chatActivityEnterView19, ThemeDescription.FLAG_IMAGECOLOR | ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatActivityEnterView.class}, new String[]{"scheduledButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelIcons);
        ChatActivityEnterView chatActivityEnterView20 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView21 = chatActivityEnterView20;
        themeDescriptionArr[234] = new ThemeDescription((View) chatActivityEnterView21, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"scheduledButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_recordedVoiceDot);
        themeDescriptionArr[235] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"attachButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelIcons);
        themeDescriptionArr[236] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"audioSendButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelIcons);
        themeDescriptionArr[237] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"videoSendButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelIcons);
        themeDescriptionArr[238] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"notifyButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVideoFrame);
        themeDescriptionArr[239] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"videoTimelineView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelSend);
        ChatActivityEnterView chatActivityEnterView22 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView23 = chatActivityEnterView22;
        themeDescriptionArr[240] = new ThemeDescription((View) chatActivityEnterView23, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"doneButtonImage"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelBackground);
        ChatActivityEnterView chatActivityEnterView24 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView25 = chatActivityEnterView24;
        themeDescriptionArr[241] = new ThemeDescription((View) chatActivityEnterView25, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"recordedAudioPanel"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelBackground);
        themeDescriptionArr[242] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"micDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVoicePressed);
        themeDescriptionArr[243] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"cameraDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVoicePressed);
        themeDescriptionArr[244] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"sendDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVoicePressed);
        themeDescriptionArr[245] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVoiceLock);
        themeDescriptionArr[246] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockTopDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVoiceLock);
        themeDescriptionArr[247] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockArrowDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVoiceLock);
        themeDescriptionArr[248] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockBackgroundDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVoiceLockBackground);
        themeDescriptionArr[249] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockShadowDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVoiceLockShadow);
        ChatActivityEnterView chatActivityEnterView26 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView27 = chatActivityEnterView26;
        themeDescriptionArr[250] = new ThemeDescription((View) chatActivityEnterView27, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordDeleteImageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVoiceDelete);
        ChatActivityEnterView chatActivityEnterView28 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView29 = chatActivityEnterView28;
        themeDescriptionArr[251] = new ThemeDescription((View) chatActivityEnterView29, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatActivityEnterView.class}, new String[]{"recordedAudioBackground"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_recordedVoiceBackground);
        ChatActivityEnterView chatActivityEnterView30 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView31 = chatActivityEnterView30;
        themeDescriptionArr[252] = new ThemeDescription((View) chatActivityEnterView31, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordTimeText"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_recordTime);
        ChatActivityEnterView chatActivityEnterView32 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView33 = chatActivityEnterView32;
        themeDescriptionArr[253] = new ThemeDescription((View) chatActivityEnterView33, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"recordTimeContainer"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelBackground);
        ChatActivityEnterView chatActivityEnterView34 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView35 = chatActivityEnterView34;
        themeDescriptionArr[254] = new ThemeDescription((View) chatActivityEnterView35, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordCancelText"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_recordVoiceCancel);
        ChatActivityEnterView chatActivityEnterView36 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView37 = chatActivityEnterView36;
        themeDescriptionArr[255] = new ThemeDescription((View) chatActivityEnterView37, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"recordPanel"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelBackground);
        ChatActivityEnterView chatActivityEnterView38 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView39 = chatActivityEnterView38;
        themeDescriptionArr[256] = new ThemeDescription((View) chatActivityEnterView39, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordedAudioTimeTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVoiceDuration);
        ChatActivityEnterView chatActivityEnterView40 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView41 = chatActivityEnterView40;
        themeDescriptionArr[257] = new ThemeDescription((View) chatActivityEnterView41, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordCancelImage"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_recordVoiceCancel);
        themeDescriptionArr[258] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"doneButtonProgress"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_contextProgressInner1);
        themeDescriptionArr[259] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"doneButtonProgress"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_contextProgressOuter1);
        ChatActivityEnterView chatActivityEnterView42 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView43 = chatActivityEnterView42;
        themeDescriptionArr[260] = new ThemeDescription((View) chatActivityEnterView43, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"cancelBotButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelCancelInlineBot);
        themeDescriptionArr[261] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"redDotPaint"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_recordedVoiceDot);
        themeDescriptionArr[262] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"paint"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVoiceBackground);
        themeDescriptionArr[263] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"paintRecord"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_messagePanelVoiceShadow);
        themeDescriptionArr[264] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"seekBarWaveform"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_recordedVoiceProgress);
        themeDescriptionArr[265] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"seekBarWaveform"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_recordedVoiceProgressInner);
        themeDescriptionArr[266] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"playDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_recordedVoicePlayPause);
        themeDescriptionArr[267] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"pauseDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_recordedVoicePlayPause);
        ChatActivityEnterView chatActivityEnterView44 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView45 = chatActivityEnterView44;
        themeDescriptionArr[268] = new ThemeDescription((View) chatActivityEnterView45, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"playDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_recordedVoicePlayPausePressed);
        ChatActivityEnterView chatActivityEnterView46 = this.chatActivityEnterView;
        ChatActivityEnterView chatActivityEnterView47 = chatActivityEnterView46;
        themeDescriptionArr[269] = new ThemeDescription((View) chatActivityEnterView47, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"pauseDrawable"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_recordedVoicePlayPausePressed);
        themeDescriptionArr[270] = new ThemeDescription((View) this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"dotPaint"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_emojiPanelNewTrending);
        ChatActivityEnterView chatActivityEnterView48 = this.chatActivityEnterView;
        FrameLayout frameLayout = chatActivityEnterView48;
        if (chatActivityEnterView48 != null) {
            frameLayout = chatActivityEnterView48.getEmojiView();
        }
        themeDescriptionArr[271] = new ThemeDescription((View) frameLayout, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelBackground);
        ChatActivityEnterView chatActivityEnterView49 = this.chatActivityEnterView;
        FrameLayout frameLayout2 = chatActivityEnterView49;
        if (chatActivityEnterView49 != null) {
            frameLayout2 = chatActivityEnterView49.getEmojiView();
        }
        themeDescriptionArr[272] = new ThemeDescription((View) frameLayout2, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelShadowLine);
        ChatActivityEnterView chatActivityEnterView50 = this.chatActivityEnterView;
        FrameLayout frameLayout3 = chatActivityEnterView50;
        if (chatActivityEnterView50 != null) {
            frameLayout3 = chatActivityEnterView50.getEmojiView();
        }
        themeDescriptionArr[273] = new ThemeDescription((View) frameLayout3, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelEmptyText);
        ChatActivityEnterView chatActivityEnterView51 = this.chatActivityEnterView;
        FrameLayout frameLayout4 = chatActivityEnterView51;
        if (chatActivityEnterView51 != null) {
            frameLayout4 = chatActivityEnterView51.getEmojiView();
        }
        themeDescriptionArr[274] = new ThemeDescription((View) frameLayout4, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelIcon);
        ChatActivityEnterView chatActivityEnterView52 = this.chatActivityEnterView;
        FrameLayout frameLayout5 = chatActivityEnterView52;
        if (chatActivityEnterView52 != null) {
            frameLayout5 = chatActivityEnterView52.getEmojiView();
        }
        themeDescriptionArr[275] = new ThemeDescription((View) frameLayout5, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelIconSelected);
        ChatActivityEnterView chatActivityEnterView53 = this.chatActivityEnterView;
        FrameLayout frameLayout6 = chatActivityEnterView53;
        if (chatActivityEnterView53 != null) {
            frameLayout6 = chatActivityEnterView53.getEmojiView();
        }
        themeDescriptionArr[276] = new ThemeDescription((View) frameLayout6, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelStickerPackSelector);
        ChatActivityEnterView chatActivityEnterView54 = this.chatActivityEnterView;
        FrameLayout frameLayout7 = chatActivityEnterView54;
        if (chatActivityEnterView54 != null) {
            frameLayout7 = chatActivityEnterView54.getEmojiView();
        }
        themeDescriptionArr[277] = new ThemeDescription((View) frameLayout7, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelBackspace);
        ChatActivityEnterView chatActivityEnterView55 = this.chatActivityEnterView;
        FrameLayout frameLayout8 = chatActivityEnterView55;
        if (chatActivityEnterView55 != null) {
            frameLayout8 = chatActivityEnterView55.getEmojiView();
        }
        themeDescriptionArr[278] = new ThemeDescription((View) frameLayout8, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelTrendingTitle);
        ChatActivityEnterView chatActivityEnterView56 = this.chatActivityEnterView;
        FrameLayout frameLayout9 = chatActivityEnterView56;
        if (chatActivityEnterView56 != null) {
            frameLayout9 = chatActivityEnterView56.getEmojiView();
        }
        themeDescriptionArr[279] = new ThemeDescription((View) frameLayout9, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelTrendingDescription);
        ChatActivityEnterView chatActivityEnterView57 = this.chatActivityEnterView;
        FrameLayout frameLayout10 = chatActivityEnterView57;
        if (chatActivityEnterView57 != null) {
            frameLayout10 = chatActivityEnterView57.getEmojiView();
        }
        themeDescriptionArr[280] = new ThemeDescription((View) frameLayout10, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelBadgeText);
        ChatActivityEnterView chatActivityEnterView58 = this.chatActivityEnterView;
        FrameLayout frameLayout11 = chatActivityEnterView58;
        if (chatActivityEnterView58 != null) {
            frameLayout11 = chatActivityEnterView58.getEmojiView();
        }
        themeDescriptionArr[281] = new ThemeDescription((View) frameLayout11, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelBadgeBackground);
        ChatActivityEnterView chatActivityEnterView59 = this.chatActivityEnterView;
        FrameLayout frameLayout12 = chatActivityEnterView59;
        if (chatActivityEnterView59 != null) {
            frameLayout12 = chatActivityEnterView59.getEmojiView();
        }
        themeDescriptionArr[282] = new ThemeDescription((View) frameLayout12, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiBottomPanelIcon);
        ChatActivityEnterView chatActivityEnterView60 = this.chatActivityEnterView;
        FrameLayout frameLayout13 = chatActivityEnterView60;
        if (chatActivityEnterView60 != null) {
            frameLayout13 = chatActivityEnterView60.getEmojiView();
        }
        themeDescriptionArr[283] = new ThemeDescription((View) frameLayout13, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiSearchIcon);
        ChatActivityEnterView chatActivityEnterView61 = this.chatActivityEnterView;
        FrameLayout frameLayout14 = chatActivityEnterView61;
        if (chatActivityEnterView61 != null) {
            frameLayout14 = chatActivityEnterView61.getEmojiView();
        }
        themeDescriptionArr[284] = new ThemeDescription((View) frameLayout14, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelStickerSetNameHighlight);
        ChatActivityEnterView chatActivityEnterView62 = this.chatActivityEnterView;
        FrameLayout frameLayout15 = chatActivityEnterView62;
        if (chatActivityEnterView62 != null) {
            frameLayout15 = chatActivityEnterView62.getEmojiView();
        }
        themeDescriptionArr[285] = new ThemeDescription((View) frameLayout15, 0, new Class[]{EmojiView.class}, (String[]) null, (Paint[]) null, (Drawable[]) null, selectedBackgroundDelegate, Theme.key_chat_emojiPanelStickerPackSelectorLine);
        themeDescriptionArr[286] = new ThemeDescription(this.undoView, ThemeDescription.FLAG_BACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_undo_background);
        themeDescriptionArr[287] = new ThemeDescription((View) this.undoView, 0, new Class[]{UndoView.class}, new String[]{"undoImageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_undo_cancelColor);
        themeDescriptionArr[288] = new ThemeDescription((View) this.undoView, 0, new Class[]{UndoView.class}, new String[]{"undoTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_undo_cancelColor);
        themeDescriptionArr[289] = new ThemeDescription((View) this.undoView, 0, new Class[]{UndoView.class}, new String[]{"infoTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_undo_infoColor);
        themeDescriptionArr[290] = new ThemeDescription((View) this.undoView, 0, new Class[]{UndoView.class}, new String[]{"textPaint"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_undo_infoColor);
        themeDescriptionArr[291] = new ThemeDescription((View) this.undoView, 0, new Class[]{UndoView.class}, new String[]{"progressPaint"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_undo_infoColor);
        UndoView undoView2 = this.undoView;
        UndoView undoView3 = undoView2;
        themeDescriptionArr[292] = new ThemeDescription((View) undoView3, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{UndoView.class}, new String[]{"leftImageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_undo_infoColor);
        themeDescriptionArr[293] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_botKeyboardButtonText);
        themeDescriptionArr[294] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_botKeyboardButtonBackground);
        themeDescriptionArr[295] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_botKeyboardButtonBackgroundPressed);
        View view = this.fragmentView;
        View view2 = view;
        themeDescriptionArr[296] = new ThemeDescription(view2, ThemeDescription.FLAG_BACKGROUND | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"frameLayout"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_inappPlayerBackground);
        View view3 = this.fragmentView;
        View view4 = view3;
        themeDescriptionArr[297] = new ThemeDescription(view4, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{FragmentContextView.class}, new String[]{"playButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_inappPlayerPlayPause);
        View view5 = this.fragmentView;
        View view6 = view5;
        themeDescriptionArr[298] = new ThemeDescription(view6, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"titleTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_inappPlayerTitle);
        View view7 = this.fragmentView;
        View view8 = view7;
        themeDescriptionArr[299] = new ThemeDescription(view8, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_FASTSCROLL, new Class[]{FragmentContextView.class}, new String[]{"titleTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_inappPlayerPerformer);
        View view9 = this.fragmentView;
        View view10 = view9;
        themeDescriptionArr[300] = new ThemeDescription(view10, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{FragmentContextView.class}, new String[]{"closeButton"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_inappPlayerClose);
        View view11 = this.fragmentView;
        View view12 = view11;
        themeDescriptionArr[301] = new ThemeDescription(view12, ThemeDescription.FLAG_BACKGROUND | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"frameLayout"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_returnToCallBackground);
        View view13 = this.fragmentView;
        View view14 = view13;
        themeDescriptionArr[302] = new ThemeDescription(view14, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"titleTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_returnToCallText);
        themeDescriptionArr[303] = new ThemeDescription(this.pinnedLineView, ThemeDescription.FLAG_BACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_topPanelLine);
        themeDescriptionArr[304] = new ThemeDescription(this.pinnedMessageNameTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_topPanelTitle);
        themeDescriptionArr[305] = new ThemeDescription(this.pinnedMessageTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_topPanelMessage);
        themeDescriptionArr[306] = new ThemeDescription(this.alertNameTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_topPanelTitle);
        themeDescriptionArr[307] = new ThemeDescription(this.alertTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_topPanelMessage);
        themeDescriptionArr[308] = new ThemeDescription(this.closePinned, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_topPanelClose);
        themeDescriptionArr[309] = new ThemeDescription(this.closeReportSpam, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_topPanelClose);
        themeDescriptionArr[310] = new ThemeDescription(this.topChatPanelView, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_topPanelBackground);
        themeDescriptionArr[311] = new ThemeDescription(this.alertView, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_topPanelBackground);
        themeDescriptionArr[312] = new ThemeDescription(this.pinnedMessageView, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_topPanelBackground);
        themeDescriptionArr[313] = new ThemeDescription(this.addToContactsButton, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_addContact);
        themeDescriptionArr[314] = new ThemeDescription(this.reportSpamButton, ThemeDescription.FLAG_CHECKTAG | ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_reportSpam);
        themeDescriptionArr[315] = new ThemeDescription(this.reportSpamButton, ThemeDescription.FLAG_CHECKTAG | ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_addContact);
        themeDescriptionArr[316] = new ThemeDescription(this.replyLineView, ThemeDescription.FLAG_BACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_replyPanelLine);
        themeDescriptionArr[317] = new ThemeDescription(this.replyNameTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_replyPanelName);
        themeDescriptionArr[318] = new ThemeDescription(this.replyObjectTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_replyPanelMessage);
        themeDescriptionArr[319] = new ThemeDescription(this.replyIconImageView, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_replyPanelIcons);
        themeDescriptionArr[320] = new ThemeDescription(this.replyCloseImageView, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_replyPanelClose);
        themeDescriptionArr[321] = new ThemeDescription(this.searchUpButton, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_searchPanelIcons);
        themeDescriptionArr[322] = new ThemeDescription(this.searchDownButton, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_searchPanelIcons);
        themeDescriptionArr[323] = new ThemeDescription(this.searchCalendarButton, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_searchPanelIcons);
        themeDescriptionArr[324] = new ThemeDescription(this.searchUserButton, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_searchPanelIcons);
        themeDescriptionArr[325] = new ThemeDescription(this.searchCountText, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_searchPanelText);
        themeDescriptionArr[326] = new ThemeDescription(this.bottomOverlayText, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_secretChatStatusText);
        themeDescriptionArr[327] = new ThemeDescription(this.bottomOverlayChatText, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_fieldOverlayText);
        themeDescriptionArr[328] = new ThemeDescription(this.bottomOverlayChatText2, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_fieldOverlayText);
        themeDescriptionArr[329] = new ThemeDescription(this.bottomOverlayProgress, 0, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_fieldOverlayText);
        themeDescriptionArr[330] = new ThemeDescription(this.bigEmptyView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceText);
        themeDescriptionArr[331] = new ThemeDescription(this.emptyView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceText);
        themeDescriptionArr[332] = new ThemeDescription(this.progressBar, ThemeDescription.FLAG_PROGRESSBAR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceText);
        themeDescriptionArr[333] = new ThemeDescription(this.stickersPanelArrow, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_stickersHintPanel);
        themeDescriptionArr[334] = new ThemeDescription(this.stickersListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{StickerCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_stickersHintPanel);
        RecyclerListView recyclerListView5 = this.chatListView;
        RecyclerListView recyclerListView6 = recyclerListView5;
        themeDescriptionArr[335] = new ThemeDescription((View) recyclerListView6, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE, new Class[]{ChatUnreadCell.class}, new String[]{"backgroundLayout"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_unreadMessagesStartBackground);
        RecyclerListView recyclerListView7 = this.chatListView;
        RecyclerListView recyclerListView8 = recyclerListView7;
        themeDescriptionArr[336] = new ThemeDescription((View) recyclerListView8, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatUnreadCell.class}, new String[]{"imageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_unreadMessagesStartArrowIcon);
        RecyclerListView recyclerListView9 = this.chatListView;
        RecyclerListView recyclerListView10 = recyclerListView9;
        themeDescriptionArr[337] = new ThemeDescription((View) recyclerListView10, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatUnreadCell.class}, new String[]{"textView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_unreadMessagesStartText);
        themeDescriptionArr[338] = new ThemeDescription(this.progressView2, ThemeDescription.FLAG_SERVICEBACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceBackground);
        themeDescriptionArr[339] = new ThemeDescription(this.emptyView, ThemeDescription.FLAG_SERVICEBACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceBackground);
        themeDescriptionArr[340] = new ThemeDescription(this.bigEmptyView, ThemeDescription.FLAG_SERVICEBACKGROUND, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceBackground);
        RecyclerListView recyclerListView11 = this.chatListView;
        RecyclerListView recyclerListView12 = recyclerListView11;
        themeDescriptionArr[341] = new ThemeDescription((View) recyclerListView12, ThemeDescription.FLAG_SERVICEBACKGROUND, new Class[]{ChatLoadingCell.class}, new String[]{"textView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceBackground);
        RecyclerListView recyclerListView13 = this.chatListView;
        RecyclerListView recyclerListView14 = recyclerListView13;
        themeDescriptionArr[342] = new ThemeDescription((View) recyclerListView14, ThemeDescription.FLAG_PROGRESSBAR, new Class[]{ChatLoadingCell.class}, new String[]{"textView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_serviceText);
        RecyclerListView recyclerListView15 = this.mentionListView;
        RecyclerListView recyclerListView16 = recyclerListView15;
        themeDescriptionArr[343] = new ThemeDescription((View) recyclerListView16, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{BotSwitchCell.class}, new String[]{"textView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_botSwitchToInlineText);
        RecyclerListView recyclerListView17 = this.mentionListView;
        RecyclerListView recyclerListView18 = recyclerListView17;
        themeDescriptionArr[344] = new ThemeDescription((View) recyclerListView18, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{MentionCell.class}, new String[]{"nameTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_windowBackgroundWhiteBlackText);
        RecyclerListView recyclerListView19 = this.mentionListView;
        RecyclerListView recyclerListView20 = recyclerListView19;
        themeDescriptionArr[345] = new ThemeDescription((View) recyclerListView20, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{MentionCell.class}, new String[]{"usernameTextView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_windowBackgroundWhiteGrayText3);
        themeDescriptionArr[346] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, new Drawable[]{Theme.chat_inlineResultFile, Theme.chat_inlineResultAudio, Theme.chat_inlineResultLocation}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inlineResultIcon);
        themeDescriptionArr[347] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_windowBackgroundWhiteGrayText2);
        themeDescriptionArr[348] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_windowBackgroundWhiteLinkText);
        themeDescriptionArr[349] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_windowBackgroundWhiteBlackText);
        themeDescriptionArr[350] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioProgress);
        themeDescriptionArr[351] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_inAudioSelectedProgress);
        themeDescriptionArr[352] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_divider);
        themeDescriptionArr[353] = new ThemeDescription(this.gifHintTextView, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_gifSaveHintBackground);
        themeDescriptionArr[354] = new ThemeDescription(this.gifHintTextView, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_gifSaveHintText);
        ThemeDescription.ThemeDescriptionDelegate themeDescriptionDelegate = selectedBackgroundDelegate;
        themeDescriptionArr[355] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, themeDescriptionDelegate, Theme.key_chat_attachMediaBanBackground);
        themeDescriptionArr[356] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, themeDescriptionDelegate, Theme.key_chat_attachMediaBanText);
        HintView hintView = this.noSoundHintView;
        HintView hintView2 = hintView;
        themeDescriptionArr[357] = new ThemeDescription((View) hintView2, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"textView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_gifSaveHintText);
        HintView hintView3 = this.noSoundHintView;
        HintView hintView4 = hintView3;
        themeDescriptionArr[358] = new ThemeDescription((View) hintView4, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{HintView.class}, new String[]{"imageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_gifSaveHintText);
        HintView hintView5 = this.noSoundHintView;
        HintView hintView6 = hintView5;
        themeDescriptionArr[359] = new ThemeDescription((View) hintView6, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"arrowImageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_gifSaveHintBackground);
        HintView hintView7 = this.forwardHintView;
        HintView hintView8 = hintView7;
        themeDescriptionArr[360] = new ThemeDescription((View) hintView8, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"textView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_gifSaveHintText);
        HintView hintView9 = this.forwardHintView;
        HintView hintView10 = hintView9;
        themeDescriptionArr[361] = new ThemeDescription((View) hintView10, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"arrowImageView"}, (Paint[]) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_gifSaveHintBackground);
        themeDescriptionArr[362] = new ThemeDescription(this.pagedownButtonCounter, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_goDownButtonCounterBackground);
        themeDescriptionArr[363] = new ThemeDescription(this.pagedownButtonCounter, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_goDownButtonCounter);
        themeDescriptionArr[364] = new ThemeDescription(this.pagedownButtonImage, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_goDownButton);
        themeDescriptionArr[365] = new ThemeDescription(this.pagedownButtonImage, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_goDownButtonShadow);
        themeDescriptionArr[366] = new ThemeDescription(this.pagedownButtonImage, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_goDownButtonIcon);
        themeDescriptionArr[367] = new ThemeDescription(this.mentiondownButtonCounter, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_goDownButtonCounterBackground);
        themeDescriptionArr[368] = new ThemeDescription(this.mentiondownButtonCounter, ThemeDescription.FLAG_TEXTCOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_goDownButtonCounter);
        themeDescriptionArr[369] = new ThemeDescription(this.mentiondownButtonImage, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_goDownButton);
        themeDescriptionArr[370] = new ThemeDescription(this.mentiondownButtonImage, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_goDownButtonShadow);
        themeDescriptionArr[371] = new ThemeDescription(this.mentiondownButtonImage, ThemeDescription.FLAG_IMAGECOLOR, (Class[]) null, (Paint) null, (Drawable[]) null, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_goDownButtonIcon);
        themeDescriptionArr[372] = new ThemeDescription((View) null, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachButtonDrawables[0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachGalleryBackground);
        themeDescriptionArr[373] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachButtonDrawables[0]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachGalleryIcon);
        themeDescriptionArr[374] = new ThemeDescription((View) null, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachButtonDrawables[1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachAudioBackground);
        themeDescriptionArr[375] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachButtonDrawables[1]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachAudioIcon);
        themeDescriptionArr[376] = new ThemeDescription((View) null, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachButtonDrawables[2]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachFileBackground);
        themeDescriptionArr[377] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachButtonDrawables[2]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachFileIcon);
        themeDescriptionArr[378] = new ThemeDescription((View) null, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachButtonDrawables[3]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachContactBackground);
        themeDescriptionArr[379] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachButtonDrawables[3]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachContactIcon);
        themeDescriptionArr[380] = new ThemeDescription((View) null, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachButtonDrawables[4]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachLocationBackground);
        themeDescriptionArr[381] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachButtonDrawables[4]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachLocationIcon);
        themeDescriptionArr[382] = new ThemeDescription((View) null, ThemeDescription.FLAG_BACKGROUNDFILTER, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachButtonDrawables[5]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachPollBackground);
        themeDescriptionArr[383] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachButtonDrawables[5]}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachPollIcon);
        themeDescriptionArr[384] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, new Drawable[]{Theme.chat_attachEmptyDrawable}, (ThemeDescription.ThemeDescriptionDelegate) null, Theme.key_chat_attachEmptyImage);
        ThemeDescription.ThemeDescriptionDelegate themeDescriptionDelegate2 = selectedBackgroundDelegate;
        themeDescriptionArr[385] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, themeDescriptionDelegate2, Theme.key_chat_attachPhotoBackground);
        themeDescriptionArr[386] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, themeDescriptionDelegate2, Theme.key_dialogBackground);
        themeDescriptionArr[387] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, themeDescriptionDelegate2, Theme.key_dialogBackgroundGray);
        themeDescriptionArr[388] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, themeDescriptionDelegate2, Theme.key_dialogTextGray2);
        themeDescriptionArr[389] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, themeDescriptionDelegate2, Theme.key_dialogScrollGlow);
        themeDescriptionArr[390] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, themeDescriptionDelegate2, Theme.key_dialogGrayLine);
        themeDescriptionArr[391] = new ThemeDescription((View) null, 0, (Class[]) null, (Paint) null, (Drawable[]) null, themeDescriptionDelegate2, Theme.key_dialogCameraIcon);
        return themeDescriptionArr;
    }

    public /* synthetic */ void lambda$getThemeDescriptions$163$ChatActivity() {
        updateVisibleRows();
        ChatActivityEnterView chatActivityEnterView2 = this.chatActivityEnterView;
        if (!(chatActivityEnterView2 == null || chatActivityEnterView2.getEmojiView() == null)) {
            this.chatActivityEnterView.getEmojiView().updateColors();
        }
        ChatAttachAlert chatAttachAlert2 = this.chatAttachAlert;
        if (chatAttachAlert2 != null) {
            chatAttachAlert2.checkColors();
        }
    }
}
